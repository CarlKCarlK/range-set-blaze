[package]
name = "range-set-blaze"
version = "0.2.0-alpha1"
edition = "2021"
description = "Integer sets as fast, sorted integer ranges; Maps with integer-range keys; Full set operations"
repository = "https://github.com/CarlKCarlK/range-set-blaze"
readme = "README.md"
documentation = "https://docs.rs/range-set-blaze/latest/range-set-blaze/"
authors = ["Carl Kadie"]
license = "MIT OR Apache-2.0"
keywords = ["set", "range", "data-structures", "no_std", "wasm"]
categories = ["data-structures", "no-std", "wasm"]
homepage = "https://github.com/CarlKCarlK/range-set-blaze"
resolver = "2"
exclude = ["docs/**/*"]

[workspace]
members = [
    ".",
    "tests_common",
    "tests/wasm-demo",
    "tests/wasm-led",
    "tests/embedded",
    # "examples/simd/simd_hello", # cmk????
    # "examples/simd/is_consecutive0",
    # "examples/simd/is_consecutive1",
    # "examples/simd/is_consecutive2",
]


[lib]

[features]
default = ["std"]
std = ["itertools/use_std", "num-traits/std", "num-integer/std"]
# rog_experimental would have been better
rog-experimental = []
from_slice = []


[dependencies]
itertools = { version = "0.13.0", optional = true, default-features = false }
num-integer = { version = "0.1.44", optional = true, default-features = false }
num-traits = { version = "0.2.15", optional = true, default-features = false }
gen_ops = "0.4.0"


[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tests_common = { path = "tests_common" }
criterion = { version = "0.5.1", features = [
    "html_reports",
], default-features = false }
trybuild = "1.0.53" # cmk update all versions
thousands = "0.2.0"
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
rangemap = "1.3.0"
range-collections = "0.4.0"
range-set = "0.0.10" # update cmk
glob = "0.3.0"
roaring = "0.10.1"
anyhow = "1.0.40"

[dev-dependencies]
syntactic-for = "0.1.1"
wasm-bindgen-test = "0.3.49"
rand = "0.8.4"

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dev-dependencies]
getrandom = { version = "0.2", features = ["js"] }
web-time = "1.1.0"


# Declare a benchmark called ""bench" without the standard benchmarking harness. 
[[bench]]
name = "bench"
harness = false

[package.metadata.docs.rs]
all-features = true

# TODO Rule: for running profiling
# [profile.release]
# debug = true
[profile.release] # cmk remove???
opt-level = 3 # Maximum optimization
