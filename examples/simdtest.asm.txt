
simdtest.exe:	file format coff-x86-64

Disassembly of section .text:

0000000140001000 <.text>:
140001000:     	subq	$0x28, %rsp
140001004:     	callq	*%rcx
140001006:     	nop
140001007:     	addq	$0x28, %rsp
14000100b:     	retq
14000100c:     	int3
14000100d:     	int3
14000100e:     	int3
14000100f:     	int3
140001010:     	subq	$0x38, %rsp
140001014:     	movq	%r8, %rax
140001017:     	movq	%rdx, %r8
14000101a:     	movq	%rcx, 0x30(%rsp)
14000101f:     	leaq	0x19422(%rip), %rdx     # 0x14001a448
140001026:     	leaq	0x30(%rsp), %rcx
14000102b:     	movb	%r9b, 0x20(%rsp)
140001030:     	movq	%rax, %r9
140001033:     	callq	0x140002fe0 <.text+0x1fe0>
140001038:     	nop
140001039:     	addq	$0x38, %rsp
14000103d:     	retq
14000103e:     	int3
14000103f:     	int3
140001040:     	subq	$0x28, %rsp
140001044:     	movq	(%rcx), %rcx
140001047:     	callq	0x140001000 <.text>
14000104c:     	xorl	%eax, %eax
14000104e:     	addq	$0x28, %rsp
140001052:     	retq
140001053:     	int3
140001054:     	int3
140001055:     	int3
140001056:     	int3
140001057:     	int3
140001058:     	int3
140001059:     	int3
14000105a:     	int3
14000105b:     	int3
14000105c:     	int3
14000105d:     	int3
14000105e:     	int3
14000105f:     	int3
140001060:     	subq	$0x28, %rsp
140001064:     	movq	(%rcx), %rcx
140001067:     	movq	(%rcx), %rax
14000106a:     	movq	$0x0, (%rcx)
140001071:     	testq	%rax, %rax
140001074:     	je	0x140001095 <.text+0x95>
140001076:     	vmovaps	0x19300(%rip), %zmm0    # 0x14001a380
140001080:     	movq	(%rax), %rax
140001083:     	movb	$0x1, (%rax)
140001086:     	vmovaps	%zmm0, 0x40(%rax)
14000108d:     	addq	$0x28, %rsp
140001091:     	vzeroupper
140001094:     	retq
140001095:     	leaq	0x19404(%rip), %rcx     # 0x14001a4a0
14000109c:     	leaq	0x19475(%rip), %r8      # 0x14001a518
1400010a3:     	movl	$0x2b, %edx
1400010a8:     	callq	0x140019880 <.text+0x18880>
1400010ad:     	ud2
1400010af:     	int3
1400010b0:     	subq	$0x28, %rsp
1400010b4:     	movq	(%rcx), %rcx
1400010b7:     	movq	(%rcx), %rax
1400010ba:     	movq	$0x0, (%rcx)
1400010c1:     	testq	%rax, %rax
1400010c4:     	je	0x1400010e5 <.text+0xe5>
1400010c6:     	vmovaps	0x192f0(%rip), %zmm0    # 0x14001a3c0
1400010d0:     	movq	(%rax), %rax
1400010d3:     	movb	$0x1, (%rax)
1400010d6:     	vmovaps	%zmm0, 0x40(%rax)
1400010dd:     	addq	$0x28, %rsp
1400010e1:     	vzeroupper
1400010e4:     	retq
1400010e5:     	leaq	0x193b4(%rip), %rcx     # 0x14001a4a0
1400010ec:     	leaq	0x19425(%rip), %r8      # 0x14001a518
1400010f3:     	movl	$0x2b, %edx
1400010f8:     	callq	0x140019880 <.text+0x18880>
1400010fd:     	ud2
1400010ff:     	int3
140001100:     	retq
140001101:     	int3
140001102:     	int3
140001103:     	int3
140001104:     	int3
140001105:     	int3
140001106:     	int3
140001107:     	int3
140001108:     	int3
140001109:     	int3
14000110a:     	int3
14000110b:     	int3
14000110c:     	int3
14000110d:     	int3
14000110e:     	int3
14000110f:     	int3
140001110:     	pushq	%r14
140001112:     	pushq	%rsi
140001113:     	pushq	%rdi
140001114:     	pushq	%rbx
140001115:     	subq	$0x118, %rsp            # imm = 0x118
14000111c:     	vmovdqa64	0x1941a(%rip), %zmm0 # 0x14001a540
140001126:     	leaq	0x22013(%rip), %rsi     # 0x140023140
14000112d:     	movq	%rsi, 0x38(%rsp)
140001132:     	movq	0x22087(%rip), %rax     # 0x1400231c0
140001139:     	cmpq	$0x3, %rax
14000113d:     	jne	0x140001283 <.text+0x283>
140001143:     	movq	0x38(%rsp), %rax
140001148:     	leaq	0x50(%rsp), %rcx
14000114d:     	leaq	0x1463c(%rip), %rdi     # 0x140015790 <.text+0x14790>
140001154:     	leaq	0x19475(%rip), %rbx     # 0x14001a5d0
14000115b:     	leaq	0x40(%rsp), %r14
140001160:     	vpaddd	0x40(%rax), %zmm0, %zmm0
140001167:     	leaq	0x37(%rsp), %rax
14000116c:     	movq	%rax, 0x40(%rsp)
140001171:     	movq	%rdi, 0x48(%rsp)
140001176:     	vpbroadcastd	%xmm0, %zmm1
14000117c:     	vpcmpeqd	%zmm1, %zmm0, %k0
140001182:     	vpternlogd	$0xff, %zmm1, %zmm1, %zmm1
140001189:     	vpmovm2d	%k0, %zmm0
14000118f:     	vpcmpneqd	%zmm1, %zmm0, %k0
140001196:     	vmovdqu64	%zmm0, 0x50(%rsp)
1400011a1:     	movq	%rbx, 0x50(%rsp)
1400011a6:     	movq	$0x2, 0x58(%rsp)
1400011af:     	movq	$0x0, 0x70(%rsp)
1400011b8:     	movq	%r14, 0x60(%rsp)
1400011bd:     	movq	$0x1, 0x68(%rsp)
1400011c6:     	kortestw	%k0, %k0
1400011ca:     	sete	0x37(%rsp)
1400011cf:     	vzeroupper
1400011d2:     	callq	0x140004d50 <.text+0x3d50>
1400011d7:     	vmovdqa64	0x1939f(%rip), %zmm0 # 0x14001a580
1400011e1:     	movq	%rsi, 0x38(%rsp)
1400011e6:     	movq	0x21fd3(%rip), %rax     # 0x1400231c0
1400011ed:     	cmpq	$0x3, %rax
1400011f1:     	jne	0x1400012cf <.text+0x2cf>
1400011f7:     	movq	0x38(%rsp), %rax
1400011fc:     	leaq	0x50(%rsp), %rcx
140001201:     	vpaddd	0x40(%rax), %zmm0, %zmm0
140001208:     	leaq	0x38(%rsp), %rax
14000120d:     	vpbroadcastd	%xmm0, %zmm1
140001213:     	vpcmpeqd	%zmm1, %zmm0, %k0
140001219:     	vpmovm2d	%k0, %zmm0
14000121f:     	vmovdqu64	%zmm0, 0x50(%rsp)
14000122a:     	vpcmpneqd	0x1920b(%rip){1to16}, %zmm0, %k0 # 0x14001a440
140001235:     	movq	%rax, 0x40(%rsp)
14000123a:     	movq	%rbx, 0x50(%rsp)
14000123f:     	movq	$0x2, 0x58(%rsp)
140001248:     	movq	$0x0, 0x70(%rsp)
140001251:     	movq	%r14, 0x60(%rsp)
140001256:     	movq	%rdi, 0x48(%rsp)
14000125b:     	movq	$0x1, 0x68(%rsp)
140001264:     	kortestw	%k0, %k0
140001268:     	sete	0x38(%rsp)
14000126d:     	vzeroupper
140001270:     	callq	0x140004d50 <.text+0x3d50>
140001275:     	nop
140001276:     	addq	$0x118, %rsp            # imm = 0x118
14000127d:     	popq	%rbx
14000127e:     	popq	%rdi
14000127f:     	popq	%rsi
140001280:     	popq	%r14
140001282:     	retq
140001283:     	leaq	0x40(%rsp), %r8
140001288:     	leaq	0x193c9(%rip), %rcx     # 0x14001a658
14000128f:     	leaq	0x38(%rsp), %rax
140001294:     	leaq	0x191dd(%rip), %r9      # 0x14001a478
14000129b:     	xorl	%edx, %edx
14000129d:     	movq	%r8, 0x50(%rsp)
1400012a2:     	movq	%rcx, 0x20(%rsp)
1400012a7:     	leaq	0x21f12(%rip), %rcx     # 0x1400231c0
1400012ae:     	leaq	0x50(%rsp), %r8
1400012b3:     	movq	%rax, 0x40(%rsp)
1400012b8:     	vzeroupper
1400012bb:     	callq	0x140019220 <.text+0x18220>
1400012c0:     	vmovdqa64	0x19276(%rip), %zmm0 # 0x14001a540
1400012ca:     	jmp	0x140001143 <.text+0x143>
1400012cf:     	leaq	0x19382(%rip), %rcx     # 0x14001a658
1400012d6:     	leaq	0x38(%rsp), %rax
1400012db:     	leaq	0x19196(%rip), %r9      # 0x14001a478
1400012e2:     	leaq	0x50(%rsp), %r8
1400012e7:     	movq	%r14, 0x50(%rsp)
1400012ec:     	xorl	%edx, %edx
1400012ee:     	movq	%rcx, 0x20(%rsp)
1400012f3:     	leaq	0x21ec6(%rip), %rcx     # 0x1400231c0
1400012fa:     	movq	%rax, 0x40(%rsp)
1400012ff:     	vzeroupper
140001302:     	callq	0x140019220 <.text+0x18220>
140001307:     	vmovdqa64	0x1926f(%rip), %zmm0 # 0x14001a580
140001311:     	jmp	0x1400011f7 <.text+0x1f7>
140001316:     	int3
140001317:     	int3
140001318:     	int3
140001319:     	int3
14000131a:     	int3
14000131b:     	int3
14000131c:     	int3
14000131d:     	int3
14000131e:     	int3
14000131f:     	int3
140001320:     	movq	%rdx, %r8
140001323:     	movslq	%ecx, %rdx
140001326:     	leaq	-0x21d(%rip), %rcx      # 0x140001110 <.text+0x110>
14000132d:     	xorl	%r9d, %r9d
140001330:     	jmp	0x140001010 <.text+0x10>
140001335:     	int3
140001336:     	int3
140001337:     	int3
140001338:     	int3
140001339:     	int3
14000133a:     	int3
14000133b:     	int3
14000133c:     	int3
14000133d:     	int3
14000133e:     	int3
14000133f:     	int3
140001340:     	jmp	0x140007f20 <.text+0x6f20>
140001345:     	int3
140001346:     	int3
140001347:     	int3
140001348:     	int3
140001349:     	int3
14000134a:     	int3
14000134b:     	int3
14000134c:     	int3
14000134d:     	int3
14000134e:     	int3
14000134f:     	int3
140001350:     	jmp	0x140007fb0 <.text+0x6fb0>
140001355:     	int3
140001356:     	int3
140001357:     	int3
140001358:     	int3
140001359:     	int3
14000135a:     	int3
14000135b:     	int3
14000135c:     	int3
14000135d:     	int3
14000135e:     	int3
14000135f:     	int3
140001360:     	jmp	0x140007fd0 <.text+0x6fd0>
140001365:     	int3
140001366:     	int3
140001367:     	int3
140001368:     	int3
140001369:     	int3
14000136a:     	int3
14000136b:     	int3
14000136c:     	int3
14000136d:     	int3
14000136e:     	int3
14000136f:     	int3
140001370:     	jmp	0x14000b620 <.text+0xa620>
140001375:     	int3
140001376:     	int3
140001377:     	int3
140001378:     	int3
140001379:     	int3
14000137a:     	int3
14000137b:     	int3
14000137c:     	int3
14000137d:     	int3
14000137e:     	int3
14000137f:     	int3
140001380:     	subq	$0x28, %rsp
140001384:     	movq	%r8, %rax
140001387:     	movq	0x50(%rsp), %r8
14000138c:     	movq	%rdx, %r10
14000138f:     	subq	%rcx, %r10
140001392:     	jb	0x1400013a4 <.text+0x3a4>
140001394:     	cmpq	%r9, %rdx
140001397:     	ja	0x1400013ab <.text+0x3ab>
140001399:     	addq	%rcx, %rax
14000139c:     	movq	%r10, %rdx
14000139f:     	addq	$0x28, %rsp
1400013a3:     	retq
1400013a4:     	callq	0x140019d50 <.text+0x18d50>
1400013a9:     	ud2
1400013ab:     	movq	%rdx, %rcx
1400013ae:     	movq	%r9, %rdx
1400013b1:     	callq	0x140019cd0 <.text+0x18cd0>
1400013b6:     	ud2
1400013b8:     	int3
1400013b9:     	int3
1400013ba:     	int3
1400013bb:     	int3
1400013bc:     	int3
1400013bd:     	int3
1400013be:     	int3
1400013bf:     	int3
1400013c0:     	movabsq	$0x6998ac279742f715, %rax # imm = 0x6998AC279742F715
1400013ca:     	movabsq	$0x7531c5cd50a80c12, %rdx # imm = 0x7531C5CD50A80C12
1400013d4:     	retq
1400013d5:     	int3
1400013d6:     	int3
1400013d7:     	int3
1400013d8:     	int3
1400013d9:     	int3
1400013da:     	int3
1400013db:     	int3
1400013dc:     	int3
1400013dd:     	int3
1400013de:     	int3
1400013df:     	int3
1400013e0:     	movabsq	$0x554370664b7583cb, %rax # imm = 0x554370664B7583CB
1400013ea:     	movabsq	$0x38695ad15e865bab, %rdx # imm = 0x38695AD15E865BAB
1400013f4:     	retq
1400013f5:     	int3
1400013f6:     	int3
1400013f7:     	int3
1400013f8:     	int3
1400013f9:     	int3
1400013fa:     	int3
1400013fb:     	int3
1400013fc:     	int3
1400013fd:     	int3
1400013fe:     	int3
1400013ff:     	int3
140001400:     	movabsq	$-0x3e5d376332e1843f, %rax # imm = 0xC1A2C89CCD1E7BC1
14000140a:     	movabsq	$-0x243e97eff4e109c, %rdx # imm = 0xFDBC168100B1EF64
140001414:     	retq
140001415:     	int3
140001416:     	int3
140001417:     	int3
140001418:     	int3
140001419:     	int3
14000141a:     	int3
14000141b:     	int3
14000141c:     	int3
14000141d:     	int3
14000141e:     	int3
14000141f:     	int3
140001420:     	subq	$0x48, %rsp
140001424:     	movq	%rdx, %rax
140001427:     	movq	(%rcx), %rcx
14000142a:     	movq	(%rcx), %r9
14000142d:     	movq	%r9, 0x40(%rsp)
140001432:     	addq	$0x18, %r9
140001436:     	leaq	0x196d3(%rip), %rcx     # 0x14001ab10
14000143d:     	movq	%rcx, 0x30(%rsp)
140001442:     	leaq	0x40(%rsp), %rcx
140001447:     	movq	%rcx, 0x28(%rsp)
14000144c:     	leaq	0x1969d(%rip), %rcx     # 0x14001aaf0
140001453:     	movq	%rcx, 0x20(%rsp)
140001458:     	leaq	0x19689(%rip), %rdx     # 0x14001aae8
14000145f:     	movl	$0x8, %r8d
140001465:     	movq	%rax, %rcx
140001468:     	callq	0x140015640 <.text+0x14640>
14000146d:     	nop
14000146e:     	addq	$0x48, %rsp
140001472:     	retq
140001473:     	int3
140001474:     	int3
140001475:     	int3
140001476:     	int3
140001477:     	int3
140001478:     	int3
140001479:     	int3
14000147a:     	int3
14000147b:     	int3
14000147c:     	int3
14000147d:     	int3
14000147e:     	int3
14000147f:     	int3
140001480:     	subq	$0x38, %rsp
140001484:     	movq	%rdx, %rax
140001487:     	movq	(%rcx), %rcx
14000148a:     	cmpb	$0x0, (%rcx)
14000148d:     	je	0x1400014c3 <.text+0x4c3>
14000148f:     	incq	%rcx
140001492:     	movq	%rcx, 0x30(%rsp)
140001497:     	leaq	0x1920a(%rip), %rcx     # 0x14001a6a8
14000149e:     	movq	%rcx, 0x20(%rsp)
1400014a3:     	leaq	0x196ca(%rip), %rdx     # 0x14001ab74
1400014aa:     	leaq	0x30(%rsp), %r9
1400014af:     	movl	$0x4, %r8d
1400014b5:     	movq	%rax, %rcx
1400014b8:     	callq	0x140015570 <.text+0x14570>
1400014bd:     	nop
1400014be:     	addq	$0x38, %rsp
1400014c2:     	retq
1400014c3:     	leaq	0x196a6(%rip), %rdx     # 0x14001ab70
1400014ca:     	movl	$0x4, %r8d
1400014d0:     	movq	%rax, %rcx
1400014d3:     	addq	$0x38, %rsp
1400014d7:     	jmp	0x140015330 <.text+0x14330>
1400014dc:     	int3
1400014dd:     	int3
1400014de:     	int3
1400014df:     	int3
1400014e0:     	movq	%rdx, %rcx
1400014e3:     	leaq	0x191b6(%rip), %rdx     # 0x14001a6a0
1400014ea:     	movl	$0x2, %r8d
1400014f0:     	jmp	0x140015010 <.text+0x14010>
1400014f5:     	int3
1400014f6:     	int3
1400014f7:     	int3
1400014f8:     	int3
1400014f9:     	int3
1400014fa:     	int3
1400014fb:     	int3
1400014fc:     	int3
1400014fd:     	int3
1400014fe:     	int3
1400014ff:     	int3
140001500:     	movq	(%rcx), %rcx
140001503:     	movl	0x34(%rdx), %eax
140001506:     	testb	$0x10, %al
140001508:     	jne	0x1400177a0 <.text+0x167a0>
14000150e:     	testb	$0x20, %al
140001510:     	jne	0x140017840 <.text+0x16840>
140001516:     	jmp	0x140017e10 <.text+0x16e10>
14000151b:     	int3
14000151c:     	int3
14000151d:     	int3
14000151e:     	int3
14000151f:     	int3
140001520:     	pushq	%r15
140001522:     	pushq	%r14
140001524:     	pushq	%rsi
140001525:     	pushq	%rdi
140001526:     	pushq	%rbx
140001527:     	subq	$0x40, %rsp
14000152b:     	movq	(%rcx), %rax
14000152e:     	movq	(%rax), %r14
140001531:     	movq	0x10(%rax), %r15
140001535:     	leaq	0x30(%rsp), %rcx
14000153a:     	callq	0x140015730 <.text+0x14730>
14000153f:     	testq	%r15, %r15
140001542:     	je	0x14000157b <.text+0x57b>
140001544:     	leaq	0x1915d(%rip), %rsi     # 0x14001a6a8
14000154b:     	leaq	0x30(%rsp), %rdi
140001550:     	leaq	0x28(%rsp), %rbx
140001555:     	nopw	%cs:(%rax,%rax)
140001560:     	movq	%r14, 0x28(%rsp)
140001565:     	incq	%r14
140001568:     	movq	%rdi, %rcx
14000156b:     	movq	%rbx, %rdx
14000156e:     	movq	%rsi, %r8
140001571:     	callq	0x1400148e0 <.text+0x138e0>
140001576:     	decq	%r15
140001579:     	jne	0x140001560 <.text+0x560>
14000157b:     	leaq	0x30(%rsp), %rcx
140001580:     	callq	0x140014a10 <.text+0x13a10>
140001585:     	nop
140001586:     	addq	$0x40, %rsp
14000158a:     	popq	%rbx
14000158b:     	popq	%rdi
14000158c:     	popq	%rsi
14000158d:     	popq	%r14
14000158f:     	popq	%r15
140001591:     	retq
140001592:     	int3
140001593:     	int3
140001594:     	int3
140001595:     	int3
140001596:     	int3
140001597:     	int3
140001598:     	int3
140001599:     	int3
14000159a:     	int3
14000159b:     	int3
14000159c:     	int3
14000159d:     	int3
14000159e:     	int3
14000159f:     	int3
1400015a0:     	movq	(%rcx), %rcx
1400015a3:     	movl	0x34(%rdx), %eax
1400015a6:     	testb	$0x10, %al
1400015a8:     	jne	0x1400175c0 <.text+0x165c0>
1400015ae:     	testb	$0x20, %al
1400015b0:     	jne	0x140017660 <.text+0x16660>
1400015b6:     	jmp	0x140017b10 <.text+0x16b10>
1400015bb:     	int3
1400015bc:     	int3
1400015bd:     	int3
1400015be:     	int3
1400015bf:     	int3
1400015c0:     	movq	%rdx, %r8
1400015c3:     	movq	(%rcx), %rax
1400015c6:     	movq	0x8(%rcx), %rdx
1400015ca:     	movq	%rax, %rcx
1400015cd:     	jmp	0x140015b40 <.text+0x14b40>
1400015d2:     	int3
1400015d3:     	int3
1400015d4:     	int3
1400015d5:     	int3
1400015d6:     	int3
1400015d7:     	int3
1400015d8:     	int3
1400015d9:     	int3
1400015da:     	int3
1400015db:     	int3
1400015dc:     	int3
1400015dd:     	int3
1400015de:     	int3
1400015df:     	int3
1400015e0:     	movq	(%rcx), %rcx
1400015e3:     	jmp	0x1400140a0 <.text+0x130a0>
1400015e8:     	int3
1400015e9:     	int3
1400015ea:     	int3
1400015eb:     	int3
1400015ec:     	int3
1400015ed:     	int3
1400015ee:     	int3
1400015ef:     	int3
1400015f0:     	movl	0x34(%rdx), %eax
1400015f3:     	testb	$0x10, %al
1400015f5:     	jne	0x1400177a0 <.text+0x167a0>
1400015fb:     	testb	$0x20, %al
1400015fd:     	jne	0x140017840 <.text+0x16840>
140001603:     	jmp	0x140017e10 <.text+0x16e10>
140001608:     	int3
140001609:     	int3
14000160a:     	int3
14000160b:     	int3
14000160c:     	int3
14000160d:     	int3
14000160e:     	int3
14000160f:     	int3
140001610:     	pushq	%rbp
140001611:     	pushq	%rsi
140001612:     	subq	$0x48, %rsp
140001616:     	leaq	0x40(%rsp), %rbp
14000161b:     	movq	$-0x2, (%rbp)
140001623:     	movq	%rcx, %rsi
140001626:     	movl	$0x0, -0x4(%rbp)
14000162d:     	cmpl	$0x80, %edx
140001633:     	jae	0x140001643 <.text+0x643>
140001635:     	movb	%dl, -0x4(%rbp)
140001638:     	movl	$0x1, %r8d
14000163e:     	jmp	0x1400016c4 <.text+0x6c4>
140001643:     	movl	%edx, %eax
140001645:     	cmpl	$0x800, %edx            # imm = 0x800
14000164b:     	jae	0x140001666 <.text+0x666>
14000164d:     	shrl	$0x6, %eax
140001650:     	orb	$-0x40, %al
140001652:     	movb	%al, -0x4(%rbp)
140001655:     	andb	$0x3f, %dl
140001658:     	orb	$-0x80, %dl
14000165b:     	movb	%dl, -0x3(%rbp)
14000165e:     	movl	$0x2, %r8d
140001664:     	jmp	0x1400016c4 <.text+0x6c4>
140001666:     	cmpl	$0xffff, %edx           # imm = 0xFFFF
14000166c:     	ja	0x140001693 <.text+0x693>
14000166e:     	shrl	$0xc, %eax
140001671:     	orb	$-0x20, %al
140001673:     	movb	%al, -0x4(%rbp)
140001676:     	movl	%edx, %eax
140001678:     	shrl	$0x6, %eax
14000167b:     	andb	$0x3f, %al
14000167d:     	orb	$-0x80, %al
14000167f:     	movb	%al, -0x3(%rbp)
140001682:     	andb	$0x3f, %dl
140001685:     	orb	$-0x80, %dl
140001688:     	movb	%dl, -0x2(%rbp)
14000168b:     	movl	$0x3, %r8d
140001691:     	jmp	0x1400016c4 <.text+0x6c4>
140001693:     	shrl	$0x12, %eax
140001696:     	andb	$0x7, %al
140001698:     	orb	$-0x10, %al
14000169a:     	movb	%al, -0x4(%rbp)
14000169d:     	movl	%edx, %eax
14000169f:     	shrl	$0xc, %eax
1400016a2:     	andb	$0x3f, %al
1400016a4:     	orb	$-0x80, %al
1400016a6:     	movb	%al, -0x3(%rbp)
1400016a9:     	movl	%edx, %eax
1400016ab:     	shrl	$0x6, %eax
1400016ae:     	andb	$0x3f, %al
1400016b0:     	orb	$-0x80, %al
1400016b2:     	movb	%al, -0x2(%rbp)
1400016b5:     	andb	$0x3f, %dl
1400016b8:     	orb	$-0x80, %dl
1400016bb:     	movb	%dl, -0x1(%rbp)
1400016be:     	movl	$0x4, %r8d
1400016c4:     	movq	(%rsi), %rcx
1400016c7:     	leaq	-0x4(%rbp), %rdx
1400016cb:     	callq	0x140004900 <.text+0x3900>
1400016d0:     	testq	%rax, %rax
1400016d3:     	je	0x1400016fc <.text+0x6fc>
1400016d5:     	movq	%rax, -0x18(%rbp)
1400016d9:     	leaq	0x8(%rsi), %rax
1400016dd:     	movq	%rax, -0x10(%rbp)
1400016e1:     	cmpq	$0x0, 0x8(%rsi)
1400016e6:     	je	0x1400016f1 <.text+0x6f1>
1400016e8:     	movq	-0x10(%rbp), %rcx
1400016ec:     	callq	0x140001c00 <.text+0xc00>
1400016f1:     	movq	-0x18(%rbp), %rax
1400016f5:     	movq	-0x10(%rbp), %rcx
1400016f9:     	movq	%rax, (%rcx)
1400016fc:     	testq	%rax, %rax
1400016ff:     	setne	%al
140001702:     	addq	$0x48, %rsp
140001706:     	popq	%rsi
140001707:     	popq	%rbp
140001708:     	retq
140001709:     	nopl	(%rax)
140001710:     	movq	%rdx, 0x10(%rsp)
140001715:     	pushq	%rbp
140001716:     	pushq	%rsi
140001717:     	subq	$0x28, %rsp
14000171b:     	leaq	0x40(%rdx), %rbp
14000171f:     	movq	-0x18(%rbp), %rax
140001723:     	movq	-0x10(%rbp), %rcx
140001727:     	movq	%rax, (%rcx)
14000172a:     	addq	$0x28, %rsp
14000172e:     	popq	%rsi
14000172f:     	popq	%rbp
140001730:     	retq
140001731:     	int3
140001732:     	int3
140001733:     	int3
140001734:     	int3
140001735:     	int3
140001736:     	int3
140001737:     	int3
140001738:     	int3
140001739:     	int3
14000173a:     	int3
14000173b:     	int3
14000173c:     	int3
14000173d:     	int3
14000173e:     	int3
14000173f:     	int3
140001740:     	pushq	%rsi
140001741:     	pushq	%rdi
140001742:     	pushq	%rbx
140001743:     	subq	$0x30, %rsp
140001747:     	movl	$0x0, 0x2c(%rsp)
14000174f:     	cmpl	$0x80, %edx
140001755:     	jae	0x140001765 <.text+0x765>
140001757:     	movb	%dl, 0x2c(%rsp)
14000175b:     	movl	$0x1, %esi
140001760:     	jmp	0x1400017ec <.text+0x7ec>
140001765:     	movl	%edx, %eax
140001767:     	cmpl	$0x800, %edx            # imm = 0x800
14000176d:     	jae	0x140001789 <.text+0x789>
14000176f:     	shrl	$0x6, %eax
140001772:     	orb	$-0x40, %al
140001774:     	movb	%al, 0x2c(%rsp)
140001778:     	andb	$0x3f, %dl
14000177b:     	orb	$-0x80, %dl
14000177e:     	movb	%dl, 0x2d(%rsp)
140001782:     	movl	$0x2, %esi
140001787:     	jmp	0x1400017ec <.text+0x7ec>
140001789:     	cmpl	$0xffff, %edx           # imm = 0xFFFF
14000178f:     	ja	0x1400017b8 <.text+0x7b8>
140001791:     	shrl	$0xc, %eax
140001794:     	orb	$-0x20, %al
140001796:     	movb	%al, 0x2c(%rsp)
14000179a:     	movl	%edx, %eax
14000179c:     	shrl	$0x6, %eax
14000179f:     	andb	$0x3f, %al
1400017a1:     	orb	$-0x80, %al
1400017a3:     	movb	%al, 0x2d(%rsp)
1400017a7:     	andb	$0x3f, %dl
1400017aa:     	orb	$-0x80, %dl
1400017ad:     	movb	%dl, 0x2e(%rsp)
1400017b1:     	movl	$0x3, %esi
1400017b6:     	jmp	0x1400017ec <.text+0x7ec>
1400017b8:     	shrl	$0x12, %eax
1400017bb:     	andb	$0x7, %al
1400017bd:     	orb	$-0x10, %al
1400017bf:     	movb	%al, 0x2c(%rsp)
1400017c3:     	movl	%edx, %eax
1400017c5:     	shrl	$0xc, %eax
1400017c8:     	andb	$0x3f, %al
1400017ca:     	orb	$-0x80, %al
1400017cc:     	movb	%al, 0x2d(%rsp)
1400017d0:     	movl	%edx, %eax
1400017d2:     	shrl	$0x6, %eax
1400017d5:     	andb	$0x3f, %al
1400017d7:     	orb	$-0x80, %al
1400017d9:     	movb	%al, 0x2e(%rsp)
1400017dd:     	andb	$0x3f, %dl
1400017e0:     	orb	$-0x80, %dl
1400017e3:     	movb	%dl, 0x2f(%rsp)
1400017e7:     	movl	$0x4, %esi
1400017ec:     	movq	(%rcx), %rdi
1400017ef:     	movq	0x8(%rdi), %rax
1400017f3:     	movq	0x10(%rdi), %rbx
1400017f7:     	subq	%rbx, %rax
1400017fa:     	cmpq	%rsi, %rax
1400017fd:     	jb	0x140001823 <.text+0x823>
1400017ff:     	movq	(%rdi), %rcx
140001802:     	addq	%rbx, %rcx
140001805:     	leaq	0x2c(%rsp), %rdx
14000180a:     	movq	%rsi, %r8
14000180d:     	callq	0x140018beb <.text+0x17beb>
140001812:     	addq	%rsi, %rbx
140001815:     	movq	%rbx, 0x10(%rdi)
140001819:     	xorl	%eax, %eax
14000181b:     	addq	$0x30, %rsp
14000181f:     	popq	%rbx
140001820:     	popq	%rdi
140001821:     	popq	%rsi
140001822:     	retq
140001823:     	movq	%rdi, %rcx
140001826:     	movq	%rbx, %rdx
140001829:     	movq	%rsi, %r8
14000182c:     	callq	0x140018e60 <.text+0x17e60>
140001831:     	movq	0x10(%rdi), %rbx
140001835:     	jmp	0x1400017ff <.text+0x7ff>
140001837:     	int3
140001838:     	int3
140001839:     	int3
14000183a:     	int3
14000183b:     	int3
14000183c:     	int3
14000183d:     	int3
14000183e:     	int3
14000183f:     	int3
140001840:     	pushq	%rbp
140001841:     	pushq	%rsi
140001842:     	subq	$0x48, %rsp
140001846:     	leaq	0x40(%rsp), %rbp
14000184b:     	movq	$-0x2, (%rbp)
140001853:     	movq	%rcx, %rsi
140001856:     	movl	$0x0, -0x4(%rbp)
14000185d:     	cmpl	$0x80, %edx
140001863:     	jae	0x140001873 <.text+0x873>
140001865:     	movb	%dl, -0x4(%rbp)
140001868:     	movl	$0x1, %r8d
14000186e:     	jmp	0x1400018f4 <.text+0x8f4>
140001873:     	movl	%edx, %eax
140001875:     	cmpl	$0x800, %edx            # imm = 0x800
14000187b:     	jae	0x140001896 <.text+0x896>
14000187d:     	shrl	$0x6, %eax
140001880:     	orb	$-0x40, %al
140001882:     	movb	%al, -0x4(%rbp)
140001885:     	andb	$0x3f, %dl
140001888:     	orb	$-0x80, %dl
14000188b:     	movb	%dl, -0x3(%rbp)
14000188e:     	movl	$0x2, %r8d
140001894:     	jmp	0x1400018f4 <.text+0x8f4>
140001896:     	cmpl	$0xffff, %edx           # imm = 0xFFFF
14000189c:     	ja	0x1400018c3 <.text+0x8c3>
14000189e:     	shrl	$0xc, %eax
1400018a1:     	orb	$-0x20, %al
1400018a3:     	movb	%al, -0x4(%rbp)
1400018a6:     	movl	%edx, %eax
1400018a8:     	shrl	$0x6, %eax
1400018ab:     	andb	$0x3f, %al
1400018ad:     	orb	$-0x80, %al
1400018af:     	movb	%al, -0x3(%rbp)
1400018b2:     	andb	$0x3f, %dl
1400018b5:     	orb	$-0x80, %dl
1400018b8:     	movb	%dl, -0x2(%rbp)
1400018bb:     	movl	$0x3, %r8d
1400018c1:     	jmp	0x1400018f4 <.text+0x8f4>
1400018c3:     	shrl	$0x12, %eax
1400018c6:     	andb	$0x7, %al
1400018c8:     	orb	$-0x10, %al
1400018ca:     	movb	%al, -0x4(%rbp)
1400018cd:     	movl	%edx, %eax
1400018cf:     	shrl	$0xc, %eax
1400018d2:     	andb	$0x3f, %al
1400018d4:     	orb	$-0x80, %al
1400018d6:     	movb	%al, -0x3(%rbp)
1400018d9:     	movl	%edx, %eax
1400018db:     	shrl	$0x6, %eax
1400018de:     	andb	$0x3f, %al
1400018e0:     	orb	$-0x80, %al
1400018e2:     	movb	%al, -0x2(%rbp)
1400018e5:     	andb	$0x3f, %dl
1400018e8:     	orb	$-0x80, %dl
1400018eb:     	movb	%dl, -0x1(%rbp)
1400018ee:     	movl	$0x4, %r8d
1400018f4:     	movq	(%rsi), %rcx
1400018f7:     	leaq	-0x4(%rbp), %rdx
1400018fb:     	callq	0x140004fb0 <.text+0x3fb0>
140001900:     	testq	%rax, %rax
140001903:     	je	0x14000192c <.text+0x92c>
140001905:     	movq	%rax, -0x18(%rbp)
140001909:     	leaq	0x8(%rsi), %rax
14000190d:     	movq	%rax, -0x10(%rbp)
140001911:     	cmpq	$0x0, 0x8(%rsi)
140001916:     	je	0x140001921 <.text+0x921>
140001918:     	movq	-0x10(%rbp), %rcx
14000191c:     	callq	0x140001c00 <.text+0xc00>
140001921:     	movq	-0x18(%rbp), %rax
140001925:     	movq	-0x10(%rbp), %rcx
140001929:     	movq	%rax, (%rcx)
14000192c:     	testq	%rax, %rax
14000192f:     	setne	%al
140001932:     	addq	$0x48, %rsp
140001936:     	popq	%rsi
140001937:     	popq	%rbp
140001938:     	retq
140001939:     	nopl	(%rax)
140001940:     	movq	%rdx, 0x10(%rsp)
140001945:     	pushq	%rbp
140001946:     	pushq	%rsi
140001947:     	subq	$0x28, %rsp
14000194b:     	leaq	0x40(%rdx), %rbp
14000194f:     	movq	-0x18(%rbp), %rax
140001953:     	movq	-0x10(%rbp), %rcx
140001957:     	movq	%rax, (%rcx)
14000195a:     	addq	$0x28, %rsp
14000195e:     	popq	%rsi
14000195f:     	popq	%rbp
140001960:     	retq
140001961:     	int3
140001962:     	int3
140001963:     	int3
140001964:     	int3
140001965:     	int3
140001966:     	int3
140001967:     	int3
140001968:     	int3
140001969:     	int3
14000196a:     	int3
14000196b:     	int3
14000196c:     	int3
14000196d:     	int3
14000196e:     	int3
14000196f:     	int3
140001970:     	movq	%rdx, %r8
140001973:     	leaq	0x19276(%rip), %rdx     # 0x14001abf0
14000197a:     	jmp	0x140014a60 <.text+0x13a60>
14000197f:     	int3
140001980:     	movq	%rdx, %r8
140001983:     	leaq	0x19296(%rip), %rdx     # 0x14001ac20
14000198a:     	jmp	0x140014a60 <.text+0x13a60>
14000198f:     	int3
140001990:     	movq	%rdx, %r8
140001993:     	leaq	0x19226(%rip), %rdx     # 0x14001abc0
14000199a:     	jmp	0x140014a60 <.text+0x13a60>
14000199f:     	int3
1400019a0:     	movq	%rdx, %r8
1400019a3:     	leaq	0x192a6(%rip), %rdx     # 0x14001ac50
1400019aa:     	jmp	0x140014a60 <.text+0x13a60>
1400019af:     	int3
1400019b0:     	subq	$0x28, %rsp
1400019b4:     	movq	(%rcx), %rax
1400019b7:     	movq	%rax, 0x20(%rsp)
1400019bc:     	leaq	0x20(%rsp), %rcx
1400019c1:     	callq	0x140006960 <.text+0x5960>
1400019c6:     	nop
1400019c7:     	addq	$0x28, %rsp
1400019cb:     	retq
1400019cc:     	int3
1400019cd:     	int3
1400019ce:     	int3
1400019cf:     	int3
1400019d0:     	subq	$0x28, %rsp
1400019d4:     	movq	(%rcx), %rdx
1400019d7:     	movq	(%rdx), %rcx
1400019da:     	movq	0x8(%rdx), %rax
1400019de:     	movq	$0x0, (%rdx)
1400019e5:     	testq	%rcx, %rcx
1400019e8:     	je	0x140001a1b <.text+0xa1b>
1400019ea:     	movb	$0x1, (%rcx)
1400019ed:     	xorps	%xmm0, %xmm0
1400019f0:     	movups	%xmm0, (%rax)
1400019f3:     	movq	$0x0, 0x10(%rax)
1400019fb:     	movq	$0x1, 0x18(%rax)
140001a03:     	movups	%xmm0, 0x20(%rax)
140001a07:     	movq	$0x0, 0x2e(%rax)
140001a0f:     	movl	$0x0, 0x38(%rax)
140001a16:     	addq	$0x28, %rsp
140001a1a:     	retq
140001a1b:     	leaq	0x18c4e(%rip), %rcx     # 0x14001a670
140001a22:     	leaq	0x19d7f(%rip), %r8      # 0x14001b7a8
140001a29:     	movl	$0x2b, %edx
140001a2e:     	callq	0x140019880 <.text+0x18880>
140001a33:     	ud2
140001a35:     	int3
140001a36:     	int3
140001a37:     	int3
140001a38:     	int3
140001a39:     	int3
140001a3a:     	int3
140001a3b:     	int3
140001a3c:     	int3
140001a3d:     	int3
140001a3e:     	int3
140001a3f:     	int3
140001a40:     	jmp	0x140007230 <.text+0x6230>
140001a45:     	int3
140001a46:     	int3
140001a47:     	int3
140001a48:     	int3
140001a49:     	int3
140001a4a:     	int3
140001a4b:     	int3
140001a4c:     	int3
140001a4d:     	int3
140001a4e:     	int3
140001a4f:     	int3
140001a50:     	pushq	%rsi
140001a51:     	subq	$0x20, %rsp
140001a55:     	movq	(%rcx), %rax
140001a58:     	movq	(%rax), %rsi
140001a5b:     	movq	$0x0, (%rax)
140001a62:     	testq	%rsi, %rsi
140001a65:     	je	0x140001ac0 <.text+0xac0>
140001a67:     	movzbl	0x21793(%rip), %eax     # 0x140023201
140001a6e:     	movl	$0x400, %ecx            # imm = 0x400
140001a73:     	movl	$0x1, %edx
140001a78:     	callq	0x140001340 <.text+0x340>
140001a7d:     	testq	%rax, %rax
140001a80:     	je	0x140001ada <.text+0xada>
140001a82:     	xorps	%xmm0, %xmm0
140001a85:     	movups	%xmm0, (%rsi)
140001a88:     	movq	$0x0, 0x10(%rsi)
140001a90:     	movq	%rax, 0x18(%rsi)
140001a94:     	movq	$0x400, 0x20(%rsi)      # imm = 0x400
140001a9c:     	movq	$0x0, 0x28(%rsi)
140001aa4:     	movb	$0x0, 0x30(%rsi)
140001aa8:     	movb	$0x0, 0x35(%rsi)
140001aac:     	movl	$0x0, 0x31(%rsi)
140001ab3:     	movl	$0x0, 0x38(%rsi)
140001aba:     	addq	$0x20, %rsp
140001abe:     	popq	%rsi
140001abf:     	retq
140001ac0:     	leaq	0x18ba9(%rip), %rcx     # 0x14001a670
140001ac7:     	leaq	0x19cda(%rip), %r8      # 0x14001b7a8
140001ace:     	movl	$0x2b, %edx
140001ad3:     	callq	0x140019880 <.text+0x18880>
140001ad8:     	ud2
140001ada:     	movl	$0x1, %ecx
140001adf:     	movl	$0x400, %edx            # imm = 0x400
140001ae4:     	callq	0x1400196e0 <.text+0x186e0>
140001ae9:     	ud2
140001aeb:     	int3
140001aec:     	int3
140001aed:     	int3
140001aee:     	int3
140001aef:     	int3
140001af0:     	pushq	%rbp
140001af1:     	pushq	%rsi
140001af2:     	pushq	%rbx
140001af3:     	subq	$0x50, %rsp
140001af7:     	leaq	0x50(%rsp), %rbp
140001afc:     	movq	$-0x2, -0x8(%rbp)
140001b04:     	movq	%rdx, %rax
140001b07:     	leaq	-0x28(%rbp), %rdx
140001b0b:     	movq	0x10(%r8), %r9
140001b0f:     	movq	%r9, -0x18(%rbp)
140001b13:     	movups	(%r8), %xmm0
140001b17:     	movups	%xmm0, -0x28(%rbp)
140001b1b:     	movq	%rax, -0x30(%rbp)
140001b1f:     	movb	0x18(%rcx), %sil
140001b23:     	movzbl	0x20(%rcx), %r8d
140001b28:     	xorl	%r9d, %r9d
140001b2b:     	cmpb	$0x2, %sil
140001b2f:     	movq	%rcx, -0x10(%rbp)
140001b33:     	cmovneq	%rcx, %r9
140001b37:     	movq	%rax, %rcx
140001b3a:     	callq	0x140007550 <.text+0x6550>
140001b3f:     	movl	%eax, %ebx
140001b41:     	cmpb	$0x2, %sil
140001b45:     	je	0x140001b66 <.text+0xb66>
140001b47:     	movq	-0x10(%rbp), %rax
140001b4b:     	movq	0x8(%rax), %rdx
140001b4f:     	testq	%rdx, %rdx
140001b52:     	je	0x140001b66 <.text+0xb66>
140001b54:     	movq	-0x10(%rbp), %rax
140001b58:     	movq	(%rax), %rcx
140001b5b:     	movl	$0x1, %r8d
140001b61:     	callq	0x140001350 <.text+0x350>
140001b66:     	movl	%ebx, %eax
140001b68:     	addq	$0x50, %rsp
140001b6c:     	popq	%rbx
140001b6d:     	popq	%rsi
140001b6e:     	popq	%rbp
140001b6f:     	retq
140001b70:     	movq	%rdx, 0x10(%rsp)
140001b75:     	pushq	%rbp
140001b76:     	pushq	%rsi
140001b77:     	pushq	%rbx
140001b78:     	subq	$0x20, %rsp
140001b7c:     	leaq	0x50(%rdx), %rbp
140001b80:     	movq	-0x10(%rbp), %rax
140001b84:     	cmpb	$0x2, 0x18(%rax)
140001b88:     	je	0x140001ba9 <.text+0xba9>
140001b8a:     	movq	-0x10(%rbp), %rax
140001b8e:     	movq	0x8(%rax), %rdx
140001b92:     	testq	%rdx, %rdx
140001b95:     	je	0x140001ba9 <.text+0xba9>
140001b97:     	movq	-0x10(%rbp), %rax
140001b9b:     	movq	(%rax), %rcx
140001b9e:     	movl	$0x1, %r8d
140001ba4:     	callq	0x140001350 <.text+0x350>
140001ba9:     	nop
140001baa:     	addq	$0x20, %rsp
140001bae:     	popq	%rbx
140001baf:     	popq	%rsi
140001bb0:     	popq	%rbp
140001bb1:     	retq
140001bb2:     	int3
140001bb3:     	int3
140001bb4:     	int3
140001bb5:     	int3
140001bb6:     	int3
140001bb7:     	int3
140001bb8:     	int3
140001bb9:     	int3
140001bba:     	int3
140001bbb:     	int3
140001bbc:     	int3
140001bbd:     	int3
140001bbe:     	int3
140001bbf:     	int3
140001bc0:     	subq	$0x28, %rsp
140001bc4:     	callq	0x140003500 <.text+0x2500>
140001bc9:     	ud2
140001bcb:     	int3
140001bcc:     	int3
140001bcd:     	int3
140001bce:     	int3
140001bcf:     	int3
140001bd0:     	retq
140001bd1:     	int3
140001bd2:     	int3
140001bd3:     	int3
140001bd4:     	int3
140001bd5:     	int3
140001bd6:     	int3
140001bd7:     	int3
140001bd8:     	int3
140001bd9:     	int3
140001bda:     	int3
140001bdb:     	int3
140001bdc:     	int3
140001bdd:     	int3
140001bde:     	int3
140001bdf:     	int3
140001be0:     	movq	0x8(%rcx), %rdx
140001be4:     	testq	%rdx, %rdx
140001be7:     	je	0x140001bf7 <.text+0xbf7>
140001be9:     	movq	(%rcx), %rcx
140001bec:     	movl	$0x1, %r8d
140001bf2:     	jmp	0x140001350 <.text+0x350>
140001bf7:     	retq
140001bf8:     	int3
140001bf9:     	int3
140001bfa:     	int3
140001bfb:     	int3
140001bfc:     	int3
140001bfd:     	int3
140001bfe:     	int3
140001bff:     	int3
140001c00:     	pushq	%rbp
140001c01:     	subq	$0x40, %rsp
140001c05:     	leaq	0x40(%rsp), %rbp
140001c0a:     	movq	$-0x2, -0x8(%rbp)
140001c12:     	movq	(%rcx), %rax
140001c15:     	movl	%eax, %ecx
140001c17:     	andl	$0x3, %ecx
140001c1a:     	leaq	-0x2(%rcx), %rdx
140001c1e:     	cmpq	$0x2, %rdx
140001c22:     	jb	0x140001c29 <.text+0xc29>
140001c24:     	testq	%rcx, %rcx
140001c27:     	jne	0x140001c2f <.text+0xc2f>
140001c29:     	addq	$0x40, %rsp
140001c2d:     	popq	%rbp
140001c2e:     	retq
140001c2f:     	leaq	-0x1(%rax), %rcx
140001c33:     	movq	%rcx, -0x20(%rbp)
140001c37:     	movq	-0x1(%rax), %rcx
140001c3b:     	movq	0x7(%rax), %rax
140001c3f:     	movq	%rcx, -0x18(%rbp)
140001c43:     	movq	%rax, -0x10(%rbp)
140001c47:     	callq	*(%rax)
140001c49:     	movq	-0x10(%rbp), %rax
140001c4d:     	movq	0x8(%rax), %rdx
140001c51:     	testq	%rdx, %rdx
140001c54:     	je	0x140001c63 <.text+0xc63>
140001c56:     	movq	0x10(%rax), %r8
140001c5a:     	movq	-0x18(%rbp), %rcx
140001c5e:     	callq	0x140001350 <.text+0x350>
140001c63:     	movl	$0x18, %edx
140001c68:     	movl	$0x8, %r8d
140001c6e:     	movq	-0x20(%rbp), %rcx
140001c72:     	addq	$0x40, %rsp
140001c76:     	popq	%rbp
140001c77:     	jmp	0x140001350 <.text+0x350>
140001c7c:     	nopl	(%rax)
140001c80:     	movq	%rdx, 0x10(%rsp)
140001c85:     	pushq	%rbp
140001c86:     	subq	$0x20, %rsp
140001c8a:     	leaq	0x40(%rdx), %rbp
140001c8e:     	movq	-0x10(%rbp), %rax
140001c92:     	movq	0x8(%rax), %rdx
140001c96:     	testq	%rdx, %rdx
140001c99:     	je	0x140001cac <.text+0xcac>
140001c9b:     	movq	-0x10(%rbp), %rax
140001c9f:     	movq	0x10(%rax), %r8
140001ca3:     	movq	-0x18(%rbp), %rcx
140001ca7:     	callq	0x140001350 <.text+0x350>
140001cac:     	movl	$0x18, %edx
140001cb1:     	movl	$0x8, %r8d
140001cb7:     	movq	-0x20(%rbp), %rcx
140001cbb:     	callq	0x140001350 <.text+0x350>
140001cc0:     	nop
140001cc1:     	addq	$0x20, %rsp
140001cc5:     	popq	%rbp
140001cc6:     	retq
140001cc7:     	int3
140001cc8:     	int3
140001cc9:     	int3
140001cca:     	int3
140001ccb:     	int3
140001ccc:     	int3
140001ccd:     	int3
140001cce:     	int3
140001ccf:     	int3
140001cd0:     	subq	$0x68, %rsp
140001cd4:     	movl	$0x0, 0x28(%rsp)
140001cdc:     	movb	$0x0, 0x2c(%rsp)
140001ce1:     	leaq	0x191c8(%rip), %rax     # 0x14001aeb0
140001ce8:     	movq	%rax, 0x38(%rsp)
140001ced:     	movq	$0x1, 0x40(%rsp)
140001cf6:     	leaq	0x20(%rsp), %rax
140001cfb:     	movq	%rax, 0x48(%rsp)
140001d00:     	xorps	%xmm0, %xmm0
140001d03:     	movups	%xmm0, 0x50(%rsp)
140001d08:     	leaq	0x28(%rsp), %rcx
140001d0d:     	leaq	0x38(%rsp), %rdx
140001d12:     	callq	0x140005690 <.text+0x4690>
140001d17:     	movq	%rax, 0x30(%rsp)
140001d1c:     	leaq	0x30(%rsp), %rcx
140001d21:     	callq	0x140001da0 <.text+0xda0>
140001d26:     	movl	$0x7, %ecx
140001d2b:     	int	$0x29
140001d2d:     	ud2
140001d2f:     	int3
140001d30:     	pushq	%rsi
140001d31:     	subq	$0x20, %rsp
140001d35:     	movq	%rcx, %rsi
140001d38:     	testb	%dl, %dl
140001d3a:     	jne	0x140001d4b <.text+0xd4b>
140001d3c:     	movq	0x2155d(%rip), %rax     # 0x1400232a0
140001d43:     	shlq	%rax
140001d46:     	testq	%rax, %rax
140001d49:     	jne	0x140001d5a <.text+0xd5a>
140001d4b:     	movq	%rsi, %rcx
140001d4e:     	addq	$0x20, %rsp
140001d52:     	popq	%rsi
140001d53:     	jmpq	*0x183b6(%rip)          # 0x14001a110
140001d5a:     	callq	0x1400191b0 <.text+0x181b0>
140001d5f:     	testb	%al, %al
140001d61:     	jne	0x140001d4b <.text+0xd4b>
140001d63:     	movb	$0x1, 0x8(%rsi)
140001d67:     	jmp	0x140001d4b <.text+0xd4b>
140001d69:     	int3
140001d6a:     	int3
140001d6b:     	int3
140001d6c:     	int3
140001d6d:     	int3
140001d6e:     	int3
140001d6f:     	int3
140001d70:     	movq	%rcx, %rax
140001d73:     	movq	0x8(%rcx), %rcx
140001d77:     	testq	%rcx, %rcx
140001d7a:     	je	0x140001d90 <.text+0xd90>
140001d7c:     	movq	0x10(%rax), %rdx
140001d80:     	testq	%rdx, %rdx
140001d83:     	je	0x140001d90 <.text+0xd90>
140001d85:     	movl	$0x1, %r8d
140001d8b:     	jmp	0x140001350 <.text+0x350>
140001d90:     	retq
140001d91:     	int3
140001d92:     	int3
140001d93:     	int3
140001d94:     	int3
140001d95:     	int3
140001d96:     	int3
140001d97:     	int3
140001d98:     	int3
140001d99:     	int3
140001d9a:     	int3
140001d9b:     	int3
140001d9c:     	int3
140001d9d:     	int3
140001d9e:     	int3
140001d9f:     	int3
140001da0:     	cmpq	$0x0, (%rcx)
140001da4:     	jne	0x140001c00 <.text+0xc00>
140001daa:     	retq
140001dab:     	int3
140001dac:     	int3
140001dad:     	int3
140001dae:     	int3
140001daf:     	int3
140001db0:     	cmpq	$0x0, 0x8(%rcx)
140001db5:     	je	0x140001dc0 <.text+0xdc0>
140001db7:     	addq	$0x8, %rcx
140001dbb:     	jmp	0x140001c00 <.text+0xc00>
140001dc0:     	retq
140001dc1:     	int3
140001dc2:     	int3
140001dc3:     	int3
140001dc4:     	int3
140001dc5:     	int3
140001dc6:     	int3
140001dc7:     	int3
140001dc8:     	int3
140001dc9:     	int3
140001dca:     	int3
140001dcb:     	int3
140001dcc:     	int3
140001dcd:     	int3
140001dce:     	int3
140001dcf:     	int3
140001dd0:     	cmpb	$0x2, 0x18(%rcx)
140001dd4:     	je	0x140001ded <.text+0xded>
140001dd6:     	movq	0x8(%rcx), %rdx
140001dda:     	testq	%rdx, %rdx
140001ddd:     	je	0x140001ded <.text+0xded>
140001ddf:     	movq	(%rcx), %rcx
140001de2:     	movl	$0x1, %r8d
140001de8:     	jmp	0x140001350 <.text+0x350>
140001ded:     	retq
140001dee:     	int3
140001def:     	int3
140001df0:     	pushq	%rsi
140001df1:     	pushq	%rdi
140001df2:     	subq	$0x28, %rsp
140001df6:     	testq	%rdx, %rdx
140001df9:     	je	0x140001e26 <.text+0xe26>
140001dfb:     	movq	%rcx, %rsi
140001dfe:     	movq	0x10(%rcx), %rax
140001e02:     	movq	%rax, %rdi
140001e05:     	subq	%rdx, %rdi
140001e08:     	jb	0x140001e2d <.text+0xe2d>
140001e0a:     	movq	$0x0, 0x10(%rsi)
140001e12:     	je	0x140001e26 <.text+0xe26>
140001e14:     	movq	(%rsi), %rcx
140001e17:     	addq	%rcx, %rdx
140001e1a:     	movq	%rdi, %r8
140001e1d:     	callq	0x140018bf7 <.text+0x17bf7>
140001e22:     	movq	%rdi, 0x10(%rsi)
140001e26:     	addq	$0x28, %rsp
140001e2a:     	popq	%rdi
140001e2b:     	popq	%rsi
140001e2c:     	retq
140001e2d:     	leaq	0x18c04(%rip), %r8      # 0x14001aa38
140001e34:     	movq	%rdx, %rcx
140001e37:     	movq	%rax, %rdx
140001e3a:     	callq	0x140019cd0 <.text+0x18cd0>
140001e3f:     	ud2
140001e41:     	int3
140001e42:     	int3
140001e43:     	int3
140001e44:     	int3
140001e45:     	int3
140001e46:     	int3
140001e47:     	int3
140001e48:     	int3
140001e49:     	int3
140001e4a:     	int3
140001e4b:     	int3
140001e4c:     	int3
140001e4d:     	int3
140001e4e:     	int3
140001e4f:     	int3
140001e50:     	pushq	%r15
140001e52:     	pushq	%r14
140001e54:     	pushq	%r13
140001e56:     	pushq	%r12
140001e58:     	pushq	%rsi
140001e59:     	pushq	%rdi
140001e5a:     	pushq	%rbp
140001e5b:     	pushq	%rbx
140001e5c:     	subq	$0x58, %rsp
140001e60:     	movq	%rdx, %rax
140001e63:     	movq	0xc8(%rsp), %rdx
140001e6b:     	movq	0x20(%rax), %r10
140001e6f:     	leaq	(%rdx,%r10), %r11
140001e73:     	decq	%r11
140001e76:     	cmpq	%r9, %r11
140001e79:     	jae	0x14000208c <.text+0x108c>
140001e7f:     	movzbl	0xd0(%rsp), %ebp
140001e87:     	movq	0xc0(%rsp), %rsi
140001e8f:     	leaq	-0x1(%rdx), %rdi
140001e93:     	movq	0x18(%rax), %r14
140001e97:     	movq	(%rax), %rbx
140001e9a:     	movq	0x10(%rax), %r15
140001e9e:     	movq	%rdx, %r12
140001ea1:     	movq	%r15, 0x50(%rsp)
140001ea6:     	subq	%r15, %r12
140001ea9:     	movq	%r12, 0x48(%rsp)
140001eae:     	movq	0x30(%rax), %r13
140001eb2:     	leaq	(%rdx,%rdx), %r15
140001eb6:     	movq	%r15, 0x40(%rsp)
140001ebb:     	movl	$0x1, %r15d
140001ec1:     	movq	%rbx, 0x30(%rsp)
140001ec6:     	subq	%rbx, %r15
140001ec9:     	movq	%r15, 0x38(%rsp)
140001ece:     	testb	%bpl, %bpl
140001ed1:     	je	0x140001f10 <.text+0xf10>
140001ed3:     	movq	%r10, %r12
140001ed6:     	nopw	%cs:(%rax,%rax)
140001ee0:     	movzbl	(%r8,%r11), %r10d
140001ee5:     	btq	%r10, %r14
140001ee9:     	jb	0x140001f30 <.text+0xf30>
140001eeb:     	addq	%rdx, %r12
140001eee:     	movq	%r12, 0x20(%rax)
140001ef2:     	leaq	(%rdi,%r12), %r11
140001ef6:     	leaq	(%rdi,%r12), %r10
140001efa:     	cmpq	%r9, %r10
140001efd:     	jb	0x140001ee0 <.text+0xee0>
140001eff:     	jmp	0x14000208c <.text+0x108c>
140001f04:     	nopw	%cs:(%rax,%rax)
140001f10:     	movzbl	(%r8,%r11), %r11d
140001f15:     	btq	%r11, %r14
140001f19:     	jae	0x140001f34 <.text+0xf34>
140001f1b:     	movq	%r13, %rbx
140001f1e:     	movq	%r10, %r12
140001f21:     	jmp	0x140001fa0 <.text+0xfa0>
140001f23:     	nopw	%cs:(%rax,%rax)
140001f30:     	xorl	%ebx, %ebx
140001f32:     	jmp	0x140001fa0 <.text+0xfa0>
140001f34:     	leaq	(%r10,%rdx), %r12
140001f38:     	movq	%r12, 0x20(%rax)
140001f3c:     	movq	$0x0, 0x30(%rax)
140001f44:     	leaq	(%rdi,%r12), %r11
140001f48:     	cmpq	%r9, %r11
140001f4b:     	jae	0x14000208c <.text+0x108c>
140001f51:     	addq	0x40(%rsp), %r10
140001f56:     	nopw	%cs:(%rax,%rax)
140001f60:     	movzbl	-0x1(%r8,%r10), %r11d
140001f66:     	btq	%r11, %r14
140001f6a:     	jb	0x140001f8f <.text+0xf8f>
140001f6c:     	addq	%rdx, %r12
140001f6f:     	movq	%r10, 0x20(%rax)
140001f73:     	movq	$0x0, 0x30(%rax)
140001f7b:     	leaq	(%r10,%rdx), %r11
140001f7f:     	decq	%r11
140001f82:     	addq	%rdx, %r10
140001f85:     	cmpq	%r9, %r11
140001f88:     	jb	0x140001f60 <.text+0xf60>
140001f8a:     	jmp	0x14000208c <.text+0x108c>
140001f8f:     	xorl	%ebx, %ebx
140001f91:     	xorl	%r13d, %r13d
140001f94:     	nopw	%cs:(%rax,%rax)
140001fa0:     	movq	0x30(%rsp), %r11
140001fa5:     	cmpq	%r13, %r11
140001fa8:     	movq	%r13, 0x28(%rsp)
140001fad:     	movq	%r13, %r10
140001fb0:     	cmovaq	%r11, %r10
140001fb4:     	movl	%ebp, %r15d
140001fb7:     	testb	%bpl, %bpl
140001fba:     	cmovneq	%r11, %r10
140001fbe:     	cmpq	%rdx, %r10
140001fc1:     	jae	0x140001ff1 <.text+0xff1>
140001fc3:     	leaq	(%r8,%r12), %r13
140001fc7:     	movq	%r10, %r11
140001fca:     	nopw	(%rax,%rax)
140001fd0:     	leaq	(%r12,%r11), %rbp
140001fd4:     	cmpq	%r9, %rbp
140001fd7:     	jae	0x1400020ee <.text+0x10ee>
140001fdd:     	movzbl	(%rsi,%r11), %ebp
140001fe2:     	cmpb	(%r13,%r11), %bpl
140001fe7:     	jne	0x14000204a <.text+0x104a>
140001fe9:     	incq	%r11
140001fec:     	cmpq	%r11, %rdx
140001fef:     	jne	0x140001fd0 <.text+0xfd0>
140001ff1:     	movq	0x30(%rsp), %r10
140001ff6:     	movl	%r15d, %ebp
140001ff9:     	nopl	(%rax)
140002000:     	cmpq	%r10, %rbx
140002003:     	jae	0x140002094 <.text+0x1094>
140002009:     	decq	%r10
14000200c:     	cmpq	%rdx, %r10
14000200f:     	jae	0x1400020c9 <.text+0x10c9>
140002015:     	leaq	(%r10,%r12), %r11
140002019:     	cmpq	%r9, %r11
14000201c:     	jae	0x1400020da <.text+0x10da>
140002022:     	movzbl	(%rsi,%r10), %r13d
140002027:     	cmpb	(%r8,%r11), %r13b
14000202b:     	je	0x140002000 <.text+0x1000>
14000202d:     	addq	0x50(%rsp), %r12
140002032:     	movq	%r12, 0x20(%rax)
140002036:     	movq	0x48(%rsp), %r11
14000203b:     	movq	%r12, %r10
14000203e:     	testb	%bpl, %bpl
140002041:     	movq	0x28(%rsp), %r13
140002046:     	jne	0x140002066 <.text+0x1066>
140002048:     	jmp	0x140002078 <.text+0x1078>
14000204a:     	addq	0x38(%rsp), %r12
14000204f:     	movq	%r12, %r10
140002052:     	addq	%r11, %r10
140002055:     	movq	%r10, 0x20(%rax)
140002059:     	movl	%r15d, %ebp
14000205c:     	testb	%r15b, %r15b
14000205f:     	je	0x140002075 <.text+0x1075>
140002061:     	movq	0x28(%rsp), %r13
140002066:     	leaq	(%rdi,%r10), %r11
14000206a:     	cmpq	%r9, %r11
14000206d:     	jb	0x140001ece <.text+0xece>
140002073:     	jmp	0x14000208c <.text+0x108c>
140002075:     	xorl	%r11d, %r11d
140002078:     	movq	%r11, 0x30(%rax)
14000207c:     	movq	%r11, %r13
14000207f:     	leaq	(%rdi,%r10), %r11
140002083:     	cmpq	%r9, %r11
140002086:     	jb	0x140001ece <.text+0xece>
14000208c:     	movq	%r9, 0x20(%rax)
140002090:     	xorl	%eax, %eax
140002092:     	jmp	0x1400020b5 <.text+0x10b5>
140002094:     	addq	%r12, %rdx
140002097:     	movq	%rdx, 0x20(%rax)
14000209b:     	testb	%bpl, %bpl
14000209e:     	jne	0x1400020a8 <.text+0x10a8>
1400020a0:     	movq	$0x0, 0x30(%rax)
1400020a8:     	movq	%r12, 0x8(%rcx)
1400020ac:     	movq	%rdx, 0x10(%rcx)
1400020b0:     	movl	$0x1, %eax
1400020b5:     	movq	%rax, (%rcx)
1400020b8:     	addq	$0x58, %rsp
1400020bc:     	popq	%rbx
1400020bd:     	popq	%rbp
1400020be:     	popq	%rdi
1400020bf:     	popq	%rsi
1400020c0:     	popq	%r12
1400020c2:     	popq	%r13
1400020c4:     	popq	%r14
1400020c6:     	popq	%r15
1400020c8:     	retq
1400020c9:     	leaq	0x18678(%rip), %r8      # 0x14001a748
1400020d0:     	movq	%r10, %rcx
1400020d3:     	callq	0x140019920 <.text+0x18920>
1400020d8:     	ud2
1400020da:     	leaq	0x1867f(%rip), %r8      # 0x14001a760
1400020e1:     	movq	%r11, %rcx
1400020e4:     	movq	%r9, %rdx
1400020e7:     	callq	0x140019920 <.text+0x18920>
1400020ec:     	ud2
1400020ee:     	addq	%r12, %r10
1400020f1:     	cmpq	%r10, %r9
1400020f4:     	cmovaq	%r9, %r10
1400020f8:     	leaq	0x18679(%rip), %r8      # 0x14001a778
1400020ff:     	movq	%r10, %rcx
140002102:     	movq	%r9, %rdx
140002105:     	callq	0x140019920 <.text+0x18920>
14000210a:     	ud2
14000210c:     	int3
14000210d:     	int3
14000210e:     	int3
14000210f:     	int3
140002110:     	subq	$0x48, %rsp
140002114:     	cmpq	$0x0, (%rcx)
140002118:     	jne	0x140002127 <.text+0x1127>
14000211a:     	movq	0x8(%rcx), %rax
14000211e:     	movq	0x10(%rcx), %rdx
140002122:     	addq	$0x48, %rsp
140002126:     	retq
140002127:     	movups	0x8(%rcx), %xmm0
14000212b:     	movaps	%xmm0, 0x30(%rsp)
140002130:     	leaq	0x1a421(%rip), %rax     # 0x14001c558
140002137:     	movq	%rax, 0x20(%rsp)
14000213c:     	leaq	0x1880d(%rip), %rcx     # 0x14001a950
140002143:     	leaq	0x18836(%rip), %r9      # 0x14001a980
14000214a:     	leaq	0x30(%rsp), %r8
14000214f:     	movl	$0x2b, %edx
140002154:     	callq	0x140019bb0 <.text+0x18bb0>
140002159:     	ud2
14000215b:     	int3
14000215c:     	int3
14000215d:     	int3
14000215e:     	int3
14000215f:     	int3
140002160:     	movq	(%rcx), %rcx
140002163:     	jmp	0x140015d70 <.text+0x14d70>
140002168:     	int3
140002169:     	int3
14000216a:     	int3
14000216b:     	int3
14000216c:     	int3
14000216d:     	int3
14000216e:     	int3
14000216f:     	int3
140002170:     	pushq	%r15
140002172:     	pushq	%r14
140002174:     	pushq	%r13
140002176:     	pushq	%r12
140002178:     	pushq	%rsi
140002179:     	pushq	%rdi
14000217a:     	pushq	%rbp
14000217b:     	pushq	%rbx
14000217c:     	subq	$0x148, %rsp            # imm = 0x148
140002183:     	movdqa	%xmm13, 0x130(%rsp)
14000218d:     	movdqa	%xmm12, 0x120(%rsp)
140002197:     	movdqa	%xmm11, 0x110(%rsp)
1400021a1:     	movdqa	%xmm10, 0x100(%rsp)
1400021ab:     	movdqa	%xmm9, 0xf0(%rsp)
1400021b5:     	movdqa	%xmm8, 0xe0(%rsp)
1400021bf:     	movdqa	%xmm7, 0xd0(%rsp)
1400021c8:     	movdqa	%xmm6, 0xc0(%rsp)
1400021d1:     	movq	%r8, %rdi
1400021d4:     	movq	%rdx, %rbx
1400021d7:     	movq	%rcx, %r12
1400021da:     	cmpq	%r9, %rdx
1400021dd:     	jae	0x14000222a <.text+0x122a>
1400021df:     	testq	%rbx, %rbx
1400021e2:     	je	0x1400027d1 <.text+0x17d1>
1400021e8:     	movq	%r9, %rsi
1400021eb:     	movzbl	(%r12), %eax
1400021f0:     	leaq	-0x1(%rbx), %r9
1400021f4:     	cmpq	$0x2, %rbx
1400021f8:     	jne	0x14000224d <.text+0x124d>
1400021fa:     	cmpq	$0x11, %rsi
1400021fe:     	jb	0x14000228f <.text+0x128f>
140002204:     	movzbl	%al, %eax
140002207:     	movd	%eax, %xmm0
14000220b:     	punpcklbw	%xmm0, %xmm0    # xmm0 = xmm0[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
14000220f:     	pshuflw	$0x0, %xmm0, %xmm0      # xmm0 = xmm0[0,0,0,0,4,5,6,7]
140002214:     	pshufd	$0x0, %xmm0, %xmm6      # xmm6 = xmm0[0,0,0,0]
140002219:     	movzbl	0x1(%r12), %ecx
14000221f:     	movl	$0x1, %r14d
140002225:     	jmp	0x140002360 <.text+0x1360>
14000222a:     	jne	0x140002245 <.text+0x1245>
14000222c:     	movq	%r12, %rcx
14000222f:     	movq	%rdi, %rdx
140002232:     	movq	%rbx, %r8
140002235:     	callq	0x140018bfd <.text+0x17bfd>
14000223a:     	testl	%eax, %eax
14000223c:     	sete	%r15b
140002240:     	jmp	0x14000260a <.text+0x160a>
140002245:     	xorl	%r15d, %r15d
140002248:     	jmp	0x14000260a <.text+0x160a>
14000224d:     	xorl	%edx, %edx
14000224f:     	movq	%rbx, %rcx
140002252:     	subq	$0x4, %rcx
140002256:     	cmovaeq	%rcx, %rdx
14000225a:     	movq	%r9, %r8
14000225d:     	nopl	(%rax)
140002260:     	leaq	0x1(%r8), %rcx
140002264:     	cmpq	%rcx, %rdx
140002267:     	jae	0x1400022da <.text+0x12da>
140002269:     	movq	%r8, %r14
14000226c:     	cmpq	%rbx, %r8
14000226f:     	jae	0x14000273e <.text+0x173e>
140002275:     	movzbl	(%r12,%r14), %ecx
14000227a:     	leaq	-0x1(%r14), %r8
14000227e:     	cmpb	%al, %cl
140002280:     	je	0x140002260 <.text+0x1260>
140002282:     	leaq	0xf(%rbx), %rdx
140002286:     	cmpq	%rsi, %rdx
140002289:     	jbe	0x14000234b <.text+0x134b>
14000228f:     	movq	%rdi, %rcx
140002292:     	movq	%r12, %rdx
140002295:     	movq	%rbx, %r8
140002298:     	callq	0x140018bfd <.text+0x17bfd>
14000229d:     	testl	%eax, %eax
14000229f:     	je	0x140002343 <.text+0x1343>
1400022a5:     	incq	%rdi
1400022a8:     	decq	%rsi
1400022ab:     	nopl	(%rax,%rax)
1400022b0:     	cmpq	%rbx, %rsi
1400022b3:     	setae	%r15b
1400022b7:     	jb	0x14000260a <.text+0x160a>
1400022bd:     	movq	%rdi, %rcx
1400022c0:     	movq	%r12, %rdx
1400022c3:     	movq	%rbx, %r8
1400022c6:     	callq	0x140018bfd <.text+0x17bfd>
1400022cb:     	incq	%rdi
1400022ce:     	decq	%rsi
1400022d1:     	testl	%eax, %eax
1400022d3:     	jne	0x1400022b0 <.text+0x12b0>
1400022d5:     	jmp	0x14000260a <.text+0x160a>
1400022da:     	movq	%rbx, 0x20(%rsp)
1400022df:     	leaq	0x40(%rsp), %rcx
1400022e4:     	movq	%rdi, %rdx
1400022e7:     	movq	%rsi, %r8
1400022ea:     	movq	%r12, %r9
1400022ed:     	callq	0x140016860 <.text+0x15860>
1400022f2:     	cmpq	$0x0, 0x40(%rsp)
1400022f8:     	je	0x1400025ca <.text+0x15ca>
1400022fe:     	leaq	0x48(%rsp), %rdx
140002303:     	cmpq	$-0x1, 0x78(%rsp)
140002309:     	movq	0x88(%rsp), %r8
140002311:     	movq	0x90(%rsp), %r9
140002319:     	movq	0x98(%rsp), %rax
140002321:     	movq	0xa0(%rsp), %rcx
140002329:     	je	0x1400025e1 <.text+0x15e1>
14000232f:     	movq	%rcx, 0x28(%rsp)
140002334:     	movq	%rax, 0x20(%rsp)
140002339:     	movb	$0x0, 0x30(%rsp)
14000233e:     	jmp	0x1400025f0 <.text+0x15f0>
140002343:     	movb	$0x1, %r15b
140002346:     	jmp	0x14000260a <.text+0x160a>
14000234b:     	movzbl	%al, %eax
14000234e:     	movd	%eax, %xmm0
140002352:     	punpcklbw	%xmm0, %xmm0    # xmm0 = xmm0[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140002356:     	pshuflw	$0x0, %xmm0, %xmm0      # xmm0 = xmm0[0,0,0,0,4,5,6,7]
14000235b:     	pshufd	$0x0, %xmm0, %xmm6      # xmm6 = xmm0[0,0,0,0]
140002360:     	movzbl	%cl, %eax
140002363:     	movd	%eax, %xmm0
140002367:     	punpcklbw	%xmm0, %xmm0    # xmm0 = xmm0[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
14000236b:     	pshuflw	$0x0, %xmm0, %xmm0      # xmm0 = xmm0[0,0,0,0,4,5,6,7]
140002370:     	pshufd	$0x0, %xmm0, %xmm7      # xmm7 = xmm0[0,0,0,0]
140002375:     	incq	%r12
140002378:     	movq	%rdi, 0x40(%rsp)
14000237d:     	movq	%rsi, 0x48(%rsp)
140002382:     	movq	%r12, 0x50(%rsp)
140002387:     	movq	%r9, 0x38(%rsp)
14000238c:     	movq	%r9, 0x58(%rsp)
140002391:     	leaq	0x3f(%rbx), %rax
140002395:     	cmpq	%rsi, %rax
140002398:     	jae	0x14000250c <.text+0x150c>
14000239e:     	leaq	0x7f(%rbx), %r13
1400023a2:     	leaq	(%r14,%rdi), %rbp
1400023a6:     	addq	$0x30, %rbp
1400023aa:     	xorl	%r12d, %r12d
1400023ad:     	xorl	%r15d, %r15d
1400023b0:     	movdqu	(%rdi,%r12), %xmm0
1400023b6:     	movdqu	0x10(%rdi,%r12), %xmm12
1400023bd:     	movdqu	0x20(%rdi,%r12), %xmm10
1400023c4:     	movdqu	0x30(%rdi,%r12), %xmm8
1400023cb:     	pcmpeqb	%xmm6, %xmm0
1400023cf:     	movdqu	-0x30(%rbp,%r12), %xmm1
1400023d6:     	movdqu	-0x20(%rbp,%r12), %xmm13
1400023dd:     	movdqu	-0x10(%rbp,%r12), %xmm11
1400023e4:     	movdqu	(%rbp,%r12), %xmm9
1400023eb:     	pcmpeqb	%xmm7, %xmm1
1400023ef:     	pand	%xmm0, %xmm1
1400023f3:     	pmovmskb	%xmm1, %r8d
1400023f8:     	testl	%r8d, %r8d
1400023fb:     	jne	0x140002474 <.text+0x1474>
1400023fd:     	pcmpeqb	%xmm6, %xmm12
140002402:     	pcmpeqb	%xmm7, %xmm13
140002407:     	pand	%xmm12, %xmm13
14000240c:     	pmovmskb	%xmm13, %r8d
140002411:     	testw	%r8w, %r8w
140002415:     	jne	0x140002495 <.text+0x1495>
140002417:     	pcmpeqb	%xmm6, %xmm10
14000241c:     	pcmpeqb	%xmm7, %xmm11
140002421:     	pand	%xmm10, %xmm11
140002426:     	pmovmskb	%xmm11, %r8d
14000242b:     	testw	%r8w, %r8w
14000242f:     	jne	0x1400024b8 <.text+0x14b8>
140002435:     	pcmpeqb	%xmm6, %xmm8
14000243a:     	pcmpeqb	%xmm7, %xmm9
14000243f:     	pand	%xmm8, %xmm9
140002444:     	pmovmskb	%xmm9, %r8d
140002449:     	testw	%r8w, %r8w
14000244d:     	jne	0x1400024db <.text+0x14db>
140002453:     	leaq	(%r12,%r13), %rax
140002457:     	addq	$0x40, %r12
14000245b:     	cmpq	%rsi, %rax
14000245e:     	jae	0x140002512 <.text+0x1512>
140002464:     	movl	%r15d, %eax
140002467:     	andb	$0x1, %al
140002469:     	je	0x1400023b0 <.text+0x13b0>
14000246f:     	jmp	0x140002512 <.text+0x1512>
140002474:     	movl	%r15d, %r9d
140002477:     	andb	$0x1, %r9b
14000247b:     	leaq	0x40(%rsp), %rcx
140002480:     	movq	%r12, %rdx
140002483:     	callq	0x140018cf0 <.text+0x17cf0>
140002488:     	orb	%r15b, %al
14000248b:     	andb	$0x1, %al
14000248d:     	movl	%eax, %r15d
140002490:     	jmp	0x1400023fd <.text+0x13fd>
140002495:     	leaq	0x10(%r12), %rdx
14000249a:     	movl	%r15d, %r9d
14000249d:     	andb	$0x1, %r9b
1400024a1:     	leaq	0x40(%rsp), %rcx
1400024a6:     	callq	0x140018cf0 <.text+0x17cf0>
1400024ab:     	orb	%r15b, %al
1400024ae:     	andb	$0x1, %al
1400024b0:     	movl	%eax, %r15d
1400024b3:     	jmp	0x140002417 <.text+0x1417>
1400024b8:     	leaq	0x20(%r12), %rdx
1400024bd:     	movl	%r15d, %r9d
1400024c0:     	andb	$0x1, %r9b
1400024c4:     	leaq	0x40(%rsp), %rcx
1400024c9:     	callq	0x140018cf0 <.text+0x17cf0>
1400024ce:     	orb	%r15b, %al
1400024d1:     	andb	$0x1, %al
1400024d3:     	movl	%eax, %r15d
1400024d6:     	jmp	0x140002435 <.text+0x1435>
1400024db:     	leaq	0x30(%r12), %rdx
1400024e0:     	movl	%r15d, %r9d
1400024e3:     	andb	$0x1, %r9b
1400024e7:     	leaq	0x40(%rsp), %rcx
1400024ec:     	callq	0x140018cf0 <.text+0x17cf0>
1400024f1:     	orb	%r15b, %al
1400024f4:     	andb	$0x1, %al
1400024f6:     	movl	%eax, %r15d
1400024f9:     	leaq	(%r12,%r13), %rax
1400024fd:     	addq	$0x40, %r12
140002501:     	cmpq	%rsi, %rax
140002504:     	jb	0x140002464 <.text+0x1464>
14000250a:     	jmp	0x140002512 <.text+0x1512>
14000250c:     	xorl	%r15d, %r15d
14000250f:     	xorl	%r12d, %r12d
140002512:     	leaq	(%rbx,%r12), %rax
140002516:     	addq	$0xf, %rax
14000251a:     	movl	%r15d, %r9d
14000251d:     	andb	$0x1, %r9b
140002521:     	cmpq	%rsi, %rax
140002524:     	jae	0x140002591 <.text+0x1591>
140002526:     	testb	%r9b, %r9b
140002529:     	jne	0x140002591 <.text+0x1591>
14000252b:     	addq	$0x1f, %rbx
14000252f:     	leaq	(%rdi,%r14), %rbp
140002533:     	leaq	0x40(%rsp), %r13
140002538:     	nopl	(%rax,%rax)
140002540:     	movdqu	(%rdi,%r12), %xmm0
140002546:     	movdqu	(%rbp,%r12), %xmm1
14000254d:     	pcmpeqb	%xmm6, %xmm0
140002551:     	pcmpeqb	%xmm7, %xmm1
140002555:     	pand	%xmm0, %xmm1
140002559:     	pmovmskb	%xmm1, %r8d
14000255e:     	testl	%r8d, %r8d
140002561:     	jne	0x14000257e <.text+0x157e>
140002563:     	leaq	(%rbx,%r12), %rax
140002567:     	movl	%r15d, %r9d
14000256a:     	andb	$0x1, %r9b
14000256e:     	cmpq	%rsi, %rax
140002571:     	jae	0x140002591 <.text+0x1591>
140002573:     	addq	$0x10, %r12
140002577:     	testb	%r9b, %r9b
14000257a:     	je	0x140002540 <.text+0x1540>
14000257c:     	jmp	0x140002591 <.text+0x1591>
14000257e:     	movq	%r13, %rcx
140002581:     	movq	%r12, %rdx
140002584:     	xorl	%r9d, %r9d
140002587:     	callq	0x140018cf0 <.text+0x17cf0>
14000258c:     	movl	%eax, %r15d
14000258f:     	jmp	0x140002563 <.text+0x1563>
140002591:     	subq	0x38(%rsp), %rsi
140002596:     	leaq	(%rdi,%rsi), %rax
14000259a:     	addq	$-0x10, %rax
14000259e:     	movdqu	-0x10(%rdi,%rsi), %xmm0
1400025a4:     	movdqu	(%r14,%rax), %xmm1
1400025aa:     	pcmpeqb	%xmm6, %xmm0
1400025ae:     	pcmpeqb	%xmm7, %xmm1
1400025b2:     	pand	%xmm0, %xmm1
1400025b6:     	pmovmskb	%xmm1, %r8d
1400025bb:     	testl	%r8d, %r8d
1400025be:     	jne	0x14000269d <.text+0x169d>
1400025c4:     	andb	$0x1, %r15b
1400025c8:     	jmp	0x14000260a <.text+0x160a>
1400025ca:     	cmpb	$0x0, 0x5a(%rsp)
1400025cf:     	je	0x140002667 <.text+0x1667>
1400025d5:     	xorl	%eax, %eax
1400025d7:     	movq	%rax, 0xa8(%rsp)
1400025df:     	jmp	0x1400025fd <.text+0x15fd>
1400025e1:     	movq	%rcx, 0x28(%rsp)
1400025e6:     	movq	%rax, 0x20(%rsp)
1400025eb:     	movb	$0x1, 0x30(%rsp)
1400025f0:     	leaq	0xa8(%rsp), %rcx
1400025f8:     	callq	0x140001e50 <.text+0xe50>
1400025fd:     	cmpq	$0x0, 0xa8(%rsp)
140002606:     	setne	%r15b
14000260a:     	movl	%r15d, %eax
14000260d:     	movaps	0xc0(%rsp), %xmm6
140002615:     	movaps	0xd0(%rsp), %xmm7
14000261d:     	movaps	0xe0(%rsp), %xmm8
140002626:     	movaps	0xf0(%rsp), %xmm9
14000262f:     	movaps	0x100(%rsp), %xmm10
140002638:     	movaps	0x110(%rsp), %xmm11
140002641:     	movaps	0x120(%rsp), %xmm12
14000264a:     	movaps	0x130(%rsp), %xmm13
140002653:     	addq	$0x148, %rsp            # imm = 0x148
14000265a:     	popq	%rbx
14000265b:     	popq	%rbp
14000265c:     	popq	%rdi
14000265d:     	popq	%rsi
14000265e:     	popq	%r12
140002660:     	popq	%r13
140002662:     	popq	%r14
140002664:     	popq	%r15
140002666:     	retq
140002667:     	movq	0x48(%rsp), %r8
14000266c:     	movq	0x88(%rsp), %rcx
140002674:     	movq	0x90(%rsp), %rdx
14000267c:     	movzbl	0x58(%rsp), %eax
140002681:     	movq	%rdx, %r9
140002684:     	testq	%r8, %r8
140002687:     	je	0x1400026c9 <.text+0x16c9>
140002689:     	movq	%rdx, %r9
14000268c:     	subq	%r8, %r9
14000268f:     	jbe	0x1400026c3 <.text+0x16c3>
140002691:     	cmpb	$-0x40, (%rcx,%r8)
140002696:     	jge	0x1400026c9 <.text+0x16c9>
140002698:     	jmp	0x1400027e3 <.text+0x17e3>
14000269d:     	addq	$-0x10, %rsi
1400026a1:     	testb	%r9b, %r9b
1400026a4:     	setne	%bl
1400026a7:     	leaq	0x40(%rsp), %rcx
1400026ac:     	movq	%rsi, %rdx
1400026af:     	callq	0x140018cf0 <.text+0x17cf0>
1400026b4:     	movl	%eax, %r15d
1400026b7:     	orb	%bl, %r15b
1400026ba:     	andb	$0x1, %r15b
1400026be:     	jmp	0x14000260a <.text+0x160a>
1400026c3:     	jne	0x1400027e3 <.text+0x17e3>
1400026c9:     	testq	%r9, %r9
1400026cc:     	je	0x140002729 <.text+0x1729>
1400026ce:     	movzbl	(%rcx,%r8), %r11d
1400026d3:     	movzbl	%r11b, %r9d
1400026d7:     	testb	%r9b, %r9b
1400026da:     	jns	0x140002759 <.text+0x1759>
1400026dc:     	movl	%r9d, %r10d
1400026df:     	andl	$0x1f, %r10d
1400026e3:     	movzbl	0x1(%rcx,%r8), %esi
1400026e9:     	andl	$0x3f, %esi
1400026ec:     	cmpb	$-0x20, %r9b
1400026f0:     	jb	0x140002732 <.text+0x1732>
1400026f2:     	movzbl	0x2(%rcx,%r8), %r9d
1400026f8:     	shll	$0x6, %esi
1400026fb:     	andl	$0x3f, %r9d
1400026ff:     	orl	%esi, %r9d
140002702:     	cmpb	$-0x10, %r11b
140002706:     	jb	0x140002752 <.text+0x1752>
140002708:     	movzbl	0x3(%rcx,%r8), %r11d
14000270e:     	andl	$0x7, %r10d
140002712:     	shll	$0x12, %r10d
140002716:     	shll	$0x6, %r9d
14000271a:     	andl	$0x3f, %r11d
14000271e:     	orl	%r9d, %r11d
140002721:     	orl	%r10d, %r11d
140002724:     	movl	%r11d, %r9d
140002727:     	jmp	0x140002759 <.text+0x1759>
140002729:     	testb	%al, %al
14000272b:     	jne	0x14000275d <.text+0x175d>
14000272d:     	jmp	0x1400025d5 <.text+0x15d5>
140002732:     	shll	$0x6, %r10d
140002736:     	orl	%esi, %r10d
140002739:     	movl	%r10d, %r9d
14000273c:     	jmp	0x140002759 <.text+0x1759>
14000273e:     	leaq	0x17feb(%rip), %r8      # 0x14001a730
140002745:     	movq	%r14, %rcx
140002748:     	movq	%rbx, %rdx
14000274b:     	callq	0x140019920 <.text+0x18920>
140002750:     	ud2
140002752:     	shll	$0xc, %r10d
140002756:     	orl	%r10d, %r9d
140002759:     	testb	%al, %al
14000275b:     	je	0x14000276f <.text+0x176f>
14000275d:     	movl	$0x1, %eax
140002762:     	movq	%rax, 0xa8(%rsp)
14000276a:     	jmp	0x1400025fd <.text+0x15fd>
14000276f:     	cmpl	$0x110000, %r9d         # imm = 0x110000
140002776:     	je	0x1400025d5 <.text+0x15d5>
14000277c:     	movl	$0x1, %eax
140002781:     	cmpl	$0x80, %r9d
140002788:     	jb	0x1400027a8 <.text+0x17a8>
14000278a:     	movl	$0x2, %eax
14000278f:     	cmpl	$0x800, %r9d            # imm = 0x800
140002796:     	jb	0x1400027a8 <.text+0x17a8>
140002798:     	cmpl	$0x10000, %r9d          # imm = 0x10000
14000279f:     	movl	$0x4, %eax
1400027a4:     	sbbq	$0x0, %rax
1400027a8:     	addq	%rax, %r8
1400027ab:     	je	0x1400027be <.text+0x17be>
1400027ad:     	movq	%rdx, %rax
1400027b0:     	subq	%r8, %rax
1400027b3:     	jbe	0x1400027c3 <.text+0x17c3>
1400027b5:     	cmpb	$-0x41, (%rcx,%r8)
1400027ba:     	jg	0x1400027c5 <.text+0x17c5>
1400027bc:     	jmp	0x1400027e3 <.text+0x17e3>
1400027be:     	movq	%rdx, %rax
1400027c1:     	jmp	0x1400027c5 <.text+0x17c5>
1400027c3:     	jne	0x1400027e3 <.text+0x17e3>
1400027c5:     	testq	%rax, %rax
1400027c8:     	je	0x14000275d <.text+0x175d>
1400027ca:     	cmpb	$0x0, (%rcx,%r8)
1400027cf:     	jmp	0x14000275d <.text+0x175d>
1400027d1:     	leaq	0x17f40(%rip), %r8      # 0x14001a718
1400027d8:     	xorl	%ecx, %ecx
1400027da:     	xorl	%edx, %edx
1400027dc:     	callq	0x140019920 <.text+0x18920>
1400027e1:     	ud2
1400027e3:     	leaq	0x18496(%rip), %rax     # 0x14001ac80
1400027ea:     	movq	%rax, 0x20(%rsp)
1400027ef:     	movq	%rdx, %r9
1400027f2:     	callq	0x140019e10 <.text+0x18e10>
1400027f7:     	ud2
1400027f9:     	int3
1400027fa:     	int3
1400027fb:     	int3
1400027fc:     	int3
1400027fd:     	int3
1400027fe:     	int3
1400027ff:     	int3
140002800:     	subq	$0x28, %rsp
140002804:     	callq	0x140002950 <.text+0x1950>
140002809:     	xorl	%eax, %eax
14000280b:     	addq	$0x28, %rsp
14000280f:     	retq
140002810:     	pushq	%r14
140002812:     	pushq	%rsi
140002813:     	pushq	%rdi
140002814:     	pushq	%rbx
140002815:     	subq	$0x28, %rsp
140002819:     	movq	%r8, %rsi
14000281c:     	movq	%rdx, %rbx
14000281f:     	movq	%rcx, %rdi
140002822:     	movq	0x8(%rcx), %rax
140002826:     	movq	0x10(%rcx), %r14
14000282a:     	subq	%r14, %rax
14000282d:     	cmpq	%r8, %rax
140002830:     	jb	0x140002856 <.text+0x1856>
140002832:     	movq	(%rdi), %rcx
140002835:     	addq	%r14, %rcx
140002838:     	movq	%rbx, %rdx
14000283b:     	movq	%rsi, %r8
14000283e:     	callq	0x140018beb <.text+0x17beb>
140002843:     	addq	%rsi, %r14
140002846:     	movq	%r14, 0x10(%rdi)
14000284a:     	xorl	%eax, %eax
14000284c:     	addq	$0x28, %rsp
140002850:     	popq	%rbx
140002851:     	popq	%rdi
140002852:     	popq	%rsi
140002853:     	popq	%r14
140002855:     	retq
140002856:     	movq	%rdi, %rcx
140002859:     	movq	%r14, %rdx
14000285c:     	movq	%rsi, %r8
14000285f:     	callq	0x140018e60 <.text+0x17e60>
140002864:     	movq	0x10(%rdi), %r14
140002868:     	jmp	0x140002832 <.text+0x1832>
14000286a:     	int3
14000286b:     	int3
14000286c:     	int3
14000286d:     	int3
14000286e:     	int3
14000286f:     	int3
140002870:     	pushq	%rsi
140002871:     	subq	$0x20, %rsp
140002875:     	movq	(%rcx), %rsi
140002878:     	movq	0x28(%rsi), %rdx
14000287c:     	testq	%rdx, %rdx
14000287f:     	je	0x140002890 <.text+0x1890>
140002881:     	movq	0x20(%rsi), %rcx
140002885:     	movl	$0x1, %r8d
14000288b:     	callq	0x140001350 <.text+0x350>
140002890:     	cmpq	$-0x1, %rsi
140002894:     	je	0x1400028b5 <.text+0x18b5>
140002896:     	lock
140002897:     	decq	0x8(%rsi)
14000289b:     	jne	0x1400028b5 <.text+0x18b5>
14000289d:     	movl	$0x38, %edx
1400028a2:     	movl	$0x8, %r8d
1400028a8:     	movq	%rsi, %rcx
1400028ab:     	addq	$0x20, %rsp
1400028af:     	popq	%rsi
1400028b0:     	jmp	0x140001350 <.text+0x350>
1400028b5:     	nop
1400028b6:     	addq	$0x20, %rsp
1400028ba:     	popq	%rsi
1400028bb:     	retq
1400028bc:     	int3
1400028bd:     	int3
1400028be:     	int3
1400028bf:     	int3
1400028c0:     	movq	(%rcx), %rcx
1400028c3:     	cmpq	$-0x1, %rcx
1400028c7:     	je	0x1400028e0 <.text+0x18e0>
1400028c9:     	lock
1400028ca:     	decq	0x8(%rcx)
1400028ce:     	jne	0x1400028e0 <.text+0x18e0>
1400028d0:     	movl	$0x30, %edx
1400028d5:     	movl	$0x8, %r8d
1400028db:     	jmp	0x140001350 <.text+0x350>
1400028e0:     	retq
1400028e1:     	int3
1400028e2:     	int3
1400028e3:     	int3
1400028e4:     	int3
1400028e5:     	int3
1400028e6:     	int3
1400028e7:     	int3
1400028e8:     	int3
1400028e9:     	int3
1400028ea:     	int3
1400028eb:     	int3
1400028ec:     	int3
1400028ed:     	int3
1400028ee:     	int3
1400028ef:     	int3
1400028f0:     	pushq	%rsi
1400028f1:     	subq	$0x20, %rsp
1400028f5:     	movq	(%rcx), %rsi
1400028f8:     	movq	0x18(%rsi), %rcx
1400028fc:     	testq	%rcx, %rcx
1400028ff:     	je	0x140002918 <.text+0x1918>
140002901:     	movq	0x20(%rsi), %rdx
140002905:     	movb	$0x0, (%rcx)
140002908:     	testq	%rdx, %rdx
14000290b:     	je	0x140002918 <.text+0x1918>
14000290d:     	movl	$0x1, %r8d
140002913:     	callq	0x140001350 <.text+0x350>
140002918:     	cmpq	$-0x1, %rsi
14000291c:     	je	0x14000293d <.text+0x193d>
14000291e:     	lock
14000291f:     	decq	0x8(%rsi)
140002923:     	jne	0x14000293d <.text+0x193d>
140002925:     	movl	$0x30, %edx
14000292a:     	movl	$0x8, %r8d
140002930:     	movq	%rsi, %rcx
140002933:     	addq	$0x20, %rsp
140002937:     	popq	%rsi
140002938:     	jmp	0x140001350 <.text+0x350>
14000293d:     	nop
14000293e:     	addq	$0x20, %rsp
140002942:     	popq	%rsi
140002943:     	retq
140002944:     	int3
140002945:     	int3
140002946:     	int3
140002947:     	int3
140002948:     	int3
140002949:     	int3
14000294a:     	int3
14000294b:     	int3
14000294c:     	int3
14000294d:     	int3
14000294e:     	int3
14000294f:     	int3
140002950:     	pushq	%rsi
140002951:     	pushq	%rdi
140002952:     	pushq	%rbx
140002953:     	subq	$0x30, %rsp
140002957:     	movl	%edx, %edi
140002959:     	movq	%rcx, %rsi
14000295c:     	cmpl	$0x80, %edx
140002962:     	jae	0x14000298d <.text+0x198d>
140002964:     	movq	0x10(%rsi), %rdx
140002968:     	cmpq	0x8(%rsi), %rdx
14000296c:     	jne	0x14000297a <.text+0x197a>
14000296e:     	movq	%rsi, %rcx
140002971:     	callq	0x140002c80 <.text+0x1c80>
140002976:     	movq	0x10(%rsi), %rdx
14000297a:     	movq	(%rsi), %rax
14000297d:     	movb	%dil, (%rax,%rdx)
140002981:     	incq	%rdx
140002984:     	movq	%rdx, 0x10(%rsi)
140002988:     	jmp	0x140002a4f <.text+0x1a4f>
14000298d:     	movl	$0x0, 0x2c(%rsp)
140002995:     	movl	%edi, %eax
140002997:     	cmpl	$0x800, %edi            # imm = 0x800
14000299d:     	jae	0x1400029bc <.text+0x19bc>
14000299f:     	shrl	$0x6, %eax
1400029a2:     	orb	$-0x40, %al
1400029a4:     	movb	%al, 0x2c(%rsp)
1400029a8:     	andb	$0x3f, %dil
1400029ac:     	orb	$-0x80, %dil
1400029b0:     	movb	%dil, 0x2d(%rsp)
1400029b5:     	movl	$0x2, %edi
1400029ba:     	jmp	0x140002a25 <.text+0x1a25>
1400029bc:     	cmpl	$0xffff, %edi           # imm = 0xFFFF
1400029c2:     	ja	0x1400029ee <.text+0x19ee>
1400029c4:     	shrl	$0xc, %eax
1400029c7:     	orb	$-0x20, %al
1400029c9:     	movb	%al, 0x2c(%rsp)
1400029cd:     	movl	%edi, %eax
1400029cf:     	shrl	$0x6, %eax
1400029d2:     	andb	$0x3f, %al
1400029d4:     	orb	$-0x80, %al
1400029d6:     	movb	%al, 0x2d(%rsp)
1400029da:     	andb	$0x3f, %dil
1400029de:     	orb	$-0x80, %dil
1400029e2:     	movb	%dil, 0x2e(%rsp)
1400029e7:     	movl	$0x3, %edi
1400029ec:     	jmp	0x140002a25 <.text+0x1a25>
1400029ee:     	shrl	$0x12, %eax
1400029f1:     	andb	$0x7, %al
1400029f3:     	orb	$-0x10, %al
1400029f5:     	movb	%al, 0x2c(%rsp)
1400029f9:     	movl	%edi, %eax
1400029fb:     	shrl	$0xc, %eax
1400029fe:     	andb	$0x3f, %al
140002a00:     	orb	$-0x80, %al
140002a02:     	movb	%al, 0x2d(%rsp)
140002a06:     	movl	%edi, %eax
140002a08:     	shrl	$0x6, %eax
140002a0b:     	andb	$0x3f, %al
140002a0d:     	orb	$-0x80, %al
140002a0f:     	movb	%al, 0x2e(%rsp)
140002a13:     	andb	$0x3f, %dil
140002a17:     	orb	$-0x80, %dil
140002a1b:     	movb	%dil, 0x2f(%rsp)
140002a20:     	movl	$0x4, %edi
140002a25:     	movq	0x8(%rsi), %rax
140002a29:     	movq	0x10(%rsi), %rbx
140002a2d:     	subq	%rbx, %rax
140002a30:     	cmpq	%rdi, %rax
140002a33:     	jb	0x140002a57 <.text+0x1a57>
140002a35:     	movq	(%rsi), %rcx
140002a38:     	addq	%rbx, %rcx
140002a3b:     	leaq	0x2c(%rsp), %rdx
140002a40:     	movq	%rdi, %r8
140002a43:     	callq	0x140018beb <.text+0x17beb>
140002a48:     	addq	%rdi, %rbx
140002a4b:     	movq	%rbx, 0x10(%rsi)
140002a4f:     	addq	$0x30, %rsp
140002a53:     	popq	%rbx
140002a54:     	popq	%rdi
140002a55:     	popq	%rsi
140002a56:     	retq
140002a57:     	movq	%rsi, %rcx
140002a5a:     	movq	%rbx, %rdx
140002a5d:     	movq	%rdi, %r8
140002a60:     	callq	0x140018e60 <.text+0x17e60>
140002a65:     	movq	0x10(%rsi), %rbx
140002a69:     	jmp	0x140002a35 <.text+0x1a35>
140002a6b:     	int3
140002a6c:     	int3
140002a6d:     	int3
140002a6e:     	int3
140002a6f:     	int3
140002a70:     	pushq	%rsi
140002a71:     	pushq	%rdi
140002a72:     	pushq	%rbx
140002a73:     	subq	$0x20, %rsp
140002a77:     	movq	%r8, %rsi
140002a7a:     	movq	%rcx, %rdi
140002a7d:     	testq	%rdx, %rdx
140002a80:     	je	0x140002ad2 <.text+0x1ad2>
140002a82:     	movq	%rdx, %rbx
140002a85:     	cmpq	$0x0, 0x8(%r9)
140002a8a:     	je	0x140002aae <.text+0x1aae>
140002a8c:     	movq	0x10(%r9), %rdx
140002a90:     	testq	%rdx, %rdx
140002a93:     	je	0x140002aae <.text+0x1aae>
140002a95:     	movq	(%r9), %rcx
140002a98:     	movq	%rbx, %r8
140002a9b:     	movq	%rsi, %r9
140002a9e:     	callq	0x140001360 <.text+0x360>
140002aa3:     	testq	%rax, %rax
140002aa6:     	jne	0x140002aca <.text+0x1aca>
140002aa8:     	movq	%rbx, 0x8(%rdi)
140002aac:     	jmp	0x140002ada <.text+0x1ada>
140002aae:     	testq	%rsi, %rsi
140002ab1:     	je	0x140002aee <.text+0x1aee>
140002ab3:     	movzbl	0x20747(%rip), %eax     # 0x140023201
140002aba:     	movq	%rsi, %rcx
140002abd:     	movq	%rbx, %rdx
140002ac0:     	callq	0x140001340 <.text+0x340>
140002ac5:     	testq	%rax, %rax
140002ac8:     	je	0x140002aa8 <.text+0x1aa8>
140002aca:     	movq	%rax, 0x8(%rdi)
140002ace:     	xorl	%eax, %eax
140002ad0:     	jmp	0x140002adf <.text+0x1adf>
140002ad2:     	movq	$0x0, 0x8(%rdi)
140002ada:     	movl	$0x1, %eax
140002adf:     	movq	%rsi, 0x10(%rdi)
140002ae3:     	movq	%rax, (%rdi)
140002ae6:     	addq	$0x20, %rsp
140002aea:     	popq	%rbx
140002aeb:     	popq	%rdi
140002aec:     	popq	%rsi
140002aed:     	retq
140002aee:     	movq	%rbx, %rax
140002af1:     	testq	%rax, %rax
140002af4:     	jne	0x140002aca <.text+0x1aca>
140002af6:     	jmp	0x140002aa8 <.text+0x1aa8>
140002af8:     	int3
140002af9:     	int3
140002afa:     	int3
140002afb:     	int3
140002afc:     	int3
140002afd:     	int3
140002afe:     	int3
140002aff:     	int3
140002b00:     	pushq	%rsi
140002b01:     	pushq	%rdi
140002b02:     	subq	$0x58, %rsp
140002b06:     	incq	%rdx
140002b09:     	je	0x140002b97 <.text+0x1b97>
140002b0f:     	movq	%rcx, %rsi
140002b12:     	movq	0x8(%rcx), %rcx
140002b16:     	leaq	(%rcx,%rcx), %rax
140002b1a:     	cmpq	%rdx, %rax
140002b1d:     	cmovaq	%rax, %rdx
140002b21:     	cmpq	$0x5, %rdx
140002b25:     	movl	$0x4, %edi
140002b2a:     	cmovaeq	%rdx, %rdi
140002b2e:     	xorl	%edx, %edx
140002b30:     	movq	%rdi, %r8
140002b33:     	shrq	$0x3e, %r8
140002b37:     	sete	%dl
140002b3a:     	leaq	(%rdi,%rdi), %r8
140002b3e:     	addq	%rdx, %rdx
140002b41:     	testq	%rcx, %rcx
140002b44:     	je	0x140002b5e <.text+0x1b5e>
140002b46:     	movq	(%rsi), %rcx
140002b49:     	movq	%rcx, 0x28(%rsp)
140002b4e:     	movq	$0x2, 0x30(%rsp)
140002b57:     	movq	%rax, 0x38(%rsp)
140002b5c:     	jmp	0x140002b67 <.text+0x1b67>
140002b5e:     	movq	$0x0, 0x30(%rsp)
140002b67:     	leaq	0x40(%rsp), %rcx
140002b6c:     	leaq	0x28(%rsp), %r9
140002b71:     	callq	0x140002a70 <.text+0x1a70>
140002b76:     	cmpq	$0x0, 0x40(%rsp)
140002b7c:     	movq	0x48(%rsp), %rcx
140002b81:     	je	0x140002b9e <.text+0x1b9e>
140002b83:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140002b8d:     	cmpq	%rax, %rcx
140002b90:     	je	0x140002ba5 <.text+0x1ba5>
140002b92:     	testq	%rcx, %rcx
140002b95:     	jne	0x140002bac <.text+0x1bac>
140002b97:     	callq	0x140013200 <.text+0x12200>
140002b9c:     	ud2
140002b9e:     	movq	%rcx, (%rsi)
140002ba1:     	movq	%rdi, 0x8(%rsi)
140002ba5:     	addq	$0x58, %rsp
140002ba9:     	popq	%rdi
140002baa:     	popq	%rsi
140002bab:     	retq
140002bac:     	movq	0x50(%rsp), %rdx
140002bb1:     	callq	0x1400196e0 <.text+0x186e0>
140002bb6:     	ud2
140002bb8:     	int3
140002bb9:     	int3
140002bba:     	int3
140002bbb:     	int3
140002bbc:     	int3
140002bbd:     	int3
140002bbe:     	int3
140002bbf:     	int3
140002bc0:     	pushq	%rsi
140002bc1:     	pushq	%rdi
140002bc2:     	subq	$0x58, %rsp
140002bc6:     	incq	%rdx
140002bc9:     	je	0x140002c5f <.text+0x1c5f>
140002bcf:     	movq	%rcx, %rsi
140002bd2:     	movq	0x8(%rcx), %rax
140002bd6:     	leaq	(%rax,%rax), %rcx
140002bda:     	cmpq	%rdx, %rcx
140002bdd:     	cmovaq	%rcx, %rdx
140002be1:     	cmpq	$0x5, %rdx
140002be5:     	movl	$0x4, %edi
140002bea:     	cmovaeq	%rdx, %rdi
140002bee:     	xorl	%edx, %edx
140002bf0:     	movq	%rdi, %rcx
140002bf3:     	shrq	$0x3b, %rcx
140002bf7:     	sete	%dl
140002bfa:     	movq	%rdi, %r8
140002bfd:     	shlq	$0x4, %r8
140002c01:     	shlq	$0x3, %rdx
140002c05:     	testq	%rax, %rax
140002c08:     	je	0x140002c26 <.text+0x1c26>
140002c0a:     	movq	(%rsi), %rcx
140002c0d:     	shlq	$0x4, %rax
140002c11:     	movq	%rcx, 0x28(%rsp)
140002c16:     	movq	$0x8, 0x30(%rsp)
140002c1f:     	movq	%rax, 0x38(%rsp)
140002c24:     	jmp	0x140002c2f <.text+0x1c2f>
140002c26:     	movq	$0x0, 0x30(%rsp)
140002c2f:     	leaq	0x40(%rsp), %rcx
140002c34:     	leaq	0x28(%rsp), %r9
140002c39:     	callq	0x140002a70 <.text+0x1a70>
140002c3e:     	cmpq	$0x0, 0x40(%rsp)
140002c44:     	movq	0x48(%rsp), %rcx
140002c49:     	je	0x140002c66 <.text+0x1c66>
140002c4b:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140002c55:     	cmpq	%rax, %rcx
140002c58:     	je	0x140002c6d <.text+0x1c6d>
140002c5a:     	testq	%rcx, %rcx
140002c5d:     	jne	0x140002c74 <.text+0x1c74>
140002c5f:     	callq	0x140013200 <.text+0x12200>
140002c64:     	ud2
140002c66:     	movq	%rcx, (%rsi)
140002c69:     	movq	%rdi, 0x8(%rsi)
140002c6d:     	addq	$0x58, %rsp
140002c71:     	popq	%rdi
140002c72:     	popq	%rsi
140002c73:     	retq
140002c74:     	movq	0x50(%rsp), %rdx
140002c79:     	callq	0x1400196e0 <.text+0x186e0>
140002c7e:     	ud2
140002c80:     	pushq	%rsi
140002c81:     	pushq	%rdi
140002c82:     	subq	$0x58, %rsp
140002c86:     	incq	%rdx
140002c89:     	je	0x140002d11 <.text+0x1d11>
140002c8f:     	movq	%rcx, %rsi
140002c92:     	movq	0x8(%rcx), %rax
140002c96:     	leaq	(%rax,%rax), %rcx
140002c9a:     	cmpq	%rdx, %rcx
140002c9d:     	cmovaq	%rcx, %rdx
140002ca1:     	cmpq	$0x9, %rdx
140002ca5:     	movl	$0x8, %edi
140002caa:     	cmovaeq	%rdx, %rdi
140002cae:     	movq	%rdi, %rdx
140002cb1:     	notq	%rdx
140002cb4:     	shrq	$0x3f, %rdx
140002cb8:     	testq	%rax, %rax
140002cbb:     	je	0x140002cd5 <.text+0x1cd5>
140002cbd:     	movq	(%rsi), %rcx
140002cc0:     	movq	%rcx, 0x28(%rsp)
140002cc5:     	movq	$0x1, 0x30(%rsp)
140002cce:     	movq	%rax, 0x38(%rsp)
140002cd3:     	jmp	0x140002cde <.text+0x1cde>
140002cd5:     	movq	$0x0, 0x30(%rsp)
140002cde:     	leaq	0x40(%rsp), %rcx
140002ce3:     	leaq	0x28(%rsp), %r9
140002ce8:     	movq	%rdi, %r8
140002ceb:     	callq	0x140002a70 <.text+0x1a70>
140002cf0:     	cmpq	$0x0, 0x40(%rsp)
140002cf6:     	movq	0x48(%rsp), %rcx
140002cfb:     	je	0x140002d18 <.text+0x1d18>
140002cfd:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140002d07:     	cmpq	%rax, %rcx
140002d0a:     	je	0x140002d1f <.text+0x1d1f>
140002d0c:     	testq	%rcx, %rcx
140002d0f:     	jne	0x140002d26 <.text+0x1d26>
140002d11:     	callq	0x140013200 <.text+0x12200>
140002d16:     	ud2
140002d18:     	movq	%rcx, (%rsi)
140002d1b:     	movq	%rdi, 0x8(%rsi)
140002d1f:     	addq	$0x58, %rsp
140002d23:     	popq	%rdi
140002d24:     	popq	%rsi
140002d25:     	retq
140002d26:     	movq	0x50(%rsp), %rdx
140002d2b:     	callq	0x1400196e0 <.text+0x186e0>
140002d30:     	ud2
140002d32:     	int3
140002d33:     	int3
140002d34:     	int3
140002d35:     	int3
140002d36:     	int3
140002d37:     	int3
140002d38:     	int3
140002d39:     	int3
140002d3a:     	int3
140002d3b:     	int3
140002d3c:     	int3
140002d3d:     	int3
140002d3e:     	int3
140002d3f:     	int3
140002d40:     	movq	%rdx, %r8
140002d43:     	movq	(%rcx), %rax
140002d46:     	movq	0x10(%rcx), %rdx
140002d4a:     	movq	%rax, %rcx
140002d4d:     	jmp	0x140015b40 <.text+0x14b40>
140002d52:     	int3
140002d53:     	int3
140002d54:     	int3
140002d55:     	int3
140002d56:     	int3
140002d57:     	int3
140002d58:     	int3
140002d59:     	int3
140002d5a:     	int3
140002d5b:     	int3
140002d5c:     	int3
140002d5d:     	int3
140002d5e:     	int3
140002d5f:     	int3
140002d60:     	subq	$0x68, %rsp
140002d64:     	movq	%rdx, %rax
140002d67:     	leaq	0x8(%rcx), %rdx
140002d6b:     	movq	%rdx, 0x60(%rsp)
140002d70:     	leaq	0x17dd9(%rip), %rdx     # 0x14001ab50
140002d77:     	movq	%rdx, 0x50(%rsp)
140002d7c:     	leaq	0x60(%rsp), %rdx
140002d81:     	movq	%rdx, 0x48(%rsp)
140002d86:     	leaq	0x17db7(%rip), %rdx     # 0x14001ab44
140002d8d:     	movq	%rdx, 0x38(%rsp)
140002d92:     	leaq	0x17d57(%rip), %rdx     # 0x14001aaf0
140002d99:     	movq	%rdx, 0x30(%rsp)
140002d9e:     	movq	%rcx, 0x28(%rsp)
140002da3:     	movq	$0x9, 0x40(%rsp)
140002dac:     	movq	$0xb, 0x20(%rsp)
140002db5:     	leaq	0x17d74(%rip), %rdx     # 0x14001ab30
140002dbc:     	leaq	0x17d76(%rip), %r9      # 0x14001ab39
140002dc3:     	movl	$0x9, %r8d
140002dc9:     	movq	%rax, %rcx
140002dcc:     	callq	0x140015470 <.text+0x14470>
140002dd1:     	nop
140002dd2:     	addq	$0x68, %rsp
140002dd6:     	retq
140002dd7:     	int3
140002dd8:     	int3
140002dd9:     	int3
140002dda:     	int3
140002ddb:     	int3
140002ddc:     	int3
140002ddd:     	int3
140002dde:     	int3
140002ddf:     	int3
140002de0:     	subq	$0x38, %rsp
140002de4:     	movq	%rdx, %rax
140002de7:     	cmpq	$0x0, (%rcx)
140002deb:     	je	0x140002e12 <.text+0x1e12>
140002ded:     	movq	%rcx, 0x30(%rsp)
140002df2:     	leaq	0x17da7(%rip), %rcx     # 0x14001aba0
140002df9:     	movq	%rcx, 0x20(%rsp)
140002dfe:     	leaq	0x17d95(%rip), %rdx     # 0x14001ab9a
140002e05:     	leaq	0x30(%rsp), %r9
140002e0a:     	movl	$0x3, %r8d
140002e10:     	jmp	0x140002e35 <.text+0x1e35>
140002e12:     	movq	%rcx, 0x30(%rsp)
140002e17:     	leaq	0x17d5a(%rip), %rcx     # 0x14001ab78
140002e1e:     	movq	%rcx, 0x20(%rsp)
140002e23:     	leaq	0x17d6e(%rip), %rdx     # 0x14001ab98
140002e2a:     	leaq	0x30(%rsp), %r9
140002e2f:     	movl	$0x2, %r8d
140002e35:     	movq	%rax, %rcx
140002e38:     	callq	0x140015570 <.text+0x14570>
140002e3d:     	nop
140002e3e:     	addq	$0x38, %rsp
140002e42:     	retq
140002e43:     	int3
140002e44:     	int3
140002e45:     	int3
140002e46:     	int3
140002e47:     	int3
140002e48:     	int3
140002e49:     	int3
140002e4a:     	int3
140002e4b:     	int3
140002e4c:     	int3
140002e4d:     	int3
140002e4e:     	int3
140002e4f:     	int3
140002e50:     	pushq	%r15
140002e52:     	pushq	%r14
140002e54:     	pushq	%r13
140002e56:     	pushq	%r12
140002e58:     	pushq	%rsi
140002e59:     	pushq	%rdi
140002e5a:     	pushq	%rbp
140002e5b:     	pushq	%rbx
140002e5c:     	subq	$0x28, %rsp
140002e60:     	movq	%rdx, %rsi
140002e63:     	movq	%rcx, %rdi
140002e66:     	movzwl	0x10(%rdx), %r12d
140002e6b:     	movq	(%rdx), %r13
140002e6e:     	movq	0x8(%rdx), %r14
140002e72:     	movq	$-0x1, %r15
140002e79:     	jmp	0x140002ea9 <.text+0x1ea9>
140002e7b:     	shll	$0x6, %ecx
140002e7e:     	orl	%r8d, %ecx
140002e81:     	movl	%ecx, %r12d
140002e84:     	xorl	%ebp, %ebp
140002e86:     	movq	%rax, %r13
140002e89:     	movq	0x10(%rdi), %rbx
140002e8d:     	cmpq	0x8(%rdi), %rbx
140002e91:     	je	0x140002f92 <.text+0x1f92>
140002e97:     	movq	(%rdi), %rax
140002e9a:     	movw	%r12w, (%rax,%rbx,2)
140002e9f:     	incq	%rbx
140002ea2:     	movq	%rbx, 0x10(%rdi)
140002ea6:     	movl	%ebp, %r12d
140002ea9:     	testw	%r12w, %r12w
140002ead:     	jne	0x140002f40 <.text+0x1f40>
140002eb3:     	cmpq	%r14, %r13
140002eb6:     	je	0x140002fc0 <.text+0x1fc0>
140002ebc:     	leaq	0x1(%r13), %rax
140002ec0:     	movq	%rax, (%rsi)
140002ec3:     	movzbl	(%r13), %edx
140002ec8:     	movzbl	%dl, %r12d
140002ecc:     	testb	%r12b, %r12b
140002ecf:     	jns	0x140002e84 <.text+0x1e84>
140002ed1:     	movl	%r12d, %ecx
140002ed4:     	andl	$0x1f, %ecx
140002ed7:     	leaq	0x2(%r13), %rax
140002edb:     	movq	%rax, (%rsi)
140002ede:     	movzbl	0x1(%r13), %r8d
140002ee3:     	andl	$0x3f, %r8d
140002ee7:     	cmpb	$-0x21, %r12b
140002eeb:     	jbe	0x140002e7b <.text+0x1e7b>
140002eed:     	leaq	0x3(%r13), %rax
140002ef1:     	movq	%rax, (%rsi)
140002ef4:     	movzbl	0x2(%r13), %r12d
140002ef9:     	shll	$0x6, %r8d
140002efd:     	andl	$0x3f, %r12d
140002f01:     	orl	%r8d, %r12d
140002f04:     	cmpb	$-0x10, %dl
140002f07:     	jb	0x140002f4d <.text+0x1f4d>
140002f09:     	leaq	0x4(%r13), %rax
140002f0d:     	movq	%rax, (%rsi)
140002f10:     	movzbl	0x3(%r13), %edx
140002f15:     	andl	$0x7, %ecx
140002f18:     	shll	$0x12, %ecx
140002f1b:     	shll	$0x6, %r12d
140002f1f:     	andl	$0x3f, %edx
140002f22:     	orl	%r12d, %edx
140002f25:     	orl	%ecx, %edx
140002f27:     	movl	%edx, %r12d
140002f2a:     	cmpl	$0xffff, %r12d          # imm = 0xFFFF
140002f31:     	jbe	0x140002e84 <.text+0x1e84>
140002f37:     	jmp	0x140002f60 <.text+0x1f60>
140002f39:     	nopl	(%rax)
140002f40:     	movw	$0x0, 0x10(%rsi)
140002f46:     	xorl	%ebp, %ebp
140002f48:     	jmp	0x140002e89 <.text+0x1e89>
140002f4d:     	shll	$0xc, %ecx
140002f50:     	orl	%ecx, %r12d
140002f53:     	cmpl	$0xffff, %r12d          # imm = 0xFFFF
140002f5a:     	jbe	0x140002e84 <.text+0x1e84>
140002f60:     	leal	0xff0000(%r12), %ecx
140002f68:     	shrl	$0xa, %ecx
140002f6b:     	orl	$0xd800, %ecx           # imm = 0xD800
140002f71:     	andl	$0x3ff, %r12d           # imm = 0x3FF
140002f78:     	orl	$0xdc00, %r12d          # imm = 0xDC00
140002f7f:     	movw	%r12w, 0x10(%rsi)
140002f84:     	movq	%rax, %r13
140002f87:     	movl	%r12d, %ebp
140002f8a:     	movl	%ecx, %r12d
140002f8d:     	jmp	0x140002e89 <.text+0x1e89>
140002f92:     	movq	%r14, %r8
140002f95:     	subq	%r13, %r8
140002f98:     	addq	$0x3, %r8
140002f9c:     	cmovbq	%r15, %r8
140002fa0:     	shrq	$0x2, %r8
140002fa4:     	cmpw	$0x1, %bp
140002fa8:     	sbbq	$0x0, %r8
140002fac:     	addq	$0x2, %r8
140002fb0:     	movq	%rdi, %rcx
140002fb3:     	movq	%rbx, %rdx
140002fb6:     	callq	0x140018f20 <.text+0x17f20>
140002fbb:     	jmp	0x140002e97 <.text+0x1e97>
140002fc0:     	addq	$0x28, %rsp
140002fc4:     	popq	%rbx
140002fc5:     	popq	%rbp
140002fc6:     	popq	%rdi
140002fc7:     	popq	%rsi
140002fc8:     	popq	%r12
140002fca:     	popq	%r13
140002fcc:     	popq	%r14
140002fce:     	popq	%r15
140002fd0:     	retq
140002fd1:     	int3
140002fd2:     	int3
140002fd3:     	int3
140002fd4:     	int3
140002fd5:     	int3
140002fd6:     	int3
140002fd7:     	int3
140002fd8:     	int3
140002fd9:     	int3
140002fda:     	int3
140002fdb:     	int3
140002fdc:     	int3
140002fdd:     	int3
140002fde:     	int3
140002fdf:     	int3
140002fe0:     	pushq	%rbp
140002fe1:     	pushq	%rsi
140002fe2:     	subq	$0xf8, %rsp
140002fe9:     	leaq	0x80(%rsp), %rbp
140002ff1:     	movq	$-0x2, 0x50(%rbp)
140002ff9:     	movq	%rdx, 0x40(%rbp)
140002ffd:     	movq	%rcx, 0x38(%rbp)
140003001:     	leaq	0x8228(%rip), %rdx      # 0x14000b230 <.text+0xa230>
140003008:     	xorl	%ecx, %ecx
14000300a:     	callq	*0x16ff8(%rip)          # 0x14001a008
140003010:     	testq	%rax, %rax
140003013:     	je	0x1400030ea <.text+0x20ea>
140003019:     	movl	$0x5000, -0x18(%rbp)    # imm = 0x5000
140003020:     	leaq	-0x18(%rbp), %rcx
140003024:     	callq	*0x16fe6(%rip)          # 0x14001a010
14000302a:     	testl	%eax, %eax
14000302c:     	jne	0x14000303d <.text+0x203d>
14000302e:     	callq	*0x16fcc(%rip)          # 0x14001a000
140003034:     	cmpl	$0x78, %eax
140003037:     	jne	0x1400031ad <.text+0x21ad>
14000303d:     	leaq	0x1978c(%rip), %rcx     # 0x14001c7d0
140003044:     	movl	$0x5, %edx
140003049:     	callq	0x14000a9d0 <.text+0x99d0>
14000304e:     	leaq	0x17c43(%rip), %rdx     # 0x14001ac98
140003055:     	leaq	-0x38(%rbp), %rsi
140003059:     	movl	$0x4, %r8d
14000305f:     	movq	%rsi, %rcx
140003062:     	callq	0x140013240 <.text+0x12240>
140003067:     	movq	-0x38(%rbp), %rax
14000306b:     	movq	%rax, 0x30(%rbp)
14000306f:     	testq	%rax, %rax
140003072:     	jne	0x140003124 <.text+0x2124>
140003078:     	movq	-0x30(%rbp), %rcx
14000307c:     	movq	-0x28(%rbp), %rdx
140003080:     	callq	0x1400037e0 <.text+0x27e0>
140003085:     	movq	%rax, %rcx
140003088:     	callq	0x1400078c0 <.text+0x68c0>
14000308d:     	movq	0x38(%rbp), %rcx
140003091:     	movq	0x40(%rbp), %rax
140003095:     	callq	*0x28(%rax)
140003098:     	cltq
14000309a:     	movq	0x20167(%rip), %rcx     # 0x140023208
1400030a1:     	cmpq	$0x3, %rcx
1400030a5:     	je	0x1400030e0 <.text+0x20e0>
1400030a7:     	movq	%rax, 0x40(%rbp)
1400030ab:     	movb	$0x1, 0x4f(%rbp)
1400030af:     	leaq	0x4f(%rbp), %rax
1400030b3:     	movq	%rax, -0x48(%rbp)
1400030b7:     	leaq	0x17c52(%rip), %rax     # 0x14001ad10
1400030be:     	movq	%rax, 0x20(%rsp)
1400030c3:     	leaq	0x2013e(%rip), %rcx     # 0x140023208
1400030ca:     	leaq	0x1860f(%rip), %r9      # 0x14001b6e0
1400030d1:     	leaq	-0x48(%rbp), %r8
1400030d5:     	xorl	%edx, %edx
1400030d7:     	callq	0x140019220 <.text+0x18220>
1400030dc:     	movq	0x40(%rbp), %rax
1400030e0:     	addq	$0xf8, %rsp
1400030e7:     	popq	%rsi
1400030e8:     	popq	%rbp
1400030e9:     	retq
1400030ea:     	leaq	0x19937(%rip), %rax     # 0x14001ca28
1400030f1:     	movq	%rax, -0x18(%rbp)
1400030f5:     	movq	$0x1, -0x10(%rbp)
1400030fd:     	leaq	0x1759c(%rip), %rax     # 0x14001a6a0
140003104:     	movq	%rax, -0x8(%rbp)
140003108:     	xorps	%xmm0, %xmm0
14000310b:     	movups	%xmm0, (%rbp)
14000310f:     	leaq	0x19922(%rip), %rdx     # 0x14001ca38
140003116:     	leaq	-0x18(%rbp), %rcx
14000311a:     	callq	0x1400197d0 <.text+0x187d0>
14000311f:     	jmp	0x1400031e2 <.text+0x21e2>
140003124:     	movq	%rsi, -0x40(%rbp)
140003128:     	movl	$0x0, 0x28(%rbp)
14000312f:     	movb	$0x0, 0x2c(%rbp)
140003133:     	leaq	-0x40(%rbp), %rax
140003137:     	movq	%rax, -0x58(%rbp)
14000313b:     	leaq	-0x362(%rip), %rax      # 0x140002de0 <.text+0x1de0>
140003142:     	movq	%rax, -0x50(%rbp)
140003146:     	leaq	0x17b8b(%rip), %rax     # 0x14001acd8
14000314d:     	movq	%rax, -0x18(%rbp)
140003151:     	movq	$0x2, -0x10(%rbp)
140003159:     	movq	$0x0, 0x8(%rbp)
140003161:     	leaq	-0x58(%rbp), %rax
140003165:     	movq	%rax, -0x8(%rbp)
140003169:     	movq	$0x1, (%rbp)
140003171:     	leaq	0x28(%rbp), %rax
140003175:     	movq	%rax, 0x18(%rbp)
140003179:     	movq	$0x0, 0x20(%rbp)
140003181:     	leaq	0x17a68(%rip), %rdx     # 0x14001abf0
140003188:     	leaq	0x18(%rbp), %rcx
14000318c:     	leaq	-0x18(%rbp), %r8
140003190:     	callq	0x140014a60 <.text+0x13a60>
140003195:     	movq	0x20(%rbp), %rcx
140003199:     	testb	%al, %al
14000319b:     	je	0x1400031e4 <.text+0x21e4>
14000319d:     	testq	%rcx, %rcx
1400031a0:     	leaq	0x183c9(%rip), %rax     # 0x14001b570
1400031a7:     	cmovneq	%rcx, %rax
1400031ab:     	jmp	0x1400031f4 <.text+0x21f4>
1400031ad:     	leaq	0x197ac(%rip), %rax     # 0x14001c960
1400031b4:     	movq	%rax, -0x18(%rbp)
1400031b8:     	movq	$0x1, -0x10(%rbp)
1400031c0:     	leaq	0x174d9(%rip), %rax     # 0x14001a6a0
1400031c7:     	movq	%rax, -0x8(%rbp)
1400031cb:     	xorps	%xmm0, %xmm0
1400031ce:     	movups	%xmm0, (%rbp)
1400031d2:     	leaq	0x197c7(%rip), %rdx     # 0x14001c9a0
1400031d9:     	leaq	-0x18(%rbp), %rcx
1400031dd:     	callq	0x1400197d0 <.text+0x187d0>
1400031e2:     	ud2
1400031e4:     	testq	%rcx, %rcx
1400031e7:     	je	0x1400031f2 <.text+0x21f2>
1400031e9:     	leaq	0x20(%rbp), %rcx
1400031ed:     	callq	0x140001c00 <.text+0xc00>
1400031f2:     	xorl	%eax, %eax
1400031f4:     	movq	%rax, 0x18(%rbp)
1400031f8:     	leaq	0x18(%rbp), %rcx
1400031fc:     	callq	0x140001da0 <.text+0xda0>
140003201:     	movl	$0x7, %ecx
140003206:     	int	$0x29
140003208:     	ud2
14000320a:     	cmpq	$0x0, 0x38(%rbp)
14000320f:     	movq	0x40(%rbp), %rax
140003213:     	je	0x1400030e0 <.text+0x20e0>
140003219:     	jmp	0x14000326e <.text+0x226e>
14000321b:     	movq	0x38(%rbp), %rcx
14000321f:     	movq	0x40(%rbp), %rax
140003223:     	callq	*(%rax)
140003225:     	movq	0x40(%rbp), %rax
140003229:     	movq	0x8(%rax), %rdx
14000322d:     	testq	%rdx, %rdx
140003230:     	je	0x140003243 <.text+0x2243>
140003232:     	movq	0x40(%rbp), %rax
140003236:     	movq	0x10(%rax), %r8
14000323a:     	movq	0x38(%rbp), %rcx
14000323e:     	callq	0x140001350 <.text+0x350>
140003243:     	movl	$0x65, %eax
140003248:     	jmp	0x14000309a <.text+0x209a>
14000324d:     	cmpq	$0x0, 0x38(%rbp)
140003252:     	movq	0x40(%rbp), %rax
140003256:     	je	0x14000309a <.text+0x209a>
14000325c:     	callq	0x140003560 <.text+0x2560>
140003261:     	ud2
140003263:     	cmpq	$0x0, 0x30(%rbp)
140003268:     	je	0x14000308d <.text+0x208d>
14000326e:     	callq	0x140001bc0 <.text+0xbc0>
140003273:     	ud2
140003275:     	nopw	%cs:(%rax,%rax)
140003280:     	movq	%rdx, 0x10(%rsp)
140003285:     	pushq	%rbp
140003286:     	pushq	%rsi
140003287:     	subq	$0x28, %rsp
14000328b:     	leaq	0x80(%rdx), %rbp
140003292:     	cmpq	$0x0, 0x20(%rbp)
140003297:     	je	0x1400032a2 <.text+0x22a2>
140003299:     	leaq	0x20(%rbp), %rcx
14000329d:     	callq	0x140001c00 <.text+0xc00>
1400032a2:     	nop
1400032a3:     	addq	$0x28, %rsp
1400032a7:     	popq	%rsi
1400032a8:     	popq	%rbp
1400032a9:     	retq
1400032aa:     	nopw	(%rax,%rax)
1400032b0:     	movq	%rdx, 0x10(%rsp)
1400032b5:     	pushq	%rbp
1400032b6:     	pushq	%rsi
1400032b7:     	subq	$0x28, %rsp
1400032bb:     	leaq	0x80(%rdx), %rbp
1400032c2:     	movq	0x58(%rbp), %rcx
1400032c6:     	callq	0x1400191d0 <.text+0x181d0>
1400032cb:     	movq	%rax, 0x38(%rbp)
1400032cf:     	leaq	-0xcc(%rip), %rax       # 0x14000320a <.text+0x220a>
1400032d6:     	addq	$0x28, %rsp
1400032da:     	popq	%rsi
1400032db:     	popq	%rbp
1400032dc:     	retq
1400032dd:     	nopl	(%rax)
1400032e0:     	movq	%rdx, 0x10(%rsp)
1400032e5:     	pushq	%rbp
1400032e6:     	pushq	%rsi
1400032e7:     	subq	$0x28, %rsp
1400032eb:     	leaq	0x80(%rdx), %rbp
1400032f2:     	xorl	%ecx, %ecx
1400032f4:     	callq	0x1400191d0 <.text+0x181d0>
1400032f9:     	movq	%rax, 0x38(%rbp)
1400032fd:     	leaq	-0xfa(%rip), %rax       # 0x14000320a <.text+0x220a>
140003304:     	addq	$0x28, %rsp
140003308:     	popq	%rsi
140003309:     	popq	%rbp
14000330a:     	retq
14000330b:     	nopl	(%rax,%rax)
140003310:     	movq	%rdx, 0x10(%rsp)
140003315:     	pushq	%rbp
140003316:     	pushq	%rsi
140003317:     	subq	$0x28, %rsp
14000331b:     	leaq	0x80(%rdx), %rbp
140003322:     	movq	0x68(%rbp), %rcx
140003326:     	callq	0x1400191d0 <.text+0x181d0>
14000332b:     	movq	%rax, 0x38(%rbp)
14000332f:     	movq	%rdx, 0x40(%rbp)
140003333:     	leaq	-0x11f(%rip), %rax      # 0x14000321b <.text+0x221b>
14000333a:     	addq	$0x28, %rsp
14000333e:     	popq	%rsi
14000333f:     	popq	%rbp
140003340:     	retq
140003341:     	nopw	%cs:(%rax,%rax)
140003350:     	movq	%rdx, 0x10(%rsp)
140003355:     	pushq	%rbp
140003356:     	pushq	%rsi
140003357:     	subq	$0x28, %rsp
14000335b:     	leaq	0x80(%rdx), %rbp
140003362:     	xorl	%ecx, %ecx
140003364:     	callq	0x1400191d0 <.text+0x181d0>
140003369:     	movq	%rax, 0x38(%rbp)
14000336d:     	movq	%rdx, 0x40(%rbp)
140003371:     	leaq	-0x15d(%rip), %rax      # 0x14000321b <.text+0x221b>
140003378:     	addq	$0x28, %rsp
14000337c:     	popq	%rsi
14000337d:     	popq	%rbp
14000337e:     	retq
14000337f:     	nop
140003380:     	movq	%rdx, 0x10(%rsp)
140003385:     	pushq	%rbp
140003386:     	pushq	%rsi
140003387:     	subq	$0x28, %rsp
14000338b:     	leaq	0x80(%rdx), %rbp
140003392:     	movq	0x40(%rbp), %rax
140003396:     	movq	0x8(%rax), %rdx
14000339a:     	testq	%rdx, %rdx
14000339d:     	je	0x1400033b0 <.text+0x23b0>
14000339f:     	movq	0x40(%rbp), %rax
1400033a3:     	movq	0x10(%rax), %r8
1400033a7:     	movq	0x38(%rbp), %rcx
1400033ab:     	callq	0x140001350 <.text+0x350>
1400033b0:     	nop
1400033b1:     	addq	$0x28, %rsp
1400033b5:     	popq	%rsi
1400033b6:     	popq	%rbp
1400033b7:     	retq
1400033b8:     	nopl	(%rax,%rax)
1400033c0:     	movq	%rdx, 0x10(%rsp)
1400033c5:     	pushq	%rbp
1400033c6:     	pushq	%rsi
1400033c7:     	subq	$0x28, %rsp
1400033cb:     	leaq	0x80(%rdx), %rbp
1400033d2:     	movq	0x60(%rbp), %rcx
1400033d6:     	callq	0x1400191d0 <.text+0x181d0>
1400033db:     	movq	%rax, 0x38(%rbp)
1400033df:     	movq	%rdx, 0x40(%rbp)
1400033e3:     	leaq	-0x19d(%rip), %rax      # 0x14000324d <.text+0x224d>
1400033ea:     	addq	$0x28, %rsp
1400033ee:     	popq	%rsi
1400033ef:     	popq	%rbp
1400033f0:     	retq
1400033f1:     	nopw	%cs:(%rax,%rax)
140003400:     	movq	%rdx, 0x10(%rsp)
140003405:     	pushq	%rbp
140003406:     	pushq	%rsi
140003407:     	subq	$0x28, %rsp
14000340b:     	leaq	0x80(%rdx), %rbp
140003412:     	xorl	%ecx, %ecx
140003414:     	callq	0x1400191d0 <.text+0x181d0>
140003419:     	movq	%rax, 0x38(%rbp)
14000341d:     	movq	%rdx, 0x40(%rbp)
140003421:     	leaq	-0x1db(%rip), %rax      # 0x14000324d <.text+0x224d>
140003428:     	addq	$0x28, %rsp
14000342c:     	popq	%rsi
14000342d:     	popq	%rbp
14000342e:     	retq
14000342f:     	nop
140003430:     	movq	%rdx, 0x10(%rsp)
140003435:     	pushq	%rbp
140003436:     	pushq	%rsi
140003437:     	subq	$0x28, %rsp
14000343b:     	leaq	0x80(%rdx), %rbp
140003442:     	movq	-0x38(%rbp), %rcx
140003446:     	testq	%rcx, %rcx
140003449:     	jne	0x140003459 <.text+0x2459>
14000344b:     	cmpq	$0x0, 0x30(%rbp)
140003450:     	jne	0x140003475 <.text+0x2475>
140003452:     	addq	$0x28, %rsp
140003456:     	popq	%rsi
140003457:     	popq	%rbp
140003458:     	retq
140003459:     	movq	-0x30(%rbp), %rdx
14000345d:     	testq	%rdx, %rdx
140003460:     	je	0x14000346d <.text+0x246d>
140003462:     	movl	$0x1, %r8d
140003468:     	callq	0x140001350 <.text+0x350>
14000346d:     	nop
14000346e:     	addq	$0x28, %rsp
140003472:     	popq	%rsi
140003473:     	popq	%rbp
140003474:     	retq
140003475:     	movq	-0x30(%rbp), %rcx
140003479:     	movq	-0x28(%rbp), %rdx
14000347d:     	movb	$0x0, (%rcx)
140003480:     	testq	%rdx, %rdx
140003483:     	je	0x140003490 <.text+0x2490>
140003485:     	movl	$0x1, %r8d
14000348b:     	callq	0x140001350 <.text+0x350>
140003490:     	nop
140003491:     	addq	$0x28, %rsp
140003495:     	popq	%rsi
140003496:     	popq	%rbp
140003497:     	retq
140003498:     	nopl	(%rax,%rax)
1400034a0:     	movq	%rdx, 0x10(%rsp)
1400034a5:     	pushq	%rbp
1400034a6:     	pushq	%rsi
1400034a7:     	subq	$0x28, %rsp
1400034ab:     	leaq	0x80(%rdx), %rbp
1400034b2:     	movq	0x70(%rbp), %rcx
1400034b6:     	callq	0x1400191d0 <.text+0x181d0>
1400034bb:     	movq	%rax, 0x30(%rbp)
1400034bf:     	leaq	-0x263(%rip), %rax      # 0x140003263 <.text+0x2263>
1400034c6:     	addq	$0x28, %rsp
1400034ca:     	popq	%rsi
1400034cb:     	popq	%rbp
1400034cc:     	retq
1400034cd:     	nopl	(%rax)
1400034d0:     	movq	%rdx, 0x10(%rsp)
1400034d5:     	pushq	%rbp
1400034d6:     	pushq	%rsi
1400034d7:     	subq	$0x28, %rsp
1400034db:     	leaq	0x80(%rdx), %rbp
1400034e2:     	xorl	%ecx, %ecx
1400034e4:     	callq	0x1400191d0 <.text+0x181d0>
1400034e9:     	movq	%rax, 0x30(%rbp)
1400034ed:     	leaq	-0x291(%rip), %rax      # 0x140003263 <.text+0x2263>
1400034f4:     	addq	$0x28, %rsp
1400034f8:     	popq	%rsi
1400034f9:     	popq	%rbp
1400034fa:     	retq
1400034fb:     	int3
1400034fc:     	int3
1400034fd:     	int3
1400034fe:     	int3
1400034ff:     	int3
140003500:     	subq	$0x68, %rsp
140003504:     	movl	$0x0, 0x28(%rsp)
14000350c:     	movb	$0x0, 0x2c(%rsp)
140003511:     	leaq	0x17848(%rip), %rax     # 0x14001ad60
140003518:     	movq	%rax, 0x38(%rsp)
14000351d:     	movq	$0x1, 0x40(%rsp)
140003526:     	leaq	0x20(%rsp), %rax
14000352b:     	movq	%rax, 0x48(%rsp)
140003530:     	xorps	%xmm0, %xmm0
140003533:     	movups	%xmm0, 0x50(%rsp)
140003538:     	leaq	0x28(%rsp), %rcx
14000353d:     	leaq	0x38(%rsp), %rdx
140003542:     	callq	0x140005690 <.text+0x4690>
140003547:     	movq	%rax, 0x30(%rsp)
14000354c:     	leaq	0x30(%rsp), %rcx
140003551:     	callq	0x140001da0 <.text+0xda0>
140003556:     	movl	$0x7, %ecx
14000355b:     	int	$0x29
14000355d:     	ud2
14000355f:     	int3
140003560:     	subq	$0x68, %rsp
140003564:     	movl	$0x0, 0x28(%rsp)
14000356c:     	movb	$0x0, 0x2c(%rsp)
140003571:     	leaq	0x17830(%rip), %rax     # 0x14001ada8
140003578:     	movq	%rax, 0x38(%rsp)
14000357d:     	movq	$0x1, 0x40(%rsp)
140003586:     	leaq	0x20(%rsp), %rax
14000358b:     	movq	%rax, 0x48(%rsp)
140003590:     	xorps	%xmm0, %xmm0
140003593:     	movups	%xmm0, 0x50(%rsp)
140003598:     	leaq	0x28(%rsp), %rcx
14000359d:     	leaq	0x38(%rsp), %rdx
1400035a2:     	callq	0x140005690 <.text+0x4690>
1400035a7:     	movq	%rax, 0x30(%rsp)
1400035ac:     	leaq	0x30(%rsp), %rcx
1400035b1:     	callq	0x140001da0 <.text+0xda0>
1400035b6:     	movl	$0x7, %ecx
1400035bb:     	int	$0x29
1400035bd:     	ud2
1400035bf:     	int3
1400035c0:     	pushq	%rsi
1400035c1:     	subq	$0x30, %rsp
1400035c5:     	leaq	0x177ec(%rip), %r8      # 0x14001adb8
1400035cc:     	leaq	0x20(%rsp), %rsi
1400035d1:     	movl	$0xb, %r9d
1400035d7:     	movq	%rsi, %rcx
1400035da:     	callq	0x140015370 <.text+0x14370>
1400035df:     	movq	%rsi, %rcx
1400035e2:     	callq	0x140014730 <.text+0x13730>
1400035e7:     	nop
1400035e8:     	addq	$0x30, %rsp
1400035ec:     	popq	%rsi
1400035ed:     	retq
1400035ee:     	int3
1400035ef:     	int3
1400035f0:     	pushq	%rbp
1400035f1:     	pushq	%r14
1400035f3:     	pushq	%rsi
1400035f4:     	pushq	%rdi
1400035f5:     	pushq	%rbx
1400035f6:     	subq	$0x80, %rsp
1400035fd:     	leaq	0x80(%rsp), %rbp
140003605:     	movq	$-0x2, -0x8(%rbp)
14000360d:     	callq	0x140007750 <.text+0x6750>
140003612:     	movq	%rax, %rsi
140003615:     	testq	%rax, %rax
140003618:     	je	0x14000370c <.text+0x270c>
14000361e:     	movq	%rsi, -0x10(%rbp)
140003622:     	lock
140003623:     	decb	0x28(%rsi)
140003626:     	je	0x14000366d <.text+0x266d>
140003628:     	addq	$0x28, %rsi
14000362c:     	movq	0x1fcad(%rip), %rbx     # 0x1400232e0
140003633:     	testq	%rbx, %rbx
140003636:     	je	0x14000368f <.text+0x268f>
140003638:     	leaq	0x19109(%rip), %rdi     # 0x14001c748
14000363f:     	xorl	%r14d, %r14d
140003642:     	nopw	%cs:(%rax,%rax)
140003650:     	movl	$0x1, %r8d
140003656:     	movq	%rsi, %rcx
140003659:     	movq	%rdi, %rdx
14000365c:     	movl	$0xffffffff, %r9d       # imm = 0xFFFFFFFF
140003662:     	callq	*%rbx
140003664:     	movb	$0x1, %al
140003666:     	lock
140003667:     	cmpxchgb	%r14b, (%rsi)
14000366b:     	jne	0x140003650 <.text+0x2650>
14000366d:     	movq	-0x10(%rbp), %rax
140003671:     	lock
140003672:     	decq	(%rax)
140003675:     	jne	0x140003680 <.text+0x2680>
140003677:     	leaq	-0x10(%rbp), %rcx
14000367b:     	callq	0x1400028f0 <.text+0x18f0>
140003680:     	nop
140003681:     	addq	$0x80, %rsp
140003688:     	popq	%rbx
140003689:     	popq	%rdi
14000368a:     	popq	%rsi
14000368b:     	popq	%r14
14000368d:     	popq	%rbp
14000368e:     	retq
14000368f:     	movq	0x1f99a(%rip), %rcx     # 0x140023030
140003696:     	cmpq	$-0x1, %rcx
14000369a:     	jne	0x1400036e2 <.text+0x26e2>
14000369c:     	movq	$-0x1, -0x20(%rbp)
1400036a4:     	movq	0x1f995(%rip), %rax     # 0x140023040
1400036ab:     	leaq	-0x20(%rbp), %rcx
1400036af:     	movl	$0xc0000000, %edx       # imm = 0xC0000000
1400036b4:     	xorl	%r8d, %r8d
1400036b7:     	xorl	%r9d, %r9d
1400036ba:     	callq	*%rax
1400036bc:     	testl	%eax, %eax
1400036be:     	jne	0x140003726 <.text+0x2726>
1400036c0:     	movq	-0x20(%rbp), %rcx
1400036c4:     	movq	$-0x1, %rax
1400036cb:     	lock
1400036cc:     	cmpxchgq	%rcx, 0x1f95c(%rip)     # 0x140023030
1400036d4:     	je	0x1400036e2 <.text+0x26e2>
1400036d6:     	movq	%rax, %rdi
1400036d9:     	callq	*0x16a41(%rip)          # 0x14001a120
1400036df:     	movq	%rdi, %rcx
1400036e2:     	movq	0x1f967(%rip), %rax     # 0x140023050
1400036e9:     	xorl	%edi, %edi
1400036eb:     	movq	%rsi, %rdx
1400036ee:     	xorl	%r8d, %r8d
1400036f1:     	xorl	%r9d, %r9d
1400036f4:     	callq	*%rax
1400036f6:     	xchgb	%dil, (%rsi)
1400036f9:     	movq	-0x10(%rbp), %rax
1400036fd:     	lock
1400036fe:     	decq	(%rax)
140003701:     	je	0x140003677 <.text+0x2677>
140003707:     	jmp	0x140003680 <.text+0x2680>
14000370c:     	leaq	0x176cd(%rip), %rcx     # 0x14001ade0
140003713:     	leaq	0x17726(%rip), %r8      # 0x14001ae40
14000371a:     	movl	$0x5e, %edx
14000371f:     	callq	0x140019760 <.text+0x18760>
140003724:     	jmp	0x140003777 <.text+0x2777>
140003726:     	movl	%eax, -0x14(%rbp)
140003729:     	leaq	-0x14(%rbp), %rax
14000372d:     	movq	%rax, -0x30(%rbp)
140003731:     	leaq	0x14478(%rip), %rax     # 0x140017bb0 <.text+0x16bb0>
140003738:     	movq	%rax, -0x28(%rbp)
14000373c:     	leaq	0x19035(%rip), %rax     # 0x14001c778
140003743:     	movq	%rax, -0x60(%rbp)
140003747:     	movq	$0x1, -0x58(%rbp)
14000374f:     	movq	$0x0, -0x40(%rbp)
140003757:     	leaq	-0x30(%rbp), %rax
14000375b:     	movq	%rax, -0x50(%rbp)
14000375f:     	movq	$0x1, -0x48(%rbp)
140003767:     	leaq	0x1904a(%rip), %rdx     # 0x14001c7b8
14000376e:     	leaq	-0x60(%rbp), %rcx
140003772:     	callq	0x1400197d0 <.text+0x187d0>
140003777:     	ud2
140003779:     	nopl	(%rax)
140003780:     	movq	%rdx, 0x10(%rsp)
140003785:     	pushq	%rbp
140003786:     	pushq	%r14
140003788:     	pushq	%rsi
140003789:     	pushq	%rdi
14000378a:     	pushq	%rbx
14000378b:     	subq	$0x20, %rsp
14000378f:     	leaq	0x80(%rdx), %rbp
140003796:     	callq	0x140001cd0 <.text+0xcd0>
14000379b:     	ud2
14000379d:     	nopl	(%rax)
1400037a0:     	movq	%rdx, 0x10(%rsp)
1400037a5:     	pushq	%rbp
1400037a6:     	pushq	%r14
1400037a8:     	pushq	%rsi
1400037a9:     	pushq	%rdi
1400037aa:     	pushq	%rbx
1400037ab:     	subq	$0x20, %rsp
1400037af:     	leaq	0x80(%rdx), %rbp
1400037b6:     	movq	-0x10(%rbp), %rax
1400037ba:     	lock
1400037bb:     	decq	(%rax)
1400037be:     	jne	0x1400037c9 <.text+0x27c9>
1400037c0:     	leaq	-0x10(%rbp), %rcx
1400037c4:     	callq	0x1400028f0 <.text+0x18f0>
1400037c9:     	nop
1400037ca:     	addq	$0x20, %rsp
1400037ce:     	popq	%rbx
1400037cf:     	popq	%rdi
1400037d0:     	popq	%rsi
1400037d1:     	popq	%r14
1400037d3:     	popq	%rbp
1400037d4:     	retq
1400037d5:     	int3
1400037d6:     	int3
1400037d7:     	int3
1400037d8:     	int3
1400037d9:     	int3
1400037da:     	int3
1400037db:     	int3
1400037dc:     	int3
1400037dd:     	int3
1400037de:     	int3
1400037df:     	int3
1400037e0:     	pushq	%rbp
1400037e1:     	pushq	%rsi
1400037e2:     	pushq	%rdi
1400037e3:     	subq	$0x50, %rsp
1400037e7:     	leaq	0x50(%rsp), %rbp
1400037ec:     	movq	$-0x2, -0x8(%rbp)
1400037f4:     	movq	%rdx, -0x20(%rbp)
1400037f8:     	movq	%rcx, -0x18(%rbp)
1400037fc:     	movb	$0x0, -0x9(%rbp)
140003800:     	movl	$0x8, %ecx
140003805:     	movl	$0x20, %edx
14000380a:     	callq	0x140013ab0 <.text+0x12ab0>
14000380f:     	movq	%rax, %rdi
140003812:     	movq	%rdx, %rsi
140003815:     	testq	%rdx, %rdx
140003818:     	je	0x140003886 <.text+0x2886>
14000381a:     	movzbl	0x1f9e0(%rip), %eax     # 0x140023201
140003821:     	movq	%rsi, %rcx
140003824:     	movq	%rdi, %rdx
140003827:     	callq	0x140001340 <.text+0x340>
14000382c:     	movq	%rax, %rdx
14000382f:     	testq	%rdx, %rdx
140003832:     	je	0x14000388e <.text+0x288e>
140003834:     	movq	$0x1, (%rdx)
14000383b:     	movq	$0x1, 0x8(%rdx)
140003843:     	movq	%rdx, -0x30(%rbp)
140003847:     	movq	-0x18(%rbp), %rax
14000384b:     	movq	%rax, 0x18(%rdx)
14000384f:     	movq	-0x20(%rbp), %rax
140003853:     	movq	%rax, 0x20(%rdx)
140003857:     	movq	0x1fa5a(%rip), %rax     # 0x1400232b8
14000385e:     	nop
140003860:     	movq	%rax, %rcx
140003863:     	incq	%rcx
140003866:     	je	0x14000389f <.text+0x289f>
140003868:     	lock
140003869:     	cmpxchgq	%rcx, 0x1fa47(%rip)     # 0x1400232b8
140003871:     	jne	0x140003860 <.text+0x2860>
140003873:     	movq	%rcx, 0x10(%rdx)
140003877:     	movb	$0x0, 0x28(%rdx)
14000387b:     	movq	%rdx, %rax
14000387e:     	addq	$0x50, %rsp
140003882:     	popq	%rdi
140003883:     	popq	%rsi
140003884:     	popq	%rbp
140003885:     	retq
140003886:     	movq	%rdi, %rdx
140003889:     	testq	%rdx, %rdx
14000388c:     	jne	0x140003834 <.text+0x2834>
14000388e:     	movb	$0x0, -0x9(%rbp)
140003892:     	movq	%rdi, %rcx
140003895:     	movq	%rsi, %rdx
140003898:     	callq	0x1400196e0 <.text+0x186e0>
14000389d:     	jmp	0x1400038a8 <.text+0x28a8>
14000389f:     	movq	%rdx, -0x28(%rbp)
1400038a3:     	callq	0x140018fe0 <.text+0x17fe0>
1400038a8:     	ud2
1400038aa:     	nopw	(%rax,%rax)
1400038b0:     	movq	%rdx, 0x10(%rsp)
1400038b5:     	pushq	%rbp
1400038b6:     	pushq	%rsi
1400038b7:     	pushq	%rdi
1400038b8:     	subq	$0x20, %rsp
1400038bc:     	leaq	0x50(%rdx), %rbp
1400038c0:     	cmpq	$0x0, -0x18(%rbp)
1400038c5:     	je	0x1400038ee <.text+0x28ee>
1400038c7:     	testb	$0x1, -0x9(%rbp)
1400038cb:     	jne	0x1400038ee <.text+0x28ee>
1400038cd:     	movq	-0x18(%rbp), %rax
1400038d1:     	movb	$0x0, (%rax)
1400038d4:     	cmpq	$0x0, -0x20(%rbp)
1400038d9:     	je	0x1400038ee <.text+0x28ee>
1400038db:     	movl	$0x1, %r8d
1400038e1:     	movq	-0x18(%rbp), %rcx
1400038e5:     	movq	-0x20(%rbp), %rdx
1400038e9:     	callq	0x140001350 <.text+0x350>
1400038ee:     	nop
1400038ef:     	addq	$0x20, %rsp
1400038f3:     	popq	%rdi
1400038f4:     	popq	%rsi
1400038f5:     	popq	%rbp
1400038f6:     	retq
1400038f7:     	nopw	(%rax,%rax)
140003900:     	movq	%rdx, 0x10(%rsp)
140003905:     	pushq	%rbp
140003906:     	pushq	%rsi
140003907:     	pushq	%rdi
140003908:     	subq	$0x20, %rsp
14000390c:     	leaq	0x50(%rdx), %rbp
140003910:     	movq	-0x28(%rbp), %rax
140003914:     	lock
140003915:     	decq	(%rax)
140003918:     	jne	0x140003923 <.text+0x2923>
14000391a:     	leaq	-0x30(%rbp), %rcx
14000391e:     	callq	0x1400028c0 <.text+0x18c0>
140003923:     	movb	$0x1, -0x9(%rbp)
140003927:     	addq	$0x20, %rsp
14000392b:     	popq	%rdi
14000392c:     	popq	%rsi
14000392d:     	popq	%rbp
14000392e:     	retq
14000392f:     	int3
140003930:     	pushq	%rbp
140003931:     	pushq	%r15
140003933:     	pushq	%r14
140003935:     	pushq	%r13
140003937:     	pushq	%r12
140003939:     	pushq	%rsi
14000393a:     	pushq	%rdi
14000393b:     	pushq	%rbx
14000393c:     	subq	$0x478, %rsp            # imm = 0x478
140003943:     	leaq	0x80(%rsp), %rbp
14000394b:     	movq	$-0x2, 0x3f0(%rbp)
140003956:     	movq	%rcx, 0x3e0(%rbp)
14000395d:     	movq	$0x2, 0x3c8(%rbp)
140003968:     	xorps	%xmm0, %xmm0
14000396b:     	movups	%xmm0, 0x3d0(%rbp)
140003972:     	movl	$0x200, %r8d            # imm = 0x200
140003978:     	movl	$0x2, %eax
14000397d:     	movq	%rax, 0x3e8(%rbp)
140003984:     	xorl	%edi, %edi
140003986:     	xorl	%ebx, %ebx
140003988:     	xorl	%r12d, %r12d
14000398b:     	cmpq	$0x201, %r8             # imm = 0x201
140003992:     	jae	0x1400039c0 <.text+0x29c0>
140003994:     	jmp	0x1400039af <.text+0x29af>
140003996:     	nopw	%cs:(%rax,%rax)
1400039a0:     	jae	0x140003a80 <.text+0x2a80>
1400039a6:     	cmpq	$0x201, %r8             # imm = 0x201
1400039ad:     	jae	0x1400039c0 <.text+0x29c0>
1400039af:     	movl	$0x200, %esi            # imm = 0x200
1400039b4:     	leaq	-0x58(%rbp), %r13
1400039b8:     	movq	%r8, %r15
1400039bb:     	jmp	0x140003a18 <.text+0x2a18>
1400039bd:     	nopl	(%rax)
1400039c0:     	subq	%r12, %r8
1400039c3:     	subq	%r12, %rbx
1400039c6:     	cmpq	%r8, %rbx
1400039c9:     	jae	0x1400039ef <.text+0x29ef>
1400039cb:     	leaq	0x3c8(%rbp), %rcx
1400039d2:     	movq	%r12, %rdx
1400039d5:     	callq	0x140018f20 <.text+0x17f20>
1400039da:     	movq	0x3c8(%rbp), %rax
1400039e1:     	movq	%rax, 0x3e8(%rbp)
1400039e8:     	movq	0x3d0(%rbp), %rdi
1400039ef:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
1400039f4:     	cmpq	%rax, %rdi
1400039f7:     	movl	$0xffffffff, %r12d      # imm = 0xFFFFFFFF
1400039fd:     	cmovbq	%rdi, %r12
140003a01:     	movq	%r12, 0x3d8(%rbp)
140003a08:     	movq	%rdi, %rbx
140003a0b:     	movq	%r12, %rsi
140003a0e:     	movq	0x3e8(%rbp), %r13
140003a15:     	movq	%r12, %r15
140003a18:     	xorl	%ecx, %ecx
140003a1a:     	callq	*0x16628(%rip)          # 0x14001a048
140003a20:     	movl	%r15d, %ecx
140003a23:     	movq	%r13, %rdx
140003a26:     	callq	*0x16624(%rip)          # 0x14001a050
140003a2c:     	movl	%eax, %r14d
140003a2f:     	testl	%eax, %eax
140003a31:     	jne	0x140003a41 <.text+0x2a41>
140003a33:     	callq	*0x165c7(%rip)          # 0x14001a000
140003a39:     	testl	%eax, %eax
140003a3b:     	jne	0x140003ae8 <.text+0x2ae8>
140003a41:     	movl	%r14d, %r8d
140003a44:     	cmpq	%r8, %r15
140003a47:     	jne	0x1400039a0 <.text+0x29a0>
140003a4d:     	callq	*0x165ad(%rip)          # 0x14001a000
140003a53:     	cmpl	$0x7a, %eax
140003a56:     	jne	0x140003b0b <.text+0x2b0b>
140003a5c:     	addq	%r15, %r15
140003a5f:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
140003a64:     	cmpq	%rax, %r15
140003a67:     	cmovaeq	%rax, %r15
140003a6b:     	movq	%r15, %r8
140003a6e:     	cmpq	$0x201, %r8             # imm = 0x201
140003a75:     	jb	0x1400039af <.text+0x29af>
140003a7b:     	jmp	0x1400039c0 <.text+0x29c0>
140003a80:     	cmpq	%r8, %rsi
140003a83:     	jb	0x140003b25 <.text+0x2b25>
140003a89:     	leaq	0x3a8(%rbp), %rcx
140003a90:     	movq	%r13, %rdx
140003a93:     	callq	0x1400058b0 <.text+0x48b0>
140003a98:     	movups	0x3a8(%rbp), %xmm0
140003a9f:     	movups	0x3b8(%rbp), %xmm1
140003aa6:     	movq	0x3e0(%rbp), %rsi
140003aad:     	movups	%xmm1, 0x10(%rsi)
140003ab1:     	movups	%xmm0, (%rsi)
140003ab4:     	testq	%rdi, %rdi
140003ab7:     	je	0x140003ad1 <.text+0x2ad1>
140003ab9:     	addq	%rdi, %rdi
140003abc:     	movl	$0x2, %r8d
140003ac2:     	movq	0x3e8(%rbp), %rcx
140003ac9:     	movq	%rdi, %rdx
140003acc:     	callq	0x140001350 <.text+0x350>
140003ad1:     	movq	%rsi, %rax
140003ad4:     	addq	$0x478, %rsp            # imm = 0x478
140003adb:     	popq	%rbx
140003adc:     	popq	%rdi
140003add:     	popq	%rsi
140003ade:     	popq	%r12
140003ae0:     	popq	%r13
140003ae2:     	popq	%r14
140003ae4:     	popq	%r15
140003ae6:     	popq	%rbp
140003ae7:     	retq
140003ae8:     	callq	*0x16512(%rip)          # 0x14001a000
140003aee:     	shlq	$0x20, %rax
140003af2:     	orq	$0x2, %rax
140003af6:     	movq	0x3e0(%rbp), %rsi
140003afd:     	movq	%rax, (%rsi)
140003b00:     	movb	$0x2, 0x18(%rsi)
140003b04:     	testq	%rdi, %rdi
140003b07:     	jne	0x140003ab9 <.text+0x2ab9>
140003b09:     	jmp	0x140003ad1 <.text+0x2ad1>
140003b0b:     	leaq	0x16eae(%rip), %rcx     # 0x14001a9c0
140003b12:     	leaq	0x18cf7(%rip), %r8      # 0x14001c810
140003b19:     	movl	$0x28, %edx
140003b1e:     	callq	0x140019880 <.text+0x18880>
140003b23:     	jmp	0x140003b3a <.text+0x2b3a>
140003b25:     	leaq	0x18ccc(%rip), %rax     # 0x14001c7f8
140003b2c:     	movq	%r8, %rcx
140003b2f:     	movq	%rsi, %rdx
140003b32:     	movq	%rax, %r8
140003b35:     	callq	0x140019cd0 <.text+0x18cd0>
140003b3a:     	ud2
140003b3c:     	nopl	(%rax)
140003b40:     	movq	%rdx, 0x10(%rsp)
140003b45:     	pushq	%rbp
140003b46:     	pushq	%r15
140003b48:     	pushq	%r14
140003b4a:     	pushq	%r13
140003b4c:     	pushq	%r12
140003b4e:     	pushq	%rsi
140003b4f:     	pushq	%rdi
140003b50:     	pushq	%rbx
140003b51:     	subq	$0x28, %rsp
140003b55:     	leaq	0x80(%rdx), %rbp
140003b5c:     	movq	0x3d0(%rbp), %rdx
140003b63:     	testq	%rdx, %rdx
140003b66:     	je	0x140003b7d <.text+0x2b7d>
140003b68:     	movq	0x3c8(%rbp), %rcx
140003b6f:     	addq	%rdx, %rdx
140003b72:     	movl	$0x2, %r8d
140003b78:     	callq	0x140001350 <.text+0x350>
140003b7d:     	nop
140003b7e:     	addq	$0x28, %rsp
140003b82:     	popq	%rbx
140003b83:     	popq	%rdi
140003b84:     	popq	%rsi
140003b85:     	popq	%r12
140003b87:     	popq	%r13
140003b89:     	popq	%r14
140003b8b:     	popq	%r15
140003b8d:     	popq	%rbp
140003b8e:     	retq
140003b8f:     	int3
140003b90:     	pushq	%rbp
140003b91:     	pushq	%r15
140003b93:     	pushq	%r14
140003b95:     	pushq	%r13
140003b97:     	pushq	%r12
140003b99:     	pushq	%rsi
140003b9a:     	pushq	%rdi
140003b9b:     	pushq	%rbx
140003b9c:     	subq	$0x4a8, %rsp            # imm = 0x4A8
140003ba3:     	leaq	0x80(%rsp), %rbp
140003bab:     	movq	$-0x2, 0x420(%rbp)
140003bb6:     	movq	%rcx, %rsi
140003bb9:     	leaq	-0x60(%rbp), %rcx
140003bbd:     	callq	0x14000ad60 <.text+0x9d60>
140003bc2:     	movq	-0x60(%rbp), %rax
140003bc6:     	movq	%rax, 0x408(%rbp)
140003bcd:     	testq	%rax, %rax
140003bd0:     	je	0x140003d16 <.text+0x2d16>
140003bd6:     	movq	%rsi, 0x400(%rbp)
140003bdd:     	movq	-0x58(%rbp), %rax
140003be1:     	movq	%rax, 0x418(%rbp)
140003be8:     	movq	$0x2, 0x3e8(%rbp)
140003bf3:     	xorps	%xmm0, %xmm0
140003bf6:     	movups	%xmm0, 0x3f0(%rbp)
140003bfd:     	movl	$0x200, %r8d            # imm = 0x200
140003c03:     	movl	$0x2, %eax
140003c08:     	movq	%rax, 0x410(%rbp)
140003c0f:     	xorl	%edi, %edi
140003c11:     	xorl	%ebx, %ebx
140003c13:     	xorl	%r13d, %r13d
140003c16:     	cmpq	$0x201, %r8             # imm = 0x201
140003c1d:     	jae	0x140003c50 <.text+0x2c50>
140003c1f:     	jmp	0x140003c3f <.text+0x2c3f>
140003c21:     	nopw	%cs:(%rax,%rax)
140003c30:     	jae	0x140003d28 <.text+0x2d28>
140003c36:     	cmpq	$0x201, %r8             # imm = 0x201
140003c3d:     	jae	0x140003c50 <.text+0x2c50>
140003c3f:     	movl	$0x200, %r15d           # imm = 0x200
140003c45:     	leaq	-0x60(%rbp), %r14
140003c49:     	movq	%r8, %r12
140003c4c:     	jmp	0x140003ca8 <.text+0x2ca8>
140003c4e:     	nop
140003c50:     	subq	%r13, %r8
140003c53:     	subq	%r13, %rbx
140003c56:     	cmpq	%r8, %rbx
140003c59:     	jae	0x140003c7f <.text+0x2c7f>
140003c5b:     	leaq	0x3e8(%rbp), %rcx
140003c62:     	movq	%r13, %rdx
140003c65:     	callq	0x140018f20 <.text+0x17f20>
140003c6a:     	movq	0x3e8(%rbp), %rax
140003c71:     	movq	%rax, 0x410(%rbp)
140003c78:     	movq	0x3f0(%rbp), %rdi
140003c7f:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
140003c84:     	cmpq	%rax, %rdi
140003c87:     	movl	$0xffffffff, %r13d      # imm = 0xFFFFFFFF
140003c8d:     	cmovbq	%rdi, %r13
140003c91:     	movq	%r13, 0x3f8(%rbp)
140003c98:     	movq	%rdi, %rbx
140003c9b:     	movq	%r13, %r15
140003c9e:     	movq	0x410(%rbp), %r14
140003ca5:     	movq	%r13, %r12
140003ca8:     	xorl	%ecx, %ecx
140003caa:     	callq	*0x16398(%rip)          # 0x14001a048
140003cb0:     	movq	0x408(%rbp), %rcx
140003cb7:     	movq	%r14, %rdx
140003cba:     	movl	%r12d, %r8d
140003cbd:     	callq	*0x16395(%rip)          # 0x14001a058
140003cc3:     	movl	%eax, %esi
140003cc5:     	testl	%eax, %eax
140003cc7:     	jne	0x140003cd7 <.text+0x2cd7>
140003cc9:     	callq	*0x16331(%rip)          # 0x14001a000
140003ccf:     	testl	%eax, %eax
140003cd1:     	jne	0x140003dfb <.text+0x2dfb>
140003cd7:     	movl	%esi, %r8d
140003cda:     	cmpq	%r8, %r12
140003cdd:     	jne	0x140003c30 <.text+0x2c30>
140003ce3:     	callq	*0x16317(%rip)          # 0x14001a000
140003ce9:     	cmpl	$0x7a, %eax
140003cec:     	jne	0x140003e25 <.text+0x2e25>
140003cf2:     	addq	%r12, %r12
140003cf5:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
140003cfa:     	cmpq	%rax, %r12
140003cfd:     	cmovaeq	%rax, %r12
140003d01:     	movq	%r12, %r8
140003d04:     	cmpq	$0x201, %r8             # imm = 0x201
140003d0b:     	jb	0x140003c3f <.text+0x2c3f>
140003d11:     	jmp	0x140003c50 <.text+0x2c50>
140003d16:     	leaq	-0x58(%rbp), %rcx
140003d1a:     	callq	0x140001c00 <.text+0xc00>
140003d1f:     	movb	$0x2, 0x18(%rsi)
140003d23:     	jmp	0x140003dba <.text+0x2dba>
140003d28:     	cmpq	%r8, %r15
140003d2b:     	jb	0x140003e3f <.text+0x2e3f>
140003d31:     	leaq	0x3a0(%rbp), %rcx
140003d38:     	movq	%r14, %rdx
140003d3b:     	callq	0x1400058b0 <.text+0x48b0>
140003d40:     	movups	0x3a0(%rbp), %xmm0
140003d47:     	movups	0x3b0(%rbp), %xmm1
140003d4e:     	movaps	%xmm1, 0x3d0(%rbp)
140003d55:     	movaps	%xmm0, 0x3c0(%rbp)
140003d5c:     	testq	%rdi, %rdi
140003d5f:     	je	0x140003d79 <.text+0x2d79>
140003d61:     	addq	%rdi, %rdi
140003d64:     	movl	$0x2, %r8d
140003d6a:     	movq	0x410(%rbp), %rcx
140003d71:     	movq	%rdi, %rdx
140003d74:     	callq	0x140001350 <.text+0x350>
140003d79:     	cmpb	$0x2, 0x3d8(%rbp)
140003d80:     	jne	0x140003dd1 <.text+0x2dd1>
140003d82:     	movq	0x400(%rbp), %rsi
140003d89:     	movb	$0x2, 0x18(%rsi)
140003d8d:     	leaq	0x3c0(%rbp), %rcx
140003d94:     	callq	0x140001c00 <.text+0xc00>
140003d99:     	movq	0x418(%rbp), %rdx
140003da0:     	testq	%rdx, %rdx
140003da3:     	je	0x140003dba <.text+0x2dba>
140003da5:     	addq	%rdx, %rdx
140003da8:     	movl	$0x2, %r8d
140003dae:     	movq	0x408(%rbp), %rcx
140003db5:     	callq	0x140001350 <.text+0x350>
140003dba:     	movq	%rsi, %rax
140003dbd:     	addq	$0x4a8, %rsp            # imm = 0x4A8
140003dc4:     	popq	%rbx
140003dc5:     	popq	%rdi
140003dc6:     	popq	%rsi
140003dc7:     	popq	%r12
140003dc9:     	popq	%r13
140003dcb:     	popq	%r14
140003dcd:     	popq	%r15
140003dcf:     	popq	%rbp
140003dd0:     	retq
140003dd1:     	movaps	0x3c0(%rbp), %xmm0
140003dd8:     	movaps	0x3d0(%rbp), %xmm1
140003ddf:     	movq	0x400(%rbp), %rsi
140003de6:     	movups	%xmm1, 0x10(%rsi)
140003dea:     	movups	%xmm0, (%rsi)
140003ded:     	movq	0x418(%rbp), %rdx
140003df4:     	testq	%rdx, %rdx
140003df7:     	jne	0x140003da5 <.text+0x2da5>
140003df9:     	jmp	0x140003dba <.text+0x2dba>
140003dfb:     	callq	*0x161ff(%rip)          # 0x14001a000
140003e01:     	shlq	$0x20, %rax
140003e05:     	orq	$0x2, %rax
140003e09:     	movq	%rax, 0x3c0(%rbp)
140003e10:     	movb	$0x2, 0x3d8(%rbp)
140003e17:     	testq	%rdi, %rdi
140003e1a:     	jne	0x140003d61 <.text+0x2d61>
140003e20:     	jmp	0x140003d79 <.text+0x2d79>
140003e25:     	leaq	0x16b94(%rip), %rcx     # 0x14001a9c0
140003e2c:     	leaq	0x189dd(%rip), %r8      # 0x14001c810
140003e33:     	movl	$0x28, %edx
140003e38:     	callq	0x140019880 <.text+0x18880>
140003e3d:     	jmp	0x140003e54 <.text+0x2e54>
140003e3f:     	leaq	0x189b2(%rip), %rax     # 0x14001c7f8
140003e46:     	movq	%r8, %rcx
140003e49:     	movq	%r15, %rdx
140003e4c:     	movq	%rax, %r8
140003e4f:     	callq	0x140019cd0 <.text+0x18cd0>
140003e54:     	ud2
140003e56:     	nopw	%cs:(%rax,%rax)
140003e60:     	movq	%rdx, 0x10(%rsp)
140003e65:     	pushq	%rbp
140003e66:     	pushq	%r15
140003e68:     	pushq	%r14
140003e6a:     	pushq	%r13
140003e6c:     	pushq	%r12
140003e6e:     	pushq	%rsi
140003e6f:     	pushq	%rdi
140003e70:     	pushq	%rbx
140003e71:     	subq	$0x28, %rsp
140003e75:     	leaq	0x80(%rdx), %rbp
140003e7c:     	movq	0x3f0(%rbp), %rdx
140003e83:     	testq	%rdx, %rdx
140003e86:     	je	0x140003e9d <.text+0x2e9d>
140003e88:     	movq	0x3e8(%rbp), %rcx
140003e8f:     	addq	%rdx, %rdx
140003e92:     	movl	$0x2, %r8d
140003e98:     	callq	0x140001350 <.text+0x350>
140003e9d:     	nop
140003e9e:     	addq	$0x28, %rsp
140003ea2:     	popq	%rbx
140003ea3:     	popq	%rdi
140003ea4:     	popq	%rsi
140003ea5:     	popq	%r12
140003ea7:     	popq	%r13
140003ea9:     	popq	%r14
140003eab:     	popq	%r15
140003ead:     	popq	%rbp
140003eae:     	retq
140003eaf:     	nop
140003eb0:     	movq	%rdx, 0x10(%rsp)
140003eb5:     	pushq	%rbp
140003eb6:     	pushq	%r15
140003eb8:     	pushq	%r14
140003eba:     	pushq	%r13
140003ebc:     	pushq	%r12
140003ebe:     	pushq	%rsi
140003ebf:     	pushq	%rdi
140003ec0:     	pushq	%rbx
140003ec1:     	subq	$0x28, %rsp
140003ec5:     	leaq	0x80(%rdx), %rbp
140003ecc:     	cmpq	$0x0, 0x418(%rbp)
140003ed4:     	je	0x140003ef2 <.text+0x2ef2>
140003ed6:     	movq	0x418(%rbp), %rdx
140003edd:     	addq	%rdx, %rdx
140003ee0:     	movl	$0x2, %r8d
140003ee6:     	movq	0x408(%rbp), %rcx
140003eed:     	callq	0x140001350 <.text+0x350>
140003ef2:     	nop
140003ef3:     	addq	$0x28, %rsp
140003ef7:     	popq	%rbx
140003ef8:     	popq	%rdi
140003ef9:     	popq	%rsi
140003efa:     	popq	%r12
140003efc:     	popq	%r13
140003efe:     	popq	%r14
140003f00:     	popq	%r15
140003f02:     	popq	%rbp
140003f03:     	retq
140003f04:     	int3
140003f05:     	int3
140003f06:     	int3
140003f07:     	int3
140003f08:     	int3
140003f09:     	int3
140003f0a:     	int3
140003f0b:     	int3
140003f0c:     	int3
140003f0d:     	int3
140003f0e:     	int3
140003f0f:     	int3
140003f10:     	pushq	%rbp
140003f11:     	pushq	%r15
140003f13:     	pushq	%r14
140003f15:     	pushq	%r13
140003f17:     	pushq	%r12
140003f19:     	pushq	%rsi
140003f1a:     	pushq	%rdi
140003f1b:     	pushq	%rbx
140003f1c:     	subq	$0x68, %rsp
140003f20:     	leaq	0x60(%rsp), %rbp
140003f25:     	movq	$-0x2, (%rbp)
140003f2d:     	movq	0x10(%rcx), %r14
140003f31:     	testq	%r14, %r14
140003f34:     	movq	%rcx, -0x8(%rbp)
140003f38:     	je	0x140004065 <.text+0x3065>
140003f3e:     	leaq	0x19(%rcx), %r12
140003f42:     	leaq	-0x28(%rbp), %rsi
140003f46:     	leaq	-0x18(%rbp), %rdi
140003f4a:     	xorl	%eax, %eax
140003f4c:     	leaq	-0x30(%rbp), %rbx
140003f50:     	leaq	0x18cd9(%rip), %r13     # 0x14001cc30
140003f57:     	jmp	0x140003f86 <.text+0x2f86>
140003f59:     	movq	%r15, %rax
140003f5c:     	shrq	$0x20, %rax
140003f60:     	cmpl	$0x23, %eax
140003f63:     	jne	0x14000405a <.text+0x305a>
140003f69:     	movq	%rdi, %rcx
140003f6c:     	callq	0x140001c00 <.text+0xc00>
140003f71:     	movq	-0x8(%rbp), %rcx
140003f75:     	movq	-0x10(%rbp), %rax
140003f79:     	movq	0x10(%rcx), %r14
140003f7d:     	cmpq	%r14, %rax
140003f80:     	jae	0x140004067 <.text+0x3067>
140003f86:     	movb	$0x1, 0x18(%rcx)
140003f8a:     	subq	%rax, %r14
140003f8d:     	movq	(%rcx), %r8
140003f90:     	movq	%rax, -0x10(%rbp)
140003f94:     	addq	%rax, %r8
140003f97:     	movq	%r12, 0x20(%rsp)
140003f9c:     	movq	%rbx, %rcx
140003f9f:     	movl	$0xfffffff5, %edx       # imm = 0xFFFFFFF5
140003fa4:     	movq	%r14, %r9
140003fa7:     	callq	0x14000a410 <.text+0x9410>
140003fac:     	cmpq	$0x0, -0x30(%rbp)
140003fb1:     	je	0x140003ff0 <.text+0x2ff0>
140003fb3:     	movq	-0x28(%rbp), %rax
140003fb7:     	movl	%eax, %ecx
140003fb9:     	andl	$0x3, %ecx
140003fbc:     	cmpq	$0x2, %rcx
140003fc0:     	jb	0x140003ff0 <.text+0x2ff0>
140003fc2:     	cmpl	$0x2, %ecx
140003fc5:     	jne	0x140003ff0 <.text+0x2ff0>
140003fc7:     	shrq	$0x20, %rax
140003fcb:     	cmpl	$0x6, %eax
140003fce:     	jne	0x140003ff0 <.text+0x2ff0>
140003fd0:     	movq	%rsi, %rcx
140003fd3:     	callq	0x140001c00 <.text+0xc00>
140003fd8:     	movq	-0x8(%rbp), %rcx
140003fdc:     	movb	$0x0, 0x18(%rcx)
140003fe0:     	testq	%r14, %r14
140003fe3:     	movq	-0x10(%rbp), %rax
140003fe7:     	jne	0x14000403d <.text+0x303d>
140003fe9:     	jmp	0x140004092 <.text+0x3092>
140003fee:     	nop
140003ff0:     	movups	-0x30(%rbp), %xmm0
140003ff4:     	movaps	%xmm0, -0x20(%rbp)
140003ff8:     	cmpq	$0x0, -0x20(%rbp)
140003ffd:     	movq	-0x8(%rbp), %rcx
140004001:     	movb	$0x0, 0x18(%rcx)
140004005:     	je	0x140004030 <.text+0x3030>
140004007:     	movq	-0x18(%rbp), %r15
14000400b:     	movl	%r15d, %eax
14000400e:     	andl	$0x3, %eax
140004011:     	movslq	(%r13,%rax,4), %rax
140004016:     	addq	%r13, %rax
140004019:     	jmpq	*%rax
14000401b:     	cmpb	$0x23, 0x10(%r15)
140004020:     	je	0x140003f69 <.text+0x2f69>
140004026:     	jmp	0x14000405a <.text+0x305a>
140004028:     	nopl	(%rax,%rax)
140004030:     	movq	-0x18(%rbp), %r14
140004034:     	testq	%r14, %r14
140004037:     	movq	-0x10(%rbp), %rax
14000403b:     	je	0x140004092 <.text+0x3092>
14000403d:     	addq	%r14, %rax
140004040:     	movq	0x10(%rcx), %r14
140004044:     	cmpq	%r14, %rax
140004047:     	jb	0x140003f86 <.text+0x2f86>
14000404d:     	jmp	0x140004067 <.text+0x3067>
14000404f:     	cmpb	$0x23, 0xf(%r15)
140004054:     	je	0x140003f69 <.text+0x2f69>
14000405a:     	movq	-0x10(%rbp), %rcx
14000405e:     	testq	%rcx, %rcx
140004061:     	jne	0x1400040a2 <.text+0x30a2>
140004063:     	jmp	0x1400040d6 <.text+0x30d6>
140004065:     	xorl	%eax, %eax
140004067:     	testq	%rax, %rax
14000406a:     	je	0x14000408d <.text+0x308d>
14000406c:     	xorl	%esi, %esi
14000406e:     	movl	$0x0, %r15d
140004074:     	cmpq	%rax, %r14
140004077:     	jae	0x1400040ce <.text+0x30ce>
140004079:     	movq	%rax, %rcx
14000407c:     	leaq	0x169b5(%rip), %r8      # 0x14001aa38
140004083:     	movq	%r14, %rdx
140004086:     	callq	0x140019cd0 <.text+0x18cd0>
14000408b:     	ud2
14000408d:     	xorl	%r15d, %r15d
140004090:     	jmp	0x1400040d6 <.text+0x30d6>
140004092:     	leaq	0x16eb7(%rip), %r15     # 0x14001af50
140004099:     	movq	-0x10(%rbp), %rcx
14000409d:     	testq	%rcx, %rcx
1400040a0:     	je	0x1400040d6 <.text+0x30d6>
1400040a2:     	movq	-0x8(%rbp), %rax
1400040a6:     	movq	0x10(%rax), %rdx
1400040aa:     	movq	%rdx, %rsi
1400040ad:     	subq	%rcx, %rsi
1400040b0:     	jb	0x1400040ea <.text+0x30ea>
1400040b2:     	movq	$0x0, 0x10(%rax)
1400040ba:     	je	0x1400040d6 <.text+0x30d6>
1400040bc:     	movq	(%rax), %rcx
1400040bf:     	movq	-0x10(%rbp), %rdx
1400040c3:     	addq	%rcx, %rdx
1400040c6:     	movq	%rsi, %r8
1400040c9:     	callq	0x140018bf7 <.text+0x17bf7>
1400040ce:     	movq	-0x8(%rbp), %rax
1400040d2:     	movq	%rsi, 0x10(%rax)
1400040d6:     	movq	%r15, %rax
1400040d9:     	addq	$0x68, %rsp
1400040dd:     	popq	%rbx
1400040de:     	popq	%rdi
1400040df:     	popq	%rsi
1400040e0:     	popq	%r12
1400040e2:     	popq	%r13
1400040e4:     	popq	%r14
1400040e6:     	popq	%r15
1400040e8:     	popq	%rbp
1400040e9:     	retq
1400040ea:     	leaq	0x16947(%rip), %r8      # 0x14001aa38
1400040f1:     	movq	-0x10(%rbp), %rcx
1400040f5:     	callq	0x140019cd0 <.text+0x18cd0>
1400040fa:     	ud2
1400040fc:     	nopl	(%rax)
140004100:     	movq	%rdx, 0x10(%rsp)
140004105:     	pushq	%rbp
140004106:     	pushq	%r15
140004108:     	pushq	%r14
14000410a:     	pushq	%r13
14000410c:     	pushq	%r12
14000410e:     	pushq	%rsi
14000410f:     	pushq	%rdi
140004110:     	pushq	%rbx
140004111:     	subq	$0x28, %rsp
140004115:     	leaq	0x60(%rdx), %rbp
140004119:     	movq	-0x8(%rbp), %rcx
14000411d:     	movq	-0x10(%rbp), %rdx
140004121:     	callq	0x140001df0 <.text+0xdf0>
140004126:     	nop
140004127:     	addq	$0x28, %rsp
14000412b:     	popq	%rbx
14000412c:     	popq	%rdi
14000412d:     	popq	%rsi
14000412e:     	popq	%r12
140004130:     	popq	%r13
140004132:     	popq	%r14
140004134:     	popq	%r15
140004136:     	popq	%rbp
140004137:     	retq
140004138:     	int3
140004139:     	int3
14000413a:     	int3
14000413b:     	int3
14000413c:     	int3
14000413d:     	int3
14000413e:     	int3
14000413f:     	int3
140004140:     	pushq	%rbp
140004141:     	pushq	%rsi
140004142:     	pushq	%rdi
140004143:     	pushq	%rbx
140004144:     	subq	$0x98, %rsp
14000414b:     	leaq	0x80(%rsp), %rbp
140004153:     	movq	$-0x2, 0x10(%rbp)
14000415b:     	movq	%rdx, %rsi
14000415e:     	movq	(%rcx), %rdx
140004161:     	movl	%edx, %eax
140004163:     	andl	$0x3, %eax
140004166:     	leaq	0x18ad3(%rip), %rcx     # 0x14001cc40
14000416d:     	movslq	(%rcx,%rax,4), %rax
140004171:     	addq	%rcx, %rax
140004174:     	jmpq	*%rax
140004176:     	movq	(%rdx), %rcx
140004179:     	movq	0x8(%rdx), %rdx
14000417d:     	movq	%rsi, %r8
140004180:     	addq	$0x98, %rsp
140004187:     	popq	%rbx
140004188:     	popq	%rdi
140004189:     	popq	%rsi
14000418a:     	popq	%rbp
14000418b:     	jmp	0x140015b40 <.text+0x14b40>
140004190:     	movq	-0x1(%rdx), %rcx
140004194:     	movq	0x7(%rdx), %rax
140004198:     	movq	0x20(%rax), %rax
14000419c:     	movq	%rsi, %rdx
14000419f:     	addq	$0x98, %rsp
1400041a6:     	popq	%rbx
1400041a7:     	popq	%rdi
1400041a8:     	popq	%rsi
1400041a9:     	popq	%rbp
1400041aa:     	jmpq	*%rax
1400041ad:     	shrq	$0x20, %rdx
1400041b1:     	movl	%edx, 0xc(%rbp)
1400041b4:     	leaq	-0x10(%rbp), %rdi
1400041b8:     	movq	%rdi, %rcx
1400041bb:     	callq	0x140009b40 <.text+0x8b40>
1400041c0:     	movq	%rdi, -0x30(%rbp)
1400041c4:     	leaq	-0x148b(%rip), %rax     # 0x140002d40 <.text+0x1d40>
1400041cb:     	movq	%rax, -0x28(%rbp)
1400041cf:     	leaq	0xc(%rbp), %rax
1400041d3:     	movq	%rax, -0x20(%rbp)
1400041d7:     	leaq	0x139d2(%rip), %rax     # 0x140017bb0 <.text+0x16bb0>
1400041de:     	movq	%rax, -0x18(%rbp)
1400041e2:     	leaq	0x170d7(%rip), %rax     # 0x14001b2c0
1400041e9:     	movq	%rax, -0x60(%rbp)
1400041ed:     	movq	$0x3, -0x58(%rbp)
1400041f5:     	movq	$0x0, -0x40(%rbp)
1400041fd:     	leaq	-0x30(%rbp), %rax
140004201:     	movq	%rax, -0x50(%rbp)
140004205:     	movq	$0x2, -0x48(%rbp)
14000420d:     	leaq	-0x60(%rbp), %rdx
140004211:     	movq	%rsi, %rcx
140004214:     	callq	0x140015350 <.text+0x14350>
140004219:     	movl	%eax, %ebx
14000421b:     	movq	-0x8(%rbp), %rdx
14000421f:     	testq	%rdx, %rdx
140004222:     	je	0x140004533 <.text+0x3533>
140004228:     	movq	-0x10(%rbp), %rcx
14000422c:     	movl	$0x1, %r8d
140004232:     	callq	0x140001350 <.text+0x350>
140004237:     	jmp	0x140004533 <.text+0x3533>
14000423c:     	shrq	$0x20, %rdx
140004240:     	leaq	0x18a09(%rip), %rax     # 0x14001cc50
140004247:     	movslq	(%rax,%rdx,4), %rcx
14000424b:     	addq	%rax, %rcx
14000424e:     	jmpq	*%rcx
140004250:     	leaq	0x16d69(%rip), %rax     # 0x14001afc0
140004257:     	movl	$0x10, %ecx
14000425c:     	jmp	0x1400044df <.text+0x34df>
140004261:     	leaq	0x16d68(%rip), %rax     # 0x14001afd0
140004268:     	movl	$0x11, %ecx
14000426d:     	jmp	0x1400044df <.text+0x34df>
140004272:     	leaq	0x16d68(%rip), %rax     # 0x14001afe1
140004279:     	movl	$0x12, %ecx
14000427e:     	jmp	0x1400044df <.text+0x34df>
140004283:     	leaq	0x16d69(%rip), %rax     # 0x14001aff3
14000428a:     	movl	$0x10, %ecx
14000428f:     	jmp	0x1400044df <.text+0x34df>
140004294:     	leaq	0x16d68(%rip), %rax     # 0x14001b003
14000429b:     	movl	$0x10, %ecx
1400042a0:     	jmp	0x1400044df <.text+0x34df>
1400042a5:     	leaq	0x16d67(%rip), %rax     # 0x14001b013
1400042ac:     	jmp	0x1400044da <.text+0x34da>
1400042b1:     	leaq	0x16d6e(%rip), %rax     # 0x14001b026
1400042b8:     	movl	$0x12, %ecx
1400042bd:     	jmp	0x1400044df <.text+0x34df>
1400042c2:     	leaq	0x16d6f(%rip), %rax     # 0x14001b038
1400042c9:     	movl	$0xd, %ecx
1400042ce:     	jmp	0x1400044df <.text+0x34df>
1400042d3:     	leaq	0x16d6b(%rip), %rax     # 0x14001b045
1400042da:     	movl	$0xe, %ecx
1400042df:     	jmp	0x1400044df <.text+0x34df>
1400042e4:     	leaq	0x16d68(%rip), %rax     # 0x14001b053
1400042eb:     	movl	$0x15, %ecx
1400042f0:     	jmp	0x1400044df <.text+0x34df>
1400042f5:     	leaq	0x16d6c(%rip), %rax     # 0x14001b068
1400042fc:     	movl	$0xc, %ecx
140004301:     	jmp	0x1400044df <.text+0x34df>
140004306:     	leaq	0x16d67(%rip), %rax     # 0x14001b074
14000430d:     	movl	$0xb, %ecx
140004312:     	jmp	0x1400044df <.text+0x34df>
140004317:     	leaq	0x16d61(%rip), %rax     # 0x14001b07f
14000431e:     	movl	$0x15, %ecx
140004323:     	jmp	0x1400044df <.text+0x34df>
140004328:     	leaq	0x16d65(%rip), %rax     # 0x14001b094
14000432f:     	movl	$0x15, %ecx
140004334:     	jmp	0x1400044df <.text+0x34df>
140004339:     	leaq	0x16d69(%rip), %rax     # 0x14001b0a9
140004340:     	movl	$0xf, %ecx
140004345:     	jmp	0x1400044df <.text+0x34df>
14000434a:     	leaq	0x16d67(%rip), %rax     # 0x14001b0b8
140004351:     	movl	$0xe, %ecx
140004356:     	jmp	0x1400044df <.text+0x34df>
14000435b:     	leaq	0x16d64(%rip), %rax     # 0x14001b0c6
140004362:     	jmp	0x1400044da <.text+0x34da>
140004367:     	leaq	0x16d6b(%rip), %rax     # 0x14001b0d9
14000436e:     	movl	$0x26, %ecx
140004373:     	jmp	0x1400044df <.text+0x34df>
140004378:     	leaq	0x16d80(%rip), %rax     # 0x14001b0ff
14000437f:     	movl	$0x38, %ecx
140004384:     	jmp	0x1400044df <.text+0x34df>
140004389:     	leaq	0x16da7(%rip), %rax     # 0x14001b137
140004390:     	movl	$0x19, %ecx
140004395:     	jmp	0x1400044df <.text+0x34df>
14000439a:     	leaq	0x16daf(%rip), %rax     # 0x14001b150
1400043a1:     	movl	$0x17, %ecx
1400043a6:     	jmp	0x1400044df <.text+0x34df>
1400043ab:     	leaq	0x16db5(%rip), %rax     # 0x14001b167
1400043b2:     	movl	$0xc, %ecx
1400043b7:     	jmp	0x1400044df <.text+0x34df>
1400043bc:     	leaq	0x16db0(%rip), %rax     # 0x14001b173
1400043c3:     	movl	$0x9, %ecx
1400043c8:     	jmp	0x1400044df <.text+0x34df>
1400043cd:     	leaq	0x16da8(%rip), %rax     # 0x14001b17c
1400043d4:     	movl	$0xa, %ecx
1400043d9:     	jmp	0x1400044df <.text+0x34df>
1400043de:     	leaq	0x16da1(%rip), %rax     # 0x14001b186
1400043e5:     	movl	$0x10, %ecx
1400043ea:     	jmp	0x1400044df <.text+0x34df>
1400043ef:     	leaq	0x16da0(%rip), %rax     # 0x14001b196
1400043f6:     	movl	$0x17, %ecx
1400043fb:     	jmp	0x1400044df <.text+0x34df>
140004400:     	leaq	0x16da6(%rip), %rax     # 0x14001b1ad
140004407:     	movl	$0x19, %ecx
14000440c:     	jmp	0x1400044df <.text+0x34df>
140004411:     	leaq	0x16dae(%rip), %rax     # 0x14001b1c6
140004418:     	movl	$0xe, %ecx
14000441d:     	jmp	0x1400044df <.text+0x34df>
140004422:     	leaq	0x16dab(%rip), %rax     # 0x14001b1d4
140004429:     	movl	$0xd, %ecx
14000442e:     	jmp	0x1400044df <.text+0x34df>
140004433:     	leaq	0x16da7(%rip), %rax     # 0x14001b1e1
14000443a:     	movl	$0x14, %ecx
14000443f:     	jmp	0x1400044df <.text+0x34df>
140004444:     	leaq	0x16daa(%rip), %rax     # 0x14001b1f5
14000444b:     	movl	$0x8, %ecx
140004450:     	jmp	0x1400044df <.text+0x34df>
140004455:     	leaq	0x16da1(%rip), %rax     # 0x14001b1fd
14000445c:     	movl	$0x1b, %ecx
140004461:     	jmp	0x1400044df <.text+0x34df>
140004463:     	leaq	0x16dae(%rip), %rax     # 0x14001b218
14000446a:     	movl	$0xe, %ecx
14000446f:     	jmp	0x1400044df <.text+0x34df>
140004471:     	leaq	0x16dae(%rip), %rax     # 0x14001b226
140004478:     	movl	$0x10, %ecx
14000447d:     	jmp	0x1400044df <.text+0x34df>
14000447f:     	leaq	0x16db0(%rip), %rax     # 0x14001b236
140004486:     	movl	$0x16, %ecx
14000448b:     	jmp	0x1400044df <.text+0x34df>
14000448d:     	leaq	0x16db8(%rip), %rax     # 0x14001b24c
140004494:     	movl	$0x15, %ecx
140004499:     	jmp	0x1400044df <.text+0x34df>
14000449b:     	leaq	0x16dbf(%rip), %rax     # 0x14001b261
1400044a2:     	movl	$0xb, %ecx
1400044a7:     	jmp	0x1400044df <.text+0x34df>
1400044a9:     	leaq	0x16dbc(%rip), %rax     # 0x14001b26c
1400044b0:     	movl	$0x16, %ecx
1400044b5:     	jmp	0x1400044df <.text+0x34df>
1400044b7:     	leaq	0x16dc4(%rip), %rax     # 0x14001b282
1400044be:     	movl	$0xd, %ecx
1400044c3:     	jmp	0x1400044df <.text+0x34df>
1400044c5:     	leaq	0x16dc3(%rip), %rax     # 0x14001b28f
1400044cc:     	movl	$0xb, %ecx
1400044d1:     	jmp	0x1400044df <.text+0x34df>
1400044d3:     	leaq	0x16dc0(%rip), %rax     # 0x14001b29a
1400044da:     	movl	$0x13, %ecx
1400044df:     	movq	%rax, -0x30(%rbp)
1400044e3:     	movq	%rcx, -0x28(%rbp)
1400044e7:     	leaq	-0x30(%rbp), %rax
1400044eb:     	movq	%rax, -0x10(%rbp)
1400044ef:     	leaq	-0x2f36(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
1400044f6:     	movq	%rax, -0x8(%rbp)
1400044fa:     	leaq	0x16a67(%rip), %rax     # 0x14001af68
140004501:     	movq	%rax, -0x60(%rbp)
140004505:     	movq	$0x1, -0x58(%rbp)
14000450d:     	movq	$0x0, -0x40(%rbp)
140004515:     	leaq	-0x10(%rbp), %rax
140004519:     	movq	%rax, -0x50(%rbp)
14000451d:     	movq	$0x1, -0x48(%rbp)
140004525:     	leaq	-0x60(%rbp), %rdx
140004529:     	movq	%rsi, %rcx
14000452c:     	callq	0x140015350 <.text+0x14350>
140004531:     	movl	%eax, %ebx
140004533:     	movl	%ebx, %eax
140004535:     	addq	$0x98, %rsp
14000453c:     	popq	%rbx
14000453d:     	popq	%rdi
14000453e:     	popq	%rsi
14000453f:     	popq	%rbp
140004540:     	retq
140004541:     	nopw	%cs:(%rax,%rax)
140004550:     	movq	%rdx, 0x10(%rsp)
140004555:     	pushq	%rbp
140004556:     	pushq	%rsi
140004557:     	pushq	%rdi
140004558:     	pushq	%rbx
140004559:     	subq	$0x28, %rsp
14000455d:     	leaq	0x80(%rdx), %rbp
140004564:     	movq	-0x8(%rbp), %rdx
140004568:     	testq	%rdx, %rdx
14000456b:     	je	0x14000457c <.text+0x357c>
14000456d:     	movq	-0x10(%rbp), %rcx
140004571:     	movl	$0x1, %r8d
140004577:     	callq	0x140001350 <.text+0x350>
14000457c:     	nop
14000457d:     	addq	$0x28, %rsp
140004581:     	popq	%rbx
140004582:     	popq	%rdi
140004583:     	popq	%rsi
140004584:     	popq	%rbp
140004585:     	retq
140004586:     	int3
140004587:     	int3
140004588:     	int3
140004589:     	int3
14000458a:     	int3
14000458b:     	int3
14000458c:     	int3
14000458d:     	int3
14000458e:     	int3
14000458f:     	int3
140004590:     	pushq	%r15
140004592:     	pushq	%r14
140004594:     	pushq	%rsi
140004595:     	pushq	%rdi
140004596:     	pushq	%rbx
140004597:     	subq	$0x20, %rsp
14000459b:     	movq	%r9, %rsi
14000459e:     	movq	%r8, %r14
1400045a1:     	movq	%rdx, %rbx
1400045a4:     	movq	%rcx, %rdi
1400045a7:     	movq	0x8(%rdx), %rax
1400045ab:     	movq	0x10(%rdx), %r15
1400045af:     	subq	%r15, %rax
1400045b2:     	cmpq	%r9, %rax
1400045b5:     	jb	0x1400045e9 <.text+0x35e9>
1400045b7:     	movq	(%rbx), %rcx
1400045ba:     	addq	%r15, %rcx
1400045bd:     	movq	%r14, %rdx
1400045c0:     	movq	%rsi, %r8
1400045c3:     	callq	0x140018beb <.text+0x17beb>
1400045c8:     	addq	%rsi, %r15
1400045cb:     	movq	%r15, 0x10(%rbx)
1400045cf:     	movq	%rsi, 0x8(%rdi)
1400045d3:     	movq	$0x0, (%rdi)
1400045da:     	movq	%rdi, %rax
1400045dd:     	addq	$0x20, %rsp
1400045e1:     	popq	%rbx
1400045e2:     	popq	%rdi
1400045e3:     	popq	%rsi
1400045e4:     	popq	%r14
1400045e6:     	popq	%r15
1400045e8:     	retq
1400045e9:     	movq	%rbx, %rcx
1400045ec:     	movq	%r15, %rdx
1400045ef:     	movq	%rsi, %r8
1400045f2:     	callq	0x140018e60 <.text+0x17e60>
1400045f7:     	movq	0x10(%rbx), %r15
1400045fb:     	jmp	0x1400045b7 <.text+0x35b7>
1400045fd:     	int3
1400045fe:     	int3
1400045ff:     	int3
140004600:     	pushq	%r15
140004602:     	pushq	%r14
140004604:     	pushq	%r13
140004606:     	pushq	%r12
140004608:     	pushq	%rsi
140004609:     	pushq	%rdi
14000460a:     	pushq	%rbp
14000460b:     	pushq	%rbx
14000460c:     	subq	$0x28, %rsp
140004610:     	movq	%rcx, %rsi
140004613:     	testq	%r9, %r9
140004616:     	je	0x140004633 <.text+0x3633>
140004618:     	movq	%r9, %rdi
14000461b:     	movq	%r8, %rbx
14000461e:     	movq	%rdx, %r14
140004621:     	movl	%edi, %eax
140004623:     	andl	$0x3, %eax
140004626:     	cmpq	$0x4, %r9
14000462a:     	jae	0x14000463b <.text+0x363b>
14000462c:     	xorl	%r15d, %r15d
14000462f:     	xorl	%ecx, %ecx
140004631:     	jmp	0x140004678 <.text+0x3678>
140004633:     	xorl	%r15d, %r15d
140004636:     	jmp	0x14000471f <.text+0x371f>
14000463b:     	movq	%rdi, %rdx
14000463e:     	andq	$-0x4, %rdx
140004642:     	leaq	0x30(%rbx), %r8
140004646:     	xorl	%r15d, %r15d
140004649:     	xorl	%ecx, %ecx
14000464b:     	nopl	(%rax,%rax)
140004650:     	movl	-0x30(%r8), %r9d
140004654:     	movl	-0x20(%r8), %r10d
140004658:     	addq	%r15, %r9
14000465b:     	movl	-0x10(%r8), %r11d
14000465f:     	addq	%r10, %r11
140004662:     	addq	%r9, %r11
140004665:     	movl	(%r8), %r15d
140004668:     	addq	%r11, %r15
14000466b:     	addq	$0x4, %rcx
14000466f:     	addq	$0x40, %r8
140004673:     	cmpq	%rcx, %rdx
140004676:     	jne	0x140004650 <.text+0x3650>
140004678:     	testq	%rax, %rax
14000467b:     	je	0x1400046a0 <.text+0x36a0>
14000467d:     	shlq	$0x4, %rcx
140004681:     	addq	%rbx, %rcx
140004684:     	shlq	$0x4, %rax
140004688:     	xorl	%edx, %edx
14000468a:     	nopw	(%rax,%rax)
140004690:     	movl	(%rcx,%rdx), %r8d
140004694:     	addq	%r8, %r15
140004697:     	addq	$0x10, %rdx
14000469b:     	cmpq	%rdx, %rax
14000469e:     	jne	0x140004690 <.text+0x3690>
1400046a0:     	movq	0x8(%r14), %rax
1400046a4:     	movq	0x10(%r14), %rdx
1400046a8:     	subq	%rdx, %rax
1400046ab:     	cmpq	%r15, %rax
1400046ae:     	jb	0x14000473e <.text+0x373e>
1400046b4:     	testq	%rdi, %rdi
1400046b7:     	je	0x14000471f <.text+0x371f>
1400046b9:     	movq	%rsi, 0x20(%rsp)
1400046be:     	movq	0x10(%r14), %r12
1400046c2:     	shlq	$0x4, %rdi
1400046c6:     	xorl	%esi, %esi
1400046c8:     	jmp	0x1400046f1 <.text+0x36f1>
1400046ca:     	nopw	(%rax,%rax)
1400046d0:     	movq	(%r14), %rcx
1400046d3:     	addq	%r12, %rcx
1400046d6:     	movq	%rbp, %rdx
1400046d9:     	movq	%r13, %r8
1400046dc:     	callq	0x140018beb <.text+0x17beb>
1400046e1:     	addq	%r13, %r12
1400046e4:     	movq	%r12, 0x10(%r14)
1400046e8:     	addq	$0x10, %rsi
1400046ec:     	cmpq	%rsi, %rdi
1400046ef:     	je	0x14000471a <.text+0x371a>
1400046f1:     	movq	0x8(%rbx,%rsi), %rbp
1400046f6:     	movl	(%rbx,%rsi), %r13d
1400046fa:     	movq	0x8(%r14), %rax
1400046fe:     	subq	%r12, %rax
140004701:     	cmpq	%r13, %rax
140004704:     	jae	0x1400046d0 <.text+0x36d0>
140004706:     	movq	%r14, %rcx
140004709:     	movq	%r12, %rdx
14000470c:     	movq	%r13, %r8
14000470f:     	callq	0x140018e60 <.text+0x17e60>
140004714:     	movq	0x10(%r14), %r12
140004718:     	jmp	0x1400046d0 <.text+0x36d0>
14000471a:     	movq	0x20(%rsp), %rsi
14000471f:     	movq	%r15, 0x8(%rsi)
140004723:     	movq	$0x0, (%rsi)
14000472a:     	movq	%rsi, %rax
14000472d:     	addq	$0x28, %rsp
140004731:     	popq	%rbx
140004732:     	popq	%rbp
140004733:     	popq	%rdi
140004734:     	popq	%rsi
140004735:     	popq	%r12
140004737:     	popq	%r13
140004739:     	popq	%r14
14000473b:     	popq	%r15
14000473d:     	retq
14000473e:     	movq	%r14, %rcx
140004741:     	movq	%r15, %r8
140004744:     	callq	0x140018e60 <.text+0x17e60>
140004749:     	testq	%rdi, %rdi
14000474c:     	jne	0x1400046b9 <.text+0x36b9>
140004752:     	jmp	0x14000471f <.text+0x371f>
140004754:     	int3
140004755:     	int3
140004756:     	int3
140004757:     	int3
140004758:     	int3
140004759:     	int3
14000475a:     	int3
14000475b:     	int3
14000475c:     	int3
14000475d:     	int3
14000475e:     	int3
14000475f:     	int3
140004760:     	movb	$0x1, %al
140004762:     	retq
140004763:     	int3
140004764:     	int3
140004765:     	int3
140004766:     	int3
140004767:     	int3
140004768:     	int3
140004769:     	int3
14000476a:     	int3
14000476b:     	int3
14000476c:     	int3
14000476d:     	int3
14000476e:     	int3
14000476f:     	int3
140004770:     	xorl	%eax, %eax
140004772:     	retq
140004773:     	int3
140004774:     	int3
140004775:     	int3
140004776:     	int3
140004777:     	int3
140004778:     	int3
140004779:     	int3
14000477a:     	int3
14000477b:     	int3
14000477c:     	int3
14000477d:     	int3
14000477e:     	int3
14000477f:     	int3
140004780:     	pushq	%rbp
140004781:     	pushq	%rsi
140004782:     	pushq	%rdi
140004783:     	subq	$0x40, %rsp
140004787:     	leaq	0x40(%rsp), %rbp
14000478c:     	movq	$-0x2, -0x8(%rbp)
140004794:     	movq	%rdx, %rsi
140004797:     	movq	(%rcx), %rax
14000479a:     	movq	(%rax), %rdi
14000479d:     	movq	0x8(%rdi), %rax
1400047a1:     	movl	0x1eb99(%rip), %ecx     # 0x140023340
1400047a7:     	movq	%gs:0x58, %rdx
1400047b0:     	movq	(%rdx,%rcx,8), %rcx
1400047b4:     	leaq	0x41(%rcx), %rcx
1400047bb:     	cmpq	%rcx, %rax
1400047be:     	jne	0x1400047d0 <.text+0x37d0>
1400047c0:     	movl	0x38(%rdi), %eax
1400047c3:     	incl	%eax
1400047c5:     	je	0x140004878 <.text+0x3878>
1400047cb:     	movl	%eax, 0x38(%rdi)
1400047ce:     	jmp	0x1400047fe <.text+0x37fe>
1400047d0:     	movq	%rdi, %rcx
1400047d3:     	callq	*0x1584f(%rip)          # 0x14001a028
1400047d9:     	movl	0x1eb61(%rip), %eax     # 0x140023340
1400047df:     	movq	%gs:0x58, %rcx
1400047e8:     	movq	(%rcx,%rax,8), %rax
1400047ec:     	leaq	0x41(%rax), %rax
1400047f3:     	movq	%rax, 0x8(%rdi)
1400047f7:     	movl	$0x1, 0x38(%rdi)
1400047fe:     	movq	%rdi, -0x10(%rbp)
140004802:     	leaq	-0x10(%rbp), %rax
140004806:     	movq	%rax, -0x20(%rbp)
14000480a:     	movq	$0x0, -0x18(%rbp)
140004812:     	leaq	0x16407(%rip), %rdx     # 0x14001ac20
140004819:     	leaq	-0x20(%rbp), %rcx
14000481d:     	movq	%rsi, %r8
140004820:     	callq	0x140014a60 <.text+0x13a60>
140004825:     	movq	-0x18(%rbp), %rcx
140004829:     	testb	%al, %al
14000482b:     	je	0x14000485d <.text+0x385d>
14000482d:     	testq	%rcx, %rcx
140004830:     	leaq	0x16d39(%rip), %rsi     # 0x14001b570
140004837:     	cmovneq	%rcx, %rsi
14000483b:     	movq	-0x10(%rbp), %rcx
14000483f:     	decl	0x38(%rcx)
140004842:     	jne	0x140004852 <.text+0x3852>
140004844:     	movq	$0x0, 0x8(%rcx)
14000484c:     	callq	*0x158be(%rip)          # 0x14001a110
140004852:     	movq	%rsi, %rax
140004855:     	addq	$0x40, %rsp
140004859:     	popq	%rdi
14000485a:     	popq	%rsi
14000485b:     	popq	%rbp
14000485c:     	retq
14000485d:     	testq	%rcx, %rcx
140004860:     	je	0x14000486b <.text+0x386b>
140004862:     	leaq	-0x18(%rbp), %rcx
140004866:     	callq	0x140001c00 <.text+0xc00>
14000486b:     	xorl	%esi, %esi
14000486d:     	movq	-0x10(%rbp), %rcx
140004871:     	decl	0x38(%rcx)
140004874:     	jne	0x140004852 <.text+0x3852>
140004876:     	jmp	0x140004844 <.text+0x3844>
140004878:     	leaq	0x16f41(%rip), %rcx     # 0x14001b7c0
14000487f:     	leaq	0x16f82(%rip), %r8      # 0x14001b808
140004886:     	movl	$0x26, %edx
14000488b:     	callq	0x140019760 <.text+0x18760>
140004890:     	ud2
140004892:     	nopw	%cs:(%rax,%rax)
1400048a0:     	movq	%rdx, 0x10(%rsp)
1400048a5:     	pushq	%rbp
1400048a6:     	pushq	%rsi
1400048a7:     	pushq	%rdi
1400048a8:     	subq	$0x20, %rsp
1400048ac:     	leaq	0x40(%rdx), %rbp
1400048b0:     	cmpq	$0x0, -0x18(%rbp)
1400048b5:     	je	0x1400048c0 <.text+0x38c0>
1400048b7:     	leaq	-0x18(%rbp), %rcx
1400048bb:     	callq	0x140001c00 <.text+0xc00>
1400048c0:     	nop
1400048c1:     	addq	$0x20, %rsp
1400048c5:     	popq	%rdi
1400048c6:     	popq	%rsi
1400048c7:     	popq	%rbp
1400048c8:     	retq
1400048c9:     	nopl	(%rax)
1400048d0:     	movq	%rdx, 0x10(%rsp)
1400048d5:     	pushq	%rbp
1400048d6:     	pushq	%rsi
1400048d7:     	pushq	%rdi
1400048d8:     	subq	$0x20, %rsp
1400048dc:     	leaq	0x40(%rdx), %rbp
1400048e0:     	movq	-0x10(%rbp), %rcx
1400048e4:     	decl	0x38(%rcx)
1400048e7:     	jne	0x1400048f7 <.text+0x38f7>
1400048e9:     	movq	$0x0, 0x8(%rcx)
1400048f1:     	callq	*0x15819(%rip)          # 0x14001a110
1400048f7:     	nop
1400048f8:     	addq	$0x20, %rsp
1400048fc:     	popq	%rdi
1400048fd:     	popq	%rsi
1400048fe:     	popq	%rbp
1400048ff:     	retq
140004900:     	pushq	%rbp
140004901:     	pushq	%r15
140004903:     	pushq	%r14
140004905:     	pushq	%r12
140004907:     	pushq	%rsi
140004908:     	pushq	%rdi
140004909:     	pushq	%rbx
14000490a:     	subq	$0x40, %rsp
14000490e:     	leaq	0x40(%rsp), %rbp
140004913:     	movq	$-0x2, -0x8(%rbp)
14000491b:     	movq	(%rcx), %rax
14000491e:     	cmpq	$0x0, 0x10(%rax)
140004923:     	jne	0x140004ad5 <.text+0x3ad5>
140004929:     	movq	%r8, %rsi
14000492c:     	movq	%rdx, %rdi
14000492f:     	movq	%rax, -0x10(%rbp)
140004933:     	movq	$-0x1, 0x10(%rax)
14000493b:     	movb	$0xa, %cl
14000493d:     	callq	0x140015f50 <.text+0x14f50>
140004942:     	movq	-0x10(%rbp), %r12
140004946:     	leaq	0x18(%r12), %rbx
14000494b:     	testq	%rax, %rax
14000494e:     	je	0x14000499a <.text+0x399a>
140004950:     	movq	%rdx, %r14
140004953:     	incq	%r14
140004956:     	subq	%r14, %rsi
140004959:     	jb	0x140004ae3 <.text+0x3ae3>
14000495f:     	movq	0x28(%r12), %r15
140004964:     	testq	%r15, %r15
140004967:     	je	0x1400049e3 <.text+0x39e3>
140004969:     	movq	0x20(%r12), %rax
14000496e:     	subq	%r15, %rax
140004971:     	cmpq	%r14, %rax
140004974:     	jbe	0x140004a33 <.text+0x3a33>
14000497a:     	movq	0x18(%r12), %rcx
14000497f:     	addq	%r15, %rcx
140004982:     	movq	%rdi, %rdx
140004985:     	movq	%r14, %r8
140004988:     	callq	0x140018beb <.text+0x17beb>
14000498d:     	addq	%r14, %r15
140004990:     	movq	%r15, 0x28(%r12)
140004995:     	jmp	0x140004a4a <.text+0x3a4a>
14000499a:     	movq	0x28(%r12), %r14
14000499f:     	testq	%r14, %r14
1400049a2:     	je	0x140004a80 <.text+0x3a80>
1400049a8:     	movq	(%rbx), %rax
1400049ab:     	cmpb	$0xa, -0x1(%r14,%rax)
1400049b1:     	jne	0x1400049cd <.text+0x39cd>
1400049b3:     	movq	%rbx, %rcx
1400049b6:     	callq	0x140003f10 <.text+0x2f10>
1400049bb:     	testq	%rax, %rax
1400049be:     	movq	-0x10(%rbp), %r12
1400049c2:     	jne	0x140004ac1 <.text+0x3ac1>
1400049c8:     	movq	0x28(%r12), %r14
1400049cd:     	movq	0x20(%r12), %rax
1400049d2:     	subq	%r14, %rax
1400049d5:     	cmpq	%rsi, %rax
1400049d8:     	ja	0x140004a90 <.text+0x3a90>
1400049de:     	jmp	0x140004aaf <.text+0x3aaf>
1400049e3:     	leaq	0x31(%r12), %rcx
1400049e8:     	movq	%rdi, %rdx
1400049eb:     	movq	%r14, %r8
1400049ee:     	callq	0x140004ec0 <.text+0x3ec0>
1400049f3:     	movq	%rax, -0x18(%rbp)
1400049f7:     	testq	%rax, %rax
1400049fa:     	je	0x140004a2d <.text+0x3a2d>
1400049fc:     	movl	%eax, %ecx
1400049fe:     	andl	$0x3, %ecx
140004a01:     	cmpq	$0x2, %rcx
140004a05:     	jb	0x140004abd <.text+0x3abd>
140004a0b:     	cmpl	$0x2, %ecx
140004a0e:     	jne	0x140004abd <.text+0x3abd>
140004a14:     	movq	%rax, %rcx
140004a17:     	shrq	$0x20, %rcx
140004a1b:     	cmpl	$0x6, %ecx
140004a1e:     	jne	0x140004abd <.text+0x3abd>
140004a24:     	leaq	-0x18(%rbp), %rcx
140004a28:     	callq	0x140001c00 <.text+0xc00>
140004a2d:     	movq	-0x10(%rbp), %r12
140004a31:     	jmp	0x140004a5b <.text+0x3a5b>
140004a33:     	movq	%rbx, %rcx
140004a36:     	movq	%rdi, %rdx
140004a39:     	movq	%r14, %r8
140004a3c:     	callq	0x140019020 <.text+0x18020>
140004a41:     	testq	%rax, %rax
140004a44:     	movq	-0x10(%rbp), %r12
140004a48:     	jne	0x140004ac1 <.text+0x3ac1>
140004a4a:     	movq	%rbx, %rcx
140004a4d:     	callq	0x140003f10 <.text+0x2f10>
140004a52:     	testq	%rax, %rax
140004a55:     	movq	-0x10(%rbp), %r12
140004a59:     	jne	0x140004ac1 <.text+0x3ac1>
140004a5b:     	addq	%r14, %rdi
140004a5e:     	movq	0x20(%r12), %rax
140004a63:     	movq	0x28(%r12), %r14
140004a68:     	subq	%r14, %rax
140004a6b:     	cmpq	%rsi, %rax
140004a6e:     	ja	0x140004a90 <.text+0x3a90>
140004a70:     	movq	%rbx, %rcx
140004a73:     	movq	%rdi, %rdx
140004a76:     	movq	%rsi, %r8
140004a79:     	callq	0x140019020 <.text+0x18020>
140004a7e:     	jmp	0x140004abd <.text+0x3abd>
140004a80:     	xorl	%r14d, %r14d
140004a83:     	movq	0x20(%r12), %rax
140004a88:     	subq	%r14, %rax
140004a8b:     	cmpq	%rsi, %rax
140004a8e:     	jbe	0x140004aaf <.text+0x3aaf>
140004a90:     	movq	0x18(%r12), %rcx
140004a95:     	addq	%r14, %rcx
140004a98:     	movq	%rdi, %rdx
140004a9b:     	movq	%rsi, %r8
140004a9e:     	callq	0x140018beb <.text+0x17beb>
140004aa3:     	addq	%rsi, %r14
140004aa6:     	movq	%r14, 0x28(%r12)
140004aab:     	xorl	%eax, %eax
140004aad:     	jmp	0x140004ac1 <.text+0x3ac1>
140004aaf:     	movq	%rbx, %rcx
140004ab2:     	movq	%rdi, %rdx
140004ab5:     	movq	%rsi, %r8
140004ab8:     	callq	0x140019020 <.text+0x18020>
140004abd:     	movq	-0x10(%rbp), %r12
140004ac1:     	incq	0x10(%r12)
140004ac6:     	addq	$0x40, %rsp
140004aca:     	popq	%rbx
140004acb:     	popq	%rdi
140004acc:     	popq	%rsi
140004acd:     	popq	%r12
140004acf:     	popq	%r14
140004ad1:     	popq	%r15
140004ad3:     	popq	%rbp
140004ad4:     	retq
140004ad5:     	leaq	0x1684c(%rip), %rcx     # 0x14001b328
140004adc:     	callq	0x140019700 <.text+0x18700>
140004ae1:     	ud2
140004ae3:     	leaq	0x15e1e(%rip), %rcx     # 0x14001a908
140004aea:     	leaq	0x164b7(%rip), %r8      # 0x14001afa8
140004af1:     	movl	$0x23, %edx
140004af6:     	callq	0x140019880 <.text+0x18880>
140004afb:     	ud2
140004afd:     	nopl	(%rax)
140004b00:     	movq	%rdx, 0x10(%rsp)
140004b05:     	pushq	%rbp
140004b06:     	pushq	%r15
140004b08:     	pushq	%r14
140004b0a:     	pushq	%r12
140004b0c:     	pushq	%rsi
140004b0d:     	pushq	%rdi
140004b0e:     	pushq	%rbx
140004b0f:     	subq	$0x20, %rsp
140004b13:     	leaq	0x40(%rdx), %rbp
140004b17:     	movq	-0x10(%rbp), %rax
140004b1b:     	incq	0x10(%rax)
140004b1f:     	addq	$0x20, %rsp
140004b23:     	popq	%rbx
140004b24:     	popq	%rdi
140004b25:     	popq	%rsi
140004b26:     	popq	%r12
140004b28:     	popq	%r14
140004b2a:     	popq	%r15
140004b2c:     	popq	%rbp
140004b2d:     	retq
140004b2e:     	int3
140004b2f:     	int3
140004b30:     	pushq	%rbp
140004b31:     	pushq	%rsi
140004b32:     	pushq	%rdi
140004b33:     	pushq	%rbx
140004b34:     	subq	$0x58, %rsp
140004b38:     	leaq	0x50(%rsp), %rbp
140004b3d:     	movq	$-0x2, (%rbp)
140004b45:     	movzbl	0x1e6c4(%rip), %eax     # 0x140023210
140004b4c:     	testb	%al, %al
140004b4e:     	je	0x140004c2b <.text+0x3c2b>
140004b54:     	movq	%rcx, %rdi
140004b57:     	movl	0x1e7e3(%rip), %eax     # 0x140023340
140004b5d:     	movq	%gs:0x58, %rcx
140004b66:     	movq	(%rcx,%rax,8), %rax
140004b6a:     	cmpq	$0x0, 0x48(%rax)
140004b72:     	je	0x140004b7d <.text+0x3b7d>
140004b74:     	leaq	0x50(%rax), %rsi
140004b7b:     	jmp	0x140004b92 <.text+0x3b92>
140004b7d:     	xorl	%ebx, %ebx
140004b7f:     	xorl	%ecx, %ecx
140004b81:     	callq	0x140009850 <.text+0x8850>
140004b86:     	movq	%rax, %rsi
140004b89:     	testq	%rax, %rax
140004b8c:     	je	0x140004c88 <.text+0x3c88>
140004b92:     	movq	(%rsi), %rbx
140004b95:     	movq	$0x0, (%rsi)
140004b9c:     	testq	%rbx, %rbx
140004b9f:     	je	0x140004c2b <.text+0x3c2b>
140004ba5:     	movq	%rbx, -0x30(%rbp)
140004ba9:     	leaq	0x10(%rbx), %rcx
140004bad:     	movq	%rcx, -0x28(%rbp)
140004bb1:     	callq	*0x15471(%rip)          # 0x14001a028
140004bb7:     	movq	0x1e6e2(%rip), %rax     # 0x1400232a0
140004bbe:     	shlq	%rax
140004bc1:     	testq	%rax, %rax
140004bc4:     	jne	0x140004c93 <.text+0x3c93>
140004bca:     	movl	$0x0, -0x4(%rbp)
140004bd1:     	movzbl	0x18(%rbx), %eax
140004bd5:     	movq	%rbx, -0x20(%rbp)
140004bd9:     	leaq	0x20(%rbx), %rax
140004bdd:     	movq	%rax, -0x18(%rbp)
140004be1:     	movq	$0x0, -0x10(%rbp)
140004be9:     	leaq	0x16060(%rip), %rdx     # 0x14001ac50
140004bf0:     	leaq	-0x18(%rbp), %rcx
140004bf4:     	movq	%rdi, %r8
140004bf7:     	callq	0x140014a60 <.text+0x13a60>
140004bfc:     	movq	-0x10(%rbp), %rcx
140004c00:     	testb	%al, %al
140004c02:     	je	0x140004c2f <.text+0x3c2f>
140004c04:     	testq	%rcx, %rcx
140004c07:     	leaq	0x16962(%rip), %rax     # 0x14001b570
140004c0e:     	cmovneq	%rcx, %rax
140004c12:     	movq	%rax, -0x18(%rbp)
140004c16:     	leaq	-0x18(%rbp), %rcx
140004c1a:     	callq	0x140001c00 <.text+0xc00>
140004c1f:     	cmpb	$0x0, -0x4(%rbp)
140004c23:     	movq	-0x20(%rbp), %rdi
140004c27:     	jne	0x140004c5e <.text+0x3c5e>
140004c29:     	jmp	0x140004c4f <.text+0x3c4f>
140004c2b:     	xorl	%ebx, %ebx
140004c2d:     	jmp	0x140004c88 <.text+0x3c88>
140004c2f:     	testq	%rcx, %rcx
140004c32:     	je	0x140004c3d <.text+0x3c3d>
140004c34:     	leaq	-0x10(%rbp), %rcx
140004c38:     	callq	0x140001c00 <.text+0xc00>
140004c3d:     	movq	$0x0, -0x18(%rbp)
140004c45:     	cmpb	$0x0, -0x4(%rbp)
140004c49:     	movq	-0x20(%rbp), %rdi
140004c4d:     	jne	0x140004c5e <.text+0x3c5e>
140004c4f:     	movq	0x1e64a(%rip), %rax     # 0x1400232a0
140004c56:     	shlq	%rax
140004c59:     	testq	%rax, %rax
140004c5c:     	jne	0x140004ca2 <.text+0x3ca2>
140004c5e:     	movq	-0x28(%rbp), %rcx
140004c62:     	callq	*0x154a8(%rip)          # 0x14001a110
140004c68:     	movq	(%rsi), %rax
140004c6b:     	movq	%rdi, (%rsi)
140004c6e:     	movq	%rax, -0x18(%rbp)
140004c72:     	testq	%rax, %rax
140004c75:     	je	0x140004c86 <.text+0x3c86>
140004c77:     	lock
140004c78:     	decq	(%rax)
140004c7b:     	jne	0x140004c86 <.text+0x3c86>
140004c7d:     	leaq	-0x18(%rbp), %rcx
140004c81:     	callq	0x140002870 <.text+0x1870>
140004c86:     	movb	$0x1, %bl
140004c88:     	movl	%ebx, %eax
140004c8a:     	addq	$0x58, %rsp
140004c8e:     	popq	%rbx
140004c8f:     	popq	%rdi
140004c90:     	popq	%rsi
140004c91:     	popq	%rbp
140004c92:     	retq
140004c93:     	callq	0x1400191b0 <.text+0x181b0>
140004c98:     	xorb	$0x1, %al
140004c9a:     	movl	%eax, -0x4(%rbp)
140004c9d:     	jmp	0x140004bd1 <.text+0x3bd1>
140004ca2:     	callq	0x1400191b0 <.text+0x181b0>
140004ca7:     	testb	%al, %al
140004ca9:     	jne	0x140004c5e <.text+0x3c5e>
140004cab:     	movb	$0x1, 0x18(%rdi)
140004caf:     	jmp	0x140004c5e <.text+0x3c5e>
140004cb1:     	nopw	%cs:(%rax,%rax)
140004cc0:     	movq	%rdx, 0x10(%rsp)
140004cc5:     	pushq	%rbp
140004cc6:     	pushq	%rsi
140004cc7:     	pushq	%rdi
140004cc8:     	pushq	%rbx
140004cc9:     	subq	$0x28, %rsp
140004ccd:     	leaq	0x50(%rdx), %rbp
140004cd1:     	cmpq	$0x0, -0x10(%rbp)
140004cd6:     	je	0x140004ce1 <.text+0x3ce1>
140004cd8:     	leaq	-0x10(%rbp), %rcx
140004cdc:     	callq	0x140001c00 <.text+0xc00>
140004ce1:     	nop
140004ce2:     	addq	$0x28, %rsp
140004ce6:     	popq	%rbx
140004ce7:     	popq	%rdi
140004ce8:     	popq	%rsi
140004ce9:     	popq	%rbp
140004cea:     	retq
140004ceb:     	nopl	(%rax,%rax)
140004cf0:     	movq	%rdx, 0x10(%rsp)
140004cf5:     	pushq	%rbp
140004cf6:     	pushq	%rsi
140004cf7:     	pushq	%rdi
140004cf8:     	pushq	%rbx
140004cf9:     	subq	$0x28, %rsp
140004cfd:     	leaq	0x50(%rdx), %rbp
140004d01:     	cmpb	$0x0, -0x4(%rbp)
140004d05:     	jne	0x140004d16 <.text+0x3d16>
140004d07:     	movq	0x1e592(%rip), %rax     # 0x1400232a0
140004d0e:     	shlq	%rax
140004d11:     	testq	%rax, %rax
140004d14:     	jne	0x140004d3d <.text+0x3d3d>
140004d16:     	movq	-0x28(%rbp), %rcx
140004d1a:     	callq	*0x153f0(%rip)          # 0x14001a110
140004d20:     	movq	-0x20(%rbp), %rax
140004d24:     	lock
140004d25:     	decq	(%rax)
140004d28:     	jne	0x140004d33 <.text+0x3d33>
140004d2a:     	leaq	-0x30(%rbp), %rcx
140004d2e:     	callq	0x140002870 <.text+0x1870>
140004d33:     	nop
140004d34:     	addq	$0x28, %rsp
140004d38:     	popq	%rbx
140004d39:     	popq	%rdi
140004d3a:     	popq	%rsi
140004d3b:     	popq	%rbp
140004d3c:     	retq
140004d3d:     	callq	0x1400191b0 <.text+0x181b0>
140004d42:     	testb	%al, %al
140004d44:     	jne	0x140004d16 <.text+0x3d16>
140004d46:     	movq	-0x20(%rbp), %rax
140004d4a:     	movb	$0x1, 0x18(%rax)
140004d4e:     	jmp	0x140004d16 <.text+0x3d16>
140004d50:     	pushq	%rbp
140004d51:     	pushq	%rsi
140004d52:     	subq	$0x98, %rsp
140004d59:     	leaq	0x80(%rsp), %rbp
140004d61:     	movq	$-0x2, 0x10(%rbp)
140004d69:     	movq	%rcx, %rsi
140004d6c:     	leaq	0x1669d(%rip), %rax     # 0x14001b410
140004d73:     	movq	%rax, -0x10(%rbp)
140004d77:     	movq	$0x6, -0x8(%rbp)
140004d7f:     	callq	0x140004b30 <.text+0x3b30>
140004d84:     	testb	%al, %al
140004d86:     	jne	0x140004db8 <.text+0x3db8>
140004d88:     	movq	0x1e4c9(%rip), %rax     # 0x140023258
140004d8f:     	cmpq	$0x3, %rax
140004d93:     	jne	0x140004dc2 <.text+0x3dc2>
140004d95:     	leaq	0x1e47c(%rip), %rax     # 0x140023218
140004d9c:     	movq	%rax, (%rbp)
140004da0:     	movq	%rbp, %rax
140004da3:     	movq	%rax, -0x40(%rbp)
140004da7:     	leaq	-0x40(%rbp), %rcx
140004dab:     	movq	%rsi, %rdx
140004dae:     	callq	0x140004780 <.text+0x3780>
140004db3:     	testq	%rax, %rax
140004db6:     	jne	0x140004dc9 <.text+0x3dc9>
140004db8:     	addq	$0x98, %rsp
140004dbf:     	popq	%rsi
140004dc0:     	popq	%rbp
140004dc1:     	retq
140004dc2:     	callq	0x1400190d0 <.text+0x180d0>
140004dc7:     	jmp	0x140004d95 <.text+0x3d95>
140004dc9:     	movq	%rax, 0x8(%rbp)
140004dcd:     	leaq	-0x10(%rbp), %rax
140004dd1:     	movq	%rax, -0x60(%rbp)
140004dd5:     	leaq	-0x381c(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
140004ddc:     	movq	%rax, -0x58(%rbp)
140004de0:     	leaq	0x8(%rbp), %rax
140004de4:     	movq	%rax, -0x50(%rbp)
140004de8:     	leaq	-0xcaf(%rip), %rax      # 0x140004140 <.text+0x3140>
140004def:     	movq	%rax, -0x48(%rbp)
140004df3:     	leaq	0x165de(%rip), %rax     # 0x14001b3d8
140004dfa:     	movq	%rax, -0x40(%rbp)
140004dfe:     	movq	$0x2, -0x38(%rbp)
140004e06:     	movq	$0x0, -0x20(%rbp)
140004e0e:     	leaq	-0x60(%rbp), %rax
140004e12:     	movq	%rax, -0x30(%rbp)
140004e16:     	movq	$0x2, -0x28(%rbp)
140004e1e:     	leaq	0x165d3(%rip), %rdx     # 0x14001b3f8
140004e25:     	leaq	-0x40(%rbp), %rcx
140004e29:     	callq	0x1400197d0 <.text+0x187d0>
140004e2e:     	ud2
140004e30:     	movq	%rdx, 0x10(%rsp)
140004e35:     	pushq	%rbp
140004e36:     	pushq	%rsi
140004e37:     	subq	$0x28, %rsp
140004e3b:     	leaq	0x80(%rdx), %rbp
140004e42:     	leaq	0x8(%rbp), %rcx
140004e46:     	callq	0x140001c00 <.text+0xc00>
140004e4b:     	nop
140004e4c:     	addq	$0x28, %rsp
140004e50:     	popq	%rsi
140004e51:     	popq	%rbp
140004e52:     	retq
140004e53:     	int3
140004e54:     	int3
140004e55:     	int3
140004e56:     	int3
140004e57:     	int3
140004e58:     	int3
140004e59:     	int3
140004e5a:     	int3
140004e5b:     	int3
140004e5c:     	int3
140004e5d:     	int3
140004e5e:     	int3
140004e5f:     	int3
140004e60:     	pushq	%rsi
140004e61:     	subq	$0x30, %rsp
140004e65:     	movq	%r9, %r10
140004e68:     	movq	%r8, %rax
140004e6b:     	movq	%rcx, %rsi
140004e6e:     	shlq	$0x4, %r10
140004e72:     	xorl	%ecx, %ecx
140004e74:     	leaq	0x15825(%rip), %r8      # 0x14001a6a0
140004e7b:     	nopl	(%rax,%rax)
140004e80:     	cmpq	%rcx, %r10
140004e83:     	je	0x140004e99 <.text+0x3e99>
140004e85:     	movl	(%rax,%rcx), %r9d
140004e89:     	addq	$0x10, %rcx
140004e8d:     	testq	%r9, %r9
140004e90:     	je	0x140004e80 <.text+0x3e80>
140004e92:     	movq	-0x8(%rax,%rcx), %r8
140004e97:     	jmp	0x140004e9c <.text+0x3e9c>
140004e99:     	xorl	%r9d, %r9d
140004e9c:     	movq	%rdx, 0x20(%rsp)
140004ea1:     	movq	%rsi, %rcx
140004ea4:     	movl	$0xfffffff4, %edx       # imm = 0xFFFFFFF4
140004ea9:     	callq	0x14000a410 <.text+0x9410>
140004eae:     	movq	%rsi, %rax
140004eb1:     	addq	$0x30, %rsp
140004eb5:     	popq	%rsi
140004eb6:     	retq
140004eb7:     	int3
140004eb8:     	int3
140004eb9:     	int3
140004eba:     	int3
140004ebb:     	int3
140004ebc:     	int3
140004ebd:     	int3
140004ebe:     	int3
140004ebf:     	int3
140004ec0:     	pushq	%r15
140004ec2:     	pushq	%r14
140004ec4:     	pushq	%r13
140004ec6:     	pushq	%r12
140004ec8:     	pushq	%rsi
140004ec9:     	pushq	%rdi
140004eca:     	pushq	%rbx
140004ecb:     	subq	$0x40, %rsp
140004ecf:     	testq	%r8, %r8
140004ed2:     	je	0x140004f88 <.text+0x3f88>
140004ed8:     	movq	%r8, %rsi
140004edb:     	movq	%rdx, %rdi
140004ede:     	movq	%rcx, %rbx
140004ee1:     	leaq	0x38(%rsp), %r14
140004ee6:     	leaq	0x30(%rsp), %r15
140004eeb:     	leaq	0x1663e(%rip), %r12     # 0x14001b530
140004ef2:     	leaq	0x17dfb(%rip), %r13     # 0x14001ccf4
140004ef9:     	jmp	0x140004f19 <.text+0x3f19>
140004efb:     	nopl	(%rax,%rax)
140004f00:     	movq	%rax, %rcx
140004f03:     	shrq	$0x20, %rcx
140004f07:     	cmpl	$0x23, %ecx
140004f0a:     	jne	0x140004f8a <.text+0x3f8a>
140004f0c:     	movq	%r14, %rcx
140004f0f:     	callq	0x140001c00 <.text+0xc00>
140004f14:     	testq	%rsi, %rsi
140004f17:     	je	0x140004f88 <.text+0x3f88>
140004f19:     	movq	%rbx, 0x20(%rsp)
140004f1e:     	movq	%r15, %rcx
140004f21:     	movl	$0xfffffff5, %edx       # imm = 0xFFFFFFF5
140004f26:     	movq	%rdi, %r8
140004f29:     	movq	%rsi, %r9
140004f2c:     	callq	0x14000a410 <.text+0x9410>
140004f31:     	cmpq	$0x0, 0x30(%rsp)
140004f37:     	je	0x140004f60 <.text+0x3f60>
140004f39:     	movq	0x38(%rsp), %rax
140004f3e:     	movl	%eax, %ecx
140004f40:     	andl	$0x3, %ecx
140004f43:     	movslq	(%r13,%rcx,4), %rcx
140004f48:     	addq	%r13, %rcx
140004f4b:     	jmpq	*%rcx
140004f4d:     	cmpb	$0x23, 0x10(%rax)
140004f51:     	je	0x140004f0c <.text+0x3f0c>
140004f53:     	jmp	0x140004f8a <.text+0x3f8a>
140004f55:     	nopw	%cs:(%rax,%rax)
140004f60:     	movq	0x38(%rsp), %rcx
140004f65:     	testq	%rcx, %rcx
140004f68:     	je	0x140004f9a <.text+0x3f9a>
140004f6a:     	movq	%rsi, %rax
140004f6d:     	subq	%rcx, %rax
140004f70:     	jb	0x140004f9f <.text+0x3f9f>
140004f72:     	addq	%rcx, %rdi
140004f75:     	movq	%rax, %rsi
140004f78:     	testq	%rsi, %rsi
140004f7b:     	jne	0x140004f19 <.text+0x3f19>
140004f7d:     	jmp	0x140004f88 <.text+0x3f88>
140004f7f:     	nop
140004f80:     	cmpb	$0x23, 0xf(%rax)
140004f84:     	je	0x140004f0c <.text+0x3f0c>
140004f86:     	jmp	0x140004f8a <.text+0x3f8a>
140004f88:     	xorl	%eax, %eax
140004f8a:     	addq	$0x40, %rsp
140004f8e:     	popq	%rbx
140004f8f:     	popq	%rdi
140004f90:     	popq	%rsi
140004f91:     	popq	%r12
140004f93:     	popq	%r13
140004f95:     	popq	%r14
140004f97:     	popq	%r15
140004f99:     	retq
140004f9a:     	movq	%r12, %rax
140004f9d:     	jmp	0x140004f8a <.text+0x3f8a>
140004f9f:     	leaq	0x165a2(%rip), %r8      # 0x14001b548
140004fa6:     	movq	%rsi, %rdx
140004fa9:     	callq	0x140019c50 <.text+0x18c50>
140004fae:     	ud2
140004fb0:     	pushq	%r15
140004fb2:     	pushq	%r14
140004fb4:     	pushq	%r13
140004fb6:     	pushq	%r12
140004fb8:     	pushq	%rsi
140004fb9:     	pushq	%rdi
140004fba:     	pushq	%rbx
140004fbb:     	subq	$0x40, %rsp
140004fbf:     	testq	%r8, %r8
140004fc2:     	je	0x140005078 <.text+0x4078>
140004fc8:     	movq	%r8, %rsi
140004fcb:     	movq	%rdx, %rdi
140004fce:     	movq	%rcx, %rbx
140004fd1:     	leaq	0x38(%rsp), %r14
140004fd6:     	leaq	0x30(%rsp), %r15
140004fdb:     	leaq	0x1654e(%rip), %r12     # 0x14001b530
140004fe2:     	leaq	0x17d1b(%rip), %r13     # 0x14001cd04
140004fe9:     	jmp	0x140005009 <.text+0x4009>
140004feb:     	nopl	(%rax,%rax)
140004ff0:     	movq	%rax, %rcx
140004ff3:     	shrq	$0x20, %rcx
140004ff7:     	cmpl	$0x23, %ecx
140004ffa:     	jne	0x14000507a <.text+0x407a>
140004ffc:     	movq	%r14, %rcx
140004fff:     	callq	0x140001c00 <.text+0xc00>
140005004:     	testq	%rsi, %rsi
140005007:     	je	0x140005078 <.text+0x4078>
140005009:     	movq	%rbx, 0x20(%rsp)
14000500e:     	movq	%r15, %rcx
140005011:     	movl	$0xfffffff4, %edx       # imm = 0xFFFFFFF4
140005016:     	movq	%rdi, %r8
140005019:     	movq	%rsi, %r9
14000501c:     	callq	0x14000a410 <.text+0x9410>
140005021:     	cmpq	$0x0, 0x30(%rsp)
140005027:     	je	0x140005050 <.text+0x4050>
140005029:     	movq	0x38(%rsp), %rax
14000502e:     	movl	%eax, %ecx
140005030:     	andl	$0x3, %ecx
140005033:     	movslq	(%r13,%rcx,4), %rcx
140005038:     	addq	%r13, %rcx
14000503b:     	jmpq	*%rcx
14000503d:     	cmpb	$0x23, 0x10(%rax)
140005041:     	je	0x140004ffc <.text+0x3ffc>
140005043:     	jmp	0x14000507a <.text+0x407a>
140005045:     	nopw	%cs:(%rax,%rax)
140005050:     	movq	0x38(%rsp), %rcx
140005055:     	testq	%rcx, %rcx
140005058:     	je	0x14000508a <.text+0x408a>
14000505a:     	movq	%rsi, %rax
14000505d:     	subq	%rcx, %rax
140005060:     	jb	0x14000508f <.text+0x408f>
140005062:     	addq	%rcx, %rdi
140005065:     	movq	%rax, %rsi
140005068:     	testq	%rsi, %rsi
14000506b:     	jne	0x140005009 <.text+0x4009>
14000506d:     	jmp	0x140005078 <.text+0x4078>
14000506f:     	nop
140005070:     	cmpb	$0x23, 0xf(%rax)
140005074:     	je	0x140004ffc <.text+0x3ffc>
140005076:     	jmp	0x14000507a <.text+0x407a>
140005078:     	xorl	%eax, %eax
14000507a:     	addq	$0x40, %rsp
14000507e:     	popq	%rbx
14000507f:     	popq	%rdi
140005080:     	popq	%rsi
140005081:     	popq	%r12
140005083:     	popq	%r13
140005085:     	popq	%r14
140005087:     	popq	%r15
140005089:     	retq
14000508a:     	movq	%r12, %rax
14000508d:     	jmp	0x14000507a <.text+0x407a>
14000508f:     	leaq	0x164b2(%rip), %r8      # 0x14001b548
140005096:     	movq	%rsi, %rdx
140005099:     	callq	0x140019c50 <.text+0x18c50>
14000509e:     	ud2
1400050a0:     	pushq	%r15
1400050a2:     	pushq	%r14
1400050a4:     	pushq	%r13
1400050a6:     	pushq	%r12
1400050a8:     	pushq	%rsi
1400050a9:     	pushq	%rdi
1400050aa:     	pushq	%rbp
1400050ab:     	pushq	%rbx
1400050ac:     	subq	$0x68, %rsp
1400050b0:     	testq	%r8, %r8
1400050b3:     	je	0x140005287 <.text+0x4287>
1400050b9:     	movq	%r8, %r13
1400050bc:     	movq	%rcx, %rdi
1400050bf:     	shlq	$0x4, %r8
1400050c3:     	xorl	%r9d, %r9d
1400050c6:     	xorl	%ecx, %ecx
1400050c8:     	xorl	%r10d, %r10d
1400050cb:     	xorl	%eax, %eax
1400050cd:     	nopl	(%rax)
1400050d0:     	movl	(%rdx,%r9), %r11d
1400050d4:     	subq	%r11, %rax
1400050d7:     	jb	0x1400050ea <.text+0x40ea>
1400050d9:     	incq	%rcx
1400050dc:     	addq	$0x10, %r9
1400050e0:     	movq	%rax, %r10
1400050e3:     	cmpq	%r9, %r8
1400050e6:     	jne	0x1400050d0 <.text+0x40d0>
1400050e8:     	jmp	0x1400050ed <.text+0x40ed>
1400050ea:     	movq	%r10, %rax
1400050ed:     	cmpq	%rcx, %r13
1400050f0:     	jb	0x1400052a3 <.text+0x42a3>
1400050f6:     	movq	%rcx, %r8
1400050f9:     	shlq	$0x4, %r8
1400050fd:     	leaq	(%rdx,%r8), %r15
140005101:     	subq	%rcx, %r13
140005104:     	jne	0x140005119 <.text+0x4119>
140005106:     	testq	%rax, %rax
140005109:     	jne	0x1400052b4 <.text+0x42b4>
14000510f:     	testq	%r13, %r13
140005112:     	jne	0x140005138 <.text+0x4138>
140005114:     	jmp	0x140005287 <.text+0x4287>
140005119:     	movl	(%r15), %ecx
14000511c:     	cmpq	%rcx, %rax
14000511f:     	ja	0x1400052f0 <.text+0x42f0>
140005125:     	subl	%eax, %ecx
140005127:     	movl	%ecx, (%r15)
14000512a:     	addq	%rax, 0x8(%rdx,%r8)
14000512f:     	testq	%r13, %r13
140005132:     	je	0x140005287 <.text+0x4287>
140005138:     	leaq	0x60(%rsp), %rbx
14000513d:     	leaq	0x1555c(%rip), %r12     # 0x14001a6a0
140005144:     	leaq	0x58(%rsp), %r14
140005149:     	leaq	0x17bc4(%rip), %rbp     # 0x14001cd14
140005150:     	jmp	0x140005187 <.text+0x4187>
140005152:     	nopw	%cs:(%rax,%rax)
140005160:     	movq	%rax, %rcx
140005163:     	shrq	$0x20, %rcx
140005167:     	cmpl	$0x23, %ecx
14000516a:     	jne	0x140005289 <.text+0x4289>
140005170:     	movq	%rbx, %rcx
140005173:     	callq	0x140001c00 <.text+0xc00>
140005178:     	movq	%r15, %rdx
14000517b:     	movq	%rdx, %r15
14000517e:     	testq	%r13, %r13
140005181:     	je	0x140005287 <.text+0x4287>
140005187:     	movq	%r13, %rsi
14000518a:     	shlq	$0x4, %rsi
14000518e:     	xorl	%eax, %eax
140005190:     	cmpq	%rax, %rsi
140005193:     	je	0x1400051b0 <.text+0x41b0>
140005195:     	movl	(%r15,%rax), %r9d
140005199:     	addq	$0x10, %rax
14000519d:     	testq	%r9, %r9
1400051a0:     	je	0x140005190 <.text+0x4190>
1400051a2:     	movq	-0x8(%r15,%rax), %r8
1400051a7:     	jmp	0x1400051b6 <.text+0x41b6>
1400051a9:     	nopl	(%rax)
1400051b0:     	xorl	%r9d, %r9d
1400051b3:     	movq	%r12, %r8
1400051b6:     	movq	%rdi, 0x20(%rsp)
1400051bb:     	movq	%r14, %rcx
1400051be:     	movl	$0xfffffff4, %edx       # imm = 0xFFFFFFF4
1400051c3:     	callq	0x14000a410 <.text+0x9410>
1400051c8:     	cmpq	$0x0, 0x58(%rsp)
1400051ce:     	je	0x1400051f0 <.text+0x41f0>
1400051d0:     	movq	0x60(%rsp), %rax
1400051d5:     	movl	%eax, %ecx
1400051d7:     	andl	$0x3, %ecx
1400051da:     	movslq	(%rbp,%rcx,4), %rcx
1400051df:     	addq	%rbp, %rcx
1400051e2:     	jmpq	*%rcx
1400051e4:     	cmpb	$0x23, 0x10(%rax)
1400051e8:     	je	0x140005170 <.text+0x4170>
1400051ea:     	jmp	0x140005289 <.text+0x4289>
1400051ef:     	nop
1400051f0:     	movq	0x60(%rsp), %r8
1400051f5:     	testq	%r8, %r8
1400051f8:     	je	0x14000529a <.text+0x429a>
1400051fe:     	xorl	%edx, %edx
140005200:     	xorl	%ecx, %ecx
140005202:     	movq	%r8, %rax
140005205:     	nopw	%cs:(%rax,%rax)
140005210:     	movl	(%r15,%rdx), %r9d
140005214:     	subq	%r9, %rax
140005217:     	jb	0x14000523c <.text+0x423c>
140005219:     	incq	%rcx
14000521c:     	addq	$0x10, %rdx
140005220:     	movq	%rax, %r8
140005223:     	cmpq	%rdx, %rsi
140005226:     	jne	0x140005210 <.text+0x4210>
140005228:     	jmp	0x14000523f <.text+0x423f>
14000522a:     	nopw	(%rax,%rax)
140005230:     	cmpb	$0x23, 0xf(%rax)
140005234:     	je	0x140005170 <.text+0x4170>
14000523a:     	jmp	0x140005289 <.text+0x4289>
14000523c:     	movq	%r8, %rax
14000523f:     	cmpq	%rcx, %r13
140005242:     	jb	0x1400052a3 <.text+0x42a3>
140005244:     	movq	%rcx, %r8
140005247:     	shlq	$0x4, %r8
14000524b:     	leaq	(%r15,%r8), %rdx
14000524f:     	subq	%rcx, %r13
140005252:     	jne	0x14000525f <.text+0x425f>
140005254:     	testq	%rax, %rax
140005257:     	je	0x14000517b <.text+0x417b>
14000525d:     	jmp	0x1400052b4 <.text+0x42b4>
14000525f:     	movl	(%rdx), %ecx
140005261:     	cmpq	%rcx, %rax
140005264:     	ja	0x1400052f0 <.text+0x42f0>
14000526a:     	subl	%eax, %ecx
14000526c:     	movl	%ecx, (%rdx)
14000526e:     	addq	%rax, 0x8(%r15,%r8)
140005273:     	cmpq	$0x0, 0x58(%rsp)
140005279:     	movq	%rdx, %r15
14000527c:     	jne	0x140005170 <.text+0x4170>
140005282:     	jmp	0x14000517b <.text+0x417b>
140005287:     	xorl	%eax, %eax
140005289:     	addq	$0x68, %rsp
14000528d:     	popq	%rbx
14000528e:     	popq	%rbp
14000528f:     	popq	%rdi
140005290:     	popq	%rsi
140005291:     	popq	%r12
140005293:     	popq	%r13
140005295:     	popq	%r14
140005297:     	popq	%r15
140005299:     	retq
14000529a:     	leaq	0x1628f(%rip), %rax     # 0x14001b530
1400052a1:     	jmp	0x140005289 <.text+0x4289>
1400052a3:     	leaq	0x16186(%rip), %r8      # 0x14001b430
1400052aa:     	movq	%r13, %rdx
1400052ad:     	callq	0x140019c50 <.text+0x18c50>
1400052b2:     	ud2
1400052b4:     	leaq	0x161b5(%rip), %rax     # 0x14001b470
1400052bb:     	movq	%rax, 0x28(%rsp)
1400052c0:     	movq	$0x1, 0x30(%rsp)
1400052c9:     	leaq	0x153d0(%rip), %rax     # 0x14001a6a0
1400052d0:     	movq	%rax, 0x38(%rsp)
1400052d5:     	xorps	%xmm0, %xmm0
1400052d8:     	movups	%xmm0, 0x40(%rsp)
1400052dd:     	leaq	0x1619c(%rip), %rdx     # 0x14001b480
1400052e4:     	leaq	0x28(%rsp), %rcx
1400052e9:     	callq	0x1400197d0 <.text+0x187d0>
1400052ee:     	ud2
1400052f0:     	leaq	0x161c9(%rip), %rax     # 0x14001b4c0
1400052f7:     	movq	%rax, 0x28(%rsp)
1400052fc:     	movq	$0x1, 0x30(%rsp)
140005305:     	leaq	0x15394(%rip), %rax     # 0x14001a6a0
14000530c:     	movq	%rax, 0x38(%rsp)
140005311:     	xorps	%xmm0, %xmm0
140005314:     	movups	%xmm0, 0x40(%rsp)
140005319:     	leaq	0x161d8(%rip), %rdx     # 0x14001b4f8
140005320:     	leaq	0x28(%rsp), %rcx
140005325:     	callq	0x1400197d0 <.text+0x187d0>
14000532a:     	ud2
14000532c:     	int3
14000532d:     	int3
14000532e:     	int3
14000532f:     	int3
140005330:     	pushq	%r15
140005332:     	pushq	%r14
140005334:     	pushq	%r13
140005336:     	pushq	%r12
140005338:     	pushq	%rsi
140005339:     	pushq	%rdi
14000533a:     	pushq	%rbp
14000533b:     	pushq	%rbx
14000533c:     	subq	$0x58, %rsp
140005340:     	testq	%r8, %r8
140005343:     	je	0x14000557d <.text+0x457d>
140005349:     	movq	%r8, %rsi
14000534c:     	movq	%rcx, %rdi
14000534f:     	shlq	$0x4, %r8
140005353:     	xorl	%r9d, %r9d
140005356:     	xorl	%ecx, %ecx
140005358:     	xorl	%r10d, %r10d
14000535b:     	xorl	%eax, %eax
14000535d:     	nopl	(%rax)
140005360:     	movl	(%rdx,%r9), %r11d
140005364:     	subq	%r11, %rax
140005367:     	jb	0x14000537a <.text+0x437a>
140005369:     	incq	%rcx
14000536c:     	addq	$0x10, %r9
140005370:     	movq	%rax, %r10
140005373:     	cmpq	%r9, %r8
140005376:     	jne	0x140005360 <.text+0x4360>
140005378:     	jmp	0x14000537d <.text+0x437d>
14000537a:     	movq	%r10, %rax
14000537d:     	cmpq	%rcx, %rsi
140005380:     	jb	0x140005599 <.text+0x4599>
140005386:     	movq	%rcx, %r8
140005389:     	shlq	$0x4, %r8
14000538d:     	leaq	(%rdx,%r8), %rbp
140005391:     	subq	%rcx, %rsi
140005394:     	jne	0x1400053d7 <.text+0x43d7>
140005396:     	testq	%rax, %rax
140005399:     	je	0x1400053f8 <.text+0x43f8>
14000539b:     	leaq	0x160ce(%rip), %rax     # 0x14001b470
1400053a2:     	movq	%rax, 0x20(%rsp)
1400053a7:     	movq	$0x1, 0x28(%rsp)
1400053b0:     	leaq	0x152e9(%rip), %rax     # 0x14001a6a0
1400053b7:     	movq	%rax, 0x30(%rsp)
1400053bc:     	xorps	%xmm0, %xmm0
1400053bf:     	movups	%xmm0, 0x38(%rsp)
1400053c4:     	leaq	0x160b5(%rip), %rdx     # 0x14001b480
1400053cb:     	leaq	0x20(%rsp), %rcx
1400053d0:     	callq	0x1400197d0 <.text+0x187d0>
1400053d5:     	ud2
1400053d7:     	movl	(%rbp), %ecx
1400053da:     	cmpq	%rcx, %rax
1400053dd:     	ja	0x1400055aa <.text+0x45aa>
1400053e3:     	subl	%eax, %ecx
1400053e5:     	movl	%ecx, (%rbp)
1400053e8:     	addq	%rax, 0x8(%rdx,%r8)
1400053ed:     	jmp	0x1400053f8 <.text+0x43f8>
1400053ef:     	nop
1400053f0:     	testq	%rax, %rax
1400053f3:     	jne	0x14000539b <.text+0x439b>
1400053f5:     	movq	%rdx, %rbp
1400053f8:     	testq	%rsi, %rsi
1400053fb:     	je	0x14000557d <.text+0x457d>
140005401:     	leaq	-0x1(%rsi), %rax
140005405:     	cmpq	$0x3, %rax
140005409:     	jae	0x140005420 <.text+0x4420>
14000540b:     	xorl	%r14d, %r14d
14000540e:     	xorl	%eax, %eax
140005410:     	jmp	0x140005458 <.text+0x4458>
140005412:     	nopw	%cs:(%rax,%rax)
140005420:     	movq	%rsi, %rcx
140005423:     	andq	$-0x4, %rcx
140005427:     	leaq	0x30(%rbp), %rdx
14000542b:     	xorl	%r14d, %r14d
14000542e:     	xorl	%eax, %eax
140005430:     	movl	-0x30(%rdx), %r8d
140005434:     	movl	-0x20(%rdx), %r9d
140005438:     	addq	%r14, %r8
14000543b:     	movl	-0x10(%rdx), %r10d
14000543f:     	addq	%r9, %r10
140005442:     	addq	%r8, %r10
140005445:     	movl	(%rdx), %r14d
140005448:     	addq	%r10, %r14
14000544b:     	addq	$0x4, %rax
14000544f:     	addq	$0x40, %rdx
140005453:     	cmpq	%rax, %rcx
140005456:     	jne	0x140005430 <.text+0x4430>
140005458:     	movl	%esi, %ecx
14000545a:     	andl	$0x3, %ecx
14000545d:     	je	0x140005480 <.text+0x4480>
14000545f:     	shlq	$0x4, %rax
140005463:     	addq	%rbp, %rax
140005466:     	shlq	$0x4, %rcx
14000546a:     	xorl	%edx, %edx
14000546c:     	nopl	(%rax)
140005470:     	movl	(%rax,%rdx), %r8d
140005474:     	addq	%r8, %r14
140005477:     	addq	$0x10, %rdx
14000547b:     	cmpq	%rdx, %rcx
14000547e:     	jne	0x140005470 <.text+0x4470>
140005480:     	movq	0x8(%rdi), %rax
140005484:     	movq	0x10(%rdi), %r15
140005488:     	subq	%r15, %rax
14000548b:     	cmpq	%r14, %rax
14000548e:     	jb	0x140005566 <.text+0x4566>
140005494:     	movq	%rsi, 0x50(%rsp)
140005499:     	shlq	$0x4, %rsi
14000549d:     	xorl	%ebx, %ebx
14000549f:     	jmp	0x1400054d1 <.text+0x44d1>
1400054a1:     	nopw	%cs:(%rax,%rax)
1400054b0:     	movq	(%rdi), %rcx
1400054b3:     	addq	%r15, %rcx
1400054b6:     	movq	%r13, %rdx
1400054b9:     	movq	%r12, %r8
1400054bc:     	callq	0x140018beb <.text+0x17beb>
1400054c1:     	addq	%r12, %r15
1400054c4:     	movq	%r15, 0x10(%rdi)
1400054c8:     	addq	$0x10, %rbx
1400054cc:     	cmpq	%rbx, %rsi
1400054cf:     	je	0x140005500 <.text+0x4500>
1400054d1:     	movq	0x8(%rbp,%rbx), %r13
1400054d6:     	movl	(%rbp,%rbx), %r12d
1400054db:     	movq	0x8(%rdi), %rax
1400054df:     	subq	%r15, %rax
1400054e2:     	cmpq	%r12, %rax
1400054e5:     	jae	0x1400054b0 <.text+0x44b0>
1400054e7:     	movq	%rdi, %rcx
1400054ea:     	movq	%r15, %rdx
1400054ed:     	movq	%r12, %r8
1400054f0:     	callq	0x140018e60 <.text+0x17e60>
1400054f5:     	movq	0x10(%rdi), %r15
1400054f9:     	jmp	0x1400054b0 <.text+0x44b0>
1400054fb:     	nopl	(%rax,%rax)
140005500:     	testq	%r14, %r14
140005503:     	je	0x140005590 <.text+0x4590>
140005509:     	xorl	%edx, %edx
14000550b:     	xorl	%ecx, %ecx
14000550d:     	movq	%r14, %rax
140005510:     	movl	(%rbp,%rdx), %r8d
140005515:     	subq	%r8, %rax
140005518:     	jb	0x140005530 <.text+0x4530>
14000551a:     	incq	%rcx
14000551d:     	addq	$0x10, %rdx
140005521:     	movq	%rax, %r14
140005524:     	cmpq	%rdx, %rsi
140005527:     	jne	0x140005510 <.text+0x4510>
140005529:     	jmp	0x140005533 <.text+0x4533>
14000552b:     	nopl	(%rax,%rax)
140005530:     	movq	%r14, %rax
140005533:     	movq	0x50(%rsp), %rsi
140005538:     	cmpq	%rcx, %rsi
14000553b:     	jb	0x140005599 <.text+0x4599>
14000553d:     	movq	%rcx, %r8
140005540:     	shlq	$0x4, %r8
140005544:     	leaq	(%r8,%rbp), %rdx
140005548:     	subq	%rcx, %rsi
14000554b:     	je	0x1400053f0 <.text+0x43f0>
140005551:     	movl	(%rdx), %ecx
140005553:     	cmpq	%rcx, %rax
140005556:     	ja	0x1400055aa <.text+0x45aa>
140005558:     	subl	%eax, %ecx
14000555a:     	movl	%ecx, (%rdx)
14000555c:     	addq	%rax, 0x8(%rbp,%r8)
140005561:     	jmp	0x1400053f5 <.text+0x43f5>
140005566:     	movq	%rdi, %rcx
140005569:     	movq	%r15, %rdx
14000556c:     	movq	%r14, %r8
14000556f:     	callq	0x140018e60 <.text+0x17e60>
140005574:     	movq	0x10(%rdi), %r15
140005578:     	jmp	0x140005494 <.text+0x4494>
14000557d:     	xorl	%eax, %eax
14000557f:     	addq	$0x58, %rsp
140005583:     	popq	%rbx
140005584:     	popq	%rbp
140005585:     	popq	%rdi
140005586:     	popq	%rsi
140005587:     	popq	%r12
140005589:     	popq	%r13
14000558b:     	popq	%r14
14000558d:     	popq	%r15
14000558f:     	retq
140005590:     	leaq	0x15f99(%rip), %rax     # 0x14001b530
140005597:     	jmp	0x14000557f <.text+0x457f>
140005599:     	leaq	0x15e90(%rip), %r8      # 0x14001b430
1400055a0:     	movq	%rsi, %rdx
1400055a3:     	callq	0x140019c50 <.text+0x18c50>
1400055a8:     	ud2
1400055aa:     	leaq	0x15f0f(%rip), %rax     # 0x14001b4c0
1400055b1:     	movq	%rax, 0x20(%rsp)
1400055b6:     	movq	$0x1, 0x28(%rsp)
1400055bf:     	leaq	0x150da(%rip), %rax     # 0x14001a6a0
1400055c6:     	movq	%rax, 0x30(%rsp)
1400055cb:     	xorps	%xmm0, %xmm0
1400055ce:     	movups	%xmm0, 0x38(%rsp)
1400055d3:     	leaq	0x15f1e(%rip), %rdx     # 0x14001b4f8
1400055da:     	leaq	0x20(%rsp), %rcx
1400055df:     	callq	0x1400197d0 <.text+0x187d0>
1400055e4:     	ud2
1400055e6:     	int3
1400055e7:     	int3
1400055e8:     	int3
1400055e9:     	int3
1400055ea:     	int3
1400055eb:     	int3
1400055ec:     	int3
1400055ed:     	int3
1400055ee:     	int3
1400055ef:     	int3
1400055f0:     	pushq	%rbp
1400055f1:     	subq	$0x40, %rsp
1400055f5:     	leaq	0x40(%rsp), %rbp
1400055fa:     	movq	$-0x2, -0x8(%rbp)
140005602:     	movq	%rdx, %r8
140005605:     	movq	%rcx, -0x18(%rbp)
140005609:     	movq	$0x0, -0x10(%rbp)
140005611:     	leaq	0x15638(%rip), %rdx     # 0x14001ac50
140005618:     	leaq	-0x18(%rbp), %rcx
14000561c:     	callq	0x140014a60 <.text+0x13a60>
140005621:     	movq	-0x10(%rbp), %rcx
140005625:     	testb	%al, %al
140005627:     	je	0x14000563d <.text+0x463d>
140005629:     	testq	%rcx, %rcx
14000562c:     	leaq	0x15f3d(%rip), %rax     # 0x14001b570
140005633:     	cmovneq	%rcx, %rax
140005637:     	addq	$0x40, %rsp
14000563b:     	popq	%rbp
14000563c:     	retq
14000563d:     	testq	%rcx, %rcx
140005640:     	je	0x14000564b <.text+0x464b>
140005642:     	leaq	-0x10(%rbp), %rcx
140005646:     	callq	0x140001c00 <.text+0xc00>
14000564b:     	xorl	%eax, %eax
14000564d:     	addq	$0x40, %rsp
140005651:     	popq	%rbp
140005652:     	retq
140005653:     	nopw	%cs:(%rax,%rax)
140005660:     	movq	%rdx, 0x10(%rsp)
140005665:     	pushq	%rbp
140005666:     	subq	$0x20, %rsp
14000566a:     	leaq	0x40(%rdx), %rbp
14000566e:     	cmpq	$0x0, -0x10(%rbp)
140005673:     	je	0x14000567e <.text+0x467e>
140005675:     	leaq	-0x10(%rbp), %rcx
140005679:     	callq	0x140001c00 <.text+0xc00>
14000567e:     	nop
14000567f:     	addq	$0x20, %rsp
140005683:     	popq	%rbp
140005684:     	retq
140005685:     	int3
140005686:     	int3
140005687:     	int3
140005688:     	int3
140005689:     	int3
14000568a:     	int3
14000568b:     	int3
14000568c:     	int3
14000568d:     	int3
14000568e:     	int3
14000568f:     	int3
140005690:     	pushq	%rbp
140005691:     	subq	$0x40, %rsp
140005695:     	leaq	0x40(%rsp), %rbp
14000569a:     	movq	$-0x2, -0x8(%rbp)
1400056a2:     	movq	%rdx, %r8
1400056a5:     	movq	%rcx, -0x18(%rbp)
1400056a9:     	movq	$0x0, -0x10(%rbp)
1400056b1:     	leaq	0x15538(%rip), %rdx     # 0x14001abf0
1400056b8:     	leaq	-0x18(%rbp), %rcx
1400056bc:     	callq	0x140014a60 <.text+0x13a60>
1400056c1:     	movq	-0x10(%rbp), %rcx
1400056c5:     	testb	%al, %al
1400056c7:     	je	0x1400056dd <.text+0x46dd>
1400056c9:     	testq	%rcx, %rcx
1400056cc:     	leaq	0x15e9d(%rip), %rax     # 0x14001b570
1400056d3:     	cmovneq	%rcx, %rax
1400056d7:     	addq	$0x40, %rsp
1400056db:     	popq	%rbp
1400056dc:     	retq
1400056dd:     	testq	%rcx, %rcx
1400056e0:     	je	0x1400056eb <.text+0x46eb>
1400056e2:     	leaq	-0x10(%rbp), %rcx
1400056e6:     	callq	0x140001c00 <.text+0xc00>
1400056eb:     	xorl	%eax, %eax
1400056ed:     	addq	$0x40, %rsp
1400056f1:     	popq	%rbp
1400056f2:     	retq
1400056f3:     	nopw	%cs:(%rax,%rax)
140005700:     	movq	%rdx, 0x10(%rsp)
140005705:     	pushq	%rbp
140005706:     	subq	$0x20, %rsp
14000570a:     	leaq	0x40(%rdx), %rbp
14000570e:     	cmpq	$0x0, -0x10(%rbp)
140005713:     	je	0x14000571e <.text+0x471e>
140005715:     	leaq	-0x10(%rbp), %rcx
140005719:     	callq	0x140001c00 <.text+0xc00>
14000571e:     	nop
14000571f:     	addq	$0x20, %rsp
140005723:     	popq	%rbp
140005724:     	retq
140005725:     	int3
140005726:     	int3
140005727:     	int3
140005728:     	int3
140005729:     	int3
14000572a:     	int3
14000572b:     	int3
14000572c:     	int3
14000572d:     	int3
14000572e:     	int3
14000572f:     	int3
140005730:     	pushq	%rbp
140005731:     	pushq	%rsi
140005732:     	subq	$0x38, %rsp
140005736:     	leaq	0x30(%rsp), %rbp
14000573b:     	movq	$-0x2, (%rbp)
140005743:     	movq	%rcx, %rsi
140005746:     	movq	(%rcx), %rcx
140005749:     	callq	0x140004900 <.text+0x3900>
14000574e:     	testq	%rax, %rax
140005751:     	je	0x14000577a <.text+0x477a>
140005753:     	movq	%rax, -0x10(%rbp)
140005757:     	leaq	0x8(%rsi), %rax
14000575b:     	movq	%rax, -0x8(%rbp)
14000575f:     	cmpq	$0x0, 0x8(%rsi)
140005764:     	je	0x14000576f <.text+0x476f>
140005766:     	movq	-0x8(%rbp), %rcx
14000576a:     	callq	0x140001c00 <.text+0xc00>
14000576f:     	movq	-0x10(%rbp), %rax
140005773:     	movq	-0x8(%rbp), %rcx
140005777:     	movq	%rax, (%rcx)
14000577a:     	testq	%rax, %rax
14000577d:     	setne	%al
140005780:     	addq	$0x38, %rsp
140005784:     	popq	%rsi
140005785:     	popq	%rbp
140005786:     	retq
140005787:     	nopw	(%rax,%rax)
140005790:     	movq	%rdx, 0x10(%rsp)
140005795:     	pushq	%rbp
140005796:     	pushq	%rsi
140005797:     	subq	$0x28, %rsp
14000579b:     	leaq	0x30(%rdx), %rbp
14000579f:     	movq	-0x10(%rbp), %rax
1400057a3:     	movq	-0x8(%rbp), %rcx
1400057a7:     	movq	%rax, (%rcx)
1400057aa:     	addq	$0x28, %rsp
1400057ae:     	popq	%rsi
1400057af:     	popq	%rbp
1400057b0:     	retq
1400057b1:     	int3
1400057b2:     	int3
1400057b3:     	int3
1400057b4:     	int3
1400057b5:     	int3
1400057b6:     	int3
1400057b7:     	int3
1400057b8:     	int3
1400057b9:     	int3
1400057ba:     	int3
1400057bb:     	int3
1400057bc:     	int3
1400057bd:     	int3
1400057be:     	int3
1400057bf:     	int3
1400057c0:     	pushq	%rbp
1400057c1:     	pushq	%rsi
1400057c2:     	subq	$0x38, %rsp
1400057c6:     	leaq	0x30(%rsp), %rbp
1400057cb:     	movq	$-0x2, (%rbp)
1400057d3:     	movq	%rcx, %rsi
1400057d6:     	movq	(%rcx), %rcx
1400057d9:     	callq	0x140004fb0 <.text+0x3fb0>
1400057de:     	testq	%rax, %rax
1400057e1:     	je	0x14000580a <.text+0x480a>
1400057e3:     	movq	%rax, -0x10(%rbp)
1400057e7:     	leaq	0x8(%rsi), %rax
1400057eb:     	movq	%rax, -0x8(%rbp)
1400057ef:     	cmpq	$0x0, 0x8(%rsi)
1400057f4:     	je	0x1400057ff <.text+0x47ff>
1400057f6:     	movq	-0x8(%rbp), %rcx
1400057fa:     	callq	0x140001c00 <.text+0xc00>
1400057ff:     	movq	-0x10(%rbp), %rax
140005803:     	movq	-0x8(%rbp), %rcx
140005807:     	movq	%rax, (%rcx)
14000580a:     	testq	%rax, %rax
14000580d:     	setne	%al
140005810:     	addq	$0x38, %rsp
140005814:     	popq	%rsi
140005815:     	popq	%rbp
140005816:     	retq
140005817:     	nopw	(%rax,%rax)
140005820:     	movq	%rdx, 0x10(%rsp)
140005825:     	pushq	%rbp
140005826:     	pushq	%rsi
140005827:     	subq	$0x28, %rsp
14000582b:     	leaq	0x30(%rdx), %rbp
14000582f:     	movq	-0x10(%rbp), %rax
140005833:     	movq	-0x8(%rbp), %rcx
140005837:     	movq	%rax, (%rcx)
14000583a:     	addq	$0x28, %rsp
14000583e:     	popq	%rsi
14000583f:     	popq	%rbp
140005840:     	retq
140005841:     	int3
140005842:     	int3
140005843:     	int3
140005844:     	int3
140005845:     	int3
140005846:     	int3
140005847:     	int3
140005848:     	int3
140005849:     	int3
14000584a:     	int3
14000584b:     	int3
14000584c:     	int3
14000584d:     	int3
14000584e:     	int3
14000584f:     	int3
140005850:     	pushq	%r14
140005852:     	pushq	%rsi
140005853:     	pushq	%rdi
140005854:     	pushq	%rbx
140005855:     	subq	$0x28, %rsp
140005859:     	movq	%r8, %rsi
14000585c:     	movq	%rdx, %rbx
14000585f:     	movq	(%rcx), %rdi
140005862:     	movq	0x8(%rdi), %rax
140005866:     	movq	0x10(%rdi), %r14
14000586a:     	subq	%r14, %rax
14000586d:     	cmpq	%r8, %rax
140005870:     	jb	0x140005896 <.text+0x4896>
140005872:     	movq	(%rdi), %rcx
140005875:     	addq	%r14, %rcx
140005878:     	movq	%rbx, %rdx
14000587b:     	movq	%rsi, %r8
14000587e:     	callq	0x140018beb <.text+0x17beb>
140005883:     	addq	%rsi, %r14
140005886:     	movq	%r14, 0x10(%rdi)
14000588a:     	xorl	%eax, %eax
14000588c:     	addq	$0x28, %rsp
140005890:     	popq	%rbx
140005891:     	popq	%rdi
140005892:     	popq	%rsi
140005893:     	popq	%r14
140005895:     	retq
140005896:     	movq	%rdi, %rcx
140005899:     	movq	%r14, %rdx
14000589c:     	movq	%rsi, %r8
14000589f:     	callq	0x140018e60 <.text+0x17e60>
1400058a4:     	movq	0x10(%rdi), %r14
1400058a8:     	jmp	0x140005872 <.text+0x4872>
1400058aa:     	int3
1400058ab:     	int3
1400058ac:     	int3
1400058ad:     	int3
1400058ae:     	int3
1400058af:     	int3
1400058b0:     	pushq	%rbp
1400058b1:     	pushq	%r15
1400058b3:     	pushq	%r14
1400058b5:     	pushq	%r13
1400058b7:     	pushq	%r12
1400058b9:     	pushq	%rsi
1400058ba:     	pushq	%rdi
1400058bb:     	pushq	%rbx
1400058bc:     	subq	$0x48, %rsp
1400058c0:     	leaq	0x40(%rsp), %rbp
1400058c5:     	movq	$-0x2, (%rbp)
1400058cd:     	movq	%r8, %rbx
1400058d0:     	movq	%rdx, %rdi
1400058d3:     	movq	%rcx, %rsi
1400058d6:     	testq	%r8, %r8
1400058d9:     	je	0x140005909 <.text+0x4909>
1400058db:     	js	0x140005a38 <.text+0x4a38>
1400058e1:     	movzbl	0x1d919(%rip), %eax     # 0x140023201
1400058e8:     	movl	$0x1, %edx
1400058ed:     	movq	%rbx, %rcx
1400058f0:     	callq	0x140001340 <.text+0x340>
1400058f5:     	testq	%rax, %rax
1400058f8:     	jne	0x14000590e <.text+0x490e>
1400058fa:     	movl	$0x1, %ecx
1400058ff:     	movq	%rbx, %rdx
140005902:     	callq	0x1400196e0 <.text+0x186e0>
140005907:     	ud2
140005909:     	movl	$0x1, %eax
14000590e:     	movq	%rax, -0x20(%rbp)
140005912:     	movq	%rbx, -0x18(%rbp)
140005916:     	movq	$0x0, -0x10(%rbp)
14000591e:     	movb	$0x1, -0x8(%rbp)
140005922:     	leaq	(%rdi,%rbx,2), %r14
140005926:     	xorl	%r13d, %r13d
140005929:     	leaq	-0x20(%rbp), %rbx
14000592d:     	movabsq	$0x100000000, %r15      # imm = 0x100000000
140005937:     	jmp	0x140005956 <.text+0x4956>
140005939:     	nopl	(%rax)
140005940:     	movzwl	%ax, %edx
140005943:     	shlq	$0x10, %rdx
140005947:     	shrq	$0x10, %rdx
14000594b:     	xorl	%r13d, %r13d
14000594e:     	movq	%rbx, %rcx
140005951:     	callq	0x140007b00 <.text+0x6b00>
140005956:     	testw	%r13w, %r13w
14000595a:     	je	0x140005980 <.text+0x4980>
14000595c:     	movl	%r12d, %eax
14000595f:     	movl	%eax, %ecx
140005961:     	andl	$0xf800, %ecx           # imm = 0xF800
140005967:     	cmpl	$0xd800, %ecx           # imm = 0xD800
14000596d:     	jne	0x140005940 <.text+0x4940>
14000596f:     	jmp	0x1400059a0 <.text+0x49a0>
140005971:     	nopw	%cs:(%rax,%rax)
140005980:     	cmpq	%r14, %rdi
140005983:     	je	0x140005a15 <.text+0x4a15>
140005989:     	movzwl	(%rdi), %eax
14000598c:     	addq	$0x2, %rdi
140005990:     	movl	%eax, %ecx
140005992:     	andl	$0xf800, %ecx           # imm = 0xF800
140005998:     	cmpl	$0xd800, %ecx           # imm = 0xD800
14000599e:     	jne	0x140005940 <.text+0x4940>
1400059a0:     	movzwl	%ax, %edx
1400059a3:     	cmpl	$0xdbff, %edx           # imm = 0xDBFF
1400059a9:     	ja	0x1400059ef <.text+0x49ef>
1400059ab:     	cmpq	%r14, %rdi
1400059ae:     	je	0x1400059f4 <.text+0x49f4>
1400059b0:     	movzwl	(%rdi), %ecx
1400059b3:     	addq	$0x2, %rdi
1400059b7:     	movl	%ecx, %r8d
1400059ba:     	addl	$0x2000, %r8d           # imm = 0x2000
1400059c1:     	movzwl	%r8w, %r8d
1400059c5:     	cmpl	$0xfc00, %r8d           # imm = 0xFC00
1400059cc:     	jb	0x1400059fc <.text+0x49fc>
1400059ce:     	movzwl	%cx, %edx
1400059d1:     	andl	$0x3ff, %eax            # imm = 0x3FF
1400059d6:     	andl	$0x3ff, %edx            # imm = 0x3FF
1400059dc:     	shlq	$0x1a, %rax
1400059e0:     	shlq	$0x10, %rdx
1400059e4:     	orq	%rax, %rdx
1400059e7:     	addq	%r15, %rdx
1400059ea:     	jmp	0x140005947 <.text+0x4947>
1400059ef:     	xorl	%r13d, %r13d
1400059f2:     	jmp	0x140005a04 <.text+0x4a04>
1400059f4:     	xorl	%r13d, %r13d
1400059f7:     	movq	%r14, %rdi
1400059fa:     	jmp	0x140005a04 <.text+0x4a04>
1400059fc:     	movw	$0x1, %r13w
140005a01:     	movl	%ecx, %r12d
140005a04:     	movb	$0x0, -0x8(%rbp)
140005a08:     	movq	%rbx, %rcx
140005a0b:     	callq	0x140007b00 <.text+0x6b00>
140005a10:     	jmp	0x140005956 <.text+0x4956>
140005a15:     	movups	-0x20(%rbp), %xmm0
140005a19:     	movups	-0x10(%rbp), %xmm1
140005a1d:     	movups	%xmm1, 0x10(%rsi)
140005a21:     	movups	%xmm0, (%rsi)
140005a24:     	movq	%rsi, %rax
140005a27:     	addq	$0x48, %rsp
140005a2b:     	popq	%rbx
140005a2c:     	popq	%rdi
140005a2d:     	popq	%rsi
140005a2e:     	popq	%r12
140005a30:     	popq	%r13
140005a32:     	popq	%r14
140005a34:     	popq	%r15
140005a36:     	popq	%rbp
140005a37:     	retq
140005a38:     	callq	0x140013200 <.text+0x12200>
140005a3d:     	ud2
140005a3f:     	nop
140005a40:     	movq	%rdx, 0x10(%rsp)
140005a45:     	pushq	%rbp
140005a46:     	pushq	%r15
140005a48:     	pushq	%r14
140005a4a:     	pushq	%r13
140005a4c:     	pushq	%r12
140005a4e:     	pushq	%rsi
140005a4f:     	pushq	%rdi
140005a50:     	pushq	%rbx
140005a51:     	subq	$0x28, %rsp
140005a55:     	leaq	0x40(%rdx), %rbp
140005a59:     	movq	-0x18(%rbp), %rdx
140005a5d:     	testq	%rdx, %rdx
140005a60:     	je	0x140005a71 <.text+0x4a71>
140005a62:     	movq	-0x20(%rbp), %rcx
140005a66:     	movl	$0x1, %r8d
140005a6c:     	callq	0x140001350 <.text+0x350>
140005a71:     	nop
140005a72:     	addq	$0x28, %rsp
140005a76:     	popq	%rbx
140005a77:     	popq	%rdi
140005a78:     	popq	%rsi
140005a79:     	popq	%r12
140005a7b:     	popq	%r13
140005a7d:     	popq	%r14
140005a7f:     	popq	%r15
140005a81:     	popq	%rbp
140005a82:     	retq
140005a83:     	int3
140005a84:     	int3
140005a85:     	int3
140005a86:     	int3
140005a87:     	int3
140005a88:     	int3
140005a89:     	int3
140005a8a:     	int3
140005a8b:     	int3
140005a8c:     	int3
140005a8d:     	int3
140005a8e:     	int3
140005a8f:     	int3
140005a90:     	pushq	%rsi
140005a91:     	subq	$0x40, %rsp
140005a95:     	movq	0x1d7c4(%rip), %rax     # 0x140023260
140005a9c:     	cmpq	$0x3, %rax
140005aa0:     	ja	0x140005b59 <.text+0x4b59>
140005aa6:     	leaq	0x17277(%rip), %rcx     # 0x14001cd24
140005aad:     	movslq	(%rcx,%rax,4), %rax
140005ab1:     	addq	%rcx, %rax
140005ab4:     	jmpq	*%rax
140005ab6:     	leaq	0x15463(%rip), %rdx     # 0x14001af20
140005abd:     	leaq	0x20(%rsp), %rcx
140005ac2:     	movl	$0xe, %r8d
140005ac8:     	callq	0x140003b90 <.text+0x2b90>
140005acd:     	cmpb	$0x2, 0x38(%rsp)
140005ad2:     	jne	0x140005aec <.text+0x4aec>
140005ad4:     	movl	$0x3, %eax
140005ad9:     	movb	$0x2, %sil
140005adc:     	jmp	0x140005b4a <.text+0x4b4a>
140005ade:     	movb	$0x1, %sil
140005ae1:     	jmp	0x140005b51 <.text+0x4b51>
140005ae3:     	xorl	%esi, %esi
140005ae5:     	jmp	0x140005b51 <.text+0x4b51>
140005ae7:     	movb	$0x2, %sil
140005aea:     	jmp	0x140005b51 <.text+0x4b51>
140005aec:     	movq	0x20(%rsp), %rcx
140005af1:     	movq	0x28(%rsp), %rdx
140005af6:     	movq	0x30(%rsp), %rax
140005afb:     	cmpq	$0x4, %rax
140005aff:     	je	0x140005b13 <.text+0x4b13>
140005b01:     	cmpq	$0x1, %rax
140005b05:     	jne	0x140005b32 <.text+0x4b32>
140005b07:     	cmpb	$0x30, (%rcx)
140005b0a:     	sete	%sil
140005b0e:     	addb	%sil, %sil
140005b11:     	jmp	0x140005b34 <.text+0x4b34>
140005b13:     	movl	(%rcx), %eax
140005b15:     	bswapl	%eax
140005b17:     	xorl	%r8d, %r8d
140005b1a:     	cmpl	$0x66756c6d, %eax       # imm = 0x66756C6D
140005b1f:     	setae	%r8b
140005b23:     	cmpl	$0x66756c6c, %eax       # imm = 0x66756C6C
140005b28:     	sbbl	$0x0, %r8d
140005b2c:     	sete	%sil
140005b30:     	jmp	0x140005b34 <.text+0x4b34>
140005b32:     	xorl	%esi, %esi
140005b34:     	testq	%rdx, %rdx
140005b37:     	je	0x140005b44 <.text+0x4b44>
140005b39:     	movl	$0x1, %r8d
140005b3f:     	callq	0x140001350 <.text+0x350>
140005b44:     	leal	0x1(%rsi), %eax
140005b47:     	movzbl	%al, %eax
140005b4a:     	movq	%rax, 0x1d70f(%rip)     # 0x140023260
140005b51:     	movl	%esi, %eax
140005b53:     	addq	$0x40, %rsp
140005b57:     	popq	%rsi
140005b58:     	retq
140005b59:     	leaq	0x14e60(%rip), %rcx     # 0x14001a9c0
140005b60:     	leaq	0x15a39(%rip), %r8      # 0x14001b5a0
140005b67:     	movl	$0x28, %edx
140005b6c:     	callq	0x140019880 <.text+0x18880>
140005b71:     	ud2
140005b73:     	int3
140005b74:     	int3
140005b75:     	int3
140005b76:     	int3
140005b77:     	int3
140005b78:     	int3
140005b79:     	int3
140005b7a:     	int3
140005b7b:     	int3
140005b7c:     	int3
140005b7d:     	int3
140005b7e:     	int3
140005b7f:     	int3
140005b80:     	subq	$0x28, %rsp
140005b84:     	movzbl	0x38(%rcx), %eax
140005b88:     	xorl	%edx, %edx
140005b8a:     	cmpb	$0x1, %al
140005b8c:     	setne	%r9b
140005b90:     	movl	$0x0, %r8d
140005b96:     	sbbl	%r8d, %r8d
140005b99:     	orb	%r9b, %r8b
140005b9c:     	movzbl	%r8b, %r9d
140005ba0:     	cmpb	$-0x1, %r9b
140005ba4:     	je	0x140005bab <.text+0x4bab>
140005ba6:     	testl	%r9d, %r9d
140005ba9:     	jne	0x140005bc0 <.text+0x4bc0>
140005bab:     	movzbl	0x3a(%rcx), %edx
140005baf:     	cmpb	$-0x1, %r8b
140005bb3:     	je	0x140005bba <.text+0x4bba>
140005bb5:     	testl	%r9d, %r9d
140005bb8:     	jne	0x140005bc0 <.text+0x4bc0>
140005bba:     	testb	%dl, %dl
140005bbc:     	je	0x140005bf3 <.text+0x4bf3>
140005bbe:     	movb	$0x1, %dl
140005bc0:     	xorl	%r8d, %r8d
140005bc3:     	testb	%al, %al
140005bc5:     	jne	0x140005c65 <.text+0x4c65>
140005bcb:     	movzbl	0x10(%rcx), %eax
140005bcf:     	cmpq	$0x6, %rax
140005bd3:     	je	0x140005c65 <.text+0x4c65>
140005bd9:     	leaq	0x17154(%rip), %r9      # 0x14001cd34
140005be0:     	movslq	(%r9,%rax,4), %rax
140005be4:     	addq	%r9, %rax
140005be7:     	jmpq	*%rax
140005be9:     	movq	0x20(%rcx), %rax
140005bed:     	addq	$0x4, %rax
140005bf1:     	jmp	0x140005c67 <.text+0x4c67>
140005bf3:     	movzbl	0x10(%rcx), %r10d
140005bf8:     	leal	-0x5(%r10), %edx
140005bfc:     	cmpb	$0x1, %dl
140005bff:     	ja	0x140005c58 <.text+0x4c58>
140005c01:     	movq	(%rcx), %r8
140005c04:     	movq	0x8(%rcx), %rdx
140005c08:     	xorl	%r9d, %r9d
140005c0b:     	testb	%al, %al
140005c0d:     	jne	0x140005c25 <.text+0x4c25>
140005c0f:     	cmpb	$0x6, %r10b
140005c13:     	je	0x140005c25 <.text+0x4c25>
140005c15:     	movl	$0x2, %r9d
140005c1b:     	cmpq	$0x2, %rdx
140005c1f:     	jb	0x140005cde <.text+0x4cde>
140005c25:     	cmpq	%rdx, %r9
140005c28:     	je	0x140005c58 <.text+0x4c58>
140005c2a:     	addq	%r8, %rdx
140005c2d:     	leaq	(%r8,%r9), %r10
140005c31:     	incq	%r10
140005c34:     	cmpq	%rdx, %r10
140005c37:     	sete	%dl
140005c3a:     	movzbl	(%r8,%r9), %r8d
140005c3f:     	testb	$0x1, %dl
140005c42:     	jne	0x140005cbb <.text+0x4cbb>
140005c44:     	cmpb	$0x2e, %r8b
140005c48:     	jne	0x140005cbb <.text+0x4cbb>
140005c4a:     	movzbl	(%r10), %edx
140005c4e:     	cmpl	$0x2f, %edx
140005c51:     	je	0x140005ccd <.text+0x4ccd>
140005c53:     	cmpl	$0x5c, %edx
140005c56:     	je	0x140005ccd <.text+0x4ccd>
140005c58:     	xorl	%edx, %edx
140005c5a:     	xorl	%r8d, %r8d
140005c5d:     	testb	%al, %al
140005c5f:     	je	0x140005bcb <.text+0x4bcb>
140005c65:     	xorl	%eax, %eax
140005c67:     	addq	%rax, %r8
140005c6a:     	movzbl	%dl, %eax
140005c6d:     	addq	%r8, %rax
140005c70:     	addq	$0x28, %rsp
140005c74:     	retq
140005c75:     	movq	0x20(%rcx), %rax
140005c79:     	movq	0x30(%rcx), %rcx
140005c7d:     	leaq	0x1(%rcx), %r9
140005c81:     	testq	%rcx, %rcx
140005c84:     	cmoveq	%rcx, %r9
140005c88:     	addq	%r9, %rax
140005c8b:     	addq	$0x8, %rax
140005c8f:     	jmp	0x140005c67 <.text+0x4c67>
140005c91:     	movl	$0x6, %eax
140005c96:     	jmp	0x140005c67 <.text+0x4c67>
140005c98:     	movq	0x20(%rcx), %rax
140005c9c:     	movq	0x30(%rcx), %rcx
140005ca0:     	leaq	0x1(%rcx), %r9
140005ca4:     	testq	%rcx, %rcx
140005ca7:     	cmoveq	%rcx, %r9
140005cab:     	addq	%r9, %rax
140005cae:     	addq	$0x2, %rax
140005cb2:     	jmp	0x140005c67 <.text+0x4c67>
140005cb4:     	movl	$0x2, %eax
140005cb9:     	jmp	0x140005c67 <.text+0x4c67>
140005cbb:     	cmpb	$0x2e, %r8b
140005cbf:     	setne	%r8b
140005cc3:     	notb	%dl
140005cc5:     	orb	%r8b, %dl
140005cc8:     	testb	$0x1, %dl
140005ccb:     	jne	0x140005c58 <.text+0x4c58>
140005ccd:     	movl	$0x1, %r8d
140005cd3:     	xorl	%edx, %edx
140005cd5:     	testb	%al, %al
140005cd7:     	jne	0x140005c65 <.text+0x4c65>
140005cd9:     	jmp	0x140005bcb <.text+0x4bcb>
140005cde:     	leaq	0x1590b(%rip), %r8      # 0x14001b5f0
140005ce5:     	movl	$0x2, %ecx
140005cea:     	callq	0x140019c50 <.text+0x18c50>
140005cef:     	ud2
140005cf1:     	int3
140005cf2:     	int3
140005cf3:     	int3
140005cf4:     	int3
140005cf5:     	int3
140005cf6:     	int3
140005cf7:     	int3
140005cf8:     	int3
140005cf9:     	int3
140005cfa:     	int3
140005cfb:     	int3
140005cfc:     	int3
140005cfd:     	int3
140005cfe:     	int3
140005cff:     	int3
140005d00:     	pushq	%r15
140005d02:     	pushq	%r14
140005d04:     	pushq	%rsi
140005d05:     	pushq	%rdi
140005d06:     	pushq	%rbx
140005d07:     	subq	$0xa0, %rsp
140005d0e:     	movq	(%rcx), %rsi
140005d11:     	movq	0x8(%rcx), %rdi
140005d15:     	movzbl	0x10(%rcx), %edx
140005d19:     	cmpb	$0x6, %dl
140005d1c:     	je	0x140005d39 <.text+0x4d39>
140005d1e:     	movq	0x30(%rcx), %rax
140005d22:     	movq	%rax, 0x7f(%rsp)
140005d27:     	movups	0x11(%rcx), %xmm0
140005d2b:     	movups	0x21(%rcx), %xmm1
140005d2f:     	movaps	%xmm1, 0x70(%rsp)
140005d34:     	movaps	%xmm0, 0x60(%rsp)
140005d39:     	movzbl	0x3a(%rcx), %r8d
140005d3e:     	movzbl	0x38(%rcx), %r9d
140005d43:     	movzbl	0x39(%rcx), %eax
140005d47:     	movq	%rsi, 0x20(%rsp)
140005d4c:     	movq	%rdi, 0x28(%rsp)
140005d51:     	movb	%dl, 0x30(%rsp)
140005d55:     	movaps	0x60(%rsp), %xmm0
140005d5a:     	movaps	0x70(%rsp), %xmm1
140005d5f:     	movups	%xmm0, 0x31(%rsp)
140005d64:     	movups	%xmm1, 0x41(%rsp)
140005d69:     	movq	0x7f(%rsp), %rcx
140005d6e:     	movq	%rcx, 0x50(%rsp)
140005d73:     	movb	%r8b, 0x5a(%rsp)
140005d78:     	movb	%r9b, 0x58(%rsp)
140005d7d:     	movb	%al, 0x59(%rsp)
140005d81:     	cmpb	$0x2, %r9b
140005d85:     	jne	0x140005e75 <.text+0x4e75>
140005d8b:     	testq	%rdi, %rdi
140005d8e:     	je	0x140005ed3 <.text+0x4ed3>
140005d94:     	cmpb	$0x3, %dl
140005d97:     	jae	0x140005e00 <.text+0x4e00>
140005d99:     	nopl	(%rax)
140005da0:     	xorl	%ecx, %ecx
140005da2:     	nopw	%cs:(%rax,%rax)
140005db0:     	cmpb	$0x5c, (%rsi,%rcx)
140005db4:     	je	0x140005dd0 <.text+0x4dd0>
140005db6:     	incq	%rcx
140005db9:     	cmpq	%rcx, %rdi
140005dbc:     	jne	0x140005db0 <.text+0x4db0>
140005dbe:     	xorl	%edx, %edx
140005dc0:     	movq	%rdi, %rcx
140005dc3:     	testq	%rcx, %rcx
140005dc6:     	je	0x140005dde <.text+0x4dde>
140005dc8:     	jmp	0x140005e6b <.text+0x4e6b>
140005dcd:     	nopl	(%rax)
140005dd0:     	movl	$0x1, %edx
140005dd5:     	testq	%rcx, %rcx
140005dd8:     	jne	0x140005e6b <.text+0x4e6b>
140005dde:     	cmpq	%rdx, %rdi
140005de1:     	jb	0x140005f05 <.text+0x4f05>
140005de7:     	addq	%rdx, %rsi
140005dea:     	subq	%rdx, %rdi
140005ded:     	jne	0x140005da0 <.text+0x4da0>
140005def:     	jmp	0x140005e69 <.text+0x4e69>
140005df1:     	nopw	%cs:(%rax,%rax)
140005e00:     	xorl	%ecx, %ecx
140005e02:     	nopw	%cs:(%rax,%rax)
140005e10:     	movzbl	(%rsi,%rcx), %edx
140005e14:     	cmpl	$0x2f, %edx
140005e17:     	je	0x140005e40 <.text+0x4e40>
140005e19:     	cmpl	$0x5c, %edx
140005e1c:     	je	0x140005e40 <.text+0x4e40>
140005e1e:     	incq	%rcx
140005e21:     	cmpq	%rcx, %rdi
140005e24:     	jne	0x140005e10 <.text+0x4e10>
140005e26:     	xorl	%edx, %edx
140005e28:     	movq	%rdi, %rcx
140005e2b:     	testq	%rcx, %rcx
140005e2e:     	jne	0x140005e4a <.text+0x4e4a>
140005e30:     	jmp	0x140005e55 <.text+0x4e55>
140005e32:     	nopw	%cs:(%rax,%rax)
140005e40:     	movl	$0x1, %edx
140005e45:     	testq	%rcx, %rcx
140005e48:     	je	0x140005e55 <.text+0x4e55>
140005e4a:     	cmpq	$0x1, %rcx
140005e4e:     	jne	0x140005e6b <.text+0x4e6b>
140005e50:     	cmpb	$0x2e, (%rsi)
140005e53:     	jne	0x140005e6b <.text+0x4e6b>
140005e55:     	addq	%rdx, %rcx
140005e58:     	cmpq	%rcx, %rdi
140005e5b:     	jb	0x140005f0a <.text+0x4f0a>
140005e61:     	addq	%rcx, %rsi
140005e64:     	subq	%rcx, %rdi
140005e67:     	jne	0x140005e00 <.text+0x4e00>
140005e69:     	xorl	%edi, %edi
140005e6b:     	movq	%rsi, 0x20(%rsp)
140005e70:     	movq	%rdi, 0x28(%rsp)
140005e75:     	cmpb	$0x2, %al
140005e77:     	jne	0x140005ed9 <.text+0x4ed9>
140005e79:     	leaq	0x20(%rsp), %rcx
140005e7e:     	callq	0x140005b80 <.text+0x4b80>
140005e83:     	cmpq	%rax, %rdi
140005e86:     	jbe	0x140005ed9 <.text+0x4ed9>
140005e88:     	leaq	0x60(%rsp), %rbx
140005e8d:     	leaq	0x20(%rsp), %r14
140005e92:     	nopw	%cs:(%rax,%rax)
140005ea0:     	movq	%rbx, %rcx
140005ea3:     	movq	%r14, %rdx
140005ea6:     	callq	0x140005f20 <.text+0x4f20>
140005eab:     	cmpb	$0xa, 0x68(%rsp)
140005eb0:     	jne	0x140005ed9 <.text+0x4ed9>
140005eb2:     	movq	%rdi, %r15
140005eb5:     	subq	0x60(%rsp), %r15
140005eba:     	jb	0x140005ef1 <.text+0x4ef1>
140005ebc:     	movq	%r15, 0x28(%rsp)
140005ec1:     	movq	%r14, %rcx
140005ec4:     	callq	0x140005b80 <.text+0x4b80>
140005ec9:     	movq	%r15, %rdi
140005ecc:     	cmpq	%rax, %r15
140005ecf:     	ja	0x140005ea0 <.text+0x4ea0>
140005ed1:     	jmp	0x140005edc <.text+0x4edc>
140005ed3:     	xorl	%edi, %edi
140005ed5:     	cmpb	$0x2, %al
140005ed7:     	je	0x140005e79 <.text+0x4e79>
140005ed9:     	movq	%rdi, %r15
140005edc:     	movq	%rsi, %rax
140005edf:     	movq	%r15, %rdx
140005ee2:     	addq	$0xa0, %rsp
140005ee9:     	popq	%rbx
140005eea:     	popq	%rdi
140005eeb:     	popq	%rsi
140005eec:     	popq	%r14
140005eee:     	popq	%r15
140005ef0:     	retq
140005ef1:     	leaq	0x15758(%rip), %r8      # 0x14001b650
140005ef8:     	movq	%r15, %rcx
140005efb:     	movq	%rdi, %rdx
140005efe:     	callq	0x140019cd0 <.text+0x18cd0>
140005f03:     	ud2
140005f05:     	movl	$0x1, %ecx
140005f0a:     	leaq	0x15727(%rip), %r8      # 0x14001b638
140005f11:     	movq	%rdi, %rdx
140005f14:     	callq	0x140019c50 <.text+0x18c50>
140005f19:     	ud2
140005f1b:     	int3
140005f1c:     	int3
140005f1d:     	int3
140005f1e:     	int3
140005f1f:     	int3
140005f20:     	pushq	%rsi
140005f21:     	pushq	%rdi
140005f22:     	pushq	%rbx
140005f23:     	subq	$0x20, %rsp
140005f27:     	movq	%rdx, %rdi
140005f2a:     	movq	%rcx, %rsi
140005f2d:     	movq	%rdx, %rcx
140005f30:     	callq	0x140005b80 <.text+0x4b80>
140005f35:     	movq	0x8(%rdi), %rdx
140005f39:     	cmpq	%rdx, %rax
140005f3c:     	ja	0x140006029 <.text+0x5029>
140005f42:     	movq	(%rdi), %r10
140005f45:     	leaq	(%r10,%rax), %rcx
140005f49:     	movq	%rax, %r11
140005f4c:     	subq	%rdx, %r11
140005f4f:     	jne	0x140005f5b <.text+0x4f5b>
140005f51:     	movzbl	0x10(%rdi), %r8d
140005f56:     	xorl	%r9d, %r9d
140005f59:     	jmp	0x140005fd5 <.text+0x4fd5>
140005f5b:     	movzbl	0x10(%rdi), %r8d
140005f60:     	incq	%r11
140005f63:     	leaq	(%rdx,%r10), %rdi
140005f67:     	decq	%rdi
140005f6a:     	xorl	%r9d, %r9d
140005f6d:     	cmpb	$0x3, %r8b
140005f71:     	jae	0x140005fa0 <.text+0x4fa0>
140005f73:     	nopw	%cs:(%rax,%rax)
140005f80:     	cmpb	$0x5c, (%rdi)
140005f83:     	je	0x140005fbb <.text+0x4fbb>
140005f85:     	incq	%r11
140005f88:     	decq	%rdi
140005f8b:     	cmpq	$0x1, %r11
140005f8f:     	jne	0x140005f80 <.text+0x4f80>
140005f91:     	jmp	0x140005fd5 <.text+0x4fd5>
140005f93:     	nopw	%cs:(%rax,%rax)
140005fa0:     	movzbl	(%rdi), %ebx
140005fa3:     	cmpl	$0x2f, %ebx
140005fa6:     	je	0x140005fbb <.text+0x4fbb>
140005fa8:     	cmpl	$0x5c, %ebx
140005fab:     	je	0x140005fbb <.text+0x4fbb>
140005fad:     	incq	%r11
140005fb0:     	decq	%rdi
140005fb3:     	cmpq	$0x1, %r11
140005fb7:     	jne	0x140005fa0 <.text+0x4fa0>
140005fb9:     	jmp	0x140005fd5 <.text+0x4fd5>
140005fbb:     	negq	%r11
140005fbe:     	addq	%r11, %rax
140005fc1:     	incq	%rax
140005fc4:     	cmpq	%rdx, %rax
140005fc7:     	ja	0x14000603a <.text+0x503a>
140005fc9:     	addq	%rax, %r10
140005fcc:     	movl	$0x1, %r9d
140005fd2:     	movq	%r10, %rcx
140005fd5:     	subq	%rax, %rdx
140005fd8:     	je	0x140005ffe <.text+0x4ffe>
140005fda:     	movb	$0x9, %al
140005fdc:     	cmpq	$0x2, %rdx
140005fe0:     	je	0x140006002 <.text+0x5002>
140005fe2:     	cmpq	$0x1, %rdx
140005fe6:     	jne	0x140006010 <.text+0x5010>
140005fe8:     	cmpb	$0x2e, (%rcx)
140005feb:     	jne	0x140006010 <.text+0x5010>
140005fed:     	xorl	%eax, %eax
140005fef:     	cmpb	$0x3, %r8b
140005ff3:     	setae	%al
140005ff6:     	leal	(%rax,%rax,2), %eax
140005ff9:     	addl	$0x7, %eax
140005ffc:     	jmp	0x140006010 <.text+0x5010>
140005ffe:     	movb	$0xa, %al
140006000:     	jmp	0x140006010 <.text+0x5010>
140006002:     	cmpb	$0x2e, (%rcx)
140006005:     	jne	0x140006010 <.text+0x5010>
140006007:     	cmpb	$0x2e, 0x1(%rcx)
14000600b:     	sete	%al
14000600e:     	xorb	$0x9, %al
140006010:     	addq	%rdx, %r9
140006013:     	movq	%r9, (%rsi)
140006016:     	movb	%al, 0x8(%rsi)
140006019:     	movq	%rcx, 0x10(%rsi)
14000601d:     	movq	%rdx, 0x18(%rsi)
140006021:     	addq	$0x20, %rsp
140006025:     	popq	%rbx
140006026:     	popq	%rdi
140006027:     	popq	%rsi
140006028:     	retq
140006029:     	leaq	0x155f0(%rip), %r8      # 0x14001b620
140006030:     	movq	%rax, %rcx
140006033:     	callq	0x140019c50 <.text+0x18c50>
140006038:     	ud2
14000603a:     	leaq	0x155c7(%rip), %r8      # 0x14001b608
140006041:     	movq	%rax, %rcx
140006044:     	callq	0x140019c50 <.text+0x18c50>
140006049:     	ud2
14000604b:     	int3
14000604c:     	int3
14000604d:     	int3
14000604e:     	int3
14000604f:     	int3
140006050:     	pushq	%r15
140006052:     	pushq	%r14
140006054:     	pushq	%r13
140006056:     	pushq	%r12
140006058:     	pushq	%rsi
140006059:     	pushq	%rdi
14000605a:     	pushq	%rbp
14000605b:     	pushq	%rbx
14000605c:     	subq	$0x38, %rsp
140006060:     	movzbl	0x38(%rdx), %r13d
140006065:     	cmpb	$0x3, %r13b
140006069:     	je	0x1400062df <.text+0x52df>
14000606f:     	movq	%rdx, %rdi
140006072:     	movzbl	0x39(%rdx), %ebp
140006076:     	cmpb	$0x3, %bpl
14000607a:     	je	0x1400062df <.text+0x52df>
140006080:     	cmpb	%bpl, %r13b
140006083:     	ja	0x1400062df <.text+0x52df>
140006089:     	movq	(%rdi), %r8
14000608c:     	movq	0x8(%rdi), %r11
140006090:     	movzbl	0x10(%rdi), %esi
140006094:     	xorl	%eax, %eax
140006096:     	cmpq	$0x3, %rsi
14000609a:     	setae	%al
14000609d:     	leal	0x7(%rax,%rax,2), %r14d
1400060a2:     	movzbl	0x3a(%rdi), %r15d
1400060a7:     	movq	0x20(%rdi), %rax
1400060ab:     	movq	0x30(%rdi), %rdx
1400060af:     	leaq	0x1(%rdx), %r9
1400060b3:     	testq	%rdx, %rdx
1400060b6:     	cmoveq	%rdx, %r9
1400060ba:     	leaq	0x2(%rax,%r9), %rdx
1400060bf:     	movq	%rdx, 0x30(%rsp)
1400060c4:     	leaq	(%rax,%r9), %rdx
1400060c8:     	addq	$0x8, %rdx
1400060cc:     	movq	%rdx, 0x28(%rsp)
1400060d1:     	addq	$0x4, %rax
1400060d5:     	leaq	0x16c70(%rip), %r12     # 0x14001cd4c
1400060dc:     	movq	%r11, %rdx
1400060df:     	jmp	0x140006105 <.text+0x5105>
1400060e1:     	movq	0x28(%rsp), %r9
1400060e6:     	testq	%r9, %r9
1400060e9:     	jne	0x140006302 <.text+0x5302>
1400060ef:     	movb	$0x1, 0x38(%rdi)
1400060f3:     	movb	$0x1, %r13b
1400060f6:     	movq	%r8, %r10
1400060f9:     	movq	%r10, %r8
1400060fc:     	cmpb	%bpl, %r13b
1400060ff:     	ja	0x1400062df <.text+0x52df>
140006105:     	testb	%r13b, %r13b
140006108:     	je	0x140006180 <.text+0x5180>
14000610a:     	movzbl	%r13b, %r9d
14000610e:     	cmpl	$0x1, %r9d
140006112:     	jne	0x1400061b0 <.text+0x51b0>
140006118:     	movb	$0x2, 0x38(%rdi)
14000611c:     	testb	%r15b, %r15b
14000611f:     	jne	0x1400062c0 <.text+0x52c0>
140006125:     	movb	$0x2, %r13b
140006128:     	cmpl	$0x3, %esi
14000612b:     	jb	0x1400060f6 <.text+0x50f6>
14000612d:     	cmpl	$0x5, %esi
140006130:     	je	0x1400060f6 <.text+0x50f6>
140006132:     	cmpl	$0x6, %esi
140006135:     	jne	0x14000631c <.text+0x531c>
14000613b:     	testq	%rdx, %rdx
14000613e:     	je	0x14000628a <.text+0x528a>
140006144:     	movzbl	(%r8), %r9d
140006148:     	cmpq	$0x1, %rdx
14000614c:     	je	0x140006291 <.text+0x5291>
140006152:     	cmpb	$0x2e, %r9b
140006156:     	jne	0x140006291 <.text+0x5291>
14000615c:     	movzbl	0x1(%r8), %r9d
140006161:     	cmpl	$0x2f, %r9d
140006165:     	je	0x1400062a5 <.text+0x52a5>
14000616b:     	cmpl	$0x5c, %r9d
14000616f:     	jne	0x1400060f6 <.text+0x50f6>
140006171:     	jmp	0x1400062a5 <.text+0x52a5>
140006176:     	nopw	%cs:(%rax,%rax)
140006180:     	cmpb	$0x6, %sil
140006184:     	je	0x1400060ef <.text+0x50ef>
14000618a:     	movslq	(%r12,%rsi,4), %r10
14000618e:     	addq	%r12, %r10
140006191:     	movq	%rax, %r9
140006194:     	jmpq	*%r10
140006197:     	movq	0x30(%rsp), %r9
14000619c:     	jmp	0x1400060e6 <.text+0x50e6>
1400061a1:     	nopw	%cs:(%rax,%rax)
1400061b0:     	testq	%rdx, %rdx
1400061b3:     	je	0x1400062db <.text+0x52db>
1400061b9:     	xorl	%r9d, %r9d
1400061bc:     	cmpb	$0x3, %sil
1400061c0:     	jae	0x1400061f0 <.text+0x51f0>
1400061c2:     	nopw	%cs:(%rax,%rax)
1400061d0:     	cmpb	$0x5c, (%r8,%r9)
1400061d5:     	je	0x140006218 <.text+0x5218>
1400061d7:     	incq	%r9
1400061da:     	cmpq	%r9, %rdx
1400061dd:     	jne	0x1400061d0 <.text+0x51d0>
1400061df:     	jmp	0x140006209 <.text+0x5209>
1400061e1:     	nopw	%cs:(%rax,%rax)
1400061f0:     	movzbl	(%r8,%r9), %r10d
1400061f5:     	cmpl	$0x2f, %r10d
1400061f9:     	je	0x140006218 <.text+0x5218>
1400061fb:     	cmpl	$0x5c, %r10d
1400061ff:     	je	0x140006218 <.text+0x5218>
140006201:     	incq	%r9
140006204:     	cmpq	%r9, %rdx
140006207:     	jne	0x1400061f0 <.text+0x51f0>
140006209:     	xorl	%r10d, %r10d
14000620c:     	movq	%rdx, %r9
14000620f:     	testq	%r9, %r9
140006212:     	jne	0x140006223 <.text+0x5223>
140006214:     	movb	$0xa, %bl
140006216:     	jmp	0x140006260 <.text+0x5260>
140006218:     	movl	$0x1, %r10d
14000621e:     	testq	%r9, %r9
140006221:     	je	0x140006214 <.text+0x5214>
140006223:     	movb	$0x9, %bl
140006225:     	cmpq	$0x2, %r9
140006229:     	je	0x140006245 <.text+0x5245>
14000622b:     	cmpq	$0x1, %r9
14000622f:     	jne	0x140006260 <.text+0x5260>
140006231:     	cmpb	$0x2e, (%r8)
140006235:     	movzbl	%r14b, %ebx
140006239:     	movl	$0x9, %r11d
14000623f:     	cmovnel	%r11d, %ebx
140006243:     	jmp	0x140006260 <.text+0x5260>
140006245:     	cmpb	$0x2e, (%r8)
140006249:     	jne	0x140006260 <.text+0x5260>
14000624b:     	cmpb	$0x2e, 0x1(%r8)
140006250:     	sete	%bl
140006253:     	xorb	$0x9, %bl
140006256:     	nopw	%cs:(%rax,%rax)
140006260:     	addq	%r9, %r10
140006263:     	movq	%rdx, %r11
140006266:     	subq	%r10, %r11
140006269:     	jb	0x1400063ab <.text+0x53ab>
14000626f:     	addq	%r8, %r10
140006272:     	movq	%r10, (%rdi)
140006275:     	movq	%r11, 0x8(%rdi)
140006279:     	movb	$0x2, %r13b
14000627c:     	movq	%r11, %rdx
14000627f:     	cmpb	$0xa, %bl
140006282:     	je	0x1400060f9 <.text+0x50f9>
140006288:     	jmp	0x1400062f6 <.text+0x52f6>
14000628a:     	xorl	%edx, %edx
14000628c:     	jmp	0x1400060f6 <.text+0x50f6>
140006291:     	cmpq	$0x1, %rdx
140006295:     	jne	0x1400060f6 <.text+0x50f6>
14000629b:     	cmpb	$0x2e, %r9b
14000629f:     	jne	0x1400060f6 <.text+0x50f6>
1400062a5:     	testq	%r11, %r11
1400062a8:     	je	0x1400063f9 <.text+0x53f9>
1400062ae:     	decq	%r11
1400062b1:     	incq	%r8
1400062b4:     	movq	%r8, (%rdi)
1400062b7:     	movq	%r11, 0x8(%rdi)
1400062bb:     	movb	$0x7, (%rcx)
1400062be:     	jmp	0x1400062e2 <.text+0x52e2>
1400062c0:     	testq	%r11, %r11
1400062c3:     	je	0x1400063bc <.text+0x53bc>
1400062c9:     	decq	%r11
1400062cc:     	incq	%r8
1400062cf:     	movq	%r8, (%rdi)
1400062d2:     	movq	%r11, 0x8(%rdi)
1400062d6:     	movb	$0x6, (%rcx)
1400062d9:     	jmp	0x1400062e2 <.text+0x52e2>
1400062db:     	movb	$0x3, 0x38(%rdi)
1400062df:     	movb	$0xa, (%rcx)
1400062e2:     	movq	%rcx, %rax
1400062e5:     	addq	$0x38, %rsp
1400062e9:     	popq	%rbx
1400062ea:     	popq	%rbp
1400062eb:     	popq	%rdi
1400062ec:     	popq	%rsi
1400062ed:     	popq	%r12
1400062ef:     	popq	%r13
1400062f1:     	popq	%r14
1400062f3:     	popq	%r15
1400062f5:     	retq
1400062f6:     	movb	%bl, (%rcx)
1400062f8:     	movq	%r8, 0x8(%rcx)
1400062fc:     	movq	%r9, 0x10(%rcx)
140006300:     	jmp	0x1400062e2 <.text+0x52e2>
140006302:     	movb	$0x1, 0x38(%rdi)
140006306:     	leaq	0x16a57(%rip), %rdx     # 0x14001cd64
14000630d:     	movslq	(%rdx,%rsi,4), %r9
140006311:     	addq	%rdx, %r9
140006314:     	jmpq	*%r9
140006317:     	movq	%rax, %r9
14000631a:     	jmp	0x14000633d <.text+0x533d>
14000631c:     	movb	$0x6, (%rcx)
14000631f:     	jmp	0x1400062e2 <.text+0x52e2>
140006321:     	movq	0x28(%rsp), %r9
140006326:     	jmp	0x14000633d <.text+0x533d>
140006328:     	movl	$0x6, %r9d
14000632e:     	jmp	0x14000633d <.text+0x533d>
140006330:     	movq	0x30(%rsp), %r9
140006335:     	jmp	0x14000633d <.text+0x533d>
140006337:     	movl	$0x2, %r9d
14000633d:     	cmpq	%r11, %r9
140006340:     	ja	0x1400063d1 <.text+0x53d1>
140006346:     	leaq	0x16a2f(%rip), %rdx     # 0x14001cd7c
14000634d:     	movslq	(%rdx,%rsi,4), %r10
140006351:     	addq	%rdx, %r10
140006354:     	jmpq	*%r10
140006357:     	movq	0x28(%rsp), %rax
14000635c:     	jmp	0x140006371 <.text+0x5371>
14000635e:     	movl	$0x6, %eax
140006363:     	jmp	0x140006371 <.text+0x5371>
140006365:     	movq	0x30(%rsp), %rax
14000636a:     	jmp	0x140006371 <.text+0x5371>
14000636c:     	movl	$0x2, %eax
140006371:     	movq	%r11, %rdx
140006374:     	subq	%rax, %rdx
140006377:     	jb	0x1400063e5 <.text+0x53e5>
140006379:     	addq	%r8, %rax
14000637c:     	movq	%rax, (%rdi)
14000637f:     	movq	%rdx, 0x8(%rdi)
140006383:     	movq	0x30(%rdi), %rax
140006387:     	movq	%rax, 0x20(%rcx)
14000638b:     	movups	0x11(%rdi), %xmm0
14000638f:     	movups	0x21(%rdi), %xmm1
140006393:     	movups	%xmm1, 0x11(%rcx)
140006397:     	movups	%xmm0, 0x1(%rcx)
14000639b:     	movb	%sil, (%rcx)
14000639e:     	movq	%r8, 0x28(%rcx)
1400063a2:     	movq	%r9, 0x30(%rcx)
1400063a6:     	jmp	0x1400062e2 <.text+0x52e2>
1400063ab:     	leaq	0x15316(%rip), %r8      # 0x14001b6c8
1400063b2:     	movq	%r10, %rcx
1400063b5:     	callq	0x140019c50 <.text+0x18c50>
1400063ba:     	ud2
1400063bc:     	leaq	0x152ed(%rip), %r8      # 0x14001b6b0
1400063c3:     	movl	$0x1, %ecx
1400063c8:     	xorl	%edx, %edx
1400063ca:     	callq	0x140019c50 <.text+0x18c50>
1400063cf:     	ud2
1400063d1:     	leaq	0x15290(%rip), %r8      # 0x14001b668
1400063d8:     	movq	%r9, %rcx
1400063db:     	movq	%r11, %rdx
1400063de:     	callq	0x140019cd0 <.text+0x18cd0>
1400063e3:     	ud2
1400063e5:     	leaq	0x15294(%rip), %r8      # 0x14001b680
1400063ec:     	movq	%rax, %rcx
1400063ef:     	movq	%r11, %rdx
1400063f2:     	callq	0x140019c50 <.text+0x18c50>
1400063f7:     	ud2
1400063f9:     	leaq	0x15298(%rip), %r8      # 0x14001b698
140006400:     	movl	$0x1, %ecx
140006405:     	xorl	%edx, %edx
140006407:     	callq	0x140019c50 <.text+0x18c50>
14000640c:     	ud2
14000640e:     	int3
14000640f:     	int3
140006410:     	pushq	%rsi
140006411:     	pushq	%rdi
140006412:     	subq	$0x48, %rsp
140006416:     	movq	%rdx, %rsi
140006419:     	movq	%rcx, %rdi
14000641c:     	leaq	0x20(%rsp), %rcx
140006421:     	movq	%rdi, %rdx
140006424:     	movq	%rsi, %r8
140006427:     	callq	0x140009f50 <.text+0x8f50>
14000642c:     	movzbl	0x20(%rsp), %eax
140006431:     	movq	0x30(%rsp), %rcx
140006436:     	movq	0x40(%rsp), %rdx
14000643b:     	movzbl	%al, %r8d
14000643f:     	leaq	0x1694e(%rip), %r9      # 0x14001cd94
140006446:     	movslq	(%r9,%r8,4), %r10
14000644a:     	addq	%r9, %r10
14000644d:     	movq	%rsi, %r8
140006450:     	movq	%rdi, %r9
140006453:     	jmpq	*%r10
140006456:     	addq	$0x4, %rcx
14000645a:     	jmp	0x140006490 <.text+0x5490>
14000645c:     	leaq	0x1(%rdx), %r8
140006460:     	testq	%rdx, %rdx
140006463:     	cmoveq	%rdx, %r8
140006467:     	addq	%r8, %rcx
14000646a:     	addq	$0x8, %rcx
14000646e:     	jmp	0x140006490 <.text+0x5490>
140006470:     	movl	$0x6, %ecx
140006475:     	jmp	0x140006490 <.text+0x5490>
140006477:     	leaq	0x1(%rdx), %r8
14000647b:     	testq	%rdx, %rdx
14000647e:     	cmoveq	%rdx, %r8
140006482:     	addq	%r8, %rcx
140006485:     	addq	$0x2, %rcx
140006489:     	jmp	0x140006490 <.text+0x5490>
14000648b:     	movl	$0x2, %ecx
140006490:     	movq	%rsi, %r8
140006493:     	subq	%rcx, %r8
140006496:     	jb	0x14000653c <.text+0x553c>
14000649c:     	addq	%rdi, %rcx
14000649f:     	movq	%rcx, %r9
1400064a2:     	testq	%r8, %r8
1400064a5:     	je	0x1400064b5 <.text+0x54b5>
1400064a7:     	movzbl	(%r9), %ecx
1400064ab:     	cmpl	$0x2f, %ecx
1400064ae:     	je	0x1400064b9 <.text+0x54b9>
1400064b0:     	cmpl	$0x5c, %ecx
1400064b3:     	je	0x1400064b9 <.text+0x54b9>
1400064b5:     	cmpb	$0x4, %al
1400064b7:     	ja	0x1400064f3 <.text+0x54f3>
1400064b9:     	leaq	0x20(%rsp), %rcx
1400064be:     	movq	%rdi, %rdx
1400064c1:     	movq	%rsi, %r8
1400064c4:     	callq	0x140009f50 <.text+0x8f50>
1400064c9:     	movzbl	0x20(%rsp), %eax
1400064ce:     	movq	0x30(%rsp), %rcx
1400064d3:     	movq	0x40(%rsp), %rdx
1400064d8:     	movzbl	%al, %r8d
1400064dc:     	leaq	0x168cd(%rip), %r9      # 0x14001cdb0
1400064e3:     	movslq	(%r9,%r8,4), %r8
1400064e7:     	addq	%r9, %r8
1400064ea:     	jmpq	*%r8
1400064ed:     	addq	$0x4, %rcx
1400064f1:     	jmp	0x14000652b <.text+0x552b>
1400064f3:     	xorl	%eax, %eax
1400064f5:     	jmp	0x140006535 <.text+0x5535>
1400064f7:     	leaq	0x1(%rdx), %r8
1400064fb:     	testq	%rdx, %rdx
1400064fe:     	cmoveq	%rdx, %r8
140006502:     	addq	%r8, %rcx
140006505:     	addq	$0x8, %rcx
140006509:     	jmp	0x14000652b <.text+0x552b>
14000650b:     	movl	$0x6, %ecx
140006510:     	jmp	0x14000652b <.text+0x552b>
140006512:     	leaq	0x1(%rdx), %r8
140006516:     	testq	%rdx, %rdx
140006519:     	cmoveq	%rdx, %r8
14000651d:     	addq	%r8, %rcx
140006520:     	addq	$0x2, %rcx
140006524:     	jmp	0x14000652b <.text+0x552b>
140006526:     	movl	$0x2, %ecx
14000652b:     	cmpq	%rsi, %rcx
14000652e:     	ja	0x14000653c <.text+0x553c>
140006530:     	cmpb	$0x6, %al
140006532:     	setne	%al
140006535:     	addq	$0x48, %rsp
140006539:     	popq	%rdi
14000653a:     	popq	%rsi
14000653b:     	retq
14000653c:     	leaq	0x1508d(%rip), %r8      # 0x14001b5d0
140006543:     	movq	%rsi, %rdx
140006546:     	callq	0x140019c50 <.text+0x18c50>
14000654b:     	ud2
14000654d:     	int3
14000654e:     	int3
14000654f:     	int3
140006550:     	pushq	%r15
140006552:     	pushq	%r14
140006554:     	pushq	%r13
140006556:     	pushq	%r12
140006558:     	pushq	%rsi
140006559:     	pushq	%rdi
14000655a:     	pushq	%rbp
14000655b:     	pushq	%rbx
14000655c:     	subq	$0x178, %rsp            # imm = 0x178
140006563:     	movq	%r9, %rbx
140006566:     	movq	%r8, %r14
140006569:     	movq	%rdx, %rsi
14000656c:     	movq	%rcx, %rdi
14000656f:     	leaq	0x30(%rsp), %rcx
140006574:     	movq	%rdi, %rdx
140006577:     	movq	%rsi, %r8
14000657a:     	callq	0x140009f50 <.text+0x8f50>
14000657f:     	movzbl	0x30(%rsp), %ebp
140006584:     	movq	0x40(%rsp), %rcx
140006589:     	movq	0x50(%rsp), %rax
14000658e:     	movzbl	%bpl, %r9d
140006592:     	leaq	0x16833(%rip), %r8      # 0x14001cdcc
140006599:     	movslq	(%r8,%r9,4), %r9
14000659d:     	addq	%r8, %r9
1400065a0:     	movq	%rsi, %r10
1400065a3:     	movq	%rdi, %r8
1400065a6:     	jmpq	*%r9
1400065a9:     	addq	$0x4, %rcx
1400065ad:     	jmp	0x1400065e3 <.text+0x55e3>
1400065af:     	leaq	0x1(%rax), %r8
1400065b3:     	testq	%rax, %rax
1400065b6:     	cmoveq	%rax, %r8
1400065ba:     	addq	%r8, %rcx
1400065bd:     	addq	$0x8, %rcx
1400065c1:     	jmp	0x1400065e3 <.text+0x55e3>
1400065c3:     	movl	$0x6, %ecx
1400065c8:     	jmp	0x1400065e3 <.text+0x55e3>
1400065ca:     	leaq	0x1(%rax), %r8
1400065ce:     	testq	%rax, %rax
1400065d1:     	cmoveq	%rax, %r8
1400065d5:     	addq	%r8, %rcx
1400065d8:     	addq	$0x2, %rcx
1400065dc:     	jmp	0x1400065e3 <.text+0x55e3>
1400065de:     	movl	$0x2, %ecx
1400065e3:     	movq	%rsi, %r10
1400065e6:     	subq	%rcx, %r10
1400065e9:     	jb	0x14000693e <.text+0x593e>
1400065ef:     	addq	%rdi, %rcx
1400065f2:     	movq	%rcx, %r8
1400065f5:     	testq	%r10, %r10
1400065f8:     	je	0x14000660e <.text+0x560e>
1400065fa:     	movzbl	(%r8), %eax
1400065fe:     	cmpb	$0x2f, %al
140006600:     	sete	%cl
140006603:     	cmpb	$0x5c, %al
140006605:     	sete	%r13b
140006609:     	orb	%cl, %r13b
14000660c:     	jmp	0x140006611 <.text+0x5611>
14000660e:     	xorl	%r13d, %r13d
140006611:     	movq	0x50(%rsp), %rax
140006616:     	movq	%rax, 0xbf(%rsp)
14000661e:     	movups	0x31(%rsp), %xmm0
140006623:     	movups	0x41(%rsp), %xmm1
140006628:     	movaps	%xmm1, 0xb0(%rsp)
140006630:     	movaps	%xmm0, 0xa0(%rsp)
140006638:     	leaq	0x30(%rsp), %rcx
14000663d:     	movq	%r14, %rdx
140006640:     	movq	%rbx, %r8
140006643:     	callq	0x140009f50 <.text+0x8f50>
140006648:     	movzbl	0x30(%rsp), %edx
14000664d:     	movq	0x40(%rsp), %rcx
140006652:     	movq	0x50(%rsp), %rax
140006657:     	leaq	0x1678a(%rip), %r8      # 0x14001cde8
14000665e:     	movslq	(%r8,%rdx,4), %r9
140006662:     	addq	%r8, %r9
140006665:     	movq	%rbx, %rdx
140006668:     	movq	%r14, %r8
14000666b:     	jmpq	*%r9
14000666e:     	addq	$0x4, %rcx
140006672:     	jmp	0x1400066a8 <.text+0x56a8>
140006674:     	leaq	0x1(%rax), %rdx
140006678:     	testq	%rax, %rax
14000667b:     	cmoveq	%rax, %rdx
14000667f:     	addq	%rdx, %rcx
140006682:     	addq	$0x8, %rcx
140006686:     	jmp	0x1400066a8 <.text+0x56a8>
140006688:     	movl	$0x6, %ecx
14000668d:     	jmp	0x1400066a8 <.text+0x56a8>
14000668f:     	leaq	0x1(%rax), %rdx
140006693:     	testq	%rax, %rax
140006696:     	cmoveq	%rax, %rdx
14000669a:     	addq	%rdx, %rcx
14000669d:     	addq	$0x2, %rcx
1400066a1:     	jmp	0x1400066a8 <.text+0x56a8>
1400066a3:     	movl	$0x2, %ecx
1400066a8:     	movq	%rbx, %rdx
1400066ab:     	subq	%rcx, %rdx
1400066ae:     	jb	0x14000694f <.text+0x594f>
1400066b4:     	addq	%r14, %rcx
1400066b7:     	movq	%rcx, %r8
1400066ba:     	testq	%rdx, %rdx
1400066bd:     	movq	%rsi, %rdx
1400066c0:     	je	0x1400066d4 <.text+0x56d4>
1400066c2:     	movzbl	(%r8), %eax
1400066c6:     	cmpb	$0x2f, %al
1400066c8:     	sete	%cl
1400066cb:     	cmpb	$0x5c, %al
1400066cd:     	sete	%al
1400066d0:     	orb	%cl, %al
1400066d2:     	jmp	0x1400066d6 <.text+0x56d6>
1400066d4:     	xorl	%eax, %eax
1400066d6:     	movq	%r14, 0x138(%rsp)
1400066de:     	movq	%rbx, 0x140(%rsp)
1400066e6:     	movups	0x30(%rsp), %xmm0
1400066eb:     	movups	0x40(%rsp), %xmm1
1400066f0:     	movups	%xmm0, 0x148(%rsp)
1400066f8:     	movups	%xmm1, 0x158(%rsp)
140006700:     	movq	0x50(%rsp), %rcx
140006705:     	movq	%rcx, 0x168(%rsp)
14000670d:     	movb	%al, 0x172(%rsp)
140006714:     	movw	$0x200, 0x170(%rsp)     # imm = 0x200
14000671e:     	leaq	0xe1(%rsp), %rsi
140006726:     	movb	$0x2, %r15b
140006729:     	xorl	%r12d, %r12d
14000672c:     	leaq	0x30(%rsp), %r14
140006731:     	cmpb	$0x6, %bpl
140006735:     	je	0x140006767 <.text+0x5767>
140006737:     	nopw	(%rax,%rax)
140006740:     	movq	0xbf(%rsp), %rax
140006748:     	movq	%rax, 0x4f(%rsp)
14000674d:     	movaps	0xa0(%rsp), %xmm0
140006755:     	movaps	0xb0(%rsp), %xmm1
14000675d:     	movaps	%xmm1, 0x40(%rsp)
140006762:     	movaps	%xmm0, 0x30(%rsp)
140006767:     	movq	%rdi, %rbx
14000676a:     	movq	%rdi, 0xd0(%rsp)
140006772:     	movq	%rdx, %rdi
140006775:     	movq	%rdx, 0xd8(%rsp)
14000677d:     	movb	%bpl, 0xe0(%rsp)
140006785:     	movq	0x4f(%rsp), %rax
14000678a:     	movq	%rax, 0x1f(%rsi)
14000678e:     	movaps	0x30(%rsp), %xmm0
140006793:     	movaps	0x40(%rsp), %xmm1
140006798:     	movups	%xmm1, 0x10(%rsi)
14000679c:     	movups	%xmm0, (%rsi)
14000679f:     	movb	%r13b, 0x10a(%rsp)
1400067a7:     	movb	%r12b, 0x108(%rsp)
1400067af:     	movb	%r15b, 0x109(%rsp)
1400067b7:     	movq	%r14, %rcx
1400067ba:     	leaq	0xd0(%rsp), %rdx
1400067c2:     	callq	0x140006050 <.text+0x5050>
1400067c7:     	leaq	0x68(%rsp), %rcx
1400067cc:     	leaq	0x138(%rsp), %rdx
1400067d4:     	callq	0x140006050 <.text+0x5050>
1400067d9:     	movzbl	0x68(%rsp), %eax
1400067de:     	cmpb	$0xa, 0x30(%rsp)
1400067e3:     	je	0x14000687a <.text+0x587a>
1400067e9:     	cmpb	$0xa, %al
1400067eb:     	je	0x14000687e <.text+0x587e>
1400067f1:     	movq	%r14, %rcx
1400067f4:     	leaq	0x68(%rsp), %rdx
1400067f9:     	callq	0x140009780 <.text+0x8780>
1400067fe:     	testb	%al, %al
140006800:     	je	0x1400068c5 <.text+0x58c5>
140006806:     	movq	0xd0(%rsp), %rdi
14000680e:     	movq	0xd8(%rsp), %rdx
140006816:     	movzbl	0xe0(%rsp), %ebp
14000681e:     	movups	(%rsi), %xmm0
140006821:     	movups	0x10(%rsi), %xmm1
140006825:     	movaps	%xmm0, 0xa0(%rsp)
14000682d:     	movaps	%xmm1, 0xb0(%rsp)
140006835:     	movq	0x1f(%rsi), %rax
140006839:     	movq	%rax, 0xbf(%rsp)
140006841:     	movzbl	0x108(%rsp), %r12d
14000684a:     	movzbl	0x109(%rsp), %r15d
140006853:     	movzbl	0x10a(%rsp), %r13d
14000685c:     	movzbl	0x2e(%rsi), %eax
140006860:     	movb	%al, 0x2c(%rsp)
140006864:     	movl	0x2a(%rsi), %eax
140006867:     	movl	%eax, 0x28(%rsp)
14000686b:     	cmpb	$0x6, %bpl
14000686f:     	jne	0x140006740 <.text+0x5740>
140006875:     	jmp	0x140006767 <.text+0x5767>
14000687a:     	cmpb	$0xa, %al
14000687c:     	jne	0x1400068c5 <.text+0x58c5>
14000687e:     	movq	0xbf(%rsp), %rax
140006886:     	movq	%rax, 0x12f(%rsp)
14000688e:     	movaps	0xa0(%rsp), %xmm0
140006896:     	movaps	0xb0(%rsp), %xmm1
14000689e:     	movaps	%xmm1, 0x120(%rsp)
1400068a6:     	movaps	%xmm0, 0x110(%rsp)
1400068ae:     	movl	0x28(%rsp), %eax
1400068b2:     	movl	%eax, 0x20(%rsp)
1400068b6:     	movzbl	0x2c(%rsp), %eax
1400068bb:     	movb	%al, 0x24(%rsp)
1400068bf:     	cmpb	$0x2, %r13b
1400068c3:     	jne	0x1400068c9 <.text+0x58c9>
1400068c5:     	xorl	%eax, %eax
1400068c7:     	jmp	0x140006929 <.text+0x5929>
1400068c9:     	movq	0x12f(%rsp), %rax
1400068d1:     	movq	%rax, 0x60(%rsp)
1400068d6:     	movaps	0x110(%rsp), %xmm0
1400068de:     	movaps	0x120(%rsp), %xmm1
1400068e6:     	movups	%xmm1, 0x51(%rsp)
1400068eb:     	movups	%xmm0, 0x41(%rsp)
1400068f0:     	movl	0x20(%rsp), %eax
1400068f4:     	movl	%eax, 0x6b(%rsp)
1400068f8:     	movzbl	0x24(%rsp), %eax
1400068fd:     	movb	%al, 0x6f(%rsp)
140006901:     	movq	%rbx, 0x30(%rsp)
140006906:     	movq	%rdi, 0x38(%rsp)
14000690b:     	movb	%bpl, 0x40(%rsp)
140006910:     	movb	%r12b, 0x68(%rsp)
140006915:     	movb	%r15b, 0x69(%rsp)
14000691a:     	movb	%r13b, 0x6a(%rsp)
14000691f:     	leaq	0x30(%rsp), %rcx
140006924:     	callq	0x140005d00 <.text+0x4d00>
140006929:     	nop
14000692a:     	addq	$0x178, %rsp            # imm = 0x178
140006931:     	popq	%rbx
140006932:     	popq	%rbp
140006933:     	popq	%rdi
140006934:     	popq	%rsi
140006935:     	popq	%r12
140006937:     	popq	%r13
140006939:     	popq	%r14
14000693b:     	popq	%r15
14000693d:     	retq
14000693e:     	leaq	0x14c8b(%rip), %r8      # 0x14001b5d0
140006945:     	movq	%rsi, %rdx
140006948:     	callq	0x140019c50 <.text+0x18c50>
14000694d:     	ud2
14000694f:     	leaq	0x14c7a(%rip), %r8      # 0x14001b5d0
140006956:     	movq	%rbx, %rdx
140006959:     	callq	0x140019c50 <.text+0x18c50>
14000695e:     	ud2
140006960:     	pushq	%rbp
140006961:     	subq	$0x60, %rsp
140006965:     	leaq	0x60(%rsp), %rbp
14000696a:     	movq	$-0x2, -0x8(%rbp)
140006972:     	movq	(%rcx), %rax
140006975:     	cmpb	$0x0, (%rax)
140006978:     	movb	$0x0, (%rax)
14000697b:     	je	0x140006b12 <.text+0x5b12>
140006981:     	movb	$0x0, -0x9(%rbp)
140006985:     	movq	0x1c8cc(%rip), %rax     # 0x140023258
14000698c:     	cmpq	$0x3, %rax
140006990:     	jne	0x140006adf <.text+0x5adf>
140006996:     	cmpb	$0x0, -0x9(%rbp)
14000699a:     	jne	0x140006af2 <.text+0x5af2>
1400069a0:     	movq	0x1c879(%rip), %rax     # 0x140023220
1400069a7:     	movl	0x1c993(%rip), %ecx     # 0x140023340
1400069ad:     	movq	%gs:0x58, %rdx
1400069b6:     	movq	(%rdx,%rcx,8), %rcx
1400069ba:     	leaq	0x41(%rcx), %rcx
1400069c1:     	cmpq	%rcx, %rax
1400069c4:     	jne	0x1400069ea <.text+0x59ea>
1400069c6:     	movl	0x1c884(%rip), %eax     # 0x140023250
1400069cc:     	incl	%eax
1400069ce:     	jne	0x140006a25 <.text+0x5a25>
1400069d0:     	leaq	0x14de9(%rip), %rcx     # 0x14001b7c0
1400069d7:     	leaq	0x14e2a(%rip), %r8      # 0x14001b808
1400069de:     	movl	$0x26, %edx
1400069e3:     	callq	0x140019760 <.text+0x18760>
1400069e8:     	ud2
1400069ea:     	leaq	0x1c827(%rip), %rcx     # 0x140023218
1400069f1:     	callq	*0x13681(%rip)          # 0x14001a078
1400069f7:     	testb	%al, %al
1400069f9:     	je	0x140006af2 <.text+0x5af2>
1400069ff:     	movl	0x1c93b(%rip), %eax     # 0x140023340
140006a05:     	movq	%gs:0x58, %rcx
140006a0e:     	movq	(%rcx,%rax,8), %rax
140006a12:     	leaq	0x41(%rax), %rax
140006a19:     	movq	%rax, 0x1c800(%rip)     # 0x140023220
140006a20:     	movl	$0x1, %eax
140006a25:     	movl	%eax, 0x1c825(%rip)     # 0x140023250
140006a2b:     	movq	$0x1, -0x38(%rbp)
140006a33:     	xorps	%xmm0, %xmm0
140006a36:     	movups	%xmm0, -0x30(%rbp)
140006a3a:     	movq	$0x0, -0x22(%rbp)
140006a42:     	cmpq	$0x0, 0x1c7de(%rip)     # 0x140023228
140006a4a:     	jne	0x140006b2c <.text+0x5b2c>
140006a50:     	movq	$-0x1, 0x1c7cd(%rip)    # 0x140023228
140006a5b:     	cmpb	$0x0, 0x1c7e6(%rip)     # 0x140023248
140006a62:     	jne	0x140006a82 <.text+0x5a82>
140006a64:     	leaq	0x1c7c5(%rip), %rcx     # 0x140023230
140006a6b:     	callq	0x140003f10 <.text+0x2f10>
140006a70:     	movq	%rax, -0x18(%rbp)
140006a74:     	testq	%rax, %rax
140006a77:     	je	0x140006a82 <.text+0x5a82>
140006a79:     	leaq	-0x18(%rbp), %rcx
140006a7d:     	callq	0x140001c00 <.text+0xc00>
140006a82:     	movq	0x1c7af(%rip), %rdx     # 0x140023238
140006a89:     	testq	%rdx, %rdx
140006a8c:     	je	0x140006aa0 <.text+0x5aa0>
140006a8e:     	movq	0x1c79b(%rip), %rcx     # 0x140023230
140006a95:     	movl	$0x1, %r8d
140006a9b:     	callq	0x140001350 <.text+0x350>
140006aa0:     	movups	-0x38(%rbp), %xmm0
140006aa4:     	movups	-0x28(%rbp), %xmm1
140006aa8:     	movups	%xmm1, 0x1c791(%rip)    # 0x140023240
140006aaf:     	movups	%xmm0, 0x1c77a(%rip)    # 0x140023230
140006ab6:     	incq	0x1c76b(%rip)           # 0x140023228
140006abd:     	decl	0x1c78d(%rip)           # 0x140023250
140006ac3:     	jne	0x140006af2 <.text+0x5af2>
140006ac5:     	movq	$0x0, 0x1c750(%rip)     # 0x140023220
140006ad0:     	leaq	0x1c741(%rip), %rcx     # 0x140023218
140006ad7:     	callq	*0x13633(%rip)          # 0x14001a110
140006add:     	jmp	0x140006af2 <.text+0x5af2>
140006adf:     	leaq	-0x9(%rbp), %rcx
140006ae3:     	callq	0x140019140 <.text+0x18140>
140006ae8:     	cmpb	$0x0, -0x9(%rbp)
140006aec:     	je	0x1400069a0 <.text+0x59a0>
140006af2:     	movq	0x1c7cf(%rip), %rax     # 0x1400232c8
140006af9:     	cmpq	$0x3, %rax
140006afd:     	je	0x140006b05 <.text+0x5b05>
140006aff:     	addq	$0x60, %rsp
140006b03:     	popq	%rbp
140006b04:     	retq
140006b05:     	callq	*0x1c7c5(%rip)          # 0x1400232d0
140006b0b:     	nop
140006b0c:     	addq	$0x60, %rsp
140006b10:     	popq	%rbp
140006b11:     	retq
140006b12:     	leaq	0x13b57(%rip), %rcx     # 0x14001a670
140006b19:     	leaq	0x14c08(%rip), %r8      # 0x14001b728
140006b20:     	movl	$0x2b, %edx
140006b25:     	callq	0x140019880 <.text+0x18880>
140006b2a:     	ud2
140006b2c:     	leaq	0x147dd(%rip), %rcx     # 0x14001b310
140006b33:     	callq	0x140019700 <.text+0x18700>
140006b38:     	ud2
140006b3a:     	nopw	(%rax,%rax)
140006b40:     	movq	%rdx, 0x10(%rsp)
140006b45:     	pushq	%rbp
140006b46:     	subq	$0x20, %rsp
140006b4a:     	leaq	0x60(%rdx), %rbp
140006b4e:     	decl	0x1c6fc(%rip)           # 0x140023250
140006b54:     	jne	0x140006b6e <.text+0x5b6e>
140006b56:     	movq	$0x0, 0x1c6bf(%rip)     # 0x140023220
140006b61:     	leaq	0x1c6b0(%rip), %rcx     # 0x140023218
140006b68:     	callq	*0x135a2(%rip)          # 0x14001a110
140006b6e:     	nop
140006b6f:     	addq	$0x20, %rsp
140006b73:     	popq	%rbp
140006b74:     	retq
140006b75:     	nopw	%cs:(%rax,%rax)
140006b80:     	movq	%rdx, 0x10(%rsp)
140006b85:     	pushq	%rbp
140006b86:     	subq	$0x20, %rsp
140006b8a:     	leaq	0x60(%rdx), %rbp
140006b8e:     	leaq	-0x38(%rbp), %rcx
140006b92:     	callq	0x140003f10 <.text+0x2f10>
140006b97:     	movq	%rax, -0x18(%rbp)
140006b9b:     	testq	%rax, %rax
140006b9e:     	je	0x140006ba9 <.text+0x5ba9>
140006ba0:     	leaq	-0x18(%rbp), %rcx
140006ba4:     	callq	0x140001c00 <.text+0xc00>
140006ba9:     	movq	-0x30(%rbp), %rdx
140006bad:     	testq	%rdx, %rdx
140006bb0:     	je	0x140006bc1 <.text+0x5bc1>
140006bb2:     	movq	-0x38(%rbp), %rcx
140006bb6:     	movl	$0x1, %r8d
140006bbc:     	callq	0x140001350 <.text+0x350>
140006bc1:     	nop
140006bc2:     	addq	$0x20, %rsp
140006bc6:     	popq	%rbp
140006bc7:     	retq
140006bc8:     	nopl	(%rax,%rax)
140006bd0:     	movq	%rdx, 0x10(%rsp)
140006bd5:     	pushq	%rbp
140006bd6:     	subq	$0x20, %rsp
140006bda:     	leaq	0x60(%rdx), %rbp
140006bde:     	movq	0x1c653(%rip), %rdx     # 0x140023238
140006be5:     	testq	%rdx, %rdx
140006be8:     	je	0x140006bfc <.text+0x5bfc>
140006bea:     	movq	0x1c63f(%rip), %rcx     # 0x140023230
140006bf1:     	movl	$0x1, %r8d
140006bf7:     	callq	0x140001350 <.text+0x350>
140006bfc:     	movups	-0x38(%rbp), %xmm0
140006c00:     	movups	-0x28(%rbp), %xmm1
140006c04:     	movups	%xmm1, 0x1c635(%rip)    # 0x140023240
140006c0b:     	movups	%xmm0, 0x1c61e(%rip)    # 0x140023230
140006c12:     	incq	0x1c60f(%rip)           # 0x140023228
140006c19:     	addq	$0x20, %rsp
140006c1d:     	popq	%rbp
140006c1e:     	retq
140006c1f:     	int3
140006c20:     	pushq	%rbp
140006c21:     	pushq	%rsi
140006c22:     	pushq	%rdi
140006c23:     	pushq	%rbx
140006c24:     	subq	$0x78, %rsp
140006c28:     	leaq	0x70(%rsp), %rbp
140006c2d:     	movq	$-0x2, (%rbp)
140006c35:     	movl	%r8d, %ebx
140006c38:     	movq	%rdx, %rdi
140006c3b:     	movq	%rcx, %rsi
140006c3e:     	leaq	0x1c623(%rip), %rcx     # 0x140023268
140006c45:     	callq	*0x133dd(%rip)          # 0x14001a028
140006c4b:     	movq	0x1c64e(%rip), %rax     # 0x1400232a0
140006c52:     	shlq	%rax
140006c55:     	testq	%rax, %rax
140006c58:     	jne	0x140006ceb <.text+0x5ceb>
140006c5e:     	movl	$0x0, -0x8(%rbp)
140006c65:     	movzbl	0x1c604(%rip), %eax     # 0x140023270
140006c6c:     	movq	0x48(%rdi), %rax
140006c70:     	movb	%bl, -0x1(%rbp)
140006c73:     	leaq	-0x1(%rbp), %rcx
140006c77:     	movq	%rcx, -0x18(%rbp)
140006c7b:     	leaq	0xbe(%rip), %rcx        # 0x140006d40 <.text+0x5d40>
140006c82:     	movq	%rcx, -0x10(%rbp)
140006c86:     	leaq	0x142db(%rip), %rcx     # 0x14001af68
140006c8d:     	movq	%rcx, -0x48(%rbp)
140006c91:     	movq	$0x1, -0x40(%rbp)
140006c99:     	movq	$0x0, -0x28(%rbp)
140006ca1:     	leaq	-0x18(%rbp), %rcx
140006ca5:     	movq	%rcx, -0x38(%rbp)
140006ca9:     	movq	$0x1, -0x30(%rbp)
140006cb1:     	leaq	-0x48(%rbp), %rdx
140006cb5:     	movq	%rsi, %rcx
140006cb8:     	callq	*%rax
140006cba:     	movq	%rax, %rsi
140006cbd:     	cmpb	$0x0, -0x8(%rbp)
140006cc1:     	jne	0x140006cd2 <.text+0x5cd2>
140006cc3:     	movq	0x1c5d6(%rip), %rax     # 0x1400232a0
140006cca:     	shlq	%rax
140006ccd:     	testq	%rax, %rax
140006cd0:     	jne	0x140006cfa <.text+0x5cfa>
140006cd2:     	leaq	0x1c58f(%rip), %rcx     # 0x140023268
140006cd9:     	callq	*0x13431(%rip)          # 0x14001a110
140006cdf:     	movq	%rsi, %rax
140006ce2:     	addq	$0x78, %rsp
140006ce6:     	popq	%rbx
140006ce7:     	popq	%rdi
140006ce8:     	popq	%rsi
140006ce9:     	popq	%rbp
140006cea:     	retq
140006ceb:     	callq	0x1400191b0 <.text+0x181b0>
140006cf0:     	xorb	$0x1, %al
140006cf2:     	movl	%eax, -0x8(%rbp)
140006cf5:     	jmp	0x140006c65 <.text+0x5c65>
140006cfa:     	callq	0x1400191b0 <.text+0x181b0>
140006cff:     	testb	%al, %al
140006d01:     	jne	0x140006cd2 <.text+0x5cd2>
140006d03:     	movb	$0x1, 0x1c566(%rip)     # 0x140023270
140006d0a:     	jmp	0x140006cd2 <.text+0x5cd2>
140006d0c:     	nopl	(%rax)
140006d10:     	movq	%rdx, 0x10(%rsp)
140006d15:     	pushq	%rbp
140006d16:     	pushq	%rsi
140006d17:     	pushq	%rdi
140006d18:     	pushq	%rbx
140006d19:     	subq	$0x28, %rsp
140006d1d:     	leaq	0x70(%rdx), %rbp
140006d21:     	leaq	0x1c540(%rip), %rcx     # 0x140023268
140006d28:     	movl	-0x8(%rbp), %edx
140006d2b:     	callq	0x140001d30 <.text+0xd30>
140006d30:     	nop
140006d31:     	addq	$0x28, %rsp
140006d35:     	popq	%rbx
140006d36:     	popq	%rdi
140006d37:     	popq	%rsi
140006d38:     	popq	%rbp
140006d39:     	retq
140006d3a:     	int3
140006d3b:     	int3
140006d3c:     	int3
140006d3d:     	int3
140006d3e:     	int3
140006d3f:     	int3
140006d40:     	pushq	%rbp
140006d41:     	pushq	%r15
140006d43:     	pushq	%r14
140006d45:     	pushq	%r13
140006d47:     	pushq	%r12
140006d49:     	pushq	%rsi
140006d4a:     	pushq	%rdi
140006d4b:     	pushq	%rbx
140006d4c:     	subq	$0x648, %rsp            # imm = 0x648
140006d53:     	leaq	0x80(%rsp), %rbp
140006d5b:     	movq	$-0x2, 0x5c0(%rbp)
140006d66:     	movq	%rdx, %rdi
140006d69:     	movzbl	(%rcx), %ebx
140006d6c:     	movb	%bl, 0x5be(%rbp)
140006d72:     	leaq	-0x40(%rbp), %rcx
140006d76:     	callq	0x140003930 <.text+0x2930>
140006d7b:     	movzbl	-0x28(%rbp), %esi
140006d7f:     	cmpb	$0x2, %sil
140006d83:     	jne	0x140006d90 <.text+0x5d90>
140006d85:     	leaq	-0x40(%rbp), %rcx
140006d89:     	callq	0x140001c00 <.text+0xc00>
140006d8e:     	jmp	0x140006db8 <.text+0x5db8>
140006d90:     	movq	-0x30(%rbp), %rax
140006d94:     	movq	%rax, 0x530(%rbp)
140006d9b:     	movups	-0x40(%rbp), %xmm0
140006d9f:     	movaps	%xmm0, 0x520(%rbp)
140006da6:     	movl	-0x27(%rbp), %eax
140006da9:     	movl	%eax, 0x5b4(%rbp)
140006daf:     	movl	-0x24(%rbp), %eax
140006db2:     	movl	%eax, 0x5b7(%rbp)
140006db8:     	movb	%bl, 0x5a0(%rbp)
140006dbe:     	movaps	0x520(%rbp), %xmm0
140006dc5:     	movaps	%xmm0, 0x580(%rbp)
140006dcc:     	movq	0x530(%rbp), %rax
140006dd3:     	movq	%rax, 0x590(%rbp)
140006dda:     	movb	%sil, 0x598(%rbp)
140006de1:     	movl	0x5b4(%rbp), %eax
140006de7:     	movl	0x5b7(%rbp), %ecx
140006ded:     	movl	%eax, 0x599(%rbp)
140006df3:     	movl	%ecx, 0x59c(%rbp)
140006df9:     	leaq	0x14a38(%rip), %rax     # 0x14001b838
140006e00:     	movq	%rax, -0x40(%rbp)
140006e04:     	movq	$0x1, -0x38(%rbp)
140006e0c:     	leaq	0x1388d(%rip), %rax     # 0x14001a6a0
140006e13:     	movq	%rax, -0x30(%rbp)
140006e17:     	xorps	%xmm0, %xmm0
140006e1a:     	movups	%xmm0, -0x28(%rbp)
140006e1e:     	leaq	-0x40(%rbp), %rdx
140006e22:     	movq	%rdi, 0x578(%rbp)
140006e29:     	movq	%rdi, %rcx
140006e2c:     	callq	0x140015350 <.text+0x14350>
140006e31:     	testb	%al, %al
140006e33:     	jne	0x1400070be <.text+0x60be>
140006e39:     	movq	0x578(%rbp), %rax
140006e40:     	movq	%rax, 0x4f8(%rbp)
140006e47:     	movq	$0x0, 0x510(%rbp)
140006e52:     	movb	%bl, 0x518(%rbp)
140006e58:     	leaq	0x580(%rbp), %rax
140006e5f:     	movq	%rax, 0x500(%rbp)
140006e66:     	leaq	0x149db(%rip), %rax     # 0x14001b848
140006e6d:     	movq	%rax, 0x508(%rbp)
140006e74:     	movb	$0x0, 0x5bf(%rbp)
140006e7b:     	movq	$0x0, 0x558(%rbp)
140006e86:     	movb	$0x1, 0x5bb(%rbp)
140006e8d:     	testb	%bl, %bl
140006e8f:     	setne	0x5bd(%rbp)
140006e96:     	leaq	-0x40(%rbp), %rdi
140006e9a:     	movl	$0x4d0, %r8d            # imm = 0x4D0
140006ea0:     	movq	%rdi, %rcx
140006ea3:     	xorl	%edx, %edx
140006ea5:     	callq	0x140018bf1 <.text+0x17bf1>
140006eaa:     	movq	%rdi, %rcx
140006ead:     	callq	*0x1317d(%rip)          # 0x14001a030
140006eb3:     	movq	0xb8(%rbp), %rcx
140006eba:     	testq	%rcx, %rcx
140006ebd:     	je	0x1400070b5 <.text+0x60b5>
140006ec3:     	xorl	%r15d, %r15d
140006ec6:     	leaq	0x4f8(%rbp), %rsi
140006ecd:     	leaq	0x538(%rbp), %r14
140006ed4:     	leaq	0x4a8(%rbp), %r12
140006edb:     	leaq	0x490(%rbp), %r13
140006ee2:     	nopw	%cs:(%rax,%rax)
140006ef0:     	movq	$0x0, 0x570(%rbp)
140006efb:     	leaq	0x570(%rbp), %rdx
140006f02:     	xorl	%r8d, %r8d
140006f05:     	callq	*0x13135(%rip)          # 0x14001a040
140006f0b:     	testq	%rax, %rax
140006f0e:     	je	0x1400070b5 <.text+0x60b5>
140006f14:     	movq	%rax, %rbx
140006f17:     	movq	0x58(%rbp), %rax
140006f1b:     	movq	0xb8(%rbp), %rcx
140006f22:     	movl	$0x0, 0x538(%rbp)
140006f2c:     	movq	%rbx, 0x540(%rbp)
140006f33:     	movq	%rcx, 0x548(%rbp)
140006f3a:     	movq	%rax, 0x550(%rbp)
140006f41:     	cmpb	$0x0, 0x5be(%rbp)
140006f48:     	jne	0x140006f54 <.text+0x5f54>
140006f4a:     	cmpq	$0x64, %r15
140006f4e:     	ja	0x1400070b5 <.text+0x60b5>
140006f54:     	movb	$0x0, 0x5bc(%rbp)
140006f5b:     	leaq	0x5bc(%rbp), %rax
140006f62:     	movq	%rax, 0x4a8(%rbp)
140006f69:     	leaq	0x5be(%rbp), %rax
140006f70:     	movq	%rax, 0x4b0(%rbp)
140006f77:     	leaq	0x5bd(%rbp), %rax
140006f7e:     	movq	%rax, 0x4b8(%rbp)
140006f85:     	leaq	0x558(%rbp), %rax
140006f8c:     	movq	%rax, 0x4c0(%rbp)
140006f93:     	leaq	0x5bb(%rbp), %rax
140006f9a:     	movq	%rax, 0x4c8(%rbp)
140006fa1:     	movq	%rsi, 0x4d0(%rbp)
140006fa8:     	leaq	0x5bf(%rbp), %rax
140006faf:     	movq	%rax, 0x4d8(%rbp)
140006fb6:     	movq	%r14, 0x4e0(%rbp)
140006fbd:     	movl	$0x1, %ecx
140006fc2:     	movq	%r14, %rdx
140006fc5:     	movq	%r12, %r8
140006fc8:     	leaq	0x14f81(%rip), %r9      # 0x14001bf50
140006fcf:     	callq	0x14000b730 <.text+0xa730>
140006fd4:     	cmpb	$0x0, 0x5bc(%rbp)
140006fdb:     	jne	0x140007050 <.text+0x6050>
140006fdd:     	cmpb	$0x0, 0x5bd(%rbp)
140006fe4:     	je	0x140007050 <.text+0x6050>
140006fe6:     	movq	%rsi, 0x560(%rbp)
140006fed:     	movq	$0x0, 0x568(%rbp)
140006ff8:     	movq	0x548(%rbp), %rdx
140006fff:     	movq	$0x3, 0x4a8(%rbp)
14000700a:     	movq	$0x2, 0x490(%rbp)
140007015:     	movl	$0x0, 0x30(%rsp)
14000701d:     	movl	$0x0, 0x20(%rsp)
140007025:     	leaq	0x560(%rbp), %rcx
14000702c:     	movq	%r12, %r8
14000702f:     	movq	%r13, %r9
140007032:     	callq	0x140009020 <.text+0x8020>
140007037:     	movb	%al, 0x5bf(%rbp)
14000703d:     	movq	0x560(%rbp), %rcx
140007044:     	incq	0x18(%rcx)
140007048:     	testb	%al, %al
14000704a:     	je	0x14000705b <.text+0x605b>
14000704c:     	jmp	0x1400070b5 <.text+0x60b5>
14000704e:     	nop
140007050:     	movzbl	0x5bf(%rbp), %eax
140007057:     	testb	%al, %al
140007059:     	jne	0x1400070b5 <.text+0x60b5>
14000705b:     	incq	%r15
14000705e:     	movq	$0x0, 0x490(%rbp)
140007069:     	movq	$0x0, 0x4a8(%rbp)
140007074:     	movq	0x570(%rbp), %rdx
14000707b:     	movq	0xb8(%rbp), %r8
140007082:     	movq	%r12, 0x30(%rsp)
140007087:     	movq	%r13, 0x28(%rsp)
14000708c:     	movq	%rdi, 0x20(%rsp)
140007091:     	movq	$0x0, 0x38(%rsp)
14000709a:     	xorl	%ecx, %ecx
14000709c:     	movq	%rbx, %r9
14000709f:     	callq	*0x12f93(%rip)          # 0x14001a038
1400070a5:     	movq	0xb8(%rbp), %rcx
1400070ac:     	testq	%rcx, %rcx
1400070af:     	jne	0x140006ef0 <.text+0x5ef0>
1400070b5:     	cmpb	$0x0, 0x5bf(%rbp)
1400070bc:     	je	0x1400070fb <.text+0x60fb>
1400070be:     	cmpb	$0x2, 0x598(%rbp)
1400070c5:     	je	0x1400070e5 <.text+0x60e5>
1400070c7:     	movq	0x588(%rbp), %rdx
1400070ce:     	testq	%rdx, %rdx
1400070d1:     	je	0x1400070e5 <.text+0x60e5>
1400070d3:     	movq	0x580(%rbp), %rcx
1400070da:     	movl	$0x1, %r8d
1400070e0:     	callq	0x140001350 <.text+0x350>
1400070e5:     	movb	$0x1, %al
1400070e7:     	addq	$0x648, %rsp            # imm = 0x648
1400070ee:     	popq	%rbx
1400070ef:     	popq	%rdi
1400070f0:     	popq	%rsi
1400070f1:     	popq	%r12
1400070f3:     	popq	%r13
1400070f5:     	popq	%r14
1400070f7:     	popq	%r15
1400070f9:     	popq	%rbp
1400070fa:     	retq
1400070fb:     	cmpb	$0x0, 0x5be(%rbp)
140007102:     	jne	0x14000713d <.text+0x613d>
140007104:     	leaq	0x147bd(%rip), %rax     # 0x14001b8c8
14000710b:     	movq	%rax, -0x40(%rbp)
14000710f:     	movq	$0x1, -0x38(%rbp)
140007117:     	leaq	0x13582(%rip), %rax     # 0x14001a6a0
14000711e:     	movq	%rax, -0x30(%rbp)
140007122:     	xorps	%xmm0, %xmm0
140007125:     	movups	%xmm0, -0x28(%rbp)
140007129:     	leaq	-0x40(%rbp), %rdx
14000712d:     	movq	0x578(%rbp), %rcx
140007134:     	callq	0x140015350 <.text+0x14350>
140007139:     	testb	%al, %al
14000713b:     	jne	0x1400070be <.text+0x60be>
14000713d:     	cmpb	$0x2, 0x598(%rbp)
140007144:     	je	0x140007164 <.text+0x6164>
140007146:     	movq	0x588(%rbp), %rdx
14000714d:     	testq	%rdx, %rdx
140007150:     	je	0x140007164 <.text+0x6164>
140007152:     	movq	0x580(%rbp), %rcx
140007159:     	movl	$0x1, %r8d
14000715f:     	callq	0x140001350 <.text+0x350>
140007164:     	xorl	%eax, %eax
140007166:     	jmp	0x1400070e7 <.text+0x60e7>
14000716b:     	nopl	(%rax,%rax)
140007170:     	movq	%rdx, 0x10(%rsp)
140007175:     	pushq	%rbp
140007176:     	pushq	%r15
140007178:     	pushq	%r14
14000717a:     	pushq	%r13
14000717c:     	pushq	%r12
14000717e:     	pushq	%rsi
14000717f:     	pushq	%rdi
140007180:     	pushq	%rbx
140007181:     	subq	$0x48, %rsp
140007185:     	leaq	0x80(%rdx), %rbp
14000718c:     	cmpb	$0x2, 0x598(%rbp)
140007193:     	je	0x1400071b3 <.text+0x61b3>
140007195:     	movq	0x588(%rbp), %rdx
14000719c:     	testq	%rdx, %rdx
14000719f:     	je	0x1400071b3 <.text+0x61b3>
1400071a1:     	movq	0x580(%rbp), %rcx
1400071a8:     	movl	$0x1, %r8d
1400071ae:     	callq	0x140001350 <.text+0x350>
1400071b3:     	nop
1400071b4:     	addq	$0x48, %rsp
1400071b8:     	popq	%rbx
1400071b9:     	popq	%rdi
1400071ba:     	popq	%rsi
1400071bb:     	popq	%r12
1400071bd:     	popq	%r13
1400071bf:     	popq	%r14
1400071c1:     	popq	%r15
1400071c3:     	popq	%rbp
1400071c4:     	retq
1400071c5:     	nopw	%cs:(%rax,%rax)
1400071d0:     	movq	%rdx, 0x10(%rsp)
1400071d5:     	pushq	%rbp
1400071d6:     	pushq	%r15
1400071d8:     	pushq	%r14
1400071da:     	pushq	%r13
1400071dc:     	pushq	%r12
1400071de:     	pushq	%rsi
1400071df:     	pushq	%rdi
1400071e0:     	pushq	%rbx
1400071e1:     	subq	$0x48, %rsp
1400071e5:     	leaq	0x80(%rdx), %rbp
1400071ec:     	movq	0x560(%rbp), %rax
1400071f3:     	incq	0x18(%rax)
1400071f7:     	addq	$0x48, %rsp
1400071fb:     	popq	%rbx
1400071fc:     	popq	%rdi
1400071fd:     	popq	%rsi
1400071fe:     	popq	%r12
140007200:     	popq	%r13
140007202:     	popq	%r14
140007204:     	popq	%r15
140007206:     	popq	%rbp
140007207:     	retq
140007208:     	int3
140007209:     	int3
14000720a:     	int3
14000720b:     	int3
14000720c:     	int3
14000720d:     	int3
14000720e:     	int3
14000720f:     	int3
140007210:     	movq	%r8, %rax
140007213:     	movzbl	0x20(%rcx), %r8d
140007218:     	xorl	%r9d, %r9d
14000721b:     	cmpb	$0x2, 0x18(%rcx)
14000721f:     	cmovneq	%rcx, %r9
140007223:     	movq	%rdx, %rcx
140007226:     	movq	%rax, %rdx
140007229:     	jmp	0x140007550 <.text+0x6550>
14000722e:     	int3
14000722f:     	int3
140007230:     	pushq	%rbp
140007231:     	pushq	%r15
140007233:     	pushq	%r14
140007235:     	pushq	%r12
140007237:     	pushq	%rsi
140007238:     	pushq	%rdi
140007239:     	pushq	%rbx
14000723a:     	subq	$0xe0, %rsp
140007241:     	leaq	0x80(%rsp), %rbp
140007249:     	movq	$-0x2, 0x58(%rbp)
140007251:     	movq	%rdx, %rdi
140007254:     	movq	%rcx, %rsi
140007257:     	movq	(%rcx), %rax
14000725a:     	movb	$0x1, (%rax)
14000725d:     	movq	0x8(%rcx), %rax
140007261:     	cmpb	$0x0, (%rax)
140007264:     	jne	0x1400072b9 <.text+0x62b9>
140007266:     	movq	0x20(%rdi), %rbx
14000726a:     	movq	0x28(%rdi), %r14
14000726e:     	leaq	-0x8(%rbp), %rcx
140007272:     	movq	%rbx, %rdx
140007275:     	movq	%r14, %r8
140007278:     	callq	0x140016080 <.text+0x15080>
14000727d:     	cmpq	$0x0, -0x8(%rbp)
140007282:     	jne	0x14000729f <.text+0x629f>
140007284:     	movq	(%rbp), %rdx
140007288:     	movq	0x8(%rbp), %r8
14000728c:     	leaq	-0x8(%rbp), %rcx
140007290:     	callq	0x140012db0 <.text+0x11db0>
140007295:     	cmpl	$0x2, -0x8(%rbp)
140007299:     	jne	0x14000748d <.text+0x648d>
14000729f:     	leaq	-0x8(%rbp), %rcx
1400072a3:     	movq	%rbx, %rdx
1400072a6:     	movq	%r14, %r8
1400072a9:     	callq	0x140016080 <.text+0x15080>
1400072ae:     	cmpq	$0x0, -0x8(%rbp)
1400072b3:     	je	0x140007479 <.text+0x6479>
1400072b9:     	movq	0x10(%rsi), %rax
1400072bd:     	cmpb	$0x0, (%rax)
1400072c0:     	je	0x140007467 <.text+0x6467>
1400072c6:     	movq	0x18(%rsi), %rbx
1400072ca:     	movq	(%rbx), %rax
1400072cd:     	testq	%rax, %rax
1400072d0:     	je	0x14000736f <.text+0x636f>
1400072d6:     	movq	0x20(%rsi), %r14
1400072da:     	cmpb	$0x0, (%r14)
1400072de:     	jne	0x140007364 <.text+0x6364>
1400072e4:     	movq	0x28(%rsi), %rcx
1400072e8:     	movq	(%rcx), %rcx
1400072eb:     	xorl	%edx, %edx
1400072ed:     	cmpq	$0x2, %rax
1400072f1:     	setae	%dl
1400072f4:     	leaq	0x14665(%rip), %rax     # 0x14001b960
1400072fb:     	leaq	0x1339e(%rip), %r8      # 0x14001a6a0
140007302:     	cmovaeq	%rax, %r8
140007306:     	movq	%r8, 0x48(%rbp)
14000730a:     	movq	%rdx, 0x50(%rbp)
14000730e:     	movq	%rbx, -0x40(%rbp)
140007312:     	leaq	0x10af7(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140007319:     	movq	%rax, -0x38(%rbp)
14000731d:     	leaq	0x48(%rbp), %rax
140007321:     	movq	%rax, -0x30(%rbp)
140007325:     	leaq	-0x5d6c(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
14000732c:     	movq	%rax, -0x28(%rbp)
140007330:     	leaq	0x145f9(%rip), %rax     # 0x14001b930
140007337:     	movq	%rax, -0x8(%rbp)
14000733b:     	movq	$0x3, (%rbp)
140007343:     	movq	$0x0, 0x18(%rbp)
14000734b:     	leaq	-0x40(%rbp), %rax
14000734f:     	movq	%rax, 0x8(%rbp)
140007353:     	movq	$0x2, 0x10(%rbp)
14000735b:     	leaq	-0x8(%rbp), %rdx
14000735f:     	callq	0x140015350 <.text+0x14350>
140007364:     	movb	$0x0, (%r14)
140007368:     	movq	$0x0, (%rbx)
14000736f:     	movq	0x28(%rsi), %rax
140007373:     	movq	%rax, 0x48(%rbp)
140007377:     	movq	$0x0, 0x50(%rbp)
14000737f:     	movq	0x38(%rsi), %rax
140007383:     	movq	0x10(%rax), %rbx
140007387:     	movq	0x20(%rdi), %r14
14000738b:     	movq	0x28(%rdi), %r15
14000738f:     	leaq	-0x8(%rbp), %rcx
140007393:     	movq	%r14, %rdx
140007396:     	movq	%r15, %r8
140007399:     	callq	0x140016080 <.text+0x15080>
14000739e:     	cmpq	$0x0, -0x8(%rbp)
1400073a3:     	movl	$0x2, %r12d
1400073a9:     	movl	$0x2, %eax
1400073ae:     	jne	0x1400073eb <.text+0x63eb>
1400073b0:     	movq	(%rbp), %rdx
1400073b4:     	movq	0x8(%rbp), %r8
1400073b8:     	leaq	-0x8(%rbp), %rcx
1400073bc:     	callq	0x140012db0 <.text+0x11db0>
1400073c1:     	movq	-0x8(%rbp), %rax
1400073c5:     	cmpq	$0x2, %rax
1400073c9:     	je	0x1400073eb <.text+0x63eb>
1400073cb:     	movq	0x30(%rbp), %rcx
1400073cf:     	movq	%rcx, -0x10(%rbp)
1400073d3:     	movups	(%rbp), %xmm0
1400073d7:     	movups	0x10(%rbp), %xmm1
1400073db:     	movups	0x20(%rbp), %xmm2
1400073df:     	movaps	%xmm2, -0x20(%rbp)
1400073e3:     	movaps	%xmm1, -0x30(%rbp)
1400073e7:     	movaps	%xmm0, -0x40(%rbp)
1400073eb:     	movq	-0x10(%rbp), %rcx
1400073ef:     	movq	%rcx, 0x30(%rbp)
1400073f3:     	movaps	-0x40(%rbp), %xmm0
1400073f7:     	movaps	-0x30(%rbp), %xmm1
1400073fb:     	movaps	-0x20(%rbp), %xmm2
1400073ff:     	movups	%xmm2, 0x20(%rbp)
140007403:     	movups	%xmm1, 0x10(%rbp)
140007407:     	movups	%xmm0, (%rbp)
14000740b:     	movq	%rax, -0x8(%rbp)
14000740f:     	movq	%r14, 0x38(%rbp)
140007413:     	movq	%r15, 0x40(%rbp)
140007417:     	cmpq	$0x0, (%rdi)
14000741b:     	je	0x14000742b <.text+0x642b>
14000741d:     	movups	0x8(%rdi), %xmm0
140007421:     	movups	%xmm0, -0x38(%rbp)
140007425:     	movl	$0x1, %r12d
14000742b:     	movq	%r12, -0x40(%rbp)
14000742f:     	movl	0x18(%rdi), %eax
140007432:     	movl	0x1c(%rdi), %ecx
140007435:     	movl	%ecx, 0x28(%rsp)
140007439:     	movl	%eax, 0x20(%rsp)
14000743d:     	movl	$0x0, 0x30(%rsp)
140007445:     	leaq	0x48(%rbp), %rcx
140007449:     	leaq	-0x8(%rbp), %r8
14000744d:     	leaq	-0x40(%rbp), %r9
140007451:     	movq	%rbx, %rdx
140007454:     	callq	0x140009020 <.text+0x8020>
140007459:     	movq	0x30(%rsi), %rcx
14000745d:     	movb	%al, (%rcx)
14000745f:     	movq	0x48(%rbp), %rax
140007463:     	incq	0x18(%rax)
140007467:     	addq	$0xe0, %rsp
14000746e:     	popq	%rbx
14000746f:     	popq	%rdi
140007470:     	popq	%rsi
140007471:     	popq	%r12
140007473:     	popq	%r14
140007475:     	popq	%r15
140007477:     	popq	%rbp
140007478:     	retq
140007479:     	movq	(%rbp), %rbx
14000747d:     	movq	0x8(%rbp), %r14
140007481:     	movq	0x10(%rsi), %r15
140007485:     	cmpb	$0x0, (%r15)
140007489:     	jne	0x14000749f <.text+0x649f>
14000748b:     	jmp	0x1400074c0 <.text+0x64c0>
14000748d:     	movq	0x18(%rbp), %rbx
140007491:     	movq	0x20(%rbp), %r14
140007495:     	movq	0x10(%rsi), %r15
140007499:     	cmpb	$0x0, (%r15)
14000749d:     	je	0x1400074c0 <.text+0x64c0>
14000749f:     	leaq	0x14432(%rip), %rcx     # 0x14001b8d8
1400074a6:     	movl	$0x1c, %edx
1400074ab:     	movq	%rbx, %r8
1400074ae:     	movq	%r14, %r9
1400074b1:     	callq	0x140002170 <.text+0x1170>
1400074b6:     	testb	%al, %al
1400074b8:     	je	0x1400074c0 <.text+0x64c0>
1400074ba:     	movb	$0x0, (%r15)
1400074be:     	jmp	0x140007467 <.text+0x6467>
1400074c0:     	leaq	0x1442d(%rip), %rcx     # 0x14001b8f4
1400074c7:     	movl	$0x1a, %edx
1400074cc:     	movq	%rbx, %r8
1400074cf:     	movq	%r14, %r9
1400074d2:     	callq	0x140002170 <.text+0x1170>
1400074d7:     	testb	%al, %al
1400074d9:     	je	0x1400074e1 <.text+0x64e1>
1400074db:     	movb	$0x1, (%r15)
1400074df:     	jmp	0x140007467 <.text+0x6467>
1400074e1:     	cmpb	$0x0, (%r15)
1400074e5:     	jne	0x1400072b9 <.text+0x62b9>
1400074eb:     	movq	0x18(%rsi), %rax
1400074ef:     	incq	(%rax)
1400074f2:     	jmp	0x1400072b9 <.text+0x62b9>
1400074f7:     	nopw	(%rax,%rax)
140007500:     	movq	%rdx, 0x10(%rsp)
140007505:     	pushq	%rbp
140007506:     	pushq	%r15
140007508:     	pushq	%r14
14000750a:     	pushq	%r12
14000750c:     	pushq	%rsi
14000750d:     	pushq	%rdi
14000750e:     	pushq	%rbx
14000750f:     	subq	$0x40, %rsp
140007513:     	leaq	0x80(%rdx), %rbp
14000751a:     	movq	0x48(%rbp), %rax
14000751e:     	incq	0x18(%rax)
140007522:     	addq	$0x40, %rsp
140007526:     	popq	%rbx
140007527:     	popq	%rdi
140007528:     	popq	%rsi
140007529:     	popq	%r12
14000752b:     	popq	%r14
14000752d:     	popq	%r15
14000752f:     	popq	%rbp
140007530:     	retq
140007531:     	int3
140007532:     	int3
140007533:     	int3
140007534:     	int3
140007535:     	int3
140007536:     	int3
140007537:     	int3
140007538:     	int3
140007539:     	int3
14000753a:     	int3
14000753b:     	int3
14000753c:     	int3
14000753d:     	int3
14000753e:     	int3
14000753f:     	int3
140007540:     	subq	$0x28, %rsp
140007544:     	callq	0x140008b40 <.text+0x7b40>
140007549:     	ud2
14000754b:     	int3
14000754c:     	int3
14000754d:     	int3
14000754e:     	int3
14000754f:     	int3
140007550:     	pushq	%rbp
140007551:     	pushq	%r14
140007553:     	pushq	%rsi
140007554:     	pushq	%rdi
140007555:     	pushq	%rbx
140007556:     	subq	$0xa0, %rsp
14000755d:     	leaq	0x80(%rsp), %rbp
140007565:     	movq	$-0x2, 0x18(%rbp)
14000756d:     	movq	%r9, %rbx
140007570:     	movl	%r8d, %r14d
140007573:     	movq	%rdx, %rax
140007576:     	movq	%rcx, %rsi
140007579:     	cmpq	$0x0, (%rdx)
14000757d:     	movq	0x8(%rdx), %rdx
140007581:     	movq	0x10(%rax), %r8
140007585:     	leaq	-0x30(%rbp), %rcx
140007589:     	je	0x1400075a3 <.text+0x65a3>
14000758b:     	callq	0x1400058b0 <.text+0x48b0>
140007590:     	movq	-0x30(%rbp), %rcx
140007594:     	movq	-0x28(%rbp), %rdx
140007598:     	movq	-0x20(%rbp), %rdi
14000759c:     	movzbl	-0x18(%rbp), %r9d
1400075a1:     	jmp	0x1400075c6 <.text+0x65c6>
1400075a3:     	callq	0x140016080 <.text+0x15080>
1400075a8:     	cmpq	$0x0, -0x30(%rbp)
1400075ad:     	movl	$0x9, %edx
1400075b2:     	cmoveq	-0x20(%rbp), %rdx
1400075b7:     	leaq	0x143a3(%rip), %rcx     # 0x14001b961
1400075be:     	cmoveq	-0x28(%rbp), %rcx
1400075c3:     	movb	$0x2, %r9b
1400075c6:     	testb	%r14b, %r14b
1400075c9:     	movq	%rdx, 0x8(%rbp)
1400075cd:     	movq	%rcx, (%rbp)
1400075d1:     	movb	%r9b, 0x17(%rbp)
1400075d5:     	jne	0x140007647 <.text+0x6647>
1400075d7:     	cmpb	$0x2, %r9b
1400075db:     	movq	%rdi, %r14
1400075de:     	cmoveq	%rdx, %r14
1400075e2:     	movq	%r14, %rdx
1400075e5:     	callq	0x140006410 <.text+0x5410>
1400075ea:     	testq	%rbx, %rbx
1400075ed:     	sete	%cl
1400075f0:     	xorb	$0x1, %al
1400075f2:     	orb	%cl, %al
1400075f4:     	movq	0x8(%rbp), %rdx
1400075f8:     	movq	(%rbp), %rcx
1400075fc:     	movzbl	0x17(%rbp), %r9d
140007601:     	jne	0x140007647 <.text+0x6647>
140007603:     	movq	(%rbx), %r8
140007606:     	movq	0x10(%rbx), %r9
14000760a:     	movq	%r14, %rdx
14000760d:     	callq	0x140006550 <.text+0x5550>
140007612:     	movq	%rdx, %r8
140007615:     	testq	%rax, %rax
140007618:     	movq	0x8(%rbp), %rdx
14000761c:     	movq	(%rbp), %rcx
140007620:     	movzbl	0x17(%rbp), %r9d
140007625:     	je	0x140007647 <.text+0x6647>
140007627:     	leaq	-0x30(%rbp), %rcx
14000762b:     	movq	%rax, %rdx
14000762e:     	callq	0x140016080 <.text+0x15080>
140007633:     	cmpq	$0x0, -0x30(%rbp)
140007638:     	movq	0x8(%rbp), %rdx
14000763c:     	movq	(%rbp), %rcx
140007640:     	movzbl	0x17(%rbp), %r9d
140007645:     	je	0x14000768a <.text+0x668a>
140007647:     	cmpb	$0x2, %r9b
14000764b:     	cmoveq	%rdx, %rdi
14000764f:     	movq	%rdi, %rdx
140007652:     	movq	%rsi, %r8
140007655:     	callq	0x140007c00 <.text+0x6c00>
14000765a:     	movl	%eax, %ebx
14000765c:     	cmpb	$0x2, 0x17(%rbp)
140007660:     	je	0x14000767a <.text+0x667a>
140007662:     	movq	0x8(%rbp), %rdx
140007666:     	testq	%rdx, %rdx
140007669:     	je	0x14000767a <.text+0x667a>
14000766b:     	movl	$0x1, %r8d
140007671:     	movq	(%rbp), %rcx
140007675:     	callq	0x140001350 <.text+0x350>
14000767a:     	movl	%ebx, %eax
14000767c:     	addq	$0xa0, %rsp
140007683:     	popq	%rbx
140007684:     	popq	%rdi
140007685:     	popq	%rsi
140007686:     	popq	%r14
140007688:     	popq	%rbp
140007689:     	retq
14000768a:     	movq	-0x28(%rbp), %rax
14000768e:     	movq	-0x20(%rbp), %rcx
140007692:     	movq	%rax, -0x40(%rbp)
140007696:     	movq	%rcx, -0x38(%rbp)
14000769a:     	leaq	0x142ef(%rip), %rax     # 0x14001b990
1400076a1:     	movq	%rax, -0x60(%rbp)
1400076a5:     	leaq	0xe5d4(%rip), %rax      # 0x140015c80 <.text+0x14c80>
1400076ac:     	movq	%rax, -0x58(%rbp)
1400076b0:     	leaq	-0x40(%rbp), %rax
1400076b4:     	movq	%rax, -0x50(%rbp)
1400076b8:     	leaq	-0x60ff(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
1400076bf:     	movq	%rax, -0x48(%rbp)
1400076c3:     	leaq	0x142a6(%rip), %rax     # 0x14001b970
1400076ca:     	movq	%rax, -0x30(%rbp)
1400076ce:     	movq	$0x2, -0x28(%rbp)
1400076d6:     	movq	$0x0, -0x10(%rbp)
1400076de:     	leaq	-0x60(%rbp), %rax
1400076e2:     	movq	%rax, -0x20(%rbp)
1400076e6:     	movq	$0x2, -0x18(%rbp)
1400076ee:     	leaq	-0x30(%rbp), %rdx
1400076f2:     	movq	%rsi, %rcx
1400076f5:     	callq	0x140015350 <.text+0x14350>
1400076fa:     	jmp	0x14000765a <.text+0x665a>
1400076ff:     	nop
140007700:     	movq	%rdx, 0x10(%rsp)
140007705:     	pushq	%rbp
140007706:     	pushq	%r14
140007708:     	pushq	%rsi
140007709:     	pushq	%rdi
14000770a:     	pushq	%rbx
14000770b:     	subq	$0x20, %rsp
14000770f:     	leaq	0x80(%rdx), %rbp
140007716:     	cmpb	$0x2, 0x17(%rbp)
14000771a:     	je	0x140007736 <.text+0x6736>
14000771c:     	cmpq	$0x0, 0x8(%rbp)
140007721:     	je	0x140007736 <.text+0x6736>
140007723:     	movl	$0x1, %r8d
140007729:     	movq	(%rbp), %rcx
14000772d:     	movq	0x8(%rbp), %rdx
140007731:     	callq	0x140001350 <.text+0x350>
140007736:     	nop
140007737:     	addq	$0x20, %rsp
14000773b:     	popq	%rbx
14000773c:     	popq	%rdi
14000773d:     	popq	%rsi
14000773e:     	popq	%r14
140007740:     	popq	%rbp
140007741:     	retq
140007742:     	int3
140007743:     	int3
140007744:     	int3
140007745:     	int3
140007746:     	int3
140007747:     	int3
140007748:     	int3
140007749:     	int3
14000774a:     	int3
14000774b:     	int3
14000774c:     	int3
14000774d:     	int3
14000774e:     	int3
14000774f:     	int3
140007750:     	pushq	%rbp
140007751:     	pushq	%rsi
140007752:     	subq	$0x78, %rsp
140007756:     	leaq	0x70(%rsp), %rbp
14000775b:     	movq	$-0x2, (%rbp)
140007763:     	movl	0x1bbd7(%rip), %eax     # 0x140023340
140007769:     	movq	%gs:0x58, %rcx
140007772:     	movq	(%rcx,%rax,8), %rax
140007776:     	movzbl	0x40(%rax), %eax
14000777d:     	cmpl	$0x1, %eax
140007780:     	je	0x1400077b7 <.text+0x67b7>
140007782:     	testl	%eax, %eax
140007784:     	jne	0x14000781e <.text+0x681e>
14000778a:     	movl	0x1bbb0(%rip), %eax     # 0x140023340
140007790:     	movq	%gs:0x58, %rcx
140007799:     	movq	(%rcx,%rax,8), %rsi
14000779d:     	leaq	0x38(%rsi), %rcx
1400077a4:     	leaq	0x4a55(%rip), %rdx      # 0x14000c200 <.text+0xb200>
1400077ab:     	callq	0x14000aa60 <.text+0x9a60>
1400077b0:     	movb	$0x1, 0x40(%rsi)
1400077b7:     	movl	0x1bb83(%rip), %eax     # 0x140023340
1400077bd:     	movq	%gs:0x58, %rcx
1400077c6:     	movq	(%rcx,%rax,8), %rax
1400077ca:     	movq	0x38(%rax), %rax
1400077d1:     	testq	%rax, %rax
1400077d4:     	jne	0x140007814 <.text+0x6814>
1400077d6:     	xorl	%ecx, %ecx
1400077d8:     	callq	0x1400037e0 <.text+0x27e0>
1400077dd:     	movl	0x1bb5d(%rip), %edx     # 0x140023340
1400077e3:     	movq	%gs:0x58, %rcx
1400077ec:     	movq	(%rcx,%rdx,8), %rcx
1400077f0:     	cmpq	$0x0, 0x38(%rcx)
1400077f8:     	jne	0x140007827 <.text+0x6827>
1400077fa:     	movl	0x1bb40(%rip), %edx     # 0x140023340
140007800:     	movq	%gs:0x58, %rcx
140007809:     	movq	(%rcx,%rdx,8), %rcx
14000780d:     	movq	%rax, 0x38(%rcx)
140007814:     	lock
140007815:     	incq	(%rax)
140007818:     	jg	0x140007820 <.text+0x6820>
14000781a:     	ud2
14000781c:     	ud2
14000781e:     	xorl	%eax, %eax
140007820:     	addq	$0x78, %rsp
140007824:     	popq	%rsi
140007825:     	popq	%rbp
140007826:     	retq
140007827:     	movq	%rax, -0x8(%rbp)
14000782b:     	movq	%rax, -0x10(%rbp)
14000782f:     	movl	0x1bb0b(%rip), %eax     # 0x140023340
140007835:     	movq	%gs:0x58, %rcx
14000783e:     	movq	(%rcx,%rax,8), %rax
140007842:     	leaq	0x38(%rax), %rax
140007849:     	movq	%rax, -0x18(%rbp)
14000784d:     	leaq	0x12f4c(%rip), %rax     # 0x14001a7a0
140007854:     	movq	%rax, -0x48(%rbp)
140007858:     	movq	$0x1, -0x40(%rbp)
140007860:     	leaq	0x12e39(%rip), %rax     # 0x14001a6a0
140007867:     	movq	%rax, -0x38(%rbp)
14000786b:     	xorps	%xmm0, %xmm0
14000786e:     	movups	%xmm0, -0x30(%rbp)
140007872:     	leaq	0x12f87(%rip), %rdx     # 0x14001a800
140007879:     	leaq	-0x48(%rbp), %rcx
14000787d:     	callq	0x1400197d0 <.text+0x187d0>
140007882:     	ud2
140007884:     	nopw	%cs:(%rax,%rax)
140007890:     	movq	%rdx, 0x10(%rsp)
140007895:     	pushq	%rbp
140007896:     	pushq	%rsi
140007897:     	subq	$0x28, %rsp
14000789b:     	leaq	0x70(%rdx), %rbp
14000789f:     	movq	-0x8(%rbp), %rax
1400078a3:     	lock
1400078a4:     	decq	(%rax)
1400078a7:     	jne	0x1400078b2 <.text+0x68b2>
1400078a9:     	leaq	-0x10(%rbp), %rcx
1400078ad:     	callq	0x1400028f0 <.text+0x18f0>
1400078b2:     	nop
1400078b3:     	addq	$0x28, %rsp
1400078b7:     	popq	%rsi
1400078b8:     	popq	%rbp
1400078b9:     	retq
1400078ba:     	int3
1400078bb:     	int3
1400078bc:     	int3
1400078bd:     	int3
1400078be:     	int3
1400078bf:     	int3
1400078c0:     	pushq	%rbp
1400078c1:     	pushq	%rsi
1400078c2:     	subq	$0x98, %rsp
1400078c9:     	leaq	0x80(%rsp), %rbp
1400078d1:     	movq	$-0x2, 0x10(%rbp)
1400078d9:     	movq	%rcx, %rsi
1400078dc:     	movq	%rcx, -0x18(%rbp)
1400078e0:     	movl	0x1ba5a(%rip), %eax     # 0x140023340
1400078e6:     	movq	%gs:0x58, %rcx
1400078ef:     	movq	(%rcx,%rax,8), %rax
1400078f3:     	movzbl	0x40(%rax), %eax
1400078fa:     	cmpl	$0x1, %eax
1400078fd:     	je	0x14000794b <.text+0x694b>
1400078ff:     	testl	%eax, %eax
140007901:     	jne	0x1400079fc <.text+0x69fc>
140007907:     	movb	$0x1, 0xf(%rbp)
14000790b:     	movl	0x1ba2f(%rip), %eax     # 0x140023340
140007911:     	movq	%gs:0x58, %rcx
14000791a:     	movq	(%rcx,%rax,8), %rax
14000791e:     	leaq	0x38(%rax), %rcx
140007925:     	leaq	0x48d4(%rip), %rdx      # 0x14000c200 <.text+0xb200>
14000792c:     	callq	0x14000aa60 <.text+0x9a60>
140007931:     	movl	0x1ba09(%rip), %eax     # 0x140023340
140007937:     	movq	%gs:0x58, %rcx
140007940:     	movq	(%rcx,%rax,8), %rax
140007944:     	movb	$0x1, 0x40(%rax)
14000794b:     	movq	%rsi, -0x28(%rbp)
14000794f:     	movl	0x1b9eb(%rip), %eax     # 0x140023340
140007955:     	movq	%gs:0x58, %rcx
14000795e:     	movq	(%rcx,%rax,8), %rax
140007962:     	cmpq	$0x0, 0x38(%rax)
14000796a:     	jne	0x140007990 <.text+0x6990>
14000796c:     	movl	0x1b9ce(%rip), %eax     # 0x140023340
140007972:     	movq	%gs:0x58, %rcx
14000797b:     	movq	(%rcx,%rax,8), %rax
14000797f:     	movq	%rsi, 0x38(%rax)
140007986:     	addq	$0x98, %rsp
14000798d:     	popq	%rsi
14000798e:     	popq	%rbp
14000798f:     	retq
140007990:     	movq	%rsi, -0x20(%rbp)
140007994:     	movl	$0x0, (%rbp)
14000799b:     	movb	$0x0, 0x4(%rbp)
14000799f:     	leaq	0x1406a(%rip), %rax     # 0x14001ba10
1400079a6:     	movq	%rax, -0x58(%rbp)
1400079aa:     	movq	$0x1, -0x50(%rbp)
1400079b2:     	leaq	0x8(%rbp), %rax
1400079b6:     	movq	%rax, -0x48(%rbp)
1400079ba:     	xorps	%xmm0, %xmm0
1400079bd:     	movups	%xmm0, -0x40(%rbp)
1400079c1:     	movq	%rbp, %rax
1400079c4:     	movq	%rax, -0x10(%rbp)
1400079c8:     	movq	$0x0, -0x8(%rbp)
1400079d0:     	leaq	0x13219(%rip), %rdx     # 0x14001abf0
1400079d7:     	leaq	-0x10(%rbp), %rcx
1400079db:     	leaq	-0x58(%rbp), %r8
1400079df:     	callq	0x140014a60 <.text+0x13a60>
1400079e4:     	movq	-0x8(%rbp), %rcx
1400079e8:     	testb	%al, %al
1400079ea:     	je	0x140007a35 <.text+0x6a35>
1400079ec:     	testq	%rcx, %rcx
1400079ef:     	leaq	0x13b7a(%rip), %rax     # 0x14001b570
1400079f6:     	cmovneq	%rcx, %rax
1400079fa:     	jmp	0x140007a45 <.text+0x6a45>
1400079fc:     	lock
1400079fd:     	decq	(%rsi)
140007a00:     	jne	0x140007a0b <.text+0x6a0b>
140007a02:     	leaq	-0x18(%rbp), %rcx
140007a06:     	callq	0x1400028f0 <.text+0x18f0>
140007a0b:     	leaq	0x13996(%rip), %rax     # 0x14001b3a8
140007a12:     	movq	%rax, 0x20(%rsp)
140007a17:     	leaq	0x13922(%rip), %rcx     # 0x14001b340
140007a1e:     	leaq	0x12f0b(%rip), %r9      # 0x14001a930
140007a25:     	leaq	0x8(%rbp), %r8
140007a29:     	movl	$0x46, %edx
140007a2e:     	callq	0x140019bb0 <.text+0x18bb0>
140007a33:     	ud2
140007a35:     	testq	%rcx, %rcx
140007a38:     	je	0x140007a43 <.text+0x6a43>
140007a3a:     	leaq	-0x8(%rbp), %rcx
140007a3e:     	callq	0x140001c00 <.text+0xc00>
140007a43:     	xorl	%eax, %eax
140007a45:     	movq	%rax, -0x10(%rbp)
140007a49:     	leaq	-0x10(%rbp), %rcx
140007a4d:     	callq	0x140001da0 <.text+0xda0>
140007a52:     	movl	$0x7, %ecx
140007a57:     	int	$0x29
140007a59:     	ud2
140007a5b:     	nopl	(%rax,%rax)
140007a60:     	movq	%rdx, 0x10(%rsp)
140007a65:     	pushq	%rbp
140007a66:     	pushq	%rsi
140007a67:     	subq	$0x28, %rsp
140007a6b:     	leaq	0x80(%rdx), %rbp
140007a72:     	cmpq	$0x0, -0x8(%rbp)
140007a77:     	je	0x140007a82 <.text+0x6a82>
140007a79:     	leaq	-0x8(%rbp), %rcx
140007a7d:     	callq	0x140001c00 <.text+0xc00>
140007a82:     	nop
140007a83:     	addq	$0x28, %rsp
140007a87:     	popq	%rsi
140007a88:     	popq	%rbp
140007a89:     	retq
140007a8a:     	nopw	(%rax,%rax)
140007a90:     	movq	%rdx, 0x10(%rsp)
140007a95:     	pushq	%rbp
140007a96:     	pushq	%rsi
140007a97:     	subq	$0x28, %rsp
140007a9b:     	leaq	0x80(%rdx), %rbp
140007aa2:     	movq	-0x20(%rbp), %rax
140007aa6:     	lock
140007aa7:     	decq	(%rax)
140007aaa:     	jne	0x140007ab5 <.text+0x6ab5>
140007aac:     	leaq	-0x28(%rbp), %rcx
140007ab0:     	callq	0x1400028f0 <.text+0x18f0>
140007ab5:     	movb	$0x0, 0xf(%rbp)
140007ab9:     	addq	$0x28, %rsp
140007abd:     	popq	%rsi
140007abe:     	popq	%rbp
140007abf:     	retq
140007ac0:     	movq	%rdx, 0x10(%rsp)
140007ac5:     	pushq	%rbp
140007ac6:     	pushq	%rsi
140007ac7:     	subq	$0x28, %rsp
140007acb:     	leaq	0x80(%rdx), %rbp
140007ad2:     	cmpb	$0x0, 0xf(%rbp)
140007ad6:     	je	0x140007aeb <.text+0x6aeb>
140007ad8:     	movq	-0x18(%rbp), %rax
140007adc:     	lock
140007add:     	decq	(%rax)
140007ae0:     	jne	0x140007aeb <.text+0x6aeb>
140007ae2:     	leaq	-0x18(%rbp), %rcx
140007ae6:     	callq	0x1400028f0 <.text+0x18f0>
140007aeb:     	nop
140007aec:     	addq	$0x28, %rsp
140007af0:     	popq	%rsi
140007af1:     	popq	%rbp
140007af2:     	retq
140007af3:     	int3
140007af4:     	int3
140007af5:     	int3
140007af6:     	int3
140007af7:     	int3
140007af8:     	int3
140007af9:     	int3
140007afa:     	int3
140007afb:     	int3
140007afc:     	int3
140007afd:     	int3
140007afe:     	int3
140007aff:     	int3
140007b00:     	pushq	%rsi
140007b01:     	pushq	%rdi
140007b02:     	pushq	%rbx
140007b03:     	subq	$0x30, %rsp
140007b07:     	movq	%rcx, %rsi
140007b0a:     	movl	$0x0, 0x2c(%rsp)
140007b12:     	cmpl	$0x80, %edx
140007b18:     	jae	0x140007b28 <.text+0x6b28>
140007b1a:     	movb	%dl, 0x2c(%rsp)
140007b1e:     	movl	$0x1, %edi
140007b23:     	jmp	0x140007baf <.text+0x6baf>
140007b28:     	movl	%edx, %eax
140007b2a:     	cmpl	$0x800, %edx            # imm = 0x800
140007b30:     	jae	0x140007b4c <.text+0x6b4c>
140007b32:     	shrl	$0x6, %eax
140007b35:     	orb	$-0x40, %al
140007b37:     	movb	%al, 0x2c(%rsp)
140007b3b:     	andb	$0x3f, %dl
140007b3e:     	orb	$-0x80, %dl
140007b41:     	movb	%dl, 0x2d(%rsp)
140007b45:     	movl	$0x2, %edi
140007b4a:     	jmp	0x140007baf <.text+0x6baf>
140007b4c:     	cmpl	$0xffff, %edx           # imm = 0xFFFF
140007b52:     	ja	0x140007b7b <.text+0x6b7b>
140007b54:     	shrl	$0xc, %eax
140007b57:     	orb	$-0x20, %al
140007b59:     	movb	%al, 0x2c(%rsp)
140007b5d:     	movl	%edx, %eax
140007b5f:     	shrl	$0x6, %eax
140007b62:     	andb	$0x3f, %al
140007b64:     	orb	$-0x80, %al
140007b66:     	movb	%al, 0x2d(%rsp)
140007b6a:     	andb	$0x3f, %dl
140007b6d:     	orb	$-0x80, %dl
140007b70:     	movb	%dl, 0x2e(%rsp)
140007b74:     	movl	$0x3, %edi
140007b79:     	jmp	0x140007baf <.text+0x6baf>
140007b7b:     	shrl	$0x12, %eax
140007b7e:     	andb	$0x7, %al
140007b80:     	orb	$-0x10, %al
140007b82:     	movb	%al, 0x2c(%rsp)
140007b86:     	movl	%edx, %eax
140007b88:     	shrl	$0xc, %eax
140007b8b:     	andb	$0x3f, %al
140007b8d:     	orb	$-0x80, %al
140007b8f:     	movb	%al, 0x2d(%rsp)
140007b93:     	movl	%edx, %eax
140007b95:     	shrl	$0x6, %eax
140007b98:     	andb	$0x3f, %al
140007b9a:     	orb	$-0x80, %al
140007b9c:     	movb	%al, 0x2e(%rsp)
140007ba0:     	andb	$0x3f, %dl
140007ba3:     	orb	$-0x80, %dl
140007ba6:     	movb	%dl, 0x2f(%rsp)
140007baa:     	movl	$0x4, %edi
140007baf:     	movq	0x8(%rsi), %rax
140007bb3:     	movq	0x10(%rsi), %rbx
140007bb7:     	subq	%rbx, %rax
140007bba:     	cmpq	%rdi, %rax
140007bbd:     	jb	0x140007be1 <.text+0x6be1>
140007bbf:     	movq	(%rsi), %rcx
140007bc2:     	addq	%rbx, %rcx
140007bc5:     	leaq	0x2c(%rsp), %rdx
140007bca:     	movq	%rdi, %r8
140007bcd:     	callq	0x140018beb <.text+0x17beb>
140007bd2:     	addq	%rdi, %rbx
140007bd5:     	movq	%rbx, 0x10(%rsi)
140007bd9:     	addq	$0x30, %rsp
140007bdd:     	popq	%rbx
140007bde:     	popq	%rdi
140007bdf:     	popq	%rsi
140007be0:     	retq
140007be1:     	movq	%rsi, %rcx
140007be4:     	movq	%rbx, %rdx
140007be7:     	movq	%rdi, %r8
140007bea:     	callq	0x140018e60 <.text+0x17e60>
140007bef:     	movq	0x10(%rsi), %rbx
140007bf3:     	jmp	0x140007bbf <.text+0x6bbf>
140007bf5:     	int3
140007bf6:     	int3
140007bf7:     	int3
140007bf8:     	int3
140007bf9:     	int3
140007bfa:     	int3
140007bfb:     	int3
140007bfc:     	int3
140007bfd:     	int3
140007bfe:     	int3
140007bff:     	int3
140007c00:     	pushq	%r15
140007c02:     	pushq	%r14
140007c04:     	pushq	%r12
140007c06:     	pushq	%rsi
140007c07:     	pushq	%rdi
140007c08:     	pushq	%rbx
140007c09:     	subq	$0x28, %rsp
140007c0d:     	movq	%r8, %rdi
140007c10:     	movq	%rdx, %rsi
140007c13:     	movq	%rcx, %rbx
140007c16:     	leaq	(%rcx,%rdx), %r12
140007c1a:     	xorl	%ecx, %ecx
140007c1c:     	leaq	0x13e3d(%rip), %r15     # 0x14001ba60
140007c23:     	cmpq	%rsi, %rcx
140007c26:     	je	0x140007d3e <.text+0x6d3e>
140007c2c:     	leaq	(%rbx,%rcx), %rdx
140007c30:     	movq	%rcx, %r14
140007c33:     	movq	%rdx, %r8
140007c36:     	jmp	0x140007c5f <.text+0x6c5f>
140007c38:     	addq	$0x2, %r8
140007c3c:     	cmpq	%r12, %rax
140007c3f:     	cmovneq	%r8, %rax
140007c43:     	movl	$0x2, %r10d
140007c49:     	nopl	(%rax)
140007c50:     	addq	%r10, %r14
140007c53:     	movq	%rax, %r8
140007c56:     	cmpq	%r12, %rax
140007c59:     	je	0x140007d41 <.text+0x6d41>
140007c5f:     	leaq	0x1(%r8), %rax
140007c63:     	movzbl	(%r8), %r9d
140007c67:     	movl	$0x1, %r10d
140007c6d:     	testb	%r9b, %r9b
140007c70:     	jns	0x140007c50 <.text+0x6c50>
140007c72:     	cmpb	$-0x20, %r9b
140007c76:     	jb	0x140007c38 <.text+0x6c38>
140007c78:     	cmpb	$-0x13, %r9b
140007c7c:     	jne	0x140007caa <.text+0x6caa>
140007c7e:     	cmpq	%r12, %rax
140007c81:     	je	0x140007d41 <.text+0x6d41>
140007c87:     	leaq	0x2(%r8), %rax
140007c8b:     	cmpq	%r12, %rax
140007c8e:     	je	0x140007d41 <.text+0x6d41>
140007c94:     	cmpb	$-0x61, 0x1(%r8)
140007c99:     	ja	0x140007ce4 <.text+0x6ce4>
140007c9b:     	addq	$0x3, %r8
140007c9f:     	movl	$0x3, %r10d
140007ca5:     	movq	%r8, %rax
140007ca8:     	jmp	0x140007c50 <.text+0x6c50>
140007caa:     	addq	$0x2, %r8
140007cae:     	cmpq	%r12, %rax
140007cb1:     	cmoveq	%rax, %r8
140007cb5:     	xorl	%eax, %eax
140007cb7:     	cmpq	%r12, %r8
140007cba:     	setne	%al
140007cbd:     	addq	%r8, %rax
140007cc0:     	movl	$0x3, %r10d
140007cc6:     	cmpb	$-0x10, %r9b
140007cca:     	jb	0x140007c50 <.text+0x6c50>
140007ccc:     	xorl	%r8d, %r8d
140007ccf:     	cmpq	%r12, %rax
140007cd2:     	setne	%r8b
140007cd6:     	addq	%r8, %rax
140007cd9:     	movl	$0x4, %r10d
140007cdf:     	jmp	0x140007c50 <.text+0x6c50>
140007ce4:     	movq	%r14, %r8
140007ce7:     	subq	%rcx, %r8
140007cea:     	jb	0x140007d92 <.text+0x6d92>
140007cf0:     	cmpq	%rsi, %r14
140007cf3:     	ja	0x140007da3 <.text+0x6da3>
140007cf9:     	movq	%rdi, %rcx
140007cfc:     	callq	0x140015330 <.text+0x14330>
140007d01:     	testb	%al, %al
140007d03:     	jne	0x140007d82 <.text+0x6d82>
140007d05:     	movl	$0x3, %r8d
140007d0b:     	movq	%rdi, %rcx
140007d0e:     	movq	%r15, %rdx
140007d11:     	callq	0x140015330 <.text+0x14330>
140007d16:     	testb	%al, %al
140007d18:     	jne	0x140007d82 <.text+0x6d82>
140007d1a:     	addq	$0x3, %r14
140007d1e:     	movq	%r14, %rcx
140007d21:     	cmpq	%rsi, %r14
140007d24:     	jbe	0x140007c23 <.text+0x6c23>
140007d2a:     	leaq	0x13d37(%rip), %r8      # 0x14001ba68
140007d31:     	movq	%r14, %rcx
140007d34:     	movq	%rsi, %rdx
140007d37:     	callq	0x140019c50 <.text+0x18c50>
140007d3c:     	ud2
140007d3e:     	movq	%rsi, %rcx
140007d41:     	subq	%rcx, %rsi
140007d44:     	addq	%rcx, %rbx
140007d47:     	testq	%rcx, %rcx
140007d4a:     	je	0x140007d67 <.text+0x6d67>
140007d4c:     	movq	%rdi, %rcx
140007d4f:     	movq	%rbx, %rdx
140007d52:     	movq	%rsi, %r8
140007d55:     	addq	$0x28, %rsp
140007d59:     	popq	%rbx
140007d5a:     	popq	%rdi
140007d5b:     	popq	%rsi
140007d5c:     	popq	%r12
140007d5e:     	popq	%r14
140007d60:     	popq	%r15
140007d62:     	jmp	0x140015330 <.text+0x14330>
140007d67:     	movq	%rbx, %rcx
140007d6a:     	movq	%rsi, %rdx
140007d6d:     	movq	%rdi, %r8
140007d70:     	addq	$0x28, %rsp
140007d74:     	popq	%rbx
140007d75:     	popq	%rdi
140007d76:     	popq	%rsi
140007d77:     	popq	%r12
140007d79:     	popq	%r14
140007d7b:     	popq	%r15
140007d7d:     	jmp	0x140015b40 <.text+0x14b40>
140007d82:     	movb	$0x1, %al
140007d84:     	addq	$0x28, %rsp
140007d88:     	popq	%rbx
140007d89:     	popq	%rdi
140007d8a:     	popq	%rsi
140007d8b:     	popq	%r12
140007d8d:     	popq	%r14
140007d8f:     	popq	%r15
140007d91:     	retq
140007d92:     	leaq	0x13caf(%rip), %r8      # 0x14001ba48
140007d99:     	movq	%r14, %rdx
140007d9c:     	callq	0x140019d50 <.text+0x18d50>
140007da1:     	ud2
140007da3:     	leaq	0x13c9e(%rip), %r8      # 0x14001ba48
140007daa:     	movq	%r14, %rcx
140007dad:     	movq	%rsi, %rdx
140007db0:     	callq	0x140019cd0 <.text+0x18cd0>
140007db5:     	ud2
140007db7:     	int3
140007db8:     	int3
140007db9:     	int3
140007dba:     	int3
140007dbb:     	int3
140007dbc:     	int3
140007dbd:     	int3
140007dbe:     	int3
140007dbf:     	int3
140007dc0:     	pushq	%rbp
140007dc1:     	subq	$0x90, %rsp
140007dc8:     	leaq	0x80(%rsp), %rbp
140007dd0:     	movq	$-0x2, 0x8(%rbp)
140007dd8:     	cmpb	$0x0, 0x1b421(%rip)     # 0x140023200
140007ddf:     	jne	0x140007e8e <.text+0x6e8e>
140007de5:     	movl	$0x0, -0x10(%rbp)
140007dec:     	movb	$0x0, -0xc(%rbp)
140007df0:     	movq	%rdx, -0x58(%rbp)
140007df4:     	leaq	-0x58(%rbp), %rax
140007df8:     	movq	%rax, -0x20(%rbp)
140007dfc:     	leaq	0x1000d(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140007e03:     	movq	%rax, -0x18(%rbp)
140007e07:     	leaq	0x13c9a(%rip), %rax     # 0x14001baa8
140007e0e:     	movq	%rax, -0x50(%rbp)
140007e12:     	movq	$0x2, -0x48(%rbp)
140007e1a:     	movq	$0x0, -0x30(%rbp)
140007e22:     	leaq	-0x20(%rbp), %rax
140007e26:     	movq	%rax, -0x40(%rbp)
140007e2a:     	movq	$0x1, -0x38(%rbp)
140007e32:     	leaq	-0x10(%rbp), %rax
140007e36:     	movq	%rax, -0x8(%rbp)
140007e3a:     	movq	$0x0, (%rbp)
140007e42:     	leaq	0x12da7(%rip), %rdx     # 0x14001abf0
140007e49:     	leaq	-0x8(%rbp), %rcx
140007e4d:     	leaq	-0x50(%rbp), %r8
140007e51:     	callq	0x140014a60 <.text+0x13a60>
140007e56:     	movq	(%rbp), %rcx
140007e5a:     	testb	%al, %al
140007e5c:     	je	0x140007e76 <.text+0x6e76>
140007e5e:     	testq	%rcx, %rcx
140007e61:     	leaq	0x13708(%rip), %rax     # 0x14001b570
140007e68:     	cmovneq	%rcx, %rax
140007e6c:     	movq	%rax, -0x8(%rbp)
140007e70:     	leaq	-0x8(%rbp), %rcx
140007e74:     	jmp	0x140007e7f <.text+0x6e7f>
140007e76:     	testq	%rcx, %rcx
140007e79:     	je	0x140007e84 <.text+0x6e84>
140007e7b:     	leaq	(%rbp), %rcx
140007e7f:     	callq	0x140001c00 <.text+0xc00>
140007e84:     	nop
140007e85:     	addq	$0x90, %rsp
140007e8c:     	popq	%rbp
140007e8d:     	retq
140007e8e:     	movq	%rdx, -0x20(%rbp)
140007e92:     	leaq	-0x20(%rbp), %rax
140007e96:     	movq	%rax, -0x8(%rbp)
140007e9a:     	leaq	0xff6f(%rip), %rax      # 0x140017e10 <.text+0x16e10>
140007ea1:     	movq	%rax, (%rbp)
140007ea5:     	leaq	0x13c2c(%rip), %rax     # 0x14001bad8
140007eac:     	movq	%rax, -0x50(%rbp)
140007eb0:     	movq	$0x2, -0x48(%rbp)
140007eb8:     	movq	$0x0, -0x30(%rbp)
140007ec0:     	leaq	-0x8(%rbp), %rax
140007ec4:     	movq	%rax, -0x40(%rbp)
140007ec8:     	movq	$0x1, -0x38(%rbp)
140007ed0:     	leaq	0x13c39(%rip), %rdx     # 0x14001bb10
140007ed7:     	leaq	-0x50(%rbp), %rcx
140007edb:     	callq	0x1400197d0 <.text+0x187d0>
140007ee0:     	ud2
140007ee2:     	nopw	%cs:(%rax,%rax)
140007ef0:     	movq	%rdx, 0x10(%rsp)
140007ef5:     	pushq	%rbp
140007ef6:     	subq	$0x20, %rsp
140007efa:     	leaq	0x80(%rdx), %rbp
140007f01:     	cmpq	$0x0, (%rbp)
140007f06:     	je	0x140007f11 <.text+0x6f11>
140007f08:     	leaq	(%rbp), %rcx
140007f0c:     	callq	0x140001c00 <.text+0xc00>
140007f11:     	nop
140007f12:     	addq	$0x20, %rsp
140007f16:     	popq	%rbp
140007f17:     	retq
140007f18:     	int3
140007f19:     	int3
140007f1a:     	int3
140007f1b:     	int3
140007f1c:     	int3
140007f1d:     	int3
140007f1e:     	int3
140007f1f:     	int3
140007f20:     	pushq	%rsi
140007f21:     	pushq	%rdi
140007f22:     	pushq	%rbx
140007f23:     	subq	$0x20, %rsp
140007f27:     	movq	%rdx, %rsi
140007f2a:     	movq	%rcx, %rdi
140007f2d:     	movq	0x1b38c(%rip), %rcx     # 0x1400232c0
140007f34:     	testq	%rcx, %rcx
140007f37:     	je	0x140007f52 <.text+0x6f52>
140007f39:     	cmpq	$0x11, %rsi
140007f3d:     	jae	0x140007f6d <.text+0x6f6d>
140007f3f:     	xorl	%edx, %edx
140007f41:     	movq	%rdi, %r8
140007f44:     	addq	$0x20, %rsp
140007f48:     	popq	%rbx
140007f49:     	popq	%rdi
140007f4a:     	popq	%rsi
140007f4b:     	jmpq	*0x1212e(%rip)          # 0x14001a080
140007f52:     	callq	*0x12130(%rip)          # 0x14001a088
140007f58:     	testq	%rax, %rax
140007f5b:     	je	0x140007f99 <.text+0x6f99>
140007f5d:     	movq	%rax, %rcx
140007f60:     	movq	%rax, 0x1b359(%rip)     # 0x1400232c0
140007f67:     	cmpq	$0x11, %rsi
140007f6b:     	jb	0x140007f3f <.text+0x6f3f>
140007f6d:     	addq	%rsi, %rdi
140007f70:     	xorl	%ebx, %ebx
140007f72:     	xorl	%edx, %edx
140007f74:     	movq	%rdi, %r8
140007f77:     	callq	*0x12103(%rip)          # 0x14001a080
140007f7d:     	testq	%rax, %rax
140007f80:     	je	0x140007f9b <.text+0x6f9b>
140007f82:     	leaq	-0x1(%rsi), %rcx
140007f86:     	andq	%rax, %rcx
140007f89:     	subq	%rcx, %rsi
140007f8c:     	movq	%rax, %rbx
140007f8f:     	addq	%rsi, %rbx
140007f92:     	movq	%rax, -0x8(%rax,%rsi)
140007f97:     	jmp	0x140007f9b <.text+0x6f9b>
140007f99:     	xorl	%ebx, %ebx
140007f9b:     	movq	%rbx, %rax
140007f9e:     	addq	$0x20, %rsp
140007fa2:     	popq	%rbx
140007fa3:     	popq	%rdi
140007fa4:     	popq	%rsi
140007fa5:     	retq
140007fa6:     	int3
140007fa7:     	int3
140007fa8:     	int3
140007fa9:     	int3
140007faa:     	int3
140007fab:     	int3
140007fac:     	int3
140007fad:     	int3
140007fae:     	int3
140007faf:     	int3
140007fb0:     	movq	%rcx, %rax
140007fb3:     	cmpq	$0x11, %r8
140007fb7:     	jb	0x140007fbd <.text+0x6fbd>
140007fb9:     	movq	-0x8(%rax), %rax
140007fbd:     	movq	0x1b2fc(%rip), %rcx     # 0x1400232c0
140007fc4:     	xorl	%edx, %edx
140007fc6:     	movq	%rax, %r8
140007fc9:     	jmpq	*0x120c0(%rip)          # 0x14001a090
140007fd0:     	pushq	%r15
140007fd2:     	pushq	%r14
140007fd4:     	pushq	%rsi
140007fd5:     	pushq	%rdi
140007fd6:     	pushq	%rbx
140007fd7:     	subq	$0x20, %rsp
140007fdb:     	movq	%r9, %rsi
140007fde:     	movq	%rcx, %rdi
140007fe1:     	cmpq	$0x11, %r8
140007fe5:     	jae	0x140008008 <.text+0x7008>
140007fe7:     	movq	0x1b2d2(%rip), %rcx     # 0x1400232c0
140007fee:     	xorl	%edx, %edx
140007ff0:     	movq	%rdi, %r8
140007ff3:     	movq	%rsi, %r9
140007ff6:     	addq	$0x20, %rsp
140007ffa:     	popq	%rbx
140007ffb:     	popq	%rdi
140007ffc:     	popq	%rsi
140007ffd:     	popq	%r14
140007fff:     	popq	%r15
140008001:     	jmpq	*0x12090(%rip)          # 0x14001a098
140008008:     	movq	%r8, %r14
14000800b:     	movq	%rdx, %rbx
14000800e:     	movq	0x1b2ab(%rip), %rcx     # 0x1400232c0
140008015:     	testq	%rcx, %rcx
140008018:     	jne	0x14000802f <.text+0x702f>
14000801a:     	callq	*0x12068(%rip)          # 0x14001a088
140008020:     	testq	%rax, %rax
140008023:     	je	0x140008082 <.text+0x7082>
140008025:     	movq	%rax, %rcx
140008028:     	movq	%rax, 0x1b291(%rip)     # 0x1400232c0
14000802f:     	leaq	(%rsi,%r14), %r8
140008033:     	xorl	%r15d, %r15d
140008036:     	xorl	%edx, %edx
140008038:     	callq	*0x12042(%rip)          # 0x14001a080
14000803e:     	testq	%rax, %rax
140008041:     	je	0x140008085 <.text+0x7085>
140008043:     	leaq	-0x1(%r14), %rcx
140008047:     	andq	%rax, %rcx
14000804a:     	subq	%rcx, %r14
14000804d:     	movq	%rax, %r15
140008050:     	addq	%r14, %r15
140008053:     	movq	%rax, -0x8(%rax,%r14)
140008058:     	cmpq	%rsi, %rbx
14000805b:     	cmovbq	%rbx, %rsi
14000805f:     	movq	%r15, %rcx
140008062:     	movq	%rdi, %rdx
140008065:     	movq	%rsi, %r8
140008068:     	callq	0x140018beb <.text+0x17beb>
14000806d:     	movq	-0x8(%rdi), %r8
140008071:     	movq	0x1b248(%rip), %rcx     # 0x1400232c0
140008078:     	xorl	%edx, %edx
14000807a:     	callq	*0x12010(%rip)          # 0x14001a090
140008080:     	jmp	0x140008085 <.text+0x7085>
140008082:     	xorl	%r15d, %r15d
140008085:     	movq	%r15, %rax
140008088:     	addq	$0x20, %rsp
14000808c:     	popq	%rbx
14000808d:     	popq	%rdi
14000808e:     	popq	%rsi
14000808f:     	popq	%r14
140008091:     	popq	%r15
140008093:     	retq
140008094:     	int3
140008095:     	int3
140008096:     	int3
140008097:     	int3
140008098:     	int3
140008099:     	int3
14000809a:     	int3
14000809b:     	int3
14000809c:     	int3
14000809d:     	int3
14000809e:     	int3
14000809f:     	int3
1400080a0:     	pushq	%rbp
1400080a1:     	subq	$0x80, %rsp
1400080a8:     	leaq	0x80(%rsp), %rbp
1400080b0:     	movq	$-0x2, -0x8(%rbp)
1400080b8:     	movl	$0x0, -0x18(%rbp)
1400080bf:     	movb	$0x0, -0x14(%rbp)
1400080c3:     	leaq	0x13a96(%rip), %rax     # 0x14001bb60
1400080ca:     	movq	%rax, -0x58(%rbp)
1400080ce:     	movq	$0x1, -0x50(%rbp)
1400080d6:     	leaq	-0x10(%rbp), %rax
1400080da:     	movq	%rax, -0x48(%rbp)
1400080de:     	xorps	%xmm0, %xmm0
1400080e1:     	movups	%xmm0, -0x40(%rbp)
1400080e5:     	leaq	-0x18(%rbp), %rax
1400080e9:     	movq	%rax, -0x28(%rbp)
1400080ed:     	movq	$0x0, -0x20(%rbp)
1400080f5:     	leaq	0x12af4(%rip), %rdx     # 0x14001abf0
1400080fc:     	leaq	-0x28(%rbp), %rcx
140008100:     	leaq	-0x58(%rbp), %r8
140008104:     	callq	0x140014a60 <.text+0x13a60>
140008109:     	movq	-0x20(%rbp), %rcx
14000810d:     	testb	%al, %al
14000810f:     	je	0x140008121 <.text+0x7121>
140008111:     	testq	%rcx, %rcx
140008114:     	leaq	0x13455(%rip), %rax     # 0x14001b570
14000811b:     	cmovneq	%rcx, %rax
14000811f:     	jmp	0x140008131 <.text+0x7131>
140008121:     	testq	%rcx, %rcx
140008124:     	je	0x14000812f <.text+0x712f>
140008126:     	leaq	-0x20(%rbp), %rcx
14000812a:     	callq	0x140001c00 <.text+0xc00>
14000812f:     	xorl	%eax, %eax
140008131:     	movq	%rax, -0x28(%rbp)
140008135:     	leaq	-0x28(%rbp), %rcx
140008139:     	callq	0x140001da0 <.text+0xda0>
14000813e:     	movl	$0x7, %ecx
140008143:     	int	$0x29
140008145:     	ud2
140008147:     	nopw	(%rax,%rax)
140008150:     	movq	%rdx, 0x10(%rsp)
140008155:     	pushq	%rbp
140008156:     	subq	$0x20, %rsp
14000815a:     	leaq	0x80(%rdx), %rbp
140008161:     	callq	0x1400199a0 <.text+0x189a0>
140008166:     	ud2
140008168:     	nopl	(%rax,%rax)
140008170:     	movq	%rdx, 0x10(%rsp)
140008175:     	pushq	%rbp
140008176:     	subq	$0x20, %rsp
14000817a:     	leaq	0x80(%rdx), %rbp
140008181:     	cmpq	$0x0, -0x20(%rbp)
140008186:     	je	0x140008191 <.text+0x7191>
140008188:     	leaq	-0x20(%rbp), %rcx
14000818c:     	callq	0x140001c00 <.text+0xc00>
140008191:     	nop
140008192:     	addq	$0x20, %rsp
140008196:     	popq	%rbp
140008197:     	retq
140008198:     	int3
140008199:     	int3
14000819a:     	int3
14000819b:     	int3
14000819c:     	int3
14000819d:     	int3
14000819e:     	int3
14000819f:     	int3
1400081a0:     	pushq	%rbp
1400081a1:     	subq	$0x80, %rsp
1400081a8:     	leaq	0x80(%rsp), %rbp
1400081b0:     	movq	$-0x2, -0x8(%rbp)
1400081b8:     	movl	$0x0, -0x18(%rbp)
1400081bf:     	movb	$0x0, -0x14(%rbp)
1400081c3:     	leaq	0x139e6(%rip), %rax     # 0x14001bbb0
1400081ca:     	movq	%rax, -0x58(%rbp)
1400081ce:     	movq	$0x1, -0x50(%rbp)
1400081d6:     	leaq	-0x10(%rbp), %rax
1400081da:     	movq	%rax, -0x48(%rbp)
1400081de:     	xorps	%xmm0, %xmm0
1400081e1:     	movups	%xmm0, -0x40(%rbp)
1400081e5:     	leaq	-0x18(%rbp), %rax
1400081e9:     	movq	%rax, -0x28(%rbp)
1400081ed:     	movq	$0x0, -0x20(%rbp)
1400081f5:     	leaq	0x129f4(%rip), %rdx     # 0x14001abf0
1400081fc:     	leaq	-0x28(%rbp), %rcx
140008200:     	leaq	-0x58(%rbp), %r8
140008204:     	callq	0x140014a60 <.text+0x13a60>
140008209:     	movq	-0x20(%rbp), %rcx
14000820d:     	testb	%al, %al
14000820f:     	je	0x140008221 <.text+0x7221>
140008211:     	testq	%rcx, %rcx
140008214:     	leaq	0x13355(%rip), %rax     # 0x14001b570
14000821b:     	cmovneq	%rcx, %rax
14000821f:     	jmp	0x140008231 <.text+0x7231>
140008221:     	testq	%rcx, %rcx
140008224:     	je	0x14000822f <.text+0x722f>
140008226:     	leaq	-0x20(%rbp), %rcx
14000822a:     	callq	0x140001c00 <.text+0xc00>
14000822f:     	xorl	%eax, %eax
140008231:     	movq	%rax, -0x28(%rbp)
140008235:     	leaq	-0x28(%rbp), %rcx
140008239:     	callq	0x140001da0 <.text+0xda0>
14000823e:     	movl	$0x7, %ecx
140008243:     	int	$0x29
140008245:     	ud2
140008247:     	nopw	(%rax,%rax)
140008250:     	movq	%rdx, 0x10(%rsp)
140008255:     	pushq	%rbp
140008256:     	subq	$0x20, %rsp
14000825a:     	leaq	0x80(%rdx), %rbp
140008261:     	callq	0x1400199a0 <.text+0x189a0>
140008266:     	ud2
140008268:     	nopl	(%rax,%rax)
140008270:     	movq	%rdx, 0x10(%rsp)
140008275:     	pushq	%rbp
140008276:     	subq	$0x20, %rsp
14000827a:     	leaq	0x80(%rdx), %rbp
140008281:     	cmpq	$0x0, -0x20(%rbp)
140008286:     	je	0x140008291 <.text+0x7291>
140008288:     	leaq	-0x20(%rbp), %rcx
14000828c:     	callq	0x140001c00 <.text+0xc00>
140008291:     	nop
140008292:     	addq	$0x20, %rsp
140008296:     	popq	%rbp
140008297:     	retq
140008298:     	int3
140008299:     	int3
14000829a:     	int3
14000829b:     	int3
14000829c:     	int3
14000829d:     	int3
14000829e:     	int3
14000829f:     	int3
1400082a0:     	pushq	%rbp
1400082a1:     	pushq	%rsi
1400082a2:     	pushq	%rdi
1400082a3:     	pushq	%rbx
1400082a4:     	subq	$0xb8, %rsp
1400082ab:     	leaq	0x80(%rsp), %rbp
1400082b3:     	movq	$-0x2, 0x30(%rbp)
1400082bb:     	movq	%rcx, %rdi
1400082be:     	cmpb	$0x0, 0x21(%rcx)
1400082c2:     	je	0x1400082ca <.text+0x72ca>
1400082c4:     	movb	$0x3, 0x2f(%rbp)
1400082c8:     	jmp	0x1400082f5 <.text+0x72f5>
1400082ca:     	movl	0x1b070(%rip), %eax     # 0x140023340
1400082d0:     	movq	%gs:0x58, %rcx
1400082d9:     	movq	(%rcx,%rax,8), %rax
1400082dd:     	cmpq	$0x1, 0x28(%rax)
1400082e5:     	jbe	0x1400082ed <.text+0x72ed>
1400082e7:     	movb	$0x1, 0x2f(%rbp)
1400082eb:     	jmp	0x1400082f5 <.text+0x72f5>
1400082ed:     	callq	0x140005a90 <.text+0x4a90>
1400082f2:     	movb	%al, 0x2f(%rbp)
1400082f5:     	movq	0x18(%rdi), %rax
1400082f9:     	movq	%rax, -0x10(%rbp)
1400082fd:     	movq	(%rdi), %rsi
140008300:     	movq	0x8(%rdi), %rdi
140008304:     	movq	%rsi, %rcx
140008307:     	callq	*0x18(%rdi)
14000830a:     	movabsq	$-0x243e97eff4e109c, %rcx # imm = 0xFDBC168100B1EF64
140008314:     	xorq	%rdx, %rcx
140008317:     	movabsq	$-0x3e5d376332e1843f, %rdx # imm = 0xC1A2C89CCD1E7BC1
140008321:     	xorq	%rax, %rdx
140008324:     	orq	%rcx, %rdx
140008327:     	jne	0x14000832f <.text+0x732f>
140008329:     	leaq	0x8(%rsi), %rax
14000832d:     	jmp	0x140008358 <.text+0x7358>
14000832f:     	movq	%rsi, %rcx
140008332:     	callq	*0x18(%rdi)
140008335:     	movabsq	$0x38695ad15e865bab, %rcx # imm = 0x38695AD15E865BAB
14000833f:     	xorq	%rdx, %rcx
140008342:     	movabsq	$0x554370664b7583cb, %rdx # imm = 0x554370664B7583CB
14000834c:     	xorq	%rax, %rdx
14000834f:     	orq	%rcx, %rdx
140008352:     	jne	0x140008360 <.text+0x7360>
140008354:     	leaq	0x10(%rsi), %rax
140008358:     	movq	(%rsi), %rcx
14000835b:     	movq	(%rax), %rax
14000835e:     	jmp	0x14000836c <.text+0x736c>
140008360:     	movl	$0xc, %eax
140008365:     	leaq	0x13870(%rip), %rcx     # 0x14001bbdc
14000836c:     	movq	%rcx, -0x20(%rbp)
140008370:     	movq	%rax, -0x18(%rbp)
140008374:     	callq	0x140007750 <.text+0x6750>
140008379:     	movq	%rax, %rdi
14000837c:     	movq	%rax, 0x8(%rbp)
140008380:     	movl	$0x9, %eax
140008385:     	leaq	0x1385c(%rip), %rcx     # 0x14001bbe8
14000838c:     	testq	%rdi, %rdi
14000838f:     	je	0x1400083a4 <.text+0x73a4>
140008391:     	movq	0x18(%rdi), %rdx
140008395:     	testq	%rdx, %rdx
140008398:     	je	0x1400083a4 <.text+0x73a4>
14000839a:     	movq	0x20(%rdi), %rax
14000839e:     	decq	%rax
1400083a1:     	movq	%rdx, %rcx
1400083a4:     	movq	%rcx, -0x30(%rbp)
1400083a8:     	movq	%rax, -0x28(%rbp)
1400083ac:     	leaq	-0x30(%rbp), %rax
1400083b0:     	movq	%rax, -0x50(%rbp)
1400083b4:     	leaq	-0x10(%rbp), %rax
1400083b8:     	movq	%rax, -0x48(%rbp)
1400083bc:     	leaq	-0x20(%rbp), %rax
1400083c0:     	movq	%rax, -0x40(%rbp)
1400083c4:     	leaq	0x2f(%rbp), %rax
1400083c8:     	movq	%rax, -0x38(%rbp)
1400083cc:     	movzbl	0x1ae3d(%rip), %eax     # 0x140023210
1400083d3:     	testb	%al, %al
1400083d5:     	je	0x140008404 <.text+0x7404>
1400083d7:     	movb	$0x1, 0x1ae32(%rip)     # 0x140023210
1400083de:     	movl	0x1af5c(%rip), %eax     # 0x140023340
1400083e4:     	movq	%gs:0x58, %rcx
1400083ed:     	movq	(%rcx,%rax,8), %rax
1400083f1:     	cmpq	$0x0, 0x48(%rax)
1400083f9:     	je	0x140008411 <.text+0x7411>
1400083fb:     	leaq	0x50(%rax), %rax
140008402:     	jmp	0x140008429 <.text+0x7429>
140008404:     	movq	$0x0, (%rbp)
14000840c:     	jmp	0x1400084d8 <.text+0x74d8>
140008411:     	movq	%rdi, 0x20(%rbp)
140008415:     	xorl	%ecx, %ecx
140008417:     	callq	0x140009850 <.text+0x8850>
14000841c:     	testq	%rax, %rax
14000841f:     	movq	0x20(%rbp), %rdi
140008423:     	je	0x1400085a7 <.text+0x75a7>
140008429:     	movq	(%rax), %rsi
14000842c:     	movq	$0x0, (%rax)
140008433:     	movq	%rsi, (%rbp)
140008437:     	testq	%rsi, %rsi
14000843a:     	je	0x1400084d8 <.text+0x74d8>
140008440:     	movq	%rsi, -0x8(%rbp)
140008444:     	leaq	0x10(%rsi), %rcx
140008448:     	movq	%rcx, 0x20(%rbp)
14000844c:     	callq	*0x11bd6(%rip)          # 0x14001a028
140008452:     	movq	0x1ae47(%rip), %rax     # 0x1400232a0
140008459:     	shlq	%rax
14000845c:     	testq	%rax, %rax
14000845f:     	jne	0x140008582 <.text+0x7582>
140008465:     	movl	$0x0, 0x14(%rbp)
14000846c:     	movzbl	0x18(%rsi), %eax
140008470:     	leaq	0x20(%rsi), %rdx
140008474:     	leaq	0x1377d(%rip), %r8      # 0x14001bbf8
14000847b:     	leaq	-0x50(%rbp), %rcx
14000847f:     	callq	0x140008770 <.text+0x7770>
140008484:     	cmpb	$0x0, 0x14(%rbp)
140008488:     	jne	0x14000849d <.text+0x749d>
14000848a:     	movq	0x1ae0f(%rip), %rax     # 0x1400232a0
140008491:     	shlq	%rax
140008494:     	testq	%rax, %rax
140008497:     	jne	0x140008591 <.text+0x7591>
14000849d:     	movq	0x20(%rbp), %rcx
1400084a1:     	callq	*0x11c69(%rip)          # 0x14001a110
1400084a7:     	movb	$0x1, 0x1ad62(%rip)     # 0x140023210
1400084ae:     	movq	%rsi, 0x18(%rbp)
1400084b2:     	movl	0x1ae88(%rip), %eax     # 0x140023340
1400084b8:     	movq	%gs:0x58, %rcx
1400084c1:     	movq	(%rcx,%rax,8), %rax
1400084c5:     	cmpq	$0x0, 0x48(%rax)
1400084cd:     	je	0x140008504 <.text+0x7504>
1400084cf:     	leaq	0x50(%rax), %rax
1400084d6:     	jmp	0x14000851c <.text+0x751c>
1400084d8:     	movl	$0x0, 0x18(%rbp)
1400084df:     	movb	$0x0, 0x1c(%rbp)
1400084e3:     	movb	$0x0, 0x2d(%rbp)
1400084e7:     	leaq	0x1375a(%rip), %r8      # 0x14001bc48
1400084ee:     	leaq	-0x50(%rbp), %rcx
1400084f2:     	leaq	0x18(%rbp), %rdx
1400084f6:     	callq	0x140008770 <.text+0x7770>
1400084fb:     	xorl	%esi, %esi
1400084fd:     	testq	%rdi, %rdi
140008500:     	jne	0x140008546 <.text+0x7546>
140008502:     	jmp	0x140008555 <.text+0x7555>
140008504:     	movq	%rsi, 0x20(%rbp)
140008508:     	xorl	%ecx, %ecx
14000850a:     	callq	0x140009850 <.text+0x8850>
14000850f:     	testq	%rax, %rax
140008512:     	movq	0x20(%rbp), %rsi
140008516:     	je	0x1400085d1 <.text+0x75d1>
14000851c:     	movq	(%rax), %rcx
14000851f:     	movq	%rsi, (%rax)
140008522:     	movq	%rcx, 0x18(%rbp)
140008526:     	testq	%rcx, %rcx
140008529:     	je	0x14000853a <.text+0x753a>
14000852b:     	lock
14000852c:     	decq	(%rcx)
14000852f:     	jne	0x14000853a <.text+0x753a>
140008531:     	leaq	0x18(%rbp), %rcx
140008535:     	callq	0x140002870 <.text+0x1870>
14000853a:     	movb	$0x1, %sil
14000853d:     	movq	0x8(%rbp), %rdi
140008541:     	testq	%rdi, %rdi
140008544:     	je	0x140008555 <.text+0x7555>
140008546:     	lock
140008547:     	decq	(%rdi)
14000854a:     	jne	0x140008555 <.text+0x7555>
14000854c:     	leaq	0x8(%rbp), %rcx
140008550:     	callq	0x1400028f0 <.text+0x18f0>
140008555:     	movq	(%rbp), %rax
140008559:     	testq	%rax, %rax
14000855c:     	setne	%cl
14000855f:     	notb	%sil
140008562:     	testb	%cl, %sil
140008565:     	je	0x140008575 <.text+0x7575>
140008567:     	lock
140008568:     	decq	(%rax)
14000856b:     	jne	0x140008575 <.text+0x7575>
14000856d:     	movq	%rbp, %rcx
140008570:     	callq	0x140002870 <.text+0x1870>
140008575:     	nop
140008576:     	addq	$0xb8, %rsp
14000857d:     	popq	%rbx
14000857e:     	popq	%rdi
14000857f:     	popq	%rsi
140008580:     	popq	%rbp
140008581:     	retq
140008582:     	callq	0x1400191b0 <.text+0x181b0>
140008587:     	xorb	$0x1, %al
140008589:     	movl	%eax, 0x14(%rbp)
14000858c:     	jmp	0x14000846c <.text+0x746c>
140008591:     	callq	0x1400191b0 <.text+0x181b0>
140008596:     	testb	%al, %al
140008598:     	jne	0x14000849d <.text+0x749d>
14000859e:     	movb	$0x1, 0x18(%rsi)
1400085a2:     	jmp	0x14000849d <.text+0x749d>
1400085a7:     	leaq	0x12dfa(%rip), %rax     # 0x14001b3a8
1400085ae:     	movq	%rax, 0x20(%rsp)
1400085b3:     	leaq	0x12d86(%rip), %rcx     # 0x14001b340
1400085ba:     	leaq	0x1236f(%rip), %r9      # 0x14001a930
1400085c1:     	leaq	0x18(%rbp), %r8
1400085c5:     	movl	$0x46, %edx
1400085ca:     	callq	0x140019bb0 <.text+0x18bb0>
1400085cf:     	jmp	0x14000860c <.text+0x760c>
1400085d1:     	lock
1400085d2:     	decq	(%rsi)
1400085d5:     	jne	0x1400085e0 <.text+0x75e0>
1400085d7:     	leaq	0x18(%rbp), %rcx
1400085db:     	callq	0x140002870 <.text+0x1870>
1400085e0:     	movb	$0x0, 0x2e(%rbp)
1400085e4:     	leaq	0x12dbd(%rip), %rax     # 0x14001b3a8
1400085eb:     	movq	%rax, 0x20(%rsp)
1400085f0:     	leaq	0x12d49(%rip), %rcx     # 0x14001b340
1400085f7:     	leaq	0x12332(%rip), %r9      # 0x14001a930
1400085fe:     	leaq	0x18(%rbp), %r8
140008602:     	movl	$0x46, %edx
140008607:     	callq	0x140019bb0 <.text+0x18bb0>
14000860c:     	ud2
14000860e:     	nop
140008610:     	movq	%rdx, 0x10(%rsp)
140008615:     	pushq	%rbp
140008616:     	pushq	%rsi
140008617:     	pushq	%rdi
140008618:     	pushq	%rbx
140008619:     	subq	$0x28, %rsp
14000861d:     	leaq	0x80(%rdx), %rbp
140008624:     	cmpq	$0x0, 0x20(%rbp)
140008629:     	je	0x14000863e <.text+0x763e>
14000862b:     	movq	0x20(%rbp), %rax
14000862f:     	lock
140008630:     	decq	(%rax)
140008633:     	jne	0x14000863e <.text+0x763e>
140008635:     	leaq	0x8(%rbp), %rcx
140008639:     	callq	0x1400028f0 <.text+0x18f0>
14000863e:     	nop
14000863f:     	addq	$0x28, %rsp
140008643:     	popq	%rbx
140008644:     	popq	%rdi
140008645:     	popq	%rsi
140008646:     	popq	%rbp
140008647:     	retq
140008648:     	nopl	(%rax,%rax)
140008650:     	movq	%rdx, 0x10(%rsp)
140008655:     	pushq	%rbp
140008656:     	pushq	%rsi
140008657:     	pushq	%rdi
140008658:     	pushq	%rbx
140008659:     	subq	$0x28, %rsp
14000865d:     	leaq	0x80(%rdx), %rbp
140008664:     	movq	0x20(%rbp), %rax
140008668:     	lock
140008669:     	decq	(%rax)
14000866c:     	jne	0x140008677 <.text+0x7677>
14000866e:     	leaq	0x18(%rbp), %rcx
140008672:     	callq	0x140002870 <.text+0x1870>
140008677:     	movb	$0x0, 0x2e(%rbp)
14000867b:     	addq	$0x28, %rsp
14000867f:     	popq	%rbx
140008680:     	popq	%rdi
140008681:     	popq	%rsi
140008682:     	popq	%rbp
140008683:     	retq
140008684:     	nopw	%cs:(%rax,%rax)
140008690:     	movq	%rdx, 0x10(%rsp)
140008695:     	pushq	%rbp
140008696:     	pushq	%rsi
140008697:     	pushq	%rdi
140008698:     	pushq	%rbx
140008699:     	subq	$0x28, %rsp
14000869d:     	leaq	0x80(%rdx), %rbp
1400086a4:     	movzbl	0x2d(%rbp), %ebx
1400086a8:     	movq	0x8(%rbp), %rax
1400086ac:     	testq	%rax, %rax
1400086af:     	je	0x1400086c0 <.text+0x76c0>
1400086b1:     	lock
1400086b2:     	decq	(%rax)
1400086b5:     	jne	0x1400086c0 <.text+0x76c0>
1400086b7:     	leaq	0x8(%rbp), %rcx
1400086bb:     	callq	0x1400028f0 <.text+0x18f0>
1400086c0:     	movq	(%rbp), %rax
1400086c4:     	testq	%rax, %rax
1400086c7:     	je	0x1400086dc <.text+0x76dc>
1400086c9:     	testb	$0x1, %bl
1400086cc:     	jne	0x1400086dc <.text+0x76dc>
1400086ce:     	lock
1400086cf:     	decq	(%rax)
1400086d2:     	jne	0x1400086dc <.text+0x76dc>
1400086d4:     	movq	%rbp, %rcx
1400086d7:     	callq	0x140002870 <.text+0x1870>
1400086dc:     	nop
1400086dd:     	addq	$0x28, %rsp
1400086e1:     	popq	%rbx
1400086e2:     	popq	%rdi
1400086e3:     	popq	%rsi
1400086e4:     	popq	%rbp
1400086e5:     	retq
1400086e6:     	nopw	%cs:(%rax,%rax)
1400086f0:     	movq	%rdx, 0x10(%rsp)
1400086f5:     	pushq	%rbp
1400086f6:     	pushq	%rsi
1400086f7:     	pushq	%rdi
1400086f8:     	pushq	%rbx
1400086f9:     	subq	$0x28, %rsp
1400086fd:     	leaq	0x80(%rdx), %rbp
140008704:     	cmpb	$0x0, 0x2e(%rbp)
140008708:     	je	0x14000872a <.text+0x772a>
14000870a:     	movq	-0x8(%rbp), %rax
14000870e:     	lock
14000870f:     	decq	(%rax)
140008712:     	jne	0x14000871d <.text+0x771d>
140008714:     	leaq	-0x8(%rbp), %rcx
140008718:     	callq	0x140002870 <.text+0x1870>
14000871d:     	movb	$0x1, 0x2d(%rbp)
140008721:     	addq	$0x28, %rsp
140008725:     	popq	%rbx
140008726:     	popq	%rdi
140008727:     	popq	%rsi
140008728:     	popq	%rbp
140008729:     	retq
14000872a:     	movb	$0x1, 0x2d(%rbp)
14000872e:     	addq	$0x28, %rsp
140008732:     	popq	%rbx
140008733:     	popq	%rdi
140008734:     	popq	%rsi
140008735:     	popq	%rbp
140008736:     	retq
140008737:     	nopw	(%rax,%rax)
140008740:     	movq	%rdx, 0x10(%rsp)
140008745:     	pushq	%rbp
140008746:     	pushq	%rsi
140008747:     	pushq	%rdi
140008748:     	pushq	%rbx
140008749:     	subq	$0x28, %rsp
14000874d:     	leaq	0x80(%rdx), %rbp
140008754:     	movq	0x20(%rbp), %rcx
140008758:     	movl	0x14(%rbp), %edx
14000875b:     	callq	0x140001d30 <.text+0xd30>
140008760:     	movb	$0x1, 0x2e(%rbp)
140008764:     	addq	$0x28, %rsp
140008768:     	popq	%rbx
140008769:     	popq	%rdi
14000876a:     	popq	%rsi
14000876b:     	popq	%rbp
14000876c:     	retq
14000876d:     	int3
14000876e:     	int3
14000876f:     	int3
140008770:     	pushq	%r14
140008772:     	pushq	%rsi
140008773:     	pushq	%rdi
140008774:     	pushq	%rbx
140008775:     	subq	$0x88, %rsp
14000877c:     	movq	%r8, %rdi
14000877f:     	movq	%rdx, %rsi
140008782:     	movq	%rcx, %rbx
140008785:     	movq	(%rcx), %rax
140008788:     	movq	0x8(%rcx), %rcx
14000878c:     	movq	0x10(%rbx), %rdx
140008790:     	movq	%rax, 0x20(%rsp)
140008795:     	leaq	-0x71dc(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
14000879c:     	movq	%rax, 0x28(%rsp)
1400087a1:     	movq	%rcx, 0x30(%rsp)
1400087a6:     	leaq	-0x71cd(%rip), %rcx     # 0x1400015e0 <.text+0x5e0>
1400087ad:     	movq	%rcx, 0x38(%rsp)
1400087b2:     	movq	%rdx, 0x40(%rsp)
1400087b7:     	movq	%rax, 0x48(%rsp)
1400087bc:     	leaq	0x134ed(%rip), %rax     # 0x14001bcb0
1400087c3:     	movq	%rax, 0x58(%rsp)
1400087c8:     	movq	$0x4, 0x60(%rsp)
1400087d1:     	movq	$0x0, 0x78(%rsp)
1400087da:     	leaq	0x20(%rsp), %rax
1400087df:     	movq	%rax, 0x68(%rsp)
1400087e4:     	movq	$0x3, 0x70(%rsp)
1400087ed:     	movq	0x48(%r8), %r14
1400087f1:     	leaq	0x58(%rsp), %rdx
1400087f6:     	movq	%rsi, %rcx
1400087f9:     	callq	*%r14
1400087fc:     	movq	%rax, 0x50(%rsp)
140008801:     	testq	%rax, %rax
140008804:     	je	0x140008810 <.text+0x7810>
140008806:     	leaq	0x50(%rsp), %rcx
14000880b:     	callq	0x140001c00 <.text+0xc00>
140008810:     	movq	0x18(%rbx), %rax
140008814:     	movzbl	(%rax), %eax
140008817:     	cmpq	$0x3, %rax
14000881b:     	je	0x1400088b2 <.text+0x78b2>
140008821:     	cmpl	$0x2, %eax
140008824:     	je	0x140008845 <.text+0x7845>
140008826:     	movq	%rsi, %rcx
140008829:     	movq	%rdi, %rdx
14000882c:     	cmpl	$0x1, %eax
14000882f:     	jne	0x140008896 <.text+0x7896>
140008831:     	movb	$0x1, %r8b
140008834:     	callq	0x140006c20 <.text+0x5c20>
140008839:     	movq	%rax, 0x20(%rsp)
14000883e:     	testq	%rax, %rax
140008841:     	jne	0x1400088a8 <.text+0x78a8>
140008843:     	jmp	0x1400088b2 <.text+0x78b2>
140008845:     	xorl	%eax, %eax
140008847:     	xchgb	%al, 0x1a7b3(%rip)      # 0x140023000
14000884d:     	testb	%al, %al
14000884f:     	je	0x1400088b2 <.text+0x78b2>
140008851:     	leaq	0x134e8(%rip), %rax     # 0x14001bd40
140008858:     	movq	%rax, 0x20(%rsp)
14000885d:     	movq	$0x1, 0x28(%rsp)
140008866:     	leaq	0x11e33(%rip), %rax     # 0x14001a6a0
14000886d:     	movq	%rax, 0x30(%rsp)
140008872:     	xorps	%xmm0, %xmm0
140008875:     	movups	%xmm0, 0x38(%rsp)
14000887a:     	leaq	0x20(%rsp), %rdx
14000887f:     	movq	%rsi, %rcx
140008882:     	callq	*%r14
140008885:     	movq	%rax, 0x58(%rsp)
14000888a:     	testq	%rax, %rax
14000888d:     	je	0x1400088b2 <.text+0x78b2>
14000888f:     	leaq	0x58(%rsp), %rcx
140008894:     	jmp	0x1400088ad <.text+0x78ad>
140008896:     	xorl	%r8d, %r8d
140008899:     	callq	0x140006c20 <.text+0x5c20>
14000889e:     	movq	%rax, 0x20(%rsp)
1400088a3:     	testq	%rax, %rax
1400088a6:     	je	0x1400088b2 <.text+0x78b2>
1400088a8:     	leaq	0x20(%rsp), %rcx
1400088ad:     	callq	0x140001c00 <.text+0xc00>
1400088b2:     	nop
1400088b3:     	addq	$0x88, %rsp
1400088ba:     	popq	%rbx
1400088bb:     	popq	%rdi
1400088bc:     	popq	%rsi
1400088bd:     	popq	%r14
1400088bf:     	retq
1400088c0:     	subq	$0x38, %rsp
1400088c4:     	movq	0x10(%rcx), %rax
1400088c8:     	testq	%rax, %rax
1400088cb:     	jne	0x1400088e7 <.text+0x78e7>
1400088cd:     	leaq	0x11d9c(%rip), %rcx     # 0x14001a670
1400088d4:     	leaq	0x13475(%rip), %r8      # 0x14001bd50
1400088db:     	movl	$0x2b, %edx
1400088e0:     	callq	0x140019880 <.text+0x18880>
1400088e5:     	ud2
1400088e7:     	movq	0x18(%rcx), %rdx
1400088eb:     	movq	%rax, 0x20(%rsp)
1400088f0:     	movq	%rcx, 0x28(%rsp)
1400088f5:     	movq	%rdx, 0x30(%rsp)
1400088fa:     	leaq	0x20(%rsp), %rcx
1400088ff:     	callq	0x140007540 <.text+0x6540>
140008904:     	ud2
140008906:     	int3
140008907:     	int3
140008908:     	int3
140008909:     	int3
14000890a:     	int3
14000890b:     	int3
14000890c:     	int3
14000890d:     	int3
14000890e:     	int3
14000890f:     	int3
140008910:     	pushq	%rbp
140008911:     	pushq	%rsi
140008912:     	pushq	%rdi
140008913:     	subq	$0x70, %rsp
140008917:     	leaq	0x70(%rsp), %rbp
14000891c:     	movaps	%xmm6, -0x10(%rbp)
140008920:     	movq	$-0x2, -0x18(%rbp)
140008928:     	movq	%rcx, %rsi
14000892b:     	movq	0x8(%rcx), %rdi
14000892f:     	testq	%rdi, %rdi
140008932:     	jne	0x14000896c <.text+0x796c>
140008934:     	movq	(%rsi), %r8
140008937:     	movq	$0x1, -0x30(%rbp)
14000893f:     	xorps	%xmm0, %xmm0
140008942:     	movups	%xmm0, -0x28(%rbp)
140008946:     	leaq	0x12273(%rip), %rdx     # 0x14001abc0
14000894d:     	leaq	-0x30(%rbp), %rcx
140008951:     	callq	0x140014a60 <.text+0x13a60>
140008956:     	leaq	0x8(%rsi), %rax
14000895a:     	movq	-0x20(%rbp), %rcx
14000895e:     	movq	%rcx, 0x10(%rax)
140008962:     	movups	-0x30(%rbp), %xmm0
140008966:     	movups	%xmm0, (%rax)
140008969:     	movq	(%rax), %rdi
14000896c:     	movups	0x10(%rsi), %xmm6
140008970:     	movq	$0x1, 0x8(%rsi)
140008978:     	xorps	%xmm0, %xmm0
14000897b:     	movups	%xmm0, 0x10(%rsi)
14000897f:     	movzbl	0x1a87b(%rip), %eax     # 0x140023201
140008986:     	movl	$0x18, %ecx
14000898b:     	movl	$0x8, %edx
140008990:     	callq	0x140001340 <.text+0x340>
140008995:     	testq	%rax, %rax
140008998:     	je	0x1400089b4 <.text+0x79b4>
14000899a:     	movq	%rdi, (%rax)
14000899d:     	movups	%xmm6, 0x8(%rax)
1400089a1:     	leaq	0x133c0(%rip), %rdx     # 0x14001bd68
1400089a8:     	movaps	-0x10(%rbp), %xmm6
1400089ac:     	addq	$0x70, %rsp
1400089b0:     	popq	%rdi
1400089b1:     	popq	%rsi
1400089b2:     	popq	%rbp
1400089b3:     	retq
1400089b4:     	movaps	%xmm6, -0x50(%rbp)
1400089b8:     	movq	%rdi, -0x38(%rbp)
1400089bc:     	movl	$0x8, %ecx
1400089c1:     	movl	$0x18, %edx
1400089c6:     	callq	0x1400196e0 <.text+0x186e0>
1400089cb:     	ud2
1400089cd:     	nopl	(%rax)
1400089d0:     	movq	%rdx, 0x10(%rsp)
1400089d5:     	pushq	%rbp
1400089d6:     	pushq	%rsi
1400089d7:     	pushq	%rdi
1400089d8:     	subq	$0x30, %rsp
1400089dc:     	leaq	0x70(%rdx), %rbp
1400089e0:     	movaps	%xmm6, 0x20(%rsp)
1400089e5:     	movq	-0x28(%rbp), %rdx
1400089e9:     	testq	%rdx, %rdx
1400089ec:     	je	0x1400089fd <.text+0x79fd>
1400089ee:     	movq	-0x30(%rbp), %rcx
1400089f2:     	movl	$0x1, %r8d
1400089f8:     	callq	0x140001350 <.text+0x350>
1400089fd:     	movaps	0x20(%rsp), %xmm6
140008a02:     	addq	$0x30, %rsp
140008a06:     	popq	%rdi
140008a07:     	popq	%rsi
140008a08:     	popq	%rbp
140008a09:     	retq
140008a0a:     	nopw	(%rax,%rax)
140008a10:     	movq	%rdx, 0x10(%rsp)
140008a15:     	pushq	%rbp
140008a16:     	pushq	%rsi
140008a17:     	pushq	%rdi
140008a18:     	subq	$0x30, %rsp
140008a1c:     	leaq	0x70(%rdx), %rbp
140008a20:     	movaps	%xmm6, 0x20(%rsp)
140008a25:     	movdqa	-0x50(%rbp), %xmm0
140008a2a:     	movq	%xmm0, %rdx
140008a2f:     	testq	%rdx, %rdx
140008a32:     	je	0x140008a43 <.text+0x7a43>
140008a34:     	movl	$0x1, %r8d
140008a3a:     	movq	-0x38(%rbp), %rcx
140008a3e:     	callq	0x140001350 <.text+0x350>
140008a43:     	movaps	0x20(%rsp), %xmm6
140008a48:     	addq	$0x30, %rsp
140008a4c:     	popq	%rdi
140008a4d:     	popq	%rsi
140008a4e:     	popq	%rbp
140008a4f:     	retq
140008a50:     	pushq	%rbp
140008a51:     	pushq	%rsi
140008a52:     	subq	$0x48, %rsp
140008a56:     	leaq	0x40(%rsp), %rbp
140008a5b:     	movq	$-0x2, (%rbp)
140008a63:     	leaq	0x8(%rcx), %rsi
140008a67:     	cmpq	$0x0, 0x8(%rcx)
140008a6c:     	jne	0x140008a9f <.text+0x7a9f>
140008a6e:     	movq	(%rcx), %r8
140008a71:     	movq	$0x1, -0x18(%rbp)
140008a79:     	xorps	%xmm0, %xmm0
140008a7c:     	movups	%xmm0, -0x10(%rbp)
140008a80:     	leaq	0x12139(%rip), %rdx     # 0x14001abc0
140008a87:     	leaq	-0x18(%rbp), %rcx
140008a8b:     	callq	0x140014a60 <.text+0x13a60>
140008a90:     	movq	-0x8(%rbp), %rax
140008a94:     	movq	%rax, 0x10(%rsi)
140008a98:     	movups	-0x18(%rbp), %xmm0
140008a9c:     	movups	%xmm0, (%rsi)
140008a9f:     	leaq	0x132c2(%rip), %rdx     # 0x14001bd68
140008aa6:     	movq	%rsi, %rax
140008aa9:     	addq	$0x48, %rsp
140008aad:     	popq	%rsi
140008aae:     	popq	%rbp
140008aaf:     	retq
140008ab0:     	movq	%rdx, 0x10(%rsp)
140008ab5:     	pushq	%rbp
140008ab6:     	pushq	%rsi
140008ab7:     	subq	$0x28, %rsp
140008abb:     	leaq	0x40(%rdx), %rbp
140008abf:     	movq	-0x10(%rbp), %rdx
140008ac3:     	testq	%rdx, %rdx
140008ac6:     	je	0x140008ad7 <.text+0x7ad7>
140008ac8:     	movq	-0x18(%rbp), %rcx
140008acc:     	movl	$0x1, %r8d
140008ad2:     	callq	0x140001350 <.text+0x350>
140008ad7:     	nop
140008ad8:     	addq	$0x28, %rsp
140008adc:     	popq	%rsi
140008add:     	popq	%rbp
140008ade:     	retq
140008adf:     	int3
140008ae0:     	pushq	%rsi
140008ae1:     	pushq	%rdi
140008ae2:     	subq	$0x28, %rsp
140008ae6:     	movq	(%rcx), %rsi
140008ae9:     	movq	0x8(%rcx), %rdi
140008aed:     	movzbl	0x1a70d(%rip), %eax     # 0x140023201
140008af4:     	movl	$0x10, %ecx
140008af9:     	movl	$0x8, %edx
140008afe:     	callq	0x140001340 <.text+0x340>
140008b03:     	testq	%rax, %rax
140008b06:     	je	0x140008b1d <.text+0x7b1d>
140008b08:     	movq	%rsi, (%rax)
140008b0b:     	movq	%rdi, 0x8(%rax)
140008b0f:     	leaq	0x13272(%rip), %rdx     # 0x14001bd88
140008b16:     	addq	$0x28, %rsp
140008b1a:     	popq	%rdi
140008b1b:     	popq	%rsi
140008b1c:     	retq
140008b1d:     	movl	$0x8, %ecx
140008b22:     	movl	$0x10, %edx
140008b27:     	callq	0x1400196e0 <.text+0x186e0>
140008b2c:     	ud2
140008b2e:     	int3
140008b2f:     	int3
140008b30:     	movq	%rcx, %rax
140008b33:     	leaq	0x1324e(%rip), %rdx     # 0x14001bd88
140008b3a:     	retq
140008b3b:     	int3
140008b3c:     	int3
140008b3d:     	int3
140008b3e:     	int3
140008b3f:     	int3
140008b40:     	pushq	%rbp
140008b41:     	subq	$0x60, %rsp
140008b45:     	leaq	0x60(%rsp), %rbp
140008b4a:     	movq	$-0x2, -0x8(%rbp)
140008b52:     	movq	(%rcx), %rax
140008b55:     	movq	0x8(%rax), %r8
140008b59:     	movq	0x18(%rax), %rdx
140008b5d:     	cmpq	$0x1, %r8
140008b61:     	je	0x140008b78 <.text+0x7b78>
140008b63:     	testq	%r8, %r8
140008b66:     	jne	0x140008bbd <.text+0x7bbd>
140008b68:     	testq	%rdx, %rdx
140008b6b:     	jne	0x140008bbd <.text+0x7bbd>
140008b6d:     	leaq	0x11b2c(%rip), %rax     # 0x14001a6a0
140008b74:     	xorl	%edx, %edx
140008b76:     	jmp	0x140008b87 <.text+0x7b87>
140008b78:     	testq	%rdx, %rdx
140008b7b:     	jne	0x140008bbd <.text+0x7bbd>
140008b7d:     	movq	(%rax), %rdx
140008b80:     	movq	(%rdx), %rax
140008b83:     	movq	0x8(%rdx), %rdx
140008b87:     	movq	%rax, -0x28(%rbp)
140008b8b:     	movq	%rdx, -0x20(%rbp)
140008b8f:     	movq	0x8(%rcx), %rax
140008b93:     	movq	0x10(%rcx), %r9
140008b97:     	movq	0x10(%rax), %r8
140008b9b:     	movzbl	0x20(%rax), %ecx
140008b9f:     	movzbl	0x21(%rax), %eax
140008ba3:     	movb	%al, 0x28(%rsp)
140008ba7:     	movb	%cl, 0x20(%rsp)
140008bab:     	leaq	0x131f6(%rip), %rdx     # 0x14001bda8
140008bb2:     	leaq	-0x28(%rbp), %rcx
140008bb6:     	callq	0x140008c40 <.text+0x7c40>
140008bbb:     	ud2
140008bbd:     	movq	%rax, -0x28(%rbp)
140008bc1:     	movq	$0x0, -0x20(%rbp)
140008bc9:     	movq	0x8(%rcx), %rax
140008bcd:     	movq	0x10(%rcx), %r9
140008bd1:     	movq	0x10(%rax), %r8
140008bd5:     	movzbl	0x20(%rax), %ecx
140008bd9:     	movzbl	0x21(%rax), %eax
140008bdd:     	movb	%al, 0x28(%rsp)
140008be1:     	movb	%cl, 0x20(%rsp)
140008be5:     	leaq	0x131e4(%rip), %rdx     # 0x14001bdd0
140008bec:     	leaq	-0x28(%rbp), %rcx
140008bf0:     	callq	0x140008c40 <.text+0x7c40>
140008bf5:     	ud2
140008bf7:     	nopw	(%rax,%rax)
140008c00:     	movq	%rdx, 0x10(%rsp)
140008c05:     	pushq	%rbp
140008c06:     	subq	$0x30, %rsp
140008c0a:     	leaq	0x60(%rdx), %rbp
140008c0e:     	movq	-0x20(%rbp), %rcx
140008c12:     	testq	%rcx, %rcx
140008c15:     	je	0x140008c2b <.text+0x7c2b>
140008c17:     	movq	-0x18(%rbp), %rdx
140008c1b:     	testq	%rdx, %rdx
140008c1e:     	je	0x140008c2b <.text+0x7c2b>
140008c20:     	movl	$0x1, %r8d
140008c26:     	callq	0x140001350 <.text+0x350>
140008c2b:     	nop
140008c2c:     	addq	$0x30, %rsp
140008c30:     	popq	%rbp
140008c31:     	retq
140008c32:     	int3
140008c33:     	int3
140008c34:     	int3
140008c35:     	int3
140008c36:     	int3
140008c37:     	int3
140008c38:     	int3
140008c39:     	int3
140008c3a:     	int3
140008c3b:     	int3
140008c3c:     	int3
140008c3d:     	int3
140008c3e:     	int3
140008c3f:     	int3
140008c40:     	pushq	%rbp
140008c41:     	pushq	%r14
140008c43:     	pushq	%rsi
140008c44:     	pushq	%rdi
140008c45:     	pushq	%rbx
140008c46:     	subq	$0xb0, %rsp
140008c4d:     	leaq	0x80(%rsp), %rbp
140008c55:     	movq	$-0x2, 0x28(%rbp)
140008c5d:     	movzbl	0x88(%rbp), %eax
140008c64:     	movzbl	0x80(%rbp), %ebx
140008c6b:     	lock
140008c6c:     	incq	0x1a62d(%rip)           # 0x1400232a0
140008c73:     	jle	0x140008e25 <.text+0x7e25>
140008c79:     	movq	%rdx, %rsi
140008c7c:     	movq	%rcx, %rdi
140008c7f:     	movl	0x1a6bb(%rip), %ecx     # 0x140023340
140008c85:     	movq	%gs:0x58, %rdx
140008c8e:     	movq	(%rdx,%rcx,8), %rcx
140008c92:     	cmpb	$0x0, 0x30(%rcx)
140008c99:     	jne	0x140008ead <.text+0x7ead>
140008c9f:     	movl	0x1a69b(%rip), %ecx     # 0x140023340
140008ca5:     	movq	%gs:0x58, %rdx
140008cae:     	movq	(%rdx,%rcx,8), %rcx
140008cb2:     	incq	0x28(%rcx)
140008cb9:     	movb	$0x1, 0x30(%rcx)
140008cc0:     	leaq	0x119d9(%rip), %r14     # 0x14001a6a0
140008cc7:     	movq	%r14, -0x28(%rbp)
140008ccb:     	leaq	0x13126(%rip), %rcx     # 0x14001bdf8
140008cd2:     	movq	%rcx, -0x20(%rbp)
140008cd6:     	movq	%r8, -0x18(%rbp)
140008cda:     	movq	%r9, -0x10(%rbp)
140008cde:     	movb	%bl, -0x8(%rbp)
140008ce1:     	movb	%al, -0x7(%rbp)
140008ce4:     	leaq	0x1a595(%rip), %rcx     # 0x140023280
140008ceb:     	callq	*0x113af(%rip)          # 0x14001a0a0
140008cf1:     	movzbl	0x1a590(%rip), %eax     # 0x140023288
140008cf8:     	cmpq	$0x0, 0x1a590(%rip)     # 0x140023290
140008d00:     	movq	0x20(%rsi), %rax
140008d04:     	jne	0x140008d26 <.text+0x7d26>
140008d06:     	movb	$0x1, 0x27(%rbp)
140008d0a:     	movq	%rdi, %rcx
140008d0d:     	callq	*%rax
140008d0f:     	movq	%rax, -0x28(%rbp)
140008d13:     	movq	%rdx, -0x20(%rbp)
140008d17:     	movb	$0x1, 0x27(%rbp)
140008d1b:     	leaq	-0x28(%rbp), %rcx
140008d1f:     	callq	0x1400082a0 <.text+0x72a0>
140008d24:     	jmp	0x140008d53 <.text+0x7d53>
140008d26:     	movb	$0x1, 0x27(%rbp)
140008d2a:     	movq	%rdi, %rcx
140008d2d:     	callq	*%rax
140008d2f:     	movq	%rax, -0x28(%rbp)
140008d33:     	movq	%rdx, -0x20(%rbp)
140008d37:     	movq	0x1a552(%rip), %rcx     # 0x140023290
140008d3e:     	movq	0x1a553(%rip), %rax     # 0x140023298
140008d45:     	movq	0x28(%rax), %rax
140008d49:     	movb	$0x1, 0x27(%rbp)
140008d4d:     	leaq	-0x28(%rbp), %rdx
140008d51:     	callq	*%rax
140008d53:     	leaq	0x1a526(%rip), %rcx     # 0x140023280
140008d5a:     	callq	*0x11348(%rip)          # 0x14001a0a8
140008d60:     	movl	0x1a5da(%rip), %eax     # 0x140023340
140008d66:     	movq	%gs:0x58, %rcx
140008d6f:     	movq	(%rcx,%rax,8), %rax
140008d73:     	movb	$0x0, 0x30(%rax)
140008d7a:     	testb	%bl, %bl
140008d7c:     	je	0x140008d92 <.text+0x7d92>
140008d7e:     	movb	$0x0, 0x27(%rbp)
140008d82:     	movq	%rdi, %rcx
140008d85:     	movq	%rsi, %rdx
140008d88:     	callq	0x140008f90 <.text+0x7f90>
140008d8d:     	jmp	0x140008e23 <.text+0x7e23>
140008d92:     	movl	$0x0, 0x8(%rbp)
140008d99:     	movb	$0x0, 0xc(%rbp)
140008d9d:     	leaq	0x13144(%rip), %rax     # 0x14001bee8
140008da4:     	movq	%rax, -0x58(%rbp)
140008da8:     	movq	$0x1, -0x50(%rbp)
140008db0:     	movq	%r14, -0x48(%rbp)
140008db4:     	xorps	%xmm0, %xmm0
140008db7:     	movups	%xmm0, -0x40(%rbp)
140008dbb:     	leaq	0x8(%rbp), %rax
140008dbf:     	movq	%rax, 0x10(%rbp)
140008dc3:     	movq	$0x0, 0x18(%rbp)
140008dcb:     	leaq	0x11e1e(%rip), %rdx     # 0x14001abf0
140008dd2:     	leaq	0x10(%rbp), %rcx
140008dd6:     	leaq	-0x58(%rbp), %r8
140008dda:     	callq	0x140014a60 <.text+0x13a60>
140008ddf:     	movq	0x18(%rbp), %rcx
140008de3:     	testb	%al, %al
140008de5:     	je	0x140008df7 <.text+0x7df7>
140008de7:     	testq	%rcx, %rcx
140008dea:     	leaq	0x1277f(%rip), %rax     # 0x14001b570
140008df1:     	cmovneq	%rcx, %rax
140008df5:     	jmp	0x140008e0b <.text+0x7e0b>
140008df7:     	testq	%rcx, %rcx
140008dfa:     	je	0x140008e09 <.text+0x7e09>
140008dfc:     	movb	$0x0, 0x27(%rbp)
140008e00:     	leaq	0x18(%rbp), %rcx
140008e04:     	callq	0x140001c00 <.text+0xc00>
140008e09:     	xorl	%eax, %eax
140008e0b:     	movq	%rax, 0x10(%rbp)
140008e0f:     	movb	$0x0, 0x27(%rbp)
140008e13:     	leaq	0x10(%rbp), %rcx
140008e17:     	callq	0x140001da0 <.text+0xda0>
140008e1c:     	movl	$0x7, %ecx
140008e21:     	int	$0x29
140008e23:     	ud2
140008e25:     	leaq	0x11874(%rip), %rcx     # 0x14001a6a0
140008e2c:     	movq	%rcx, -0x28(%rbp)
140008e30:     	leaq	0x12fc1(%rip), %rcx     # 0x14001bdf8
140008e37:     	movq	%rcx, -0x20(%rbp)
140008e3b:     	movq	%r8, -0x18(%rbp)
140008e3f:     	movq	%r9, -0x10(%rbp)
140008e43:     	movb	%bl, -0x8(%rbp)
140008e46:     	movb	%al, -0x7(%rbp)
140008e49:     	movl	$0x0, (%rbp)
140008e50:     	movb	$0x0, 0x4(%rbp)
140008e54:     	leaq	-0x28(%rbp), %rax
140008e58:     	movq	%rax, 0x10(%rbp)
140008e5c:     	leaq	0xb2cd(%rip), %rax      # 0x140014130 <.text+0x13130>
140008e63:     	movq	%rax, 0x18(%rbp)
140008e67:     	leaq	0x12fe2(%rip), %rax     # 0x14001be50
140008e6e:     	movq	%rax, -0x58(%rbp)
140008e72:     	movq	$0x2, -0x50(%rbp)
140008e7a:     	movq	$0x0, -0x38(%rbp)
140008e82:     	leaq	0x10(%rbp), %rax
140008e86:     	movq	%rax, -0x48(%rbp)
140008e8a:     	movq	$0x1, -0x40(%rbp)
140008e92:     	movq	%rbp, %rcx
140008e95:     	leaq	-0x58(%rbp), %rdx
140008e99:     	callq	0x140005690 <.text+0x4690>
140008e9e:     	movq	%rax, 0x8(%rbp)
140008ea2:     	testq	%rax, %rax
140008ea5:     	je	0x140008efc <.text+0x7efc>
140008ea7:     	leaq	0x8(%rbp), %rcx
140008eab:     	jmp	0x140008ef7 <.text+0x7ef7>
140008ead:     	movl	$0x0, 0x10(%rbp)
140008eb4:     	movb	$0x0, 0x14(%rbp)
140008eb8:     	leaq	0x12fe9(%rip), %rax     # 0x14001bea8
140008ebf:     	movq	%rax, -0x58(%rbp)
140008ec3:     	movq	$0x1, -0x50(%rbp)
140008ecb:     	leaq	0x117ce(%rip), %rax     # 0x14001a6a0
140008ed2:     	movq	%rax, -0x48(%rbp)
140008ed6:     	xorps	%xmm0, %xmm0
140008ed9:     	movups	%xmm0, -0x40(%rbp)
140008edd:     	leaq	0x10(%rbp), %rcx
140008ee1:     	leaq	-0x58(%rbp), %rdx
140008ee5:     	callq	0x140005690 <.text+0x4690>
140008eea:     	movq	%rax, -0x28(%rbp)
140008eee:     	testq	%rax, %rax
140008ef1:     	je	0x140008efc <.text+0x7efc>
140008ef3:     	leaq	-0x28(%rbp), %rcx
140008ef7:     	callq	0x140001c00 <.text+0xc00>
140008efc:     	movl	$0x7, %ecx
140008f01:     	int	$0x29
140008f03:     	ud2
140008f05:     	nopw	%cs:(%rax,%rax)
140008f10:     	movq	%rdx, 0x10(%rsp)
140008f15:     	pushq	%rbp
140008f16:     	pushq	%r14
140008f18:     	pushq	%rsi
140008f19:     	pushq	%rdi
140008f1a:     	pushq	%rbx
140008f1b:     	subq	$0x20, %rsp
140008f1f:     	leaq	0x80(%rdx), %rbp
140008f26:     	cmpq	$0x0, 0x18(%rbp)
140008f2b:     	je	0x140008f3a <.text+0x7f3a>
140008f2d:     	movb	$0x0, 0x27(%rbp)
140008f31:     	leaq	0x18(%rbp), %rcx
140008f35:     	callq	0x140001c00 <.text+0xc00>
140008f3a:     	movb	$0x0, 0x27(%rbp)
140008f3e:     	addq	$0x20, %rsp
140008f42:     	popq	%rbx
140008f43:     	popq	%rdi
140008f44:     	popq	%rsi
140008f45:     	popq	%r14
140008f47:     	popq	%rbp
140008f48:     	retq
140008f49:     	nopl	(%rax)
140008f50:     	movq	%rdx, 0x10(%rsp)
140008f55:     	pushq	%rbp
140008f56:     	pushq	%r14
140008f58:     	pushq	%rsi
140008f59:     	pushq	%rdi
140008f5a:     	pushq	%rbx
140008f5b:     	subq	$0x20, %rsp
140008f5f:     	leaq	0x80(%rdx), %rbp
140008f66:     	cmpb	$0x0, 0x27(%rbp)
140008f6a:     	je	0x140008f79 <.text+0x7f79>
140008f6c:     	leaq	0x1a30d(%rip), %rcx     # 0x140023280
140008f73:     	callq	*0x1112f(%rip)          # 0x14001a0a8
140008f79:     	nop
140008f7a:     	addq	$0x20, %rsp
140008f7e:     	popq	%rbx
140008f7f:     	popq	%rdi
140008f80:     	popq	%rsi
140008f81:     	popq	%r14
140008f83:     	popq	%rbp
140008f84:     	retq
140008f85:     	int3
140008f86:     	int3
140008f87:     	int3
140008f88:     	int3
140008f89:     	int3
140008f8a:     	int3
140008f8b:     	int3
140008f8c:     	int3
140008f8d:     	int3
140008f8e:     	int3
140008f8f:     	int3
140008f90:     	subq	$0x78, %rsp
140008f94:     	callq	0x14000c350 <.text+0xb350>
140008f99:     	movl	%eax, 0x2c(%rsp)
140008f9d:     	movl	$0x0, 0x24(%rsp)
140008fa5:     	movb	$0x0, 0x28(%rsp)
140008faa:     	leaq	0x2c(%rsp), %rax
140008faf:     	movq	%rax, 0x38(%rsp)
140008fb4:     	leaq	0xed35(%rip), %rax      # 0x140017cf0 <.text+0x16cf0>
140008fbb:     	movq	%rax, 0x40(%rsp)
140008fc0:     	leaq	0x12f69(%rip), %rax     # 0x14001bf30
140008fc7:     	movq	%rax, 0x48(%rsp)
140008fcc:     	movq	$0x2, 0x50(%rsp)
140008fd5:     	movq	$0x0, 0x68(%rsp)
140008fde:     	leaq	0x38(%rsp), %rax
140008fe3:     	movq	%rax, 0x58(%rsp)
140008fe8:     	movq	$0x1, 0x60(%rsp)
140008ff1:     	leaq	0x24(%rsp), %rcx
140008ff6:     	leaq	0x48(%rsp), %rdx
140008ffb:     	callq	0x140005690 <.text+0x4690>
140009000:     	movq	%rax, 0x30(%rsp)
140009005:     	leaq	0x30(%rsp), %rcx
14000900a:     	callq	0x140001da0 <.text+0xda0>
14000900f:     	movl	$0x7, %ecx
140009014:     	int	$0x29
140009016:     	ud2
140009018:     	int3
140009019:     	int3
14000901a:     	int3
14000901b:     	int3
14000901c:     	int3
14000901d:     	int3
14000901e:     	int3
14000901f:     	int3
140009020:     	pushq	%r15
140009022:     	pushq	%r14
140009024:     	pushq	%r13
140009026:     	pushq	%r12
140009028:     	pushq	%rsi
140009029:     	pushq	%rdi
14000902a:     	pushq	%rbx
14000902b:     	subq	$0xf0, %rsp
140009032:     	movq	%r9, %rdi
140009035:     	movq	%r8, %rbx
140009038:     	movq	%rcx, %rsi
14000903b:     	movq	(%rcx), %r12
14000903e:     	movq	0x8(%rcx), %r15
140009042:     	movq	%rdx, 0xe8(%rsp)
14000904a:     	testq	%rdx, %rdx
14000904d:     	jne	0x140009065 <.text+0x8065>
14000904f:     	cmpb	$0x0, 0x20(%r12)
140009055:     	jne	0x140009065 <.text+0x8065>
140009057:     	incq	%r15
14000905a:     	movq	%r15, 0x8(%rsi)
14000905e:     	xorl	%eax, %eax
140009060:     	jmp	0x140009763 <.text+0x8763>
140009065:     	movq	(%r12), %rcx
140009069:     	testq	%r15, %r15
14000906c:     	je	0x140009168 <.text+0x8168>
140009072:     	leaq	0x12fa7(%rip), %rax     # 0x14001c020
140009079:     	movq	%rax, 0x20(%rsp)
14000907e:     	movq	$0x1, 0x28(%rsp)
140009087:     	leaq	0x11612(%rip), %rax     # 0x14001a6a0
14000908e:     	movq	%rax, 0x30(%rsp)
140009093:     	xorps	%xmm0, %xmm0
140009096:     	movups	%xmm0, 0x38(%rsp)
14000909b:     	leaq	0x20(%rsp), %r14
1400090a0:     	movq	%r14, %rdx
1400090a3:     	callq	0x140015350 <.text+0x14350>
1400090a8:     	testb	%al, %al
1400090aa:     	jne	0x140009761 <.text+0x8761>
1400090b0:     	cmpb	$0x1, 0x20(%r12)
1400090b6:     	jne	0x1400092e3 <.text+0x82e3>
1400090bc:     	movq	(%r12), %rcx
1400090c0:     	movq	0x19fd9(%rip), %rax     # 0x1400230a0
1400090c7:     	movq	(%rax), %rax
1400090ca:     	leaq	0x11e97(%rip), %rdx     # 0x14001af68
1400090d1:     	movq	%rdx, 0xa8(%rsp)
1400090d9:     	leaq	-0x7b20(%rip), %r8      # 0x1400015c0 <.text+0x5c0>
1400090e0:     	movq	%r8, 0xb0(%rsp)
1400090e8:     	leaq	0x12f41(%rip), %r8      # 0x14001c030
1400090ef:     	movq	%r8, 0xb8(%rsp)
1400090f7:     	movq	%rax, 0xc0(%rsp)
1400090ff:     	movq	$0x2, 0x20(%rsp)
140009108:     	movq	$0x1, 0x30(%rsp)
140009111:     	movq	$0x1, 0x38(%rsp)
14000911a:     	movq	$0x0, 0x40(%rsp)
140009123:     	movq	$0x20, 0x48(%rsp)
14000912c:     	movb	$0x3, 0x50(%rsp)
140009131:     	movq	%rdx, 0x70(%rsp)
140009136:     	movq	$0x1, 0x78(%rsp)
14000913f:     	movq	%r14, 0x90(%rsp)
140009147:     	movq	$0x1, 0x98(%rsp)
140009153:     	leaq	0xa8(%rsp), %rax
14000915b:     	movq	%rax, 0x80(%rsp)
140009163:     	jmp	0x1400092c5 <.text+0x82c5>
140009168:     	leaq	0x18(%r12), %rax
14000916d:     	movq	%rax, 0xa8(%rsp)
140009175:     	leaq	0xec94(%rip), %rax      # 0x140017e10 <.text+0x16e10>
14000917c:     	movq	%rax, 0xb0(%rsp)
140009184:     	movq	$0x2, 0x20(%rsp)
14000918d:     	movq	$0x0, 0x30(%rsp)
140009196:     	movq	$0x4, 0x38(%rsp)
14000919f:     	movq	$0x0, 0x40(%rsp)
1400091a8:     	movq	$0x20, 0x48(%rsp)
1400091b1:     	movb	$0x3, 0x50(%rsp)
1400091b6:     	leaq	0x12e0b(%rip), %rax     # 0x14001bfc8
1400091bd:     	movq	%rax, 0x70(%rsp)
1400091c2:     	movq	$0x2, 0x78(%rsp)
1400091cb:     	leaq	0x20(%rsp), %r14
1400091d0:     	movq	%r14, 0x90(%rsp)
1400091d8:     	movq	$0x1, 0x98(%rsp)
1400091e4:     	leaq	0xa8(%rsp), %r13
1400091ec:     	movq	%r13, 0x80(%rsp)
1400091f4:     	movq	$0x1, 0x88(%rsp)
140009200:     	leaq	0x70(%rsp), %rdx
140009205:     	callq	0x140015350 <.text+0x14350>
14000920a:     	testb	%al, %al
14000920c:     	jne	0x140009761 <.text+0x8761>
140009212:     	cmpb	$0x1, 0x20(%r12)
140009218:     	jne	0x1400092e3 <.text+0x82e3>
14000921e:     	movq	(%r12), %rcx
140009222:     	movq	0x19e77(%rip), %rax     # 0x1400230a0
140009229:     	movq	(%rax), %rax
14000922c:     	leaq	0xe8(%rsp), %rdx
140009234:     	movq	%rdx, 0xa8(%rsp)
14000923c:     	leaq	-0x70e3(%rip), %rdx     # 0x140002160 <.text+0x1160>
140009243:     	movq	%rdx, 0xb0(%rsp)
14000924b:     	leaq	0x12dbe(%rip), %rdx     # 0x14001c010
140009252:     	movq	%rdx, 0xb8(%rsp)
14000925a:     	movq	%rax, 0xc0(%rsp)
140009262:     	movq	$0x2, 0x20(%rsp)
14000926b:     	movq	$0x1, 0x30(%rsp)
140009274:     	movq	$0x1, 0x38(%rsp)
14000927d:     	movq	$0x0, 0x40(%rsp)
140009286:     	movq	$0x20, 0x48(%rsp)
14000928f:     	movb	$0x3, 0x50(%rsp)
140009294:     	leaq	0x12d55(%rip), %rax     # 0x14001bff0
14000929b:     	movq	%rax, 0x70(%rsp)
1400092a0:     	movq	$0x2, 0x78(%rsp)
1400092a9:     	movq	%r14, 0x90(%rsp)
1400092b1:     	movq	$0x1, 0x98(%rsp)
1400092bd:     	movq	%r13, 0x80(%rsp)
1400092c5:     	movq	$0x2, 0x88(%rsp)
1400092d1:     	leaq	0x70(%rsp), %rdx
1400092d6:     	callq	0x140015350 <.text+0x14350>
1400092db:     	testb	%al, %al
1400092dd:     	jne	0x140009761 <.text+0x8761>
1400092e3:     	cmpl	$0x3, (%rbx)
1400092e6:     	je	0x1400093f2 <.text+0x83f2>
1400092ec:     	movzbl	0x20(%r12), %eax
1400092f2:     	cmpq	$0x1, %rax
1400092f6:     	je	0x1400096c6 <.text+0x86c6>
1400092fc:     	testq	%rax, %rax
1400092ff:     	jne	0x1400093f2 <.text+0x83f2>
140009305:     	movups	0x40(%rbx), %xmm0
140009309:     	movaps	%xmm0, 0x60(%rsp)
14000930e:     	movups	(%rbx), %xmm0
140009311:     	movups	0x10(%rbx), %xmm1
140009315:     	movups	0x20(%rbx), %xmm2
140009319:     	movups	0x30(%rbx), %xmm3
14000931d:     	movaps	%xmm3, 0x50(%rsp)
140009322:     	movaps	%xmm2, 0x40(%rsp)
140009327:     	movaps	%xmm1, 0x30(%rsp)
14000932c:     	movaps	%xmm0, 0x20(%rsp)
140009331:     	movq	(%r12), %rcx
140009335:     	leaq	0x20(%rsp), %rax
14000933a:     	movq	%rax, 0xd8(%rsp)
140009342:     	leaq	0x22f7(%rip), %rax      # 0x14000b640 <.text+0xa640>
140009349:     	movq	%rax, 0xe0(%rsp)
140009351:     	movq	$0x2, 0x70(%rsp)
14000935a:     	movq	$0x2, 0x80(%rsp)
140009366:     	movq	$0x0, 0x90(%rsp)
140009372:     	movabsq	$0x400000020, %rax      # imm = 0x400000020
14000937c:     	movq	%rax, 0x98(%rsp)
140009384:     	movb	$0x3, 0xa0(%rsp)
14000938c:     	leaq	0x11bd5(%rip), %rax     # 0x14001af68
140009393:     	movq	%rax, 0xa8(%rsp)
14000939b:     	movq	$0x1, 0xb0(%rsp)
1400093a7:     	leaq	0x70(%rsp), %rax
1400093ac:     	movq	%rax, 0xc8(%rsp)
1400093b4:     	movq	$0x1, 0xd0(%rsp)
1400093c0:     	leaq	0xd8(%rsp), %rax
1400093c8:     	movq	%rax, 0xb8(%rsp)
1400093d0:     	movq	$0x1, 0xc0(%rsp)
1400093dc:     	leaq	0xa8(%rsp), %rdx
1400093e4:     	callq	0x140015350 <.text+0x14350>
1400093e9:     	testb	%al, %al
1400093eb:     	je	0x140009431 <.text+0x8431>
1400093ed:     	jmp	0x140009761 <.text+0x8761>
1400093f2:     	movq	(%r12), %rcx
1400093f6:     	leaq	0x12c3b(%rip), %rax     # 0x14001c038
1400093fd:     	movq	%rax, 0x20(%rsp)
140009402:     	movq	$0x1, 0x28(%rsp)
14000940b:     	leaq	0x1128e(%rip), %rax     # 0x14001a6a0
140009412:     	movq	%rax, 0x30(%rsp)
140009417:     	xorps	%xmm0, %xmm0
14000941a:     	movups	%xmm0, 0x38(%rsp)
14000941f:     	leaq	0x20(%rsp), %rdx
140009424:     	callq	0x140015350 <.text+0x14350>
140009429:     	testb	%al, %al
14000942b:     	jne	0x140009761 <.text+0x8761>
140009431:     	movq	(%r12), %rcx
140009435:     	leaq	0x1189b(%rip), %rdx     # 0x14001acd7
14000943c:     	movl	$0x1, %r8d
140009442:     	callq	0x140015330 <.text+0x14330>
140009447:     	testb	%al, %al
140009449:     	jne	0x140009761 <.text+0x8761>
14000944f:     	cmpl	$0x1, 0x150(%rsp)
140009457:     	jne	0x140009057 <.text+0x8057>
14000945d:     	movq	(%rdi), %rax
140009460:     	cmpl	$0x2, %eax
140009463:     	je	0x140009057 <.text+0x8057>
140009469:     	movl	0x158(%rsp), %eax
140009470:     	movl	%eax, 0xd8(%rsp)
140009477:     	cmpb	$0x1, 0x20(%r12)
14000947d:     	jne	0x14000954d <.text+0x854d>
140009483:     	movq	(%r12), %rcx
140009487:     	movq	0x19c12(%rip), %rax     # 0x1400230a0
14000948e:     	movq	(%rax), %rax
140009491:     	leaq	0x11ad0(%rip), %rdx     # 0x14001af68
140009498:     	movq	%rdx, 0xa8(%rsp)
1400094a0:     	leaq	-0x7ee7(%rip), %r8      # 0x1400015c0 <.text+0x5c0>
1400094a7:     	movq	%r8, 0xb0(%rsp)
1400094af:     	leaq	0x12b5a(%rip), %r8      # 0x14001c010
1400094b6:     	movq	%r8, 0xb8(%rsp)
1400094be:     	movq	%rax, 0xc0(%rsp)
1400094c6:     	movq	$0x2, 0x20(%rsp)
1400094cf:     	movq	$0x1, 0x30(%rsp)
1400094d8:     	movq	$0x1, 0x38(%rsp)
1400094e1:     	movq	$0x0, 0x40(%rsp)
1400094ea:     	movq	$0x20, 0x48(%rsp)
1400094f3:     	movb	$0x3, 0x50(%rsp)
1400094f8:     	movq	%rdx, 0x70(%rsp)
1400094fd:     	movq	$0x1, 0x78(%rsp)
140009506:     	leaq	0x20(%rsp), %rax
14000950b:     	movq	%rax, 0x90(%rsp)
140009513:     	movq	$0x1, 0x98(%rsp)
14000951f:     	leaq	0xa8(%rsp), %rax
140009527:     	movq	%rax, 0x80(%rsp)
14000952f:     	movq	$0x2, 0x88(%rsp)
14000953b:     	leaq	0x70(%rsp), %rdx
140009540:     	callq	0x140015350 <.text+0x14350>
140009545:     	testb	%al, %al
140009547:     	jne	0x140009761 <.text+0x8761>
14000954d:     	movq	(%r12), %rcx
140009551:     	leaq	0x12b00(%rip), %rax     # 0x14001c058
140009558:     	movq	%rax, 0x20(%rsp)
14000955d:     	movq	$0x1, 0x28(%rsp)
140009566:     	leaq	0x11133(%rip), %rbx     # 0x14001a6a0
14000956d:     	movq	%rbx, 0x30(%rsp)
140009572:     	xorps	%xmm0, %xmm0
140009575:     	movups	%xmm0, 0x38(%rsp)
14000957a:     	leaq	0x20(%rsp), %rdx
14000957f:     	callq	0x140015350 <.text+0x14350>
140009584:     	testb	%al, %al
140009586:     	jne	0x140009761 <.text+0x8761>
14000958c:     	movq	0x8(%r12), %rcx
140009591:     	movq	0x10(%r12), %rax
140009596:     	movq	(%r12), %rdx
14000959a:     	movq	%rdx, 0x20(%rsp)
14000959f:     	leaq	0x28(%rsp), %r8
1400095a4:     	movups	(%rdi), %xmm0
1400095a7:     	movups	%xmm0, 0x28(%rsp)
1400095ac:     	movq	0x10(%rdi), %r9
1400095b0:     	movq	%r9, 0x38(%rsp)
1400095b5:     	callq	*0x20(%rax)
1400095b8:     	testb	%al, %al
1400095ba:     	jne	0x140009761 <.text+0x8761>
1400095c0:     	movq	(%r12), %rcx
1400095c4:     	leaq	0xd8(%rsp), %rax
1400095cc:     	movq	%rax, 0x70(%rsp)
1400095d1:     	leaq	0xe718(%rip), %rdi      # 0x140017cf0 <.text+0x16cf0>
1400095d8:     	movq	%rdi, 0x78(%rsp)
1400095dd:     	leaq	0x12a8c(%rip), %r14     # 0x14001c070
1400095e4:     	movq	%r14, 0x20(%rsp)
1400095e9:     	movq	$0x1, 0x28(%rsp)
1400095f2:     	movq	$0x0, 0x40(%rsp)
1400095fb:     	leaq	0x70(%rsp), %r13
140009600:     	movq	%r13, 0x30(%rsp)
140009605:     	movq	$0x1, 0x38(%rsp)
14000960e:     	leaq	0x20(%rsp), %rdx
140009613:     	callq	0x140015350 <.text+0x14350>
140009618:     	testb	%al, %al
14000961a:     	jne	0x140009761 <.text+0x8761>
140009620:     	cmpl	$0x1, 0x160(%rsp)
140009628:     	jne	0x140009685 <.text+0x8685>
14000962a:     	movl	0x168(%rsp), %eax
140009631:     	movl	%eax, 0xa8(%rsp)
140009638:     	movq	(%r12), %rcx
14000963c:     	leaq	0xa8(%rsp), %rax
140009644:     	movq	%rax, 0x70(%rsp)
140009649:     	movq	%rdi, 0x78(%rsp)
14000964e:     	movq	%r14, 0x20(%rsp)
140009653:     	movq	$0x1, 0x28(%rsp)
14000965c:     	movq	$0x0, 0x40(%rsp)
140009665:     	movq	%r13, 0x30(%rsp)
14000966a:     	movq	$0x1, 0x38(%rsp)
140009673:     	leaq	0x20(%rsp), %rdx
140009678:     	callq	0x140015350 <.text+0x14350>
14000967d:     	testb	%al, %al
14000967f:     	jne	0x140009761 <.text+0x8761>
140009685:     	movq	(%r12), %rcx
140009689:     	leaq	0x129f0(%rip), %rax     # 0x14001c080
140009690:     	movq	%rax, 0x20(%rsp)
140009695:     	movq	$0x1, 0x28(%rsp)
14000969e:     	movq	%rbx, 0x30(%rsp)
1400096a3:     	xorps	%xmm0, %xmm0
1400096a6:     	movups	%xmm0, 0x38(%rsp)
1400096ab:     	leaq	0x20(%rsp), %rdx
1400096b0:     	callq	0x140015350 <.text+0x14350>
1400096b5:     	movl	%eax, %ecx
1400096b7:     	movb	$0x1, %al
1400096b9:     	testb	%cl, %cl
1400096bb:     	je	0x140009057 <.text+0x8057>
1400096c1:     	jmp	0x140009763 <.text+0x8763>
1400096c6:     	movups	0x40(%rbx), %xmm0
1400096ca:     	movaps	%xmm0, 0x60(%rsp)
1400096cf:     	movups	(%rbx), %xmm0
1400096d2:     	movups	0x10(%rbx), %xmm1
1400096d6:     	movups	0x20(%rbx), %xmm2
1400096da:     	movups	0x30(%rbx), %xmm3
1400096de:     	movaps	%xmm3, 0x50(%rsp)
1400096e3:     	movaps	%xmm2, 0x40(%rsp)
1400096e8:     	movaps	%xmm1, 0x30(%rsp)
1400096ed:     	movaps	%xmm0, 0x20(%rsp)
1400096f2:     	movq	(%r12), %rcx
1400096f6:     	leaq	0x20(%rsp), %rax
1400096fb:     	movq	%rax, 0xa8(%rsp)
140009703:     	leaq	0x1f36(%rip), %rax      # 0x14000b640 <.text+0xa640>
14000970a:     	movq	%rax, 0xb0(%rsp)
140009712:     	leaq	0x1184f(%rip), %rax     # 0x14001af68
140009719:     	movq	%rax, 0x70(%rsp)
14000971e:     	movq	$0x1, 0x78(%rsp)
140009727:     	movq	$0x0, 0x90(%rsp)
140009733:     	leaq	0xa8(%rsp), %rax
14000973b:     	movq	%rax, 0x80(%rsp)
140009743:     	movq	$0x1, 0x88(%rsp)
14000974f:     	leaq	0x70(%rsp), %rdx
140009754:     	callq	0x140015350 <.text+0x14350>
140009759:     	testb	%al, %al
14000975b:     	je	0x140009431 <.text+0x8431>
140009761:     	movb	$0x1, %al
140009763:     	addq	$0xf0, %rsp
14000976a:     	popq	%rbx
14000976b:     	popq	%rdi
14000976c:     	popq	%rsi
14000976d:     	popq	%r12
14000976f:     	popq	%r13
140009771:     	popq	%r14
140009773:     	popq	%r15
140009775:     	retq
140009776:     	int3
140009777:     	int3
140009778:     	int3
140009779:     	int3
14000977a:     	int3
14000977b:     	int3
14000977c:     	int3
14000977d:     	int3
14000977e:     	int3
14000977f:     	int3
140009780:     	pushq	%rsi
140009781:     	pushq	%rdi
140009782:     	subq	$0x28, %rsp
140009786:     	movq	%rdx, %rdi
140009789:     	movq	%rcx, %rsi
14000978c:     	movzbl	(%rcx), %ecx
14000978f:     	leal	-0x6(%rcx), %eax
140009792:     	movzbl	%al, %r8d
140009796:     	leaq	0x1(%r8), %rdx
14000979a:     	xorl	%eax, %eax
14000979c:     	cmpb	$0x4, %r8b
1400097a0:     	cmovaeq	%rax, %rdx
1400097a4:     	movzbl	(%rdi), %r8d
1400097a8:     	leal	-0x6(%r8), %r9d
1400097ac:     	movzbl	%r9b, %r10d
1400097b0:     	leaq	0x1(%r10), %r11
1400097b4:     	cmpb	$0x4, %r10b
1400097b8:     	cmovaeq	%rax, %r11
1400097bc:     	cmpq	%r11, %rdx
1400097bf:     	jne	0x140009837 <.text+0x8837>
1400097c1:     	movb	$0x1, %al
1400097c3:     	testq	%rdx, %rdx
1400097c6:     	je	0x1400097eb <.text+0x87eb>
1400097c8:     	cmpl	$0x4, %edx
1400097cb:     	jne	0x140009837 <.text+0x8837>
1400097cd:     	movq	0x10(%rsi), %r8
1400097d1:     	cmpq	0x10(%rdi), %r8
1400097d5:     	jne	0x140009835 <.text+0x8835>
1400097d7:     	movq	0x8(%rdi), %rdx
1400097db:     	movq	0x8(%rsi), %rcx
1400097df:     	callq	0x140018bfd <.text+0x17bfd>
1400097e4:     	testl	%eax, %eax
1400097e6:     	sete	%al
1400097e9:     	jmp	0x140009837 <.text+0x8837>
1400097eb:     	cmpb	$0x4, %r9b
1400097ef:     	jb	0x140009837 <.text+0x8837>
1400097f1:     	cmpb	%r8b, %cl
1400097f4:     	jne	0x140009835 <.text+0x8835>
1400097f6:     	leaq	0x13607(%rip), %rax     # 0x14001ce04
1400097fd:     	movslq	(%rax,%rcx,4), %rcx
140009801:     	addq	%rax, %rcx
140009804:     	jmpq	*%rcx
140009806:     	movq	0x10(%rsi), %r8
14000980a:     	cmpq	0x10(%rdi), %r8
14000980e:     	jne	0x140009835 <.text+0x8835>
140009810:     	movq	0x8(%rdi), %rdx
140009814:     	movq	0x8(%rsi), %rcx
140009818:     	callq	0x140018bfd <.text+0x17bfd>
14000981d:     	testl	%eax, %eax
14000981f:     	jne	0x140009835 <.text+0x8835>
140009821:     	movq	0x20(%rsi), %r8
140009825:     	cmpq	0x20(%rdi), %r8
140009829:     	jne	0x140009835 <.text+0x8835>
14000982b:     	movq	0x18(%rdi), %rdx
14000982f:     	movq	0x18(%rsi), %rcx
140009833:     	jmp	0x1400097df <.text+0x87df>
140009835:     	xorl	%eax, %eax
140009837:     	addq	$0x28, %rsp
14000983b:     	popq	%rdi
14000983c:     	popq	%rsi
14000983d:     	retq
14000983e:     	movzbl	0x1(%rsi), %eax
140009842:     	cmpb	0x1(%rdi), %al
140009845:     	sete	%al
140009848:     	jmp	0x140009837 <.text+0x8837>
14000984a:     	int3
14000984b:     	int3
14000984c:     	int3
14000984d:     	int3
14000984e:     	int3
14000984f:     	int3
140009850:     	pushq	%rsi
140009851:     	pushq	%rdi
140009852:     	subq	$0x38, %rsp
140009856:     	movq	%rcx, %rsi
140009859:     	movl	0x19ae1(%rip), %eax     # 0x140023340
14000985f:     	movq	%gs:0x58, %rcx
140009868:     	movq	(%rcx,%rax,8), %rax
14000986c:     	movzbl	0x58(%rax), %eax
140009873:     	testq	%rax, %rax
140009876:     	je	0x140009884 <.text+0x8884>
140009878:     	cmpl	$0x1, %eax
14000987b:     	je	0x1400098b1 <.text+0x88b1>
14000987d:     	xorl	%eax, %eax
14000987f:     	jmp	0x14000993e <.text+0x893e>
140009884:     	movl	0x19ab6(%rip), %eax     # 0x140023340
14000988a:     	movq	%gs:0x58, %rcx
140009893:     	movq	(%rcx,%rax,8), %rdi
140009897:     	leaq	0x48(%rdi), %rcx
14000989e:     	leaq	0xab(%rip), %rdx        # 0x140009950 <.text+0x8950>
1400098a5:     	callq	0x14000aa60 <.text+0x9a60>
1400098aa:     	movb	$0x1, 0x58(%rdi)
1400098b1:     	testq	%rsi, %rsi
1400098b4:     	je	0x1400098cb <.text+0x88cb>
1400098b6:     	movq	(%rsi), %rax
1400098b9:     	movq	$0x0, (%rsi)
1400098c0:     	testq	%rax, %rax
1400098c3:     	je	0x1400098cd <.text+0x88cd>
1400098c5:     	movq	0x8(%rsi), %rax
1400098c9:     	jmp	0x1400098cd <.text+0x88cd>
1400098cb:     	xorl	%eax, %eax
1400098cd:     	movl	0x19a6d(%rip), %ecx     # 0x140023340
1400098d3:     	movq	%gs:0x58, %rdx
1400098dc:     	movq	(%rdx,%rcx,8), %rdx
1400098e0:     	movq	0x48(%rdx), %r8
1400098e7:     	movq	0x50(%rdx), %rcx
1400098ee:     	movq	%r8, 0x28(%rsp)
1400098f3:     	movq	%rcx, 0x30(%rsp)
1400098f8:     	movq	$0x1, 0x48(%rdx)
140009903:     	movq	%rax, 0x50(%rdx)
14000990a:     	testq	%r8, %r8
14000990d:     	je	0x140009924 <.text+0x8924>
14000990f:     	testq	%rcx, %rcx
140009912:     	je	0x140009924 <.text+0x8924>
140009914:     	lock
140009915:     	decq	(%rcx)
140009918:     	jne	0x140009924 <.text+0x8924>
14000991a:     	leaq	0x30(%rsp), %rcx
14000991f:     	callq	0x140002870 <.text+0x1870>
140009924:     	movl	0x19a16(%rip), %eax     # 0x140023340
14000992a:     	movq	%gs:0x58, %rcx
140009933:     	movq	(%rcx,%rax,8), %rax
140009937:     	leaq	0x50(%rax), %rax
14000993e:     	addq	$0x38, %rsp
140009942:     	popq	%rdi
140009943:     	popq	%rsi
140009944:     	retq
140009945:     	int3
140009946:     	int3
140009947:     	int3
140009948:     	int3
140009949:     	int3
14000994a:     	int3
14000994b:     	int3
14000994c:     	int3
14000994d:     	int3
14000994e:     	int3
14000994f:     	int3
140009950:     	subq	$0x38, %rsp
140009954:     	movq	(%rcx), %rdx
140009957:     	movq	0x8(%rcx), %rax
14000995b:     	movq	$0x0, (%rcx)
140009962:     	movb	$0x2, 0x10(%rcx)
140009966:     	movq	%rdx, 0x28(%rsp)
14000996b:     	movq	%rax, 0x30(%rsp)
140009970:     	testq	%rdx, %rdx
140009973:     	je	0x14000998a <.text+0x898a>
140009975:     	testq	%rax, %rax
140009978:     	je	0x14000998a <.text+0x898a>
14000997a:     	lock
14000997b:     	decq	(%rax)
14000997e:     	jne	0x14000998a <.text+0x898a>
140009980:     	leaq	0x30(%rsp), %rcx
140009985:     	callq	0x140002870 <.text+0x1870>
14000998a:     	nop
14000998b:     	addq	$0x38, %rsp
14000998f:     	retq
140009990:     	pushq	%rsi
140009991:     	pushq	%rdi
140009992:     	subq	$0x28, %rsp
140009996:     	leaq	0x127ab(%rip), %rcx     # 0x14001c148
14000999d:     	callq	*0x10715(%rip)          # 0x14001a0b8
1400099a3:     	testq	%rax, %rax
1400099a6:     	je	0x1400099e6 <.text+0x89e6>
1400099a8:     	movq	%rax, %rsi
1400099ab:     	leaq	0x127b3(%rip), %rdx     # 0x14001c165
1400099b2:     	movq	%rax, %rcx
1400099b5:     	callq	*0x1075d(%rip)          # 0x14001a118
1400099bb:     	testq	%rax, %rax
1400099be:     	je	0x1400099e6 <.text+0x89e6>
1400099c0:     	movq	%rax, %rdi
1400099c3:     	leaq	0x127a9(%rip), %rdx     # 0x14001c173
1400099ca:     	movq	%rsi, %rcx
1400099cd:     	callq	*0x10745(%rip)          # 0x14001a118
1400099d3:     	testq	%rax, %rax
1400099d6:     	je	0x1400099e6 <.text+0x89e6>
1400099d8:     	movq	%rdi, 0x19901(%rip)     # 0x1400232e0
1400099df:     	movq	%rax, 0x19902(%rip)     # 0x1400232e8
1400099e6:     	addq	$0x28, %rsp
1400099ea:     	popq	%rdi
1400099eb:     	popq	%rsi
1400099ec:     	retq
1400099ed:     	int3
1400099ee:     	int3
1400099ef:     	int3
1400099f0:     	pushq	%rsi
1400099f1:     	pushq	%rdi
1400099f2:     	subq	$0xa8, %rsp
1400099f9:     	movq	%rdx, %rdi
1400099fc:     	movq	%rcx, %rsi
1400099ff:     	movq	0xe0(%rsp), %rcx
140009a07:     	movups	0x1277a(%rip), %xmm0    # 0x14001c188
140009a0e:     	movaps	%xmm0, 0x60(%rsp)
140009a13:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
140009a18:     	cmpq	%rax, %r9
140009a1b:     	cmovbq	%r9, %rax
140009a1f:     	testq	%rcx, %rcx
140009a22:     	je	0x140009a34 <.text+0x8a34>
140009a24:     	movq	0xe8(%rsp), %rdx
140009a2c:     	movq	%rdx, 0x80(%rsp)
140009a34:     	testq	%rcx, %rcx
140009a37:     	movq	%rcx, 0x78(%rsp)
140009a3c:     	leaq	0x80(%rsp), %rdx
140009a44:     	cmoveq	%rcx, %rdx
140009a48:     	movq	%rdx, 0x38(%rsp)
140009a4d:     	movl	%eax, 0x30(%rsp)
140009a51:     	movq	%r8, 0x28(%rsp)
140009a56:     	leaq	0x60(%rsp), %rax
140009a5b:     	movq	%rax, 0x20(%rsp)
140009a60:     	movq	$0x0, 0x40(%rsp)
140009a69:     	movq	%rdi, %rcx
140009a6c:     	xorl	%edx, %edx
140009a6e:     	xorl	%r8d, %r8d
140009a71:     	xorl	%r9d, %r9d
140009a74:     	callq	*0x10826(%rip)          # 0x14001a2a0
140009a7a:     	cmpl	$0x103, %eax            # imm = 0x103
140009a7f:     	jne	0x140009a9a <.text+0x8a9a>
140009a81:     	movq	%rdi, %rcx
140009a84:     	movl	$0xffffffff, %edx       # imm = 0xFFFFFFFF
140009a89:     	callq	*0x10589(%rip)          # 0x14001a018
140009a8f:     	movl	0x60(%rsp), %eax
140009a93:     	cmpl	$0x103, %eax            # imm = 0x103
140009a98:     	je	0x140009ad1 <.text+0x8ad1>
140009a9a:     	testl	%eax, %eax
140009a9c:     	js	0x140009aab <.text+0x8aab>
140009a9e:     	movq	0x68(%rsp), %rax
140009aa3:     	movq	%rax, 0x8(%rsi)
140009aa7:     	xorl	%eax, %eax
140009aa9:     	jmp	0x140009ac4 <.text+0x8ac4>
140009aab:     	movl	%eax, %ecx
140009aad:     	callq	*0x107e5(%rip)          # 0x14001a298
140009ab3:     	shlq	$0x20, %rax
140009ab7:     	orq	$0x2, %rax
140009abb:     	movq	%rax, 0x8(%rsi)
140009abf:     	movl	$0x1, %eax
140009ac4:     	movq	%rax, (%rsi)
140009ac7:     	addq	$0xa8, %rsp
140009ace:     	popq	%rdi
140009acf:     	popq	%rsi
140009ad0:     	retq
140009ad1:     	movl	$0x0, 0x58(%rsp)
140009ad9:     	movb	$0x0, 0x5c(%rsp)
140009ade:     	leaq	0x12703(%rip), %rax     # 0x14001c1e8
140009ae5:     	movq	%rax, 0x78(%rsp)
140009aea:     	movq	$0x1, 0x80(%rsp)
140009af6:     	leaq	0x50(%rsp), %rax
140009afb:     	movq	%rax, 0x88(%rsp)
140009b03:     	xorps	%xmm0, %xmm0
140009b06:     	movups	%xmm0, 0x90(%rsp)
140009b0e:     	leaq	0x58(%rsp), %rcx
140009b13:     	leaq	0x78(%rsp), %rdx
140009b18:     	callq	0x140005690 <.text+0x4690>
140009b1d:     	movq	%rax, 0x70(%rsp)
140009b22:     	leaq	0x70(%rsp), %rcx
140009b27:     	callq	0x140001da0 <.text+0xda0>
140009b2c:     	movl	$0x7, %ecx
140009b31:     	int	$0x29
140009b33:     	ud2
140009b35:     	int3
140009b36:     	int3
140009b37:     	int3
140009b38:     	int3
140009b39:     	int3
140009b3a:     	int3
140009b3b:     	int3
140009b3c:     	int3
140009b3d:     	int3
140009b3e:     	int3
140009b3f:     	int3
140009b40:     	pushq	%rbp
140009b41:     	pushq	%r15
140009b43:     	pushq	%r14
140009b45:     	pushq	%rsi
140009b46:     	pushq	%rdi
140009b47:     	pushq	%rbx
140009b48:     	movl	$0x10d8, %eax           # imm = 0x10D8
140009b4d:     	callq	0x1400183a0 <.text+0x173a0>
140009b52:     	subq	%rax, %rsp
140009b55:     	leaq	0x80(%rsp), %rbp
140009b5d:     	movq	$-0x2, 0x1050(%rbp)
140009b68:     	movl	%edx, %edi
140009b6a:     	movq	%rcx, %rsi
140009b6d:     	movl	%edx, 0x104c(%rbp)
140009b73:     	xorl	%r14d, %r14d
140009b76:     	leaq	-0x40(%rbp), %rbx
140009b7a:     	movl	$0x1000, %r8d           # imm = 0x1000
140009b80:     	movq	%rbx, %rcx
140009b83:     	xorl	%edx, %edx
140009b85:     	callq	0x140018bf1 <.text+0x17bf1>
140009b8a:     	movl	$0x1200, %r15d          # imm = 0x1200
140009b90:     	testl	$0x10000000, %edi       # imm = 0x10000000
140009b96:     	je	0x140009bc4 <.text+0x8bc4>
140009b98:     	leaq	0x12659(%rip), %rcx     # 0x14001c1f8
140009b9f:     	callq	*0x10523(%rip)          # 0x14001a0c8
140009ba5:     	testq	%rax, %rax
140009ba8:     	je	0x140009bc1 <.text+0x8bc1>
140009baa:     	movq	%rax, %r14
140009bad:     	xorl	$0x10000000, %edi       # imm = 0x10000000
140009bb3:     	movl	%edi, 0x104c(%rbp)
140009bb9:     	movl	$0x1a00, %r15d          # imm = 0x1A00
140009bbf:     	jmp	0x140009bc4 <.text+0x8bc4>
140009bc1:     	xorl	%r14d, %r14d
140009bc4:     	movq	%rbx, 0x20(%rsp)
140009bc9:     	movq	$0x0, 0x30(%rsp)
140009bd2:     	movl	$0x800, 0x28(%rsp)      # imm = 0x800
140009bda:     	movl	%r15d, %ecx
140009bdd:     	movq	%r14, %rdx
140009be0:     	movl	%edi, %r8d
140009be3:     	xorl	%r9d, %r9d
140009be6:     	callq	*0x104e4(%rip)          # 0x14001a0d0
140009bec:     	testl	%eax, %eax
140009bee:     	je	0x140009c45 <.text+0x8c45>
140009bf0:     	movl	%eax, %r8d
140009bf3:     	cmpl	$0x801, %eax            # imm = 0x801
140009bf8:     	jae	0x140009ede <.text+0x8ede>
140009bfe:     	leaq	0x1018(%rbp), %rcx
140009c05:     	leaq	-0x40(%rbp), %rdx
140009c09:     	callq	0x1400137a0 <.text+0x127a0>
140009c0e:     	movq	0x1018(%rbp), %rbx
140009c15:     	testq	%rbx, %rbx
140009c18:     	je	0x140009ce6 <.text+0x8ce6>
140009c1e:     	movq	0x1020(%rbp), %r14
140009c25:     	movq	0x1028(%rbp), %rcx
140009c2c:     	testq	%rcx, %rcx
140009c2f:     	je	0x140009e89 <.text+0x8e89>
140009c35:     	leaq	(%rbx,%rcx), %r8
140009c39:     	movq	0x19468(%rip), %rdx     # 0x1400230a8
140009c40:     	jmp	0x140009d89 <.text+0x8d89>
140009c45:     	callq	*0x103b5(%rip)          # 0x14001a000
140009c4b:     	movl	%eax, 0x1030(%rbp)
140009c51:     	leaq	0x104c(%rbp), %rax
140009c58:     	movq	%rax, 0xff0(%rbp)
140009c5f:     	leaq	0xdf4a(%rip), %rax      # 0x140017bb0 <.text+0x16bb0>
140009c66:     	movq	%rax, 0xff8(%rbp)
140009c6d:     	leaq	0x1030(%rbp), %rcx
140009c74:     	movq	%rcx, 0x1000(%rbp)
140009c7b:     	movq	%rax, 0x1008(%rbp)
140009c82:     	leaq	0x125af(%rip), %rax     # 0x14001c238
140009c89:     	movq	%rax, 0xfc0(%rbp)
140009c90:     	movq	$0x3, 0xfc8(%rbp)
140009c9b:     	movq	$0x0, 0xfe0(%rbp)
140009ca6:     	leaq	0xff0(%rbp), %rax
140009cad:     	movq	%rax, 0xfd0(%rbp)
140009cb4:     	movq	$0x2, 0xfd8(%rbp)
140009cbf:     	leaq	0x1018(%rbp), %rcx
140009cc6:     	leaq	0xfc0(%rbp), %rdx
140009ccd:     	callq	0x1400135f0 <.text+0x125f0>
140009cd2:     	movq	0x1028(%rbp), %rax
140009cd9:     	movq	%rax, 0x10(%rsi)
140009cdd:     	movups	0x1018(%rbp), %xmm0
140009ce4:     	jmp	0x140009d64 <.text+0x8d64>
140009ce6:     	leaq	0x104c(%rbp), %rax
140009ced:     	movq	%rax, 0x1030(%rbp)
140009cf4:     	leaq	0xdeb5(%rip), %rax      # 0x140017bb0 <.text+0x16bb0>
140009cfb:     	movq	%rax, 0x1038(%rbp)
140009d02:     	leaq	0x125cf(%rip), %rax     # 0x14001c2d8
140009d09:     	movq	%rax, 0xfc0(%rbp)
140009d10:     	movq	$0x2, 0xfc8(%rbp)
140009d1b:     	movq	$0x0, 0xfe0(%rbp)
140009d26:     	leaq	0x1030(%rbp), %rax
140009d2d:     	movq	%rax, 0xfd0(%rbp)
140009d34:     	movq	$0x1, 0xfd8(%rbp)
140009d3f:     	leaq	0xff0(%rbp), %rcx
140009d46:     	leaq	0xfc0(%rbp), %rdx
140009d4d:     	callq	0x1400135f0 <.text+0x125f0>
140009d52:     	movq	0x1000(%rbp), %rax
140009d59:     	movq	%rax, 0x10(%rsi)
140009d5d:     	movups	0xff0(%rbp), %xmm0
140009d64:     	movups	%xmm0, (%rsi)
140009d67:     	jmp	0x140009e96 <.text+0x8e96>
140009d6c:     	movzbl	%r9b, %r9d
140009d70:     	testb	$0x1, (%rdx,%r9)
140009d75:     	je	0x140009e7c <.text+0x8e7c>
140009d7b:     	nopl	(%rax,%rax)
140009d80:     	cmpq	%rbx, %r8
140009d83:     	je	0x140009e89 <.text+0x8e89>
140009d89:     	movq	%r8, %rax
140009d8c:     	movzbl	-0x1(%r8), %r9d
140009d91:     	testb	%r9b, %r9b
140009d94:     	js	0x140009da0 <.text+0x8da0>
140009d96:     	leaq	-0x1(%rax), %r8
140009d9a:     	movzbl	%r9b, %r9d
140009d9e:     	jmp	0x140009e06 <.text+0x8e06>
140009da0:     	movzbl	-0x2(%rax), %r10d
140009da5:     	cmpb	$-0x40, %r10b
140009da9:     	jge	0x140009dcd <.text+0x8dcd>
140009dab:     	movzbl	-0x3(%rax), %r11d
140009db0:     	cmpb	$-0x40, %r11b
140009db4:     	jge	0x140009dd7 <.text+0x8dd7>
140009db6:     	leaq	-0x4(%rax), %r8
140009dba:     	movzbl	-0x4(%rax), %edi
140009dbe:     	andl	$0x7, %edi
140009dc1:     	shll	$0x6, %edi
140009dc4:     	andl	$0x3f, %r11d
140009dc8:     	orl	%edi, %r11d
140009dcb:     	jmp	0x140009ddf <.text+0x8ddf>
140009dcd:     	leaq	-0x2(%rax), %r8
140009dd1:     	andl	$0x1f, %r10d
140009dd5:     	jmp	0x140009dea <.text+0x8dea>
140009dd7:     	leaq	-0x3(%rax), %r8
140009ddb:     	andl	$0xf, %r11d
140009ddf:     	shll	$0x6, %r11d
140009de3:     	andl	$0x3f, %r10d
140009de7:     	orl	%r11d, %r10d
140009dea:     	shll	$0x6, %r10d
140009dee:     	andb	$0x3f, %r9b
140009df2:     	movzbl	%r9b, %r9d
140009df6:     	orl	%r10d, %r9d
140009df9:     	cmpl	$0x110000, %r9d         # imm = 0x110000
140009e00:     	je	0x140009e89 <.text+0x8e89>
140009e06:     	leal	-0x9(%r9), %r10d
140009e0a:     	cmpl	$0x5, %r10d
140009e0e:     	jb	0x140009d80 <.text+0x8d80>
140009e14:     	cmpl	$0x20, %r9d
140009e18:     	je	0x140009d80 <.text+0x8d80>
140009e1e:     	cmpl	$0x80, %r9d
140009e25:     	jb	0x140009e7c <.text+0x8e7c>
140009e27:     	movl	%r9d, %r10d
140009e2a:     	shrl	$0x8, %r10d
140009e2e:     	cmpl	$0x1f, %r10d
140009e32:     	jg	0x140009e52 <.text+0x8e52>
140009e34:     	testl	%r10d, %r10d
140009e37:     	je	0x140009d6c <.text+0x8d6c>
140009e3d:     	cmpl	$0x16, %r10d
140009e41:     	jne	0x140009e7c <.text+0x8e7c>
140009e43:     	cmpl	$0x1680, %r9d           # imm = 0x1680
140009e4a:     	je	0x140009d80 <.text+0x8d80>
140009e50:     	jmp	0x140009e7c <.text+0x8e7c>
140009e52:     	cmpl	$0x20, %r10d
140009e56:     	je	0x140009e6d <.text+0x8e6d>
140009e58:     	cmpl	$0x30, %r10d
140009e5c:     	jne	0x140009e7c <.text+0x8e7c>
140009e5e:     	cmpl	$0x3000, %r9d           # imm = 0x3000
140009e65:     	je	0x140009d80 <.text+0x8d80>
140009e6b:     	jmp	0x140009e7c <.text+0x8e7c>
140009e6d:     	movzbl	%r9b, %r9d
140009e71:     	testb	$0x2, (%rdx,%r9)
140009e76:     	jne	0x140009d80 <.text+0x8d80>
140009e7c:     	subq	%rbx, %rax
140009e7f:     	cmpq	%rax, %rcx
140009e82:     	jae	0x140009ea6 <.text+0x8ea6>
140009e84:     	movq	%rcx, %rax
140009e87:     	jmp	0x140009e8b <.text+0x8e8b>
140009e89:     	xorl	%eax, %eax
140009e8b:     	movq	%rbx, (%rsi)
140009e8e:     	movq	%r14, 0x8(%rsi)
140009e92:     	movq	%rax, 0x10(%rsi)
140009e96:     	addq	$0x10d8, %rsp           # imm = 0x10D8
140009e9d:     	popq	%rbx
140009e9e:     	popq	%rdi
140009e9f:     	popq	%rsi
140009ea0:     	popq	%r14
140009ea2:     	popq	%r15
140009ea4:     	popq	%rbp
140009ea5:     	retq
140009ea6:     	testq	%rax, %rax
140009ea9:     	je	0x140009e8b <.text+0x8e8b>
140009eab:     	cmpq	%rax, %rcx
140009eae:     	jbe	0x140009e8b <.text+0x8e8b>
140009eb0:     	cmpb	$-0x41, (%rbx,%rax)
140009eb4:     	jg	0x140009e8b <.text+0x8e8b>
140009eb6:     	movq	%r14, 0x1040(%rbp)
140009ebd:     	movq	%rbx, 0x1010(%rbp)
140009ec4:     	leaq	0x10b85(%rip), %rcx     # 0x14001aa50
140009ecb:     	leaq	0x10bfe(%rip), %r8      # 0x14001aad0
140009ed2:     	movl	$0x30, %edx
140009ed7:     	callq	0x140019880 <.text+0x18880>
140009edc:     	ud2
140009ede:     	leaq	0x123ab(%rip), %rax     # 0x14001c290
140009ee5:     	movl	$0x800, %edx            # imm = 0x800
140009eea:     	movq	%r8, %rcx
140009eed:     	movq	%rax, %r8
140009ef0:     	callq	0x140019cd0 <.text+0x18cd0>
140009ef5:     	ud2
140009ef7:     	nopw	(%rax,%rax)
140009f00:     	movq	%rdx, 0x10(%rsp)
140009f05:     	pushq	%rbp
140009f06:     	pushq	%r15
140009f08:     	pushq	%r14
140009f0a:     	pushq	%rsi
140009f0b:     	pushq	%rdi
140009f0c:     	pushq	%rbx
140009f0d:     	subq	$0x38, %rsp
140009f11:     	leaq	0x80(%rdx), %rbp
140009f18:     	cmpq	$0x0, 0x1040(%rbp)
140009f20:     	je	0x140009f3b <.text+0x8f3b>
140009f22:     	movl	$0x1, %r8d
140009f28:     	movq	0x1010(%rbp), %rcx
140009f2f:     	movq	0x1040(%rbp), %rdx
140009f36:     	callq	0x140001350 <.text+0x350>
140009f3b:     	nop
140009f3c:     	addq	$0x38, %rsp
140009f40:     	popq	%rbx
140009f41:     	popq	%rdi
140009f42:     	popq	%rsi
140009f43:     	popq	%r14
140009f45:     	popq	%r15
140009f47:     	popq	%rbp
140009f48:     	retq
140009f49:     	int3
140009f4a:     	int3
140009f4b:     	int3
140009f4c:     	int3
140009f4d:     	int3
140009f4e:     	int3
140009f4f:     	int3
140009f50:     	pushq	%r14
140009f52:     	pushq	%rsi
140009f53:     	pushq	%rdi
140009f54:     	pushq	%rbp
140009f55:     	pushq	%rbx
140009f56:     	subq	$0x20, %rsp
140009f5a:     	testq	%r8, %r8
140009f5d:     	je	0x140009f8b <.text+0x8f8b>
140009f5f:     	movzbl	(%rdx), %esi
140009f62:     	cmpb	$0x2f, %sil
140009f66:     	movl	$0x5c, %edi
140009f6b:     	cmovel	%edi, %esi
140009f6e:     	cmpq	$0x1, %r8
140009f72:     	jne	0x140009fa4 <.text+0x8fa4>
140009f74:     	xorl	%r10d, %r10d
140009f77:     	xorl	%ebp, %ebp
140009f79:     	xorl	%r11d, %r11d
140009f7c:     	xorl	%r9d, %r9d
140009f7f:     	xorl	%r14d, %r14d
140009f82:     	xorl	%ebx, %ebx
140009f84:     	xorl	%edi, %edi
140009f86:     	jmp	0x14000a074 <.text+0x9074>
140009f8b:     	xorl	%r10d, %r10d
140009f8e:     	xorl	%ebp, %ebp
140009f90:     	xorl	%r11d, %r11d
140009f93:     	xorl	%r9d, %r9d
140009f96:     	xorl	%r14d, %r14d
140009f99:     	xorl	%ebx, %ebx
140009f9b:     	xorl	%edi, %edi
140009f9d:     	xorl	%esi, %esi
140009f9f:     	jmp	0x14000a074 <.text+0x9074>
140009fa4:     	movzbl	0x1(%rdx), %eax
140009fa8:     	cmpb	$0x2f, %al
140009faa:     	cmovnel	%eax, %edi
140009fad:     	cmpq	$0x2, %r8
140009fb1:     	jne	0x140009fc8 <.text+0x8fc8>
140009fb3:     	xorl	%r10d, %r10d
140009fb6:     	xorl	%ebp, %ebp
140009fb8:     	xorl	%r11d, %r11d
140009fbb:     	xorl	%r9d, %r9d
140009fbe:     	xorl	%r14d, %r14d
140009fc1:     	xorl	%ebx, %ebx
140009fc3:     	jmp	0x14000a074 <.text+0x9074>
140009fc8:     	movzbl	0x2(%rdx), %ebx
140009fcc:     	cmpb	$0x2f, %bl
140009fcf:     	movl	$0x5c, %r14d
140009fd5:     	cmovel	%r14d, %ebx
140009fd9:     	cmpq	$0x3, %r8
140009fdd:     	jne	0x140009ff2 <.text+0x8ff2>
140009fdf:     	xorl	%r10d, %r10d
140009fe2:     	xorl	%ebp, %ebp
140009fe4:     	xorl	%r11d, %r11d
140009fe7:     	xorl	%r9d, %r9d
140009fea:     	xorl	%r14d, %r14d
140009fed:     	jmp	0x14000a074 <.text+0x9074>
140009ff2:     	movzbl	0x3(%rdx), %eax
140009ff6:     	cmpb	$0x2f, %al
140009ff8:     	cmovnel	%eax, %r14d
140009ffc:     	cmpq	$0x4, %r8
14000a000:     	jne	0x14000a00f <.text+0x900f>
14000a002:     	xorl	%r10d, %r10d
14000a005:     	xorl	%ebp, %ebp
14000a007:     	xorl	%r11d, %r11d
14000a00a:     	xorl	%r9d, %r9d
14000a00d:     	jmp	0x14000a074 <.text+0x9074>
14000a00f:     	movzbl	0x4(%rdx), %r9d
14000a014:     	cmpb	$0x2f, %r9b
14000a018:     	movl	$0x5c, %r11d
14000a01e:     	cmovel	%r11d, %r9d
14000a022:     	cmpq	$0x5, %r8
14000a026:     	jne	0x14000a032 <.text+0x9032>
14000a028:     	xorl	%r10d, %r10d
14000a02b:     	xorl	%ebp, %ebp
14000a02d:     	xorl	%r11d, %r11d
14000a030:     	jmp	0x14000a074 <.text+0x9074>
14000a032:     	movzbl	0x5(%rdx), %eax
14000a036:     	cmpb	$0x2f, %al
14000a038:     	cmovnel	%eax, %r11d
14000a03c:     	cmpq	$0x6, %r8
14000a040:     	jne	0x14000a049 <.text+0x9049>
14000a042:     	xorl	%r10d, %r10d
14000a045:     	xorl	%ebp, %ebp
14000a047:     	jmp	0x14000a074 <.text+0x9074>
14000a049:     	movzbl	0x6(%rdx), %ebp
14000a04d:     	cmpb	$0x2f, %bpl
14000a051:     	movl	$0x5c, %r10d
14000a057:     	cmovel	%r10d, %ebp
14000a05b:     	cmpq	$0x7, %r8
14000a05f:     	jne	0x14000a066 <.text+0x9066>
14000a061:     	xorl	%r10d, %r10d
14000a064:     	jmp	0x14000a074 <.text+0x9074>
14000a066:     	movzbl	0x7(%rdx), %eax
14000a06a:     	cmpb	$0x2f, %al
14000a06c:     	cmovnel	%eax, %r10d
14000a070:     	shlq	$0x38, %r10
14000a074:     	cmpq	$0x8, %r8
14000a078:     	movl	$0x8, %eax
14000a07d:     	cmovbq	%r8, %rax
14000a081:     	cmpq	$0x2, %rax
14000a085:     	jb	0x14000a0fa <.text+0x90fa>
14000a087:     	movzbl	%dil, %edi
14000a08b:     	shlq	$0x8, %rdi
14000a08f:     	movzbl	%sil, %esi
14000a093:     	orq	%rdi, %rsi
14000a096:     	cmpl	$0x5c5c, %esi           # imm = 0x5C5C
14000a09c:     	jne	0x14000a0fa <.text+0x90fa>
14000a09e:     	movl	%eax, %esi
14000a0a0:     	andl	$0xe, %esi
14000a0a3:     	cmpl	$0x2, %esi
14000a0a6:     	je	0x14000a137 <.text+0x9137>
14000a0ac:     	movzbl	%r14b, %esi
14000a0b0:     	shll	$0x8, %esi
14000a0b3:     	movzbl	%bl, %edi
14000a0b6:     	orl	%esi, %edi
14000a0b8:     	movzwl	%di, %esi
14000a0bb:     	cmpl	$0x5c2e, %esi           # imm = 0x5C2E
14000a0c1:     	je	0x14000a1f4 <.text+0x91f4>
14000a0c7:     	cmpl	$0x5c3f, %esi           # imm = 0x5C3F
14000a0cd:     	jne	0x14000a137 <.text+0x9137>
14000a0cf:     	cmpq	$0x3, %r8
14000a0d3:     	jbe	0x14000a3af <.text+0x93af>
14000a0d9:     	cmpb	$0x2f, (%rdx)
14000a0dc:     	je	0x14000a0f4 <.text+0x90f4>
14000a0de:     	cmpb	$0x2f, 0x1(%rdx)
14000a0e2:     	je	0x14000a0f4 <.text+0x90f4>
14000a0e4:     	cmpb	$0x2f, 0x2(%rdx)
14000a0e8:     	je	0x14000a0f4 <.text+0x90f4>
14000a0ea:     	cmpb	$0x2f, 0x3(%rdx)
14000a0ee:     	jne	0x14000a239 <.text+0x9239>
14000a0f4:     	leaq	-0x2(%r8), %r10
14000a0f8:     	jmp	0x14000a144 <.text+0x9144>
14000a0fa:     	cmpq	$0x2, %r8
14000a0fe:     	jb	0x14000a1e3 <.text+0x91e3>
14000a104:     	cmpb	$0x3a, 0x1(%rdx)
14000a108:     	jne	0x14000a1e3 <.text+0x91e3>
14000a10e:     	movzbl	(%rdx), %eax
14000a111:     	movl	%eax, %edx
14000a113:     	andb	$-0x21, %dl
14000a116:     	addb	$-0x41, %dl
14000a119:     	cmpb	$0x1a, %dl
14000a11c:     	jae	0x14000a1e3 <.text+0x91e3>
14000a122:     	cmpb	$0x61, %al
14000a124:     	setae	%dl
14000a127:     	shlb	$0x5, %dl
14000a12a:     	xorb	%al, %dl
14000a12c:     	movb	$0x5, (%rcx)
14000a12f:     	movb	%dl, 0x1(%rcx)
14000a132:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a137:     	movq	%r8, %r10
14000a13a:     	addq	$-0x2, %r10
14000a13e:     	je	0x14000a1e3 <.text+0x91e3>
14000a144:     	leaq	0x2(%rdx), %rax
14000a148:     	movq	%r8, %r11
14000a14b:     	negq	%r11
14000a14e:     	xorl	%r9d, %r9d
14000a151:     	nopw	%cs:(%rax,%rax)
14000a160:     	movzbl	0x2(%rdx,%r9), %esi
14000a166:     	cmpl	$0x2f, %esi
14000a169:     	je	0x14000a182 <.text+0x9182>
14000a16b:     	cmpl	$0x5c, %esi
14000a16e:     	je	0x14000a182 <.text+0x9182>
14000a170:     	leaq	(%r11,%r9), %rsi
14000a174:     	incq	%rsi
14000a177:     	incq	%r9
14000a17a:     	cmpq	$-0x2, %rsi
14000a17e:     	jne	0x14000a160 <.text+0x9160>
14000a180:     	jmp	0x14000a1e3 <.text+0x91e3>
14000a182:     	decq	%r10
14000a185:     	subq	%r9, %r10
14000a188:     	je	0x14000a1e3 <.text+0x91e3>
14000a18a:     	leaq	(%rdx,%r9), %r11
14000a18e:     	addq	$0x3, %r11
14000a192:     	movq	%r9, %rsi
14000a195:     	subq	%r8, %rsi
14000a198:     	xorl	%r8d, %r8d
14000a19b:     	nopl	(%rax,%rax)
14000a1a0:     	leaq	(%rdx,%r8), %rdi
14000a1a4:     	movzbl	0x3(%r9,%rdi), %edi
14000a1aa:     	cmpl	$0x2f, %edi
14000a1ad:     	je	0x14000a1c4 <.text+0x91c4>
14000a1af:     	cmpl	$0x5c, %edi
14000a1b2:     	je	0x14000a1c4 <.text+0x91c4>
14000a1b4:     	leaq	(%rsi,%r8), %rdi
14000a1b8:     	incq	%r8
14000a1bb:     	cmpq	$-0x4, %rdi
14000a1bf:     	jne	0x14000a1a0 <.text+0x91a0>
14000a1c1:     	movq	%r10, %r8
14000a1c4:     	testq	%r9, %r9
14000a1c7:     	je	0x14000a1e3 <.text+0x91e3>
14000a1c9:     	testq	%r8, %r8
14000a1cc:     	je	0x14000a1e3 <.text+0x91e3>
14000a1ce:     	movb	$0x4, (%rcx)
14000a1d1:     	movq	%rax, 0x8(%rcx)
14000a1d5:     	movq	%r9, 0x10(%rcx)
14000a1d9:     	movq	%r11, 0x18(%rcx)
14000a1dd:     	movq	%r8, 0x20(%rcx)
14000a1e1:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a1e3:     	movb	$0x6, (%rcx)
14000a1e6:     	movq	%rcx, %rax
14000a1e9:     	addq	$0x20, %rsp
14000a1ed:     	popq	%rbx
14000a1ee:     	popq	%rbp
14000a1ef:     	popq	%rdi
14000a1f0:     	popq	%rsi
14000a1f1:     	popq	%r14
14000a1f3:     	retq
14000a1f4:     	cmpq	$0x3, %r8
14000a1f8:     	jbe	0x14000a3c8 <.text+0x93c8>
14000a1fe:     	addq	$0x4, %rdx
14000a202:     	xorl	%eax, %eax
14000a204:     	addq	$-0x4, %r8
14000a208:     	je	0x14000a22c <.text+0x922c>
14000a20a:     	nopw	(%rax,%rax)
14000a210:     	movzbl	(%rdx,%rax), %r9d
14000a215:     	cmpl	$0x2f, %r9d
14000a219:     	je	0x14000a22c <.text+0x922c>
14000a21b:     	cmpl	$0x5c, %r9d
14000a21f:     	je	0x14000a22c <.text+0x922c>
14000a221:     	incq	%rax
14000a224:     	cmpq	%rax, %r8
14000a227:     	jne	0x14000a210 <.text+0x9210>
14000a229:     	movq	%r8, %rax
14000a22c:     	movb	$0x3, (%rcx)
14000a22f:     	movq	%rdx, 0x8(%rcx)
14000a233:     	movq	%rax, 0x10(%rcx)
14000a237:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a239:     	cmpq	$0x4, %rax
14000a23d:     	jb	0x14000a3e1 <.text+0x93e1>
14000a243:     	andl	$0xc, %eax
14000a246:     	cmpl	$0x4, %eax
14000a249:     	je	0x14000a2c8 <.text+0x92c8>
14000a24b:     	movzbl	%bpl, %eax
14000a24f:     	shlq	$0x30, %rax
14000a253:     	orq	%r10, %rax
14000a256:     	movzbl	%r11b, %r10d
14000a25a:     	shlq	$0x28, %r10
14000a25e:     	movzbl	%r9b, %r9d
14000a262:     	shlq	$0x20, %r9
14000a266:     	orq	%r10, %r9
14000a269:     	orq	%rax, %r9
14000a26c:     	movabsq	$0x5c434e5500000000, %rax # imm = 0x5C434E5500000000
14000a276:     	cmpq	%rax, %r9
14000a279:     	jne	0x14000a2c8 <.text+0x92c8>
14000a27b:     	cmpq	$0x7, %r8
14000a27f:     	jbe	0x14000a3f7 <.text+0x93f7>
14000a285:     	leaq	0x8(%rdx), %rax
14000a289:     	movq	%r8, %r11
14000a28c:     	leaq	0x1040d(%rip), %r9      # 0x14001a6a0
14000a293:     	addq	$-0x8, %r11
14000a297:     	je	0x14000a33b <.text+0x933b>
14000a29d:     	movq	%r8, %rdi
14000a2a0:     	negq	%rdi
14000a2a3:     	xorl	%r10d, %r10d
14000a2a6:     	xorl	%esi, %esi
14000a2a8:     	cmpb	$0x5c, 0x8(%rdx,%rsi)
14000a2ad:     	je	0x14000a356 <.text+0x9356>
14000a2b3:     	leaq	(%rdi,%rsi), %rbx
14000a2b7:     	incq	%rbx
14000a2ba:     	incq	%rsi
14000a2bd:     	cmpq	$-0x8, %rbx
14000a2c1:     	jne	0x14000a2a8 <.text+0x92a8>
14000a2c3:     	jmp	0x14000a397 <.text+0x9397>
14000a2c8:     	leaq	0x4(%rdx), %rax
14000a2cc:     	leaq	-0x4(%r8), %r9
14000a2d0:     	cmpq	$0x3, %r9
14000a2d4:     	jae	0x14000a2e4 <.text+0x92e4>
14000a2d6:     	cmpq	$0x4, %r8
14000a2da:     	je	0x14000a346 <.text+0x9346>
14000a2dc:     	cmpq	$0x6, %r8
14000a2e0:     	je	0x14000a2f5 <.text+0x92f5>
14000a2e2:     	jmp	0x14000a325 <.text+0x9325>
14000a2e4:     	movzbl	0x6(%rdx), %r10d
14000a2e9:     	cmpl	$0x2f, %r10d
14000a2ed:     	je	0x14000a2f5 <.text+0x92f5>
14000a2ef:     	cmpl	$0x5c, %r10d
14000a2f3:     	jne	0x14000a325 <.text+0x9325>
14000a2f5:     	cmpb	$0x3a, 0x5(%rdx)
14000a2f9:     	jne	0x14000a325 <.text+0x9325>
14000a2fb:     	movzbl	(%rax), %edx
14000a2fe:     	movl	%edx, %r10d
14000a301:     	andb	$-0x21, %r10b
14000a305:     	addb	$-0x41, %r10b
14000a309:     	cmpb	$0x19, %r10b
14000a30d:     	ja	0x14000a325 <.text+0x9325>
14000a30f:     	cmpb	$0x61, %dl
14000a312:     	setae	%al
14000a315:     	shlb	$0x5, %al
14000a318:     	xorb	%dl, %al
14000a31a:     	movb	$0x2, (%rcx)
14000a31d:     	movb	%al, 0x1(%rcx)
14000a320:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a325:     	addq	$-0x4, %r8
14000a329:     	xorl	%edx, %edx
14000a32b:     	cmpb	$0x5c, (%rax,%rdx)
14000a32f:     	je	0x14000a343 <.text+0x9343>
14000a331:     	incq	%rdx
14000a334:     	cmpq	%rdx, %r8
14000a337:     	jne	0x14000a32b <.text+0x932b>
14000a339:     	jmp	0x14000a346 <.text+0x9346>
14000a33b:     	xorl	%r11d, %r11d
14000a33e:     	xorl	%r10d, %r10d
14000a341:     	jmp	0x14000a397 <.text+0x9397>
14000a343:     	movq	%rdx, %r9
14000a346:     	movb	$0x0, (%rcx)
14000a349:     	movq	%rax, 0x8(%rcx)
14000a34d:     	movq	%r9, 0x10(%rcx)
14000a351:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a356:     	leaq	-0x9(%r8), %rdi
14000a35a:     	leaq	(%rdx,%rsi), %r9
14000a35e:     	addq	$0x9, %r9
14000a362:     	subq	%rsi, %rdi
14000a365:     	jne	0x14000a36f <.text+0x936f>
14000a367:     	xorl	%r10d, %r10d
14000a36a:     	movq	%rsi, %r11
14000a36d:     	jmp	0x14000a397 <.text+0x9397>
14000a36f:     	movq	%rsi, %r11
14000a372:     	subq	%r8, %r11
14000a375:     	xorl	%r10d, %r10d
14000a378:     	leaq	(%rdx,%r10), %r8
14000a37c:     	cmpb	$0x5c, 0x9(%rsi,%r8)
14000a382:     	je	0x14000a36a <.text+0x936a>
14000a384:     	leaq	(%r11,%r10), %r8
14000a388:     	incq	%r10
14000a38b:     	cmpq	$-0xa, %r8
14000a38f:     	jne	0x14000a378 <.text+0x9378>
14000a391:     	movq	%rsi, %r11
14000a394:     	movq	%rdi, %r10
14000a397:     	movb	$0x1, (%rcx)
14000a39a:     	movq	%rax, 0x8(%rcx)
14000a39e:     	movq	%r11, 0x10(%rcx)
14000a3a2:     	movq	%r9, 0x18(%rcx)
14000a3a6:     	movq	%r10, 0x20(%rcx)
14000a3aa:     	jmp	0x14000a1e6 <.text+0x91e6>
14000a3af:     	leaq	0x11f82(%rip), %rax     # 0x14001c338
14000a3b6:     	movl	$0x4, %ecx
14000a3bb:     	movq	%r8, %rdx
14000a3be:     	movq	%rax, %r8
14000a3c1:     	callq	0x140019cd0 <.text+0x18cd0>
14000a3c6:     	ud2
14000a3c8:     	leaq	0x11f81(%rip), %rax     # 0x14001c350
14000a3cf:     	movl	$0x4, %ecx
14000a3d4:     	movq	%r8, %rdx
14000a3d7:     	movq	%rax, %r8
14000a3da:     	callq	0x140019c50 <.text+0x18c50>
14000a3df:     	ud2
14000a3e1:     	leaq	0x11f38(%rip), %r8      # 0x14001c320
14000a3e8:     	movl	$0x4, %ecx
14000a3ed:     	movq	%rax, %rdx
14000a3f0:     	callq	0x140019c50 <.text+0x18c50>
14000a3f5:     	ud2
14000a3f7:     	leaq	0x11f52(%rip), %rax     # 0x14001c350
14000a3fe:     	movl	$0x8, %ecx
14000a403:     	movq	%r8, %rdx
14000a406:     	movq	%rax, %r8
14000a409:     	callq	0x140019c50 <.text+0x18c50>
14000a40e:     	ud2
14000a410:     	pushq	%rbp
14000a411:     	pushq	%r15
14000a413:     	pushq	%r14
14000a415:     	pushq	%rsi
14000a416:     	pushq	%rdi
14000a417:     	pushq	%rbx
14000a418:     	subq	$0xa8, %rsp
14000a41f:     	leaq	0x80(%rsp), %rbp
14000a427:     	movq	$-0x2, 0x20(%rbp)
14000a42f:     	movq	%rcx, %rsi
14000a432:     	testq	%r9, %r9
14000a435:     	je	0x14000a466 <.text+0x9466>
14000a437:     	movq	%r9, %rdi
14000a43a:     	movq	%r8, %r14
14000a43d:     	movl	%edx, %ecx
14000a43f:     	callq	*0xfc23(%rip)           # 0x14001a068
14000a445:     	testq	%rax, %rax
14000a448:     	je	0x14000a471 <.text+0x9471>
14000a44a:     	movq	%rax, %r15
14000a44d:     	cmpq	$-0x1, %rax
14000a451:     	jne	0x14000a480 <.text+0x9480>
14000a453:     	callq	*0xfba7(%rip)           # 0x14001a000
14000a459:     	shlq	$0x20, %rax
14000a45d:     	orq	$0x2, %rax
14000a461:     	jmp	0x14000a5ca <.text+0x95ca>
14000a466:     	xorps	%xmm0, %xmm0
14000a469:     	movups	%xmm0, (%rsi)
14000a46c:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a471:     	movabsq	$0x600000002, %rax      # imm = 0x600000002
14000a47b:     	jmp	0x14000a5ca <.text+0x95ca>
14000a480:     	movl	$0x0, -0x30(%rbp)
14000a487:     	leaq	-0x30(%rbp), %rdx
14000a48b:     	movq	%r15, %rcx
14000a48e:     	callq	*0xfc2c(%rip)           # 0x14001a0c0
14000a494:     	testl	%eax, %eax
14000a496:     	je	0x14000a501 <.text+0x9501>
14000a498:     	movq	0x80(%rbp), %rbx
14000a49f:     	movzbl	0x4(%rbx), %eax
14000a4a3:     	testq	%rax, %rax
14000a4a6:     	je	0x14000a52c <.text+0x952c>
14000a4ac:     	cmpb	$0x4, %al
14000a4ae:     	jae	0x14000a686 <.text+0x9686>
14000a4b4:     	movzbl	(%r14), %ecx
14000a4b8:     	movl	%ecx, %edx
14000a4ba:     	andb	$-0x40, %dl
14000a4bd:     	cmpb	$-0x80, %dl
14000a4c0:     	jne	0x14000a59b <.text+0x959b>
14000a4c6:     	movb	%cl, (%rbx,%rax)
14000a4c9:     	movzbl	0x4(%rbx), %eax
14000a4cd:     	incb	%al
14000a4cf:     	movb	%al, 0x4(%rbx)
14000a4d2:     	movzbl	(%rbx), %ecx
14000a4d5:     	leaq	0x11ef8(%rip), %rdx     # 0x14001c3d4
14000a4dc:     	movzbl	(%rcx,%rdx), %edi
14000a4e0:     	movq	%rdi, -0x40(%rbp)
14000a4e4:     	cmpb	%dil, %al
14000a4e7:     	jae	0x14000a5a1 <.text+0x95a1>
14000a4ed:     	movq	$0x1, 0x8(%rsi)
14000a4f5:     	movq	$0x0, (%rsi)
14000a4fc:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a501:     	movq	$0x0, 0x20(%rsp)
14000a50a:     	leaq	-0x30(%rbp), %rcx
14000a50e:     	movq	%r15, %rdx
14000a511:     	movq	%r14, %r8
14000a514:     	movq	%rdi, %r9
14000a517:     	movq	%r15, -0x38(%rbp)
14000a51b:     	callq	0x1400099f0 <.text+0x89f0>
14000a520:     	movups	-0x30(%rbp), %xmm0
14000a524:     	movups	%xmm0, (%rsi)
14000a527:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a52c:     	cmpq	$0x1000, %rdi           # imm = 0x1000
14000a533:     	movl	$0x1000, %r8d           # imm = 0x1000
14000a539:     	cmovbq	%rdi, %r8
14000a53d:     	movq	%rbp, %rcx
14000a540:     	movq	%r14, %rdx
14000a543:     	callq	0x140016080 <.text+0x15080>
14000a548:     	cmpq	$0x0, (%rbp)
14000a54d:     	je	0x14000a5e5 <.text+0x95e5>
14000a553:     	movq	0x8(%rbp), %rdx
14000a557:     	testq	%rdx, %rdx
14000a55a:     	je	0x14000a5fa <.text+0x95fa>
14000a560:     	leaq	0x11fd9(%rip), %rax     # 0x14001c540
14000a567:     	movq	%rax, 0x20(%rsp)
14000a56c:     	xorl	%ecx, %ecx
14000a56e:     	movq	%r14, %r8
14000a571:     	movq	%rdi, %r9
14000a574:     	callq	0x140001380 <.text+0x380>
14000a579:     	movq	%rdx, %r8
14000a57c:     	leaq	-0x30(%rbp), %rdi
14000a580:     	movq	%rdi, %rcx
14000a583:     	movq	%rax, %rdx
14000a586:     	callq	0x140016080 <.text+0x15080>
14000a58b:     	movq	%rdi, %rcx
14000a58e:     	callq	0x140002110 <.text+0x1110>
14000a593:     	movq	%rax, %r8
14000a596:     	movq	%rdx, %r9
14000a599:     	jmp	0x14000a5ed <.text+0x95ed>
14000a59b:     	movb	$0x0, 0x4(%rbx)
14000a59f:     	jmp	0x14000a5c3 <.text+0x95c3>
14000a5a1:     	movzbl	%al, %r8d
14000a5a5:     	cmpb	$0x5, %al
14000a5a7:     	jae	0x14000a6bd <.text+0x96bd>
14000a5ad:     	movq	%rbp, %rcx
14000a5b0:     	movq	%rbx, %rdx
14000a5b3:     	callq	0x140016080 <.text+0x15080>
14000a5b8:     	movb	$0x0, 0x4(%rbx)
14000a5bc:     	cmpq	$0x0, (%rbp)
14000a5c1:     	je	0x14000a61c <.text+0x961c>
14000a5c3:     	leaq	0x11f5e(%rip), %rax     # 0x14001c528
14000a5ca:     	movq	%rax, 0x8(%rsi)
14000a5ce:     	movq	$0x1, (%rsi)
14000a5d5:     	addq	$0xa8, %rsp
14000a5dc:     	popq	%rbx
14000a5dd:     	popq	%rdi
14000a5de:     	popq	%rsi
14000a5df:     	popq	%r14
14000a5e1:     	popq	%r15
14000a5e3:     	popq	%rbp
14000a5e4:     	retq
14000a5e5:     	movq	0x8(%rbp), %r8
14000a5e9:     	movq	0x10(%rbp), %r9
14000a5ed:     	movq	%rsi, %rcx
14000a5f0:     	movq	%r15, %rdx
14000a5f3:     	callq	0x14000a750 <.text+0x9750>
14000a5f8:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a5fa:     	movzbl	(%r14), %eax
14000a5fe:     	leaq	0x11dcf(%rip), %rcx     # 0x14001c3d4
14000a605:     	movzbl	(%rax,%rcx), %ecx
14000a609:     	cmpq	$0x2, %rcx
14000a60d:     	jb	0x14000a66e <.text+0x966e>
14000a60f:     	cmpq	%rdi, %rcx
14000a612:     	jbe	0x14000a66e <.text+0x966e>
14000a614:     	movb	%al, (%rbx)
14000a616:     	movb	$0x1, 0x4(%rbx)
14000a61a:     	jmp	0x14000a65c <.text+0x965c>
14000a61c:     	movq	0x8(%rbp), %r8
14000a620:     	movq	0x10(%rbp), %rax
14000a624:     	movq	%rax, 0x18(%rbp)
14000a628:     	cmpq	%rdi, %rax
14000a62b:     	jne	0x14000a6d6 <.text+0x96d6>
14000a631:     	leaq	-0x30(%rbp), %rcx
14000a635:     	movq	%r15, %rdx
14000a638:     	movq	%rdi, %r9
14000a63b:     	callq	0x14000a750 <.text+0x9750>
14000a640:     	cmpq	$0x0, -0x30(%rbp)
14000a645:     	movq	-0x28(%rbp), %rax
14000a649:     	jne	0x14000a675 <.text+0x9675>
14000a64b:     	movq	%rax, -0x48(%rbp)
14000a64f:     	movq	%rdi, 0x18(%rbp)
14000a653:     	cmpq	%rdi, %rax
14000a656:     	jne	0x14000a6f8 <.text+0x96f8>
14000a65c:     	movq	$0x1, 0x8(%rsi)
14000a664:     	xorl	%eax, %eax
14000a666:     	movq	%rax, (%rsi)
14000a669:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a66e:     	leaq	0x11eb3(%rip), %rax     # 0x14001c528
14000a675:     	movq	%rax, 0x8(%rsi)
14000a679:     	movl	$0x1, %eax
14000a67e:     	movq	%rax, (%rsi)
14000a681:     	jmp	0x14000a5d5 <.text+0x95d5>
14000a686:     	leaq	0x11f23(%rip), %rax     # 0x14001c5b0
14000a68d:     	movq	%rax, -0x30(%rbp)
14000a691:     	movq	$0x1, -0x28(%rbp)
14000a699:     	leaq	0x10000(%rip), %rax     # 0x14001a6a0
14000a6a0:     	movq	%rax, -0x20(%rbp)
14000a6a4:     	xorps	%xmm0, %xmm0
14000a6a7:     	movups	%xmm0, -0x18(%rbp)
14000a6ab:     	leaq	0x11f0e(%rip), %rdx     # 0x14001c5c0
14000a6b2:     	leaq	-0x30(%rbp), %rcx
14000a6b6:     	callq	0x1400197d0 <.text+0x187d0>
14000a6bb:     	ud2
14000a6bd:     	leaq	0x11f14(%rip), %rax     # 0x14001c5d8
14000a6c4:     	movl	$0x4, %edx
14000a6c9:     	movq	%r8, %rcx
14000a6cc:     	movq	%rax, %r8
14000a6cf:     	callq	0x140019cd0 <.text+0x18cd0>
14000a6d4:     	ud2
14000a6d6:     	movq	$0x0, -0x30(%rbp)
14000a6de:     	leaq	0x11f0b(%rip), %r9      # 0x14001c5f0
14000a6e5:     	leaq	-0x40(%rbp), %rcx
14000a6e9:     	leaq	0x18(%rbp), %rdx
14000a6ed:     	leaq	-0x30(%rbp), %r8
14000a6f1:     	callq	0x140018e20 <.text+0x17e20>
14000a6f6:     	ud2
14000a6f8:     	movq	$0x0, -0x30(%rbp)
14000a700:     	leaq	0x11f01(%rip), %r9      # 0x14001c608
14000a707:     	leaq	-0x48(%rbp), %rcx
14000a70b:     	leaq	0x18(%rbp), %rdx
14000a70f:     	leaq	-0x30(%rbp), %r8
14000a713:     	callq	0x140018e20 <.text+0x17e20>
14000a718:     	ud2
14000a71a:     	nopw	(%rax,%rax)
14000a720:     	movq	%rdx, 0x10(%rsp)
14000a725:     	pushq	%rbp
14000a726:     	pushq	%r15
14000a728:     	pushq	%r14
14000a72a:     	pushq	%rsi
14000a72b:     	pushq	%rdi
14000a72c:     	pushq	%rbx
14000a72d:     	subq	$0x38, %rsp
14000a731:     	leaq	0x80(%rdx), %rbp
14000a738:     	movq	-0x38(%rbp), %rcx
14000a73c:     	callq	*0xf9de(%rip)           # 0x14001a120
14000a742:     	nop
14000a743:     	addq	$0x38, %rsp
14000a747:     	popq	%rbx
14000a748:     	popq	%rdi
14000a749:     	popq	%rsi
14000a74a:     	popq	%r14
14000a74c:     	popq	%r15
14000a74e:     	popq	%rbp
14000a74f:     	retq
14000a750:     	pushq	%r15
14000a752:     	pushq	%r14
14000a754:     	pushq	%rsi
14000a755:     	pushq	%rdi
14000a756:     	pushq	%rbx
14000a757:     	movl	$0x2070, %eax           # imm = 0x2070
14000a75c:     	callq	0x1400183a0 <.text+0x173a0>
14000a761:     	subq	%rax, %rsp
14000a764:     	movq	%r9, %rdi
14000a767:     	movq	%rdx, %r15
14000a76a:     	movq	%rcx, %rsi
14000a76d:     	cmpq	$0x1001, %r9            # imm = 0x1001
14000a774:     	jb	0x14000a7a9 <.text+0x97a9>
14000a776:     	movl	$0x1000, %edi           # imm = 0x1000
14000a77b:     	cmpb	$-0x41, 0x1000(%r8)
14000a783:     	jg	0x14000a7a9 <.text+0x97a9>
14000a785:     	movl	$0xfff, %edi            # imm = 0xFFF
14000a78a:     	cmpb	$-0x41, 0xfff(%r8)
14000a792:     	jg	0x14000a7a9 <.text+0x97a9>
14000a794:     	xorl	%edi, %edi
14000a796:     	cmpb	$-0x40, 0xffe(%r8)
14000a79e:     	setge	%dil
14000a7a2:     	addq	$0xffd, %rdi            # imm = 0xFFD
14000a7a9:     	leaq	0x70(%rsp), %rax
14000a7ae:     	movq	%rax, 0x20(%rsp)
14000a7b3:     	movl	$0x1000, 0x28(%rsp)     # imm = 0x1000
14000a7bb:     	movl	$0xfde9, %ecx           # imm = 0xFDE9
14000a7c0:     	movl	$0x8, %edx
14000a7c5:     	movl	%edi, %r9d
14000a7c8:     	callq	*0xf90a(%rip)           # 0x14001a0d8
14000a7ce:     	testl	%eax, %eax
14000a7d0:     	je	0x14000a949 <.text+0x9949>
14000a7d6:     	movslq	%eax, %r14
14000a7d9:     	cmpl	$0x1001, %eax           # imm = 0x1001
14000a7de:     	jae	0x14000a985 <.text+0x9985>
14000a7e4:     	movl	$0x0, 0x40(%rsp)
14000a7ec:     	movq	$0x0, 0x20(%rsp)
14000a7f5:     	leaq	0x70(%rsp), %rdx
14000a7fa:     	leaq	0x40(%rsp), %r9
14000a7ff:     	movq	%r15, %rcx
14000a802:     	movl	%eax, %r8d
14000a805:     	callq	*0xf8d5(%rip)           # 0x14001a0e0
14000a80b:     	testl	%eax, %eax
14000a80d:     	je	0x14000a8fe <.text+0x98fe>
14000a813:     	movl	0x40(%rsp), %ebx
14000a817:     	cmpq	%r14, %rbx
14000a81a:     	je	0x14000a91b <.text+0x991b>
14000a820:     	jae	0x14000a935 <.text+0x9935>
14000a826:     	movzwl	0x70(%rsp,%rbx,2), %eax
14000a82b:     	addl	$0x2312, %eax           # imm = 0x2312
14000a830:     	movzwl	%ax, %eax
14000a833:     	cmpl	$0x312, %eax            # imm = 0x312
14000a838:     	jae	0x14000a894 <.text+0x9894>
14000a83a:     	leaq	(%rsp,%rbx,2), %rdx
14000a83e:     	addq	$0x70, %rdx
14000a842:     	incq	%rbx
14000a845:     	movl	$0x0, 0x3c(%rsp)
14000a84d:     	movq	$0x0, 0x20(%rsp)
14000a856:     	leaq	0x3c(%rsp), %r9
14000a85b:     	movq	%r15, %rcx
14000a85e:     	movl	$0x1, %r8d
14000a864:     	callq	*0xf876(%rip)           # 0x14001a0e0
14000a86a:     	testl	%eax, %eax
14000a86c:     	jne	0x14000a894 <.text+0x9894>
14000a86e:     	callq	*0xf78c(%rip)           # 0x14001a000
14000a874:     	shlq	$0x20, %rax
14000a878:     	orq	$0x2, %rax
14000a87c:     	leaq	0x48(%rsp), %rcx
14000a881:     	movq	%rax, 0x48(%rsp)
14000a886:     	movq	$0x1, 0x40(%rsp)
14000a88f:     	callq	0x140001c00 <.text+0xc00>
14000a894:     	cmpq	%r14, %rbx
14000a897:     	ja	0x14000a99b <.text+0x999b>
14000a89d:     	testq	%rbx, %rbx
14000a8a0:     	je	0x14000a919 <.text+0x9919>
14000a8a2:     	addq	%rbx, %rbx
14000a8a5:     	xorl	%eax, %eax
14000a8a7:     	xorl	%edi, %edi
14000a8a9:     	jmp	0x14000a8bc <.text+0x98bc>
14000a8ab:     	nopl	(%rax,%rax)
14000a8b0:     	addq	%rdx, %rdi
14000a8b3:     	addq	$0x2, %rax
14000a8b7:     	cmpq	%rax, %rbx
14000a8ba:     	je	0x14000a91b <.text+0x991b>
14000a8bc:     	movzwl	0x70(%rsp,%rax), %ecx
14000a8c1:     	movl	$0x1, %edx
14000a8c6:     	cmpl	$0x80, %ecx
14000a8cc:     	jb	0x14000a8b0 <.text+0x98b0>
14000a8ce:     	movzwl	%cx, %r8d
14000a8d2:     	movl	$0x2, %edx
14000a8d7:     	cmpl	$0x800, %r8d            # imm = 0x800
14000a8de:     	jb	0x14000a8b0 <.text+0x98b0>
14000a8e0:     	addl	$0x2312, %ecx           # imm = 0x2312
14000a8e6:     	movzwl	%cx, %ecx
14000a8e9:     	xorl	%edx, %edx
14000a8eb:     	cmpl	$0x312, %ecx            # imm = 0x312
14000a8f1:     	setae	%dl
14000a8f4:     	leaq	0x1(,%rdx,2), %rdx
14000a8fc:     	jmp	0x14000a8b0 <.text+0x98b0>
14000a8fe:     	callq	*0xf6fc(%rip)           # 0x14001a000
14000a904:     	shlq	$0x20, %rax
14000a908:     	orq	$0x2, %rax
14000a90c:     	movq	%rax, 0x8(%rsi)
14000a910:     	movq	$0x1, (%rsi)
14000a917:     	jmp	0x14000a926 <.text+0x9926>
14000a919:     	xorl	%edi, %edi
14000a91b:     	movq	%rdi, 0x8(%rsi)
14000a91f:     	movq	$0x0, (%rsi)
14000a926:     	addq	$0x2070, %rsp           # imm = 0x2070
14000a92d:     	popq	%rbx
14000a92e:     	popq	%rdi
14000a92f:     	popq	%rsi
14000a930:     	popq	%r14
14000a932:     	popq	%r15
14000a934:     	retq
14000a935:     	leaq	0x11d4c(%rip), %r8      # 0x14001c688
14000a93c:     	movq	%rbx, %rcx
14000a93f:     	movq	%r14, %rdx
14000a942:     	callq	0x140019920 <.text+0x18920>
14000a947:     	ud2
14000a949:     	leaq	0x11cf8(%rip), %rax     # 0x14001c648
14000a950:     	movq	%rax, 0x40(%rsp)
14000a955:     	movq	$0x1, 0x48(%rsp)
14000a95e:     	leaq	0xfd3b(%rip), %rax      # 0x14001a6a0
14000a965:     	movq	%rax, 0x50(%rsp)
14000a96a:     	xorps	%xmm0, %xmm0
14000a96d:     	movups	%xmm0, 0x58(%rsp)
14000a972:     	leaq	0x11cdf(%rip), %rdx     # 0x14001c658
14000a979:     	leaq	0x40(%rsp), %rcx
14000a97e:     	callq	0x1400197d0 <.text+0x187d0>
14000a983:     	ud2
14000a985:     	leaq	0x11ce4(%rip), %r8      # 0x14001c670
14000a98c:     	movl	$0x1000, %edx           # imm = 0x1000
14000a991:     	movq	%r14, %rcx
14000a994:     	callq	0x140019cd0 <.text+0x18cd0>
14000a999:     	ud2
14000a99b:     	leaq	0x11cfe(%rip), %r8      # 0x14001c6a0
14000a9a2:     	movq	%rbx, %rcx
14000a9a5:     	movq	%r14, %rdx
14000a9a8:     	callq	0x140019cd0 <.text+0x18cd0>
14000a9ad:     	ud2
14000a9af:     	int3
14000a9b0:     	pushq	%rsi
14000a9b1:     	subq	$0x30, %rsp
14000a9b5:     	movq	%rcx, %rsi
14000a9b8:     	movq	%rdx, 0x20(%rsp)
14000a9bd:     	movl	$0xfffffff4, %edx       # imm = 0xFFFFFFF4
14000a9c2:     	callq	0x14000a410 <.text+0x9410>
14000a9c7:     	movq	%rsi, %rax
14000a9ca:     	addq	$0x30, %rsp
14000a9ce:     	popq	%rsi
14000a9cf:     	retq
14000a9d0:     	pushq	%rsi
14000a9d1:     	pushq	%rdi
14000a9d2:     	subq	$0x58, %rsp
14000a9d6:     	movq	%rdx, %r8
14000a9d9:     	movq	%rcx, %rdx
14000a9dc:     	leaq	0x28(%rsp), %rcx
14000a9e1:     	callq	0x140014080 <.text+0x13080>
14000a9e6:     	cmpq	$0x0, 0x28(%rsp)
14000a9ec:     	je	0x14000a9f5 <.text+0x99f5>
14000a9ee:     	addq	$0x58, %rsp
14000a9f2:     	popq	%rdi
14000a9f3:     	popq	%rsi
14000a9f4:     	retq
14000a9f5:     	movq	0x30(%rsp), %rdx
14000a9fa:     	movq	0x38(%rsp), %r8
14000a9ff:     	leaq	0x40(%rsp), %rcx
14000aa04:     	callq	0x14000ad60 <.text+0x9d60>
14000aa09:     	movq	0x40(%rsp), %rsi
14000aa0e:     	testq	%rsi, %rsi
14000aa11:     	je	0x14000aa49 <.text+0x9a49>
14000aa13:     	movq	0x48(%rsp), %rdi
14000aa18:     	callq	*0xf6ca(%rip)           # 0x14001a0e8
14000aa1e:     	movq	0x18613(%rip), %r8      # 0x140023038
14000aa25:     	movq	%rax, %rcx
14000aa28:     	movq	%rsi, %rdx
14000aa2b:     	callq	*%r8
14000aa2e:     	testq	%rdi, %rdi
14000aa31:     	je	0x14000a9ee <.text+0x99ee>
14000aa33:     	addq	%rdi, %rdi
14000aa36:     	movl	$0x2, %r8d
14000aa3c:     	movq	%rsi, %rcx
14000aa3f:     	movq	%rdi, %rdx
14000aa42:     	callq	0x140001350 <.text+0x350>
14000aa47:     	jmp	0x14000a9ee <.text+0x99ee>
14000aa49:     	leaq	0x48(%rsp), %rcx
14000aa4e:     	callq	0x140001c00 <.text+0xc00>
14000aa53:     	jmp	0x14000a9ee <.text+0x99ee>
14000aa55:     	int3
14000aa56:     	int3
14000aa57:     	int3
14000aa58:     	int3
14000aa59:     	int3
14000aa5a:     	int3
14000aa5b:     	int3
14000aa5c:     	int3
14000aa5d:     	int3
14000aa5e:     	int3
14000aa5f:     	int3
14000aa60:     	pushq	%rbp
14000aa61:     	pushq	%rsi
14000aa62:     	pushq	%rdi
14000aa63:     	subq	$0x70, %rsp
14000aa67:     	leaq	0x70(%rsp), %rbp
14000aa6c:     	movq	$-0x2, -0x8(%rbp)
14000aa74:     	movq	%rcx, %rdi
14000aa77:     	movl	0x188c3(%rip), %eax     # 0x140023340
14000aa7d:     	movq	%gs:0x58, %rcx
14000aa86:     	movq	(%rcx,%rax,8), %rax
14000aa8a:     	cmpq	$0x0, 0x8(%rax)
14000aa92:     	jne	0x14000ab4c <.text+0x9b4c>
14000aa98:     	movq	%rdx, %rsi
14000aa9b:     	movl	0x1889f(%rip), %eax     # 0x140023340
14000aaa1:     	movq	%gs:0x58, %rcx
14000aaaa:     	movq	(%rcx,%rax,8), %rax
14000aaae:     	movq	$-0x1, 0x8(%rax)
14000aab9:     	movq	0x20(%rax), %rdx
14000aac0:     	cmpq	0x18(%rax), %rdx
14000aac7:     	jne	0x14000ab02 <.text+0x9b02>
14000aac9:     	movl	0x18871(%rip), %eax     # 0x140023340
14000aacf:     	movq	%gs:0x58, %rcx
14000aad8:     	movq	(%rcx,%rax,8), %rax
14000aadc:     	leaq	0x10(%rax), %rcx
14000aae3:     	callq	0x140002bc0 <.text+0x1bc0>
14000aae8:     	movl	0x18852(%rip), %eax     # 0x140023340
14000aaee:     	movq	%gs:0x58, %rcx
14000aaf7:     	movq	(%rcx,%rax,8), %rax
14000aafb:     	movq	0x20(%rax), %rdx
14000ab02:     	movl	0x18838(%rip), %eax     # 0x140023340
14000ab08:     	movq	%gs:0x58, %rcx
14000ab11:     	movq	(%rcx,%rax,8), %rax
14000ab15:     	movq	0x10(%rax), %rcx
14000ab1c:     	movq	%rdx, %r8
14000ab1f:     	shlq	$0x4, %r8
14000ab23:     	movq	%rdi, (%rcx,%r8)
14000ab27:     	movq	%rsi, 0x8(%rcx,%r8)
14000ab2c:     	incq	%rdx
14000ab2f:     	movq	%rdx, 0x20(%rax)
14000ab36:     	incq	0x8(%rax)
14000ab3d:     	movb	$0x1, 0x18794(%rip)     # 0x1400232d8
14000ab44:     	addq	$0x70, %rsp
14000ab48:     	popq	%rdi
14000ab49:     	popq	%rsi
14000ab4a:     	popq	%rbp
14000ab4b:     	retq
14000ab4c:     	movl	$0x0, -0x18(%rbp)
14000ab53:     	movb	$0x0, -0x14(%rbp)
14000ab57:     	leaq	0x11b92(%rip), %rax     # 0x14001c6f0
14000ab5e:     	movq	%rax, -0x50(%rbp)
14000ab62:     	movq	$0x1, -0x48(%rbp)
14000ab6a:     	leaq	-0x10(%rbp), %rax
14000ab6e:     	movq	%rax, -0x40(%rbp)
14000ab72:     	xorps	%xmm0, %xmm0
14000ab75:     	movups	%xmm0, -0x38(%rbp)
14000ab79:     	leaq	-0x18(%rbp), %rcx
14000ab7d:     	leaq	-0x50(%rbp), %rdx
14000ab81:     	callq	0x140005690 <.text+0x4690>
14000ab86:     	movq	%rax, -0x20(%rbp)
14000ab8a:     	leaq	-0x20(%rbp), %rcx
14000ab8e:     	callq	0x140001da0 <.text+0xda0>
14000ab93:     	movl	$0x7, %ecx
14000ab98:     	int	$0x29
14000ab9a:     	ud2
14000ab9c:     	nopl	(%rax)
14000aba0:     	movq	%rdx, 0x10(%rsp)
14000aba5:     	pushq	%rbp
14000aba6:     	pushq	%rsi
14000aba7:     	pushq	%rdi
14000aba8:     	subq	$0x20, %rsp
14000abac:     	leaq	0x70(%rdx), %rbp
14000abb0:     	movl	0x1878a(%rip), %eax     # 0x140023340
14000abb6:     	movq	%gs:0x58, %rcx
14000abbf:     	movq	(%rcx,%rax,8), %rax
14000abc3:     	incq	0x8(%rax)
14000abca:     	addq	$0x20, %rsp
14000abce:     	popq	%rdi
14000abcf:     	popq	%rsi
14000abd0:     	popq	%rbp
14000abd1:     	retq
14000abd2:     	int3
14000abd3:     	int3
14000abd4:     	int3
14000abd5:     	int3
14000abd6:     	int3
14000abd7:     	int3
14000abd8:     	int3
14000abd9:     	int3
14000abda:     	int3
14000abdb:     	int3
14000abdc:     	int3
14000abdd:     	int3
14000abde:     	int3
14000abdf:     	int3
14000abe0:     	pushq	%rsi
14000abe1:     	subq	$0x20, %rsp
14000abe5:     	movl	0x18755(%rip), %eax     # 0x140023340
14000abeb:     	movq	%gs:0x58, %rcx
14000abf4:     	movq	(%rcx,%rax,8), %rax
14000abf8:     	cmpq	$0x0, 0x8(%rax)
14000ac00:     	jne	0x14000ac82 <.text+0x9c82>
14000ac06:     	nopw	%cs:(%rax,%rax)
14000ac10:     	movl	0x1872a(%rip), %eax     # 0x140023340
14000ac16:     	movq	%gs:0x58, %rcx
14000ac1f:     	movq	(%rcx,%rax,8), %rax
14000ac23:     	movq	$-0x1, 0x8(%rax)
14000ac2e:     	movq	0x20(%rax), %rax
14000ac35:     	testq	%rax, %rax
14000ac38:     	je	0x14000ac90 <.text+0x9c90>
14000ac3a:     	decq	%rax
14000ac3d:     	movl	0x186fd(%rip), %ecx     # 0x140023340
14000ac43:     	movq	%gs:0x58, %rdx
14000ac4c:     	movq	(%rdx,%rcx,8), %rsi
14000ac50:     	movq	%rax, 0x20(%rsi)
14000ac57:     	movq	0x10(%rsi), %rdx
14000ac5e:     	shlq	$0x4, %rax
14000ac62:     	movq	(%rdx,%rax), %rcx
14000ac66:     	movq	0x8(%rdx,%rax), %rax
14000ac6b:     	movq	$0x0, 0x8(%rsi)
14000ac76:     	callq	*%rax
14000ac78:     	cmpq	$0x0, 0x8(%rsi)
14000ac80:     	je	0x14000ac10 <.text+0x9c10>
14000ac82:     	leaq	0x11aa7(%rip), %rcx     # 0x14001c730
14000ac89:     	callq	0x140019700 <.text+0x18700>
14000ac8e:     	ud2
14000ac90:     	movl	0x186aa(%rip), %eax     # 0x140023340
14000ac96:     	movq	%gs:0x58, %rcx
14000ac9f:     	movq	(%rcx,%rax,8), %rax
14000aca3:     	movq	0x10(%rax), %rcx
14000acaa:     	movq	0x18(%rax), %rdx
14000acb1:     	movq	$0x8, 0x10(%rax)
14000acbc:     	movq	$0x0, 0x8(%rax)
14000acc7:     	xorps	%xmm0, %xmm0
14000acca:     	movups	%xmm0, 0x18(%rax)
14000acd1:     	testq	%rdx, %rdx
14000acd4:     	je	0x14000acea <.text+0x9cea>
14000acd6:     	shlq	$0x4, %rdx
14000acda:     	movl	$0x8, %r8d
14000ace0:     	addq	$0x20, %rsp
14000ace4:     	popq	%rsi
14000ace5:     	jmp	0x140001350 <.text+0x350>
14000acea:     	nop
14000aceb:     	addq	$0x20, %rsp
14000acef:     	popq	%rsi
14000acf0:     	retq
14000acf1:     	int3
14000acf2:     	int3
14000acf3:     	int3
14000acf4:     	int3
14000acf5:     	int3
14000acf6:     	int3
14000acf7:     	int3
14000acf8:     	int3
14000acf9:     	int3
14000acfa:     	int3
14000acfb:     	int3
14000acfc:     	int3
14000acfd:     	int3
14000acfe:     	int3
14000acff:     	int3
14000ad00:     	pushq	%rbp
14000ad01:     	subq	$0x30, %rsp
14000ad05:     	leaq	0x30(%rsp), %rbp
14000ad0a:     	movq	$-0x2, -0x8(%rbp)
14000ad12:     	movzbl	0x185bf(%rip), %eax     # 0x1400232d8
14000ad19:     	testb	%al, %al
14000ad1b:     	je	0x14000ad32 <.text+0x9d32>
14000ad1d:     	testl	%edx, %edx
14000ad1f:     	je	0x14000ad26 <.text+0x9d26>
14000ad21:     	cmpl	$0x3, %edx
14000ad24:     	jne	0x14000ad2b <.text+0x9d2b>
14000ad26:     	callq	0x14000abe0 <.text+0x9be0>
14000ad2b:     	movzbl	0x1494e(%rip), %eax     # 0x14001f680
14000ad32:     	addq	$0x30, %rsp
14000ad36:     	popq	%rbp
14000ad37:     	retq
14000ad38:     	nopl	(%rax,%rax)
14000ad40:     	movq	%rdx, 0x10(%rsp)
14000ad45:     	pushq	%rbp
14000ad46:     	subq	$0x20, %rsp
14000ad4a:     	leaq	0x30(%rdx), %rbp
14000ad4e:     	callq	0x1400199a0 <.text+0x189a0>
14000ad53:     	ud2
14000ad55:     	int3
14000ad56:     	int3
14000ad57:     	int3
14000ad58:     	int3
14000ad59:     	int3
14000ad5a:     	int3
14000ad5b:     	int3
14000ad5c:     	int3
14000ad5d:     	int3
14000ad5e:     	int3
14000ad5f:     	int3
14000ad60:     	pushq	%rbp
14000ad61:     	pushq	%r15
14000ad63:     	pushq	%r14
14000ad65:     	pushq	%rsi
14000ad66:     	pushq	%rdi
14000ad67:     	pushq	%rbx
14000ad68:     	subq	$0x58, %rsp
14000ad6c:     	leaq	0x50(%rsp), %rbp
14000ad71:     	movq	$-0x2, (%rbp)
14000ad79:     	movq	%r8, %rdi
14000ad7c:     	movq	%rdx, %rbx
14000ad7f:     	movq	%rcx, %rsi
14000ad82:     	movq	%r8, %r15
14000ad85:     	movl	$0x2, %eax
14000ad8a:     	incq	%r15
14000ad8d:     	je	0x14000adc1 <.text+0x9dc1>
14000ad8f:     	movq	%r15, %rcx
14000ad92:     	shrq	$0x3e, %rcx
14000ad96:     	jne	0x14000aed8 <.text+0x9ed8>
14000ad9c:     	movq	%r15, %r14
14000ad9f:     	addq	%r15, %r14
14000ada2:     	je	0x14000adc1 <.text+0x9dc1>
14000ada4:     	movzbl	0x18456(%rip), %eax     # 0x140023201
14000adab:     	movl	$0x2, %edx
14000adb0:     	movq	%r14, %rcx
14000adb3:     	callq	0x140001340 <.text+0x340>
14000adb8:     	testq	%rax, %rax
14000adbb:     	je	0x14000aedf <.text+0x9edf>
14000adc1:     	movq	%rax, -0x18(%rbp)
14000adc5:     	movq	%r15, -0x10(%rbp)
14000adc9:     	movq	$0x0, -0x8(%rbp)
14000add1:     	addq	%rbx, %rdi
14000add4:     	movq	%rbx, -0x30(%rbp)
14000add8:     	movq	%rdi, -0x28(%rbp)
14000addc:     	movw	$0x0, -0x20(%rbp)
14000ade2:     	leaq	-0x18(%rbp), %rcx
14000ade6:     	leaq	-0x30(%rbp), %rdx
14000adea:     	callq	0x140002e50 <.text+0x1e50>
14000adef:     	movq	-0x18(%rbp), %rcx
14000adf3:     	movq	-0x8(%rbp), %rdx
14000adf7:     	movq	%rdx, %rax
14000adfa:     	movq	%rcx, %r8
14000adfd:     	cmpq	$0x8, %rdx
14000ae01:     	jb	0x14000ae56 <.text+0x9e56>
14000ae03:     	movq	%rcx, %r8
14000ae06:     	movq	%rdx, %rax
14000ae09:     	cmpw	$0x0, (%r8)
14000ae0e:     	je	0x14000ae71 <.text+0x9e71>
14000ae10:     	cmpw	$0x0, 0x2(%r8)
14000ae16:     	je	0x14000ae71 <.text+0x9e71>
14000ae18:     	cmpw	$0x0, 0x4(%r8)
14000ae1e:     	je	0x14000ae71 <.text+0x9e71>
14000ae20:     	cmpw	$0x0, 0x6(%r8)
14000ae26:     	je	0x14000ae71 <.text+0x9e71>
14000ae28:     	cmpw	$0x0, 0x8(%r8)
14000ae2e:     	je	0x14000ae71 <.text+0x9e71>
14000ae30:     	cmpw	$0x0, 0xa(%r8)
14000ae36:     	je	0x14000ae71 <.text+0x9e71>
14000ae38:     	cmpw	$0x0, 0xc(%r8)
14000ae3e:     	je	0x14000ae71 <.text+0x9e71>
14000ae40:     	cmpw	$0x0, 0xe(%r8)
14000ae46:     	je	0x14000ae71 <.text+0x9e71>
14000ae48:     	addq	$-0x8, %rax
14000ae4c:     	addq	$0x10, %r8
14000ae50:     	cmpq	$0x7, %rax
14000ae54:     	ja	0x14000ae09 <.text+0x9e09>
14000ae56:     	addq	%rax, %rax
14000ae59:     	xorl	%r9d, %r9d
14000ae5c:     	nopl	(%rax)
14000ae60:     	cmpq	%r9, %rax
14000ae63:     	je	0x14000ae9c <.text+0x9e9c>
14000ae65:     	cmpw	$0x0, (%r8,%r9)
14000ae6b:     	leaq	0x2(%r9), %r9
14000ae6f:     	jne	0x14000ae60 <.text+0x9e60>
14000ae71:     	leaq	0x11520(%rip), %rax     # 0x14001c398
14000ae78:     	movq	%rax, 0x8(%rsi)
14000ae7c:     	movq	$0x0, (%rsi)
14000ae83:     	movq	-0x10(%rbp), %rdx
14000ae87:     	testq	%rdx, %rdx
14000ae8a:     	je	0x14000aecb <.text+0x9ecb>
14000ae8c:     	addq	%rdx, %rdx
14000ae8f:     	movl	$0x2, %r8d
14000ae95:     	callq	0x140001350 <.text+0x350>
14000ae9a:     	jmp	0x14000aecb <.text+0x9ecb>
14000ae9c:     	cmpq	-0x10(%rbp), %rdx
14000aea0:     	jne	0x14000aeb3 <.text+0x9eb3>
14000aea2:     	leaq	-0x18(%rbp), %rcx
14000aea6:     	callq	0x140002b00 <.text+0x1b00>
14000aeab:     	movq	-0x18(%rbp), %rcx
14000aeaf:     	movq	-0x8(%rbp), %rdx
14000aeb3:     	movw	$0x0, (%rcx,%rdx,2)
14000aeb9:     	incq	%rdx
14000aebc:     	movq	%rdx, -0x8(%rbp)
14000aec0:     	movq	%rdx, 0x10(%rsi)
14000aec4:     	movups	-0x18(%rbp), %xmm0
14000aec8:     	movups	%xmm0, (%rsi)
14000aecb:     	addq	$0x58, %rsp
14000aecf:     	popq	%rbx
14000aed0:     	popq	%rdi
14000aed1:     	popq	%rsi
14000aed2:     	popq	%r14
14000aed4:     	popq	%r15
14000aed6:     	popq	%rbp
14000aed7:     	retq
14000aed8:     	callq	0x140013200 <.text+0x12200>
14000aedd:     	ud2
14000aedf:     	movl	$0x2, %ecx
14000aee4:     	movq	%r14, %rdx
14000aee7:     	callq	0x1400196e0 <.text+0x186e0>
14000aeec:     	ud2
14000aeee:     	nop
14000aef0:     	movq	%rdx, 0x10(%rsp)
14000aef5:     	pushq	%rbp
14000aef6:     	pushq	%r15
14000aef8:     	pushq	%r14
14000aefa:     	pushq	%rsi
14000aefb:     	pushq	%rdi
14000aefc:     	pushq	%rbx
14000aefd:     	subq	$0x28, %rsp
14000af01:     	leaq	0x50(%rdx), %rbp
14000af05:     	movq	-0x10(%rbp), %rdx
14000af09:     	testq	%rdx, %rdx
14000af0c:     	je	0x14000af20 <.text+0x9f20>
14000af0e:     	movq	-0x18(%rbp), %rcx
14000af12:     	addq	%rdx, %rdx
14000af15:     	movl	$0x2, %r8d
14000af1b:     	callq	0x140001350 <.text+0x350>
14000af20:     	nop
14000af21:     	addq	$0x28, %rsp
14000af25:     	popq	%rbx
14000af26:     	popq	%rdi
14000af27:     	popq	%rsi
14000af28:     	popq	%r14
14000af2a:     	popq	%r15
14000af2c:     	popq	%rbp
14000af2d:     	retq
14000af2e:     	int3
14000af2f:     	int3
14000af30:     	pushq	%rsi
14000af31:     	pushq	%rdi
14000af32:     	subq	$0x28, %rsp
14000af36:     	movq	%rdx, %rsi
14000af39:     	movq	%rcx, %rdi
14000af3c:     	leaq	0x118e5(%rip), %rcx     # 0x14001c828
14000af43:     	callq	*0xf16f(%rip)           # 0x14001a0b8
14000af49:     	testq	%rax, %rax
14000af4c:     	je	0x14000af63 <.text+0x9f63>
14000af4e:     	leaq	0x118dc(%rip), %rdx     # 0x14001c831
14000af55:     	movq	%rax, %rcx
14000af58:     	callq	*0xf1ba(%rip)           # 0x14001a118
14000af5e:     	testq	%rax, %rax
14000af61:     	jne	0x14000af6a <.text+0x9f6a>
14000af63:     	leaq	0x16(%rip), %rax        # 0x14000af80 <.text+0x9f80>
14000af6a:     	movq	%rax, 0x180c7(%rip)     # 0x140023038
14000af71:     	movq	%rdi, %rcx
14000af74:     	movq	%rsi, %rdx
14000af77:     	addq	$0x28, %rsp
14000af7b:     	popq	%rdi
14000af7c:     	popq	%rsi
14000af7d:     	jmpq	*%rax
14000af80:     	subq	$0x28, %rsp
14000af84:     	movl	$0x78, %ecx
14000af89:     	callq	*0xf0b9(%rip)           # 0x14001a048
14000af8f:     	movl	$0x80004001, %eax       # imm = 0x80004001
14000af94:     	addq	$0x28, %rsp
14000af98:     	retq
14000af99:     	int3
14000af9a:     	int3
14000af9b:     	int3
14000af9c:     	int3
14000af9d:     	int3
14000af9e:     	int3
14000af9f:     	int3
14000afa0:     	pushq	%r14
14000afa2:     	pushq	%rsi
14000afa3:     	pushq	%rdi
14000afa4:     	pushq	%rbx
14000afa5:     	subq	$0x28, %rsp
14000afa9:     	movl	%r9d, %esi
14000afac:     	movq	%r8, %rdi
14000afaf:     	movl	%edx, %ebx
14000afb1:     	movq	%rcx, %r14
14000afb4:     	leaq	0x1188b(%rip), %rcx     # 0x14001c846
14000afbb:     	callq	*0xf0f7(%rip)           # 0x14001a0b8
14000afc1:     	testq	%rax, %rax
14000afc4:     	je	0x14000afdb <.text+0x9fdb>
14000afc6:     	leaq	0x1187f(%rip), %rdx     # 0x14001c84c
14000afcd:     	movq	%rax, %rcx
14000afd0:     	callq	*0xf142(%rip)           # 0x14001a118
14000afd6:     	testq	%rax, %rax
14000afd9:     	jne	0x14000afe2 <.text+0x9fe2>
14000afdb:     	leaq	0x1e(%rip), %rax        # 0x14000b000 <.text+0xa000>
14000afe2:     	movq	%rax, 0x18057(%rip)     # 0x140023040
14000afe9:     	movq	%r14, %rcx
14000afec:     	movl	%ebx, %edx
14000afee:     	movq	%rdi, %r8
14000aff1:     	movl	%esi, %r9d
14000aff4:     	addq	$0x28, %rsp
14000aff8:     	popq	%rbx
14000aff9:     	popq	%rdi
14000affa:     	popq	%rsi
14000affb:     	popq	%r14
14000affd:     	jmpq	*%rax
14000b000:     	pushq	%rbp
14000b001:     	subq	$0x60, %rsp
14000b005:     	leaq	0x60(%rsp), %rbp
14000b00a:     	movq	$-0x2, -0x8(%rbp)
14000b012:     	leaq	0x11867(%rip), %rax     # 0x14001c880
14000b019:     	movq	%rax, -0x38(%rbp)
14000b01d:     	movq	$0x1, -0x30(%rbp)
14000b025:     	leaq	0xf674(%rip), %rax      # 0x14001a6a0
14000b02c:     	movq	%rax, -0x28(%rbp)
14000b030:     	xorps	%xmm0, %xmm0
14000b033:     	movups	%xmm0, -0x20(%rbp)
14000b037:     	leaq	0x11872(%rip), %rdx     # 0x14001c8b0
14000b03e:     	leaq	-0x38(%rbp), %rcx
14000b042:     	callq	0x1400197d0 <.text+0x187d0>
14000b047:     	ud2
14000b049:     	nopl	(%rax)
14000b050:     	movq	%rdx, 0x10(%rsp)
14000b055:     	pushq	%rbp
14000b056:     	subq	$0x20, %rsp
14000b05a:     	leaq	0x60(%rdx), %rbp
14000b05e:     	callq	0x1400199a0 <.text+0x189a0>
14000b063:     	ud2
14000b065:     	int3
14000b066:     	int3
14000b067:     	int3
14000b068:     	int3
14000b069:     	int3
14000b06a:     	int3
14000b06b:     	int3
14000b06c:     	int3
14000b06d:     	int3
14000b06e:     	int3
14000b06f:     	int3
14000b070:     	pushq	%r14
14000b072:     	pushq	%rsi
14000b073:     	pushq	%rdi
14000b074:     	pushq	%rbx
14000b075:     	subq	$0x28, %rsp
14000b079:     	movq	%r9, %rsi
14000b07c:     	movl	%r8d, %ebx
14000b07f:     	movq	%rdx, %rdi
14000b082:     	movq	%rcx, %r14
14000b085:     	leaq	0x117ba(%rip), %rcx     # 0x14001c846
14000b08c:     	callq	*0xf026(%rip)           # 0x14001a0b8
14000b092:     	testq	%rax, %rax
14000b095:     	je	0x14000b0ac <.text+0xa0ac>
14000b097:     	leaq	0x1182a(%rip), %rdx     # 0x14001c8c8
14000b09e:     	movq	%rax, %rcx
14000b0a1:     	callq	*0xf071(%rip)           # 0x14001a118
14000b0a7:     	testq	%rax, %rax
14000b0aa:     	jne	0x14000b0b3 <.text+0xa0b3>
14000b0ac:     	leaq	0x2d(%rip), %rax        # 0x14000b0e0 <.text+0xa0e0>
14000b0b3:     	movq	%rax, 0x17f8e(%rip)     # 0x140023048
14000b0ba:     	movq	%r14, %rcx
14000b0bd:     	movq	%rdi, %rdx
14000b0c0:     	movl	%ebx, %r8d
14000b0c3:     	movq	%rsi, %r9
14000b0c6:     	addq	$0x28, %rsp
14000b0ca:     	popq	%rbx
14000b0cb:     	popq	%rdi
14000b0cc:     	popq	%rsi
14000b0cd:     	popq	%r14
14000b0cf:     	jmpq	*%rax
14000b0d2:     	int3
14000b0d3:     	int3
14000b0d4:     	int3
14000b0d5:     	int3
14000b0d6:     	int3
14000b0d7:     	int3
14000b0d8:     	int3
14000b0d9:     	int3
14000b0da:     	int3
14000b0db:     	int3
14000b0dc:     	int3
14000b0dd:     	int3
14000b0de:     	int3
14000b0df:     	int3
14000b0e0:     	pushq	%rbp
14000b0e1:     	subq	$0x60, %rsp
14000b0e5:     	leaq	0x60(%rsp), %rbp
14000b0ea:     	movq	$-0x2, -0x8(%rbp)
14000b0f2:     	leaq	0x11787(%rip), %rax     # 0x14001c880
14000b0f9:     	movq	%rax, -0x38(%rbp)
14000b0fd:     	movq	$0x1, -0x30(%rbp)
14000b105:     	leaq	0xf594(%rip), %rax      # 0x14001a6a0
14000b10c:     	movq	%rax, -0x28(%rbp)
14000b110:     	xorps	%xmm0, %xmm0
14000b113:     	movups	%xmm0, -0x20(%rbp)
14000b117:     	leaq	0x117c2(%rip), %rdx     # 0x14001c8e0
14000b11e:     	leaq	-0x38(%rbp), %rcx
14000b122:     	callq	0x1400197d0 <.text+0x187d0>
14000b127:     	ud2
14000b129:     	nopl	(%rax)
14000b130:     	movq	%rdx, 0x10(%rsp)
14000b135:     	pushq	%rbp
14000b136:     	subq	$0x20, %rsp
14000b13a:     	leaq	0x60(%rdx), %rbp
14000b13e:     	callq	0x1400199a0 <.text+0x189a0>
14000b143:     	ud2
14000b145:     	int3
14000b146:     	int3
14000b147:     	int3
14000b148:     	int3
14000b149:     	int3
14000b14a:     	int3
14000b14b:     	int3
14000b14c:     	int3
14000b14d:     	int3
14000b14e:     	int3
14000b14f:     	int3
14000b150:     	pushq	%r14
14000b152:     	pushq	%rsi
14000b153:     	pushq	%rdi
14000b154:     	pushq	%rbx
14000b155:     	subq	$0x28, %rsp
14000b159:     	movq	%r9, %rsi
14000b15c:     	movl	%r8d, %ebx
14000b15f:     	movq	%rdx, %rdi
14000b162:     	movq	%rcx, %r14
14000b165:     	leaq	0x116da(%rip), %rcx     # 0x14001c846
14000b16c:     	callq	*0xef46(%rip)           # 0x14001a0b8
14000b172:     	testq	%rax, %rax
14000b175:     	je	0x14000b18c <.text+0xa18c>
14000b177:     	leaq	0x1177a(%rip), %rdx     # 0x14001c8f8
14000b17e:     	movq	%rax, %rcx
14000b181:     	callq	*0xef91(%rip)           # 0x14001a118
14000b187:     	testq	%rax, %rax
14000b18a:     	jne	0x14000b193 <.text+0xa193>
14000b18c:     	leaq	0x2d(%rip), %rax        # 0x14000b1c0 <.text+0xa1c0>
14000b193:     	movq	%rax, 0x17eb6(%rip)     # 0x140023050
14000b19a:     	movq	%r14, %rcx
14000b19d:     	movq	%rdi, %rdx
14000b1a0:     	movl	%ebx, %r8d
14000b1a3:     	movq	%rsi, %r9
14000b1a6:     	addq	$0x28, %rsp
14000b1aa:     	popq	%rbx
14000b1ab:     	popq	%rdi
14000b1ac:     	popq	%rsi
14000b1ad:     	popq	%r14
14000b1af:     	jmpq	*%rax
14000b1b2:     	int3
14000b1b3:     	int3
14000b1b4:     	int3
14000b1b5:     	int3
14000b1b6:     	int3
14000b1b7:     	int3
14000b1b8:     	int3
14000b1b9:     	int3
14000b1ba:     	int3
14000b1bb:     	int3
14000b1bc:     	int3
14000b1bd:     	int3
14000b1be:     	int3
14000b1bf:     	int3
14000b1c0:     	pushq	%rbp
14000b1c1:     	subq	$0x60, %rsp
14000b1c5:     	leaq	0x60(%rsp), %rbp
14000b1ca:     	movq	$-0x2, -0x8(%rbp)
14000b1d2:     	leaq	0x116a7(%rip), %rax     # 0x14001c880
14000b1d9:     	movq	%rax, -0x38(%rbp)
14000b1dd:     	movq	$0x1, -0x30(%rbp)
14000b1e5:     	leaq	0xf4b4(%rip), %rax      # 0x14001a6a0
14000b1ec:     	movq	%rax, -0x28(%rbp)
14000b1f0:     	xorps	%xmm0, %xmm0
14000b1f3:     	movups	%xmm0, -0x20(%rbp)
14000b1f7:     	leaq	0x11712(%rip), %rdx     # 0x14001c910
14000b1fe:     	leaq	-0x38(%rbp), %rcx
14000b202:     	callq	0x1400197d0 <.text+0x187d0>
14000b207:     	ud2
14000b209:     	nopl	(%rax)
14000b210:     	movq	%rdx, 0x10(%rsp)
14000b215:     	pushq	%rbp
14000b216:     	subq	$0x20, %rsp
14000b21a:     	leaq	0x60(%rdx), %rbp
14000b21e:     	callq	0x1400199a0 <.text+0x189a0>
14000b223:     	ud2
14000b225:     	int3
14000b226:     	int3
14000b227:     	int3
14000b228:     	int3
14000b229:     	int3
14000b22a:     	int3
14000b22b:     	int3
14000b22c:     	int3
14000b22d:     	int3
14000b22e:     	int3
14000b22f:     	int3
14000b230:     	pushq	%rbp
14000b231:     	pushq	%rsi
14000b232:     	subq	$0x98, %rsp
14000b239:     	leaq	0x80(%rsp), %rbp
14000b241:     	movq	$-0x2, 0x10(%rbp)
14000b249:     	movq	(%rcx), %rax
14000b24c:     	cmpl	$0xc00000fd, (%rax)     # imm = 0xC00000FD
14000b252:     	jne	0x14000b330 <.text+0xa330>
14000b258:     	movl	$0x0, -0x8(%rbp)
14000b25f:     	movb	$0x0, -0x4(%rbp)
14000b263:     	callq	0x140007750 <.text+0x6750>
14000b268:     	movq	%rax, %rsi
14000b26b:     	testq	%rax, %rax
14000b26e:     	je	0x14000b35a <.text+0xa35a>
14000b274:     	movq	%rsi, -0x10(%rbp)
14000b278:     	movq	0x18(%rsi), %rax
14000b27c:     	testq	%rax, %rax
14000b27f:     	je	0x14000b28a <.text+0xa28a>
14000b281:     	movq	0x20(%rsi), %rcx
14000b285:     	decq	%rcx
14000b288:     	jmp	0x14000b296 <.text+0xa296>
14000b28a:     	movl	$0x9, %ecx
14000b28f:     	leaq	0x106cb(%rip), %rax     # 0x14001b961
14000b296:     	movq	%rax, -0x30(%rbp)
14000b29a:     	movq	%rcx, -0x28(%rbp)
14000b29e:     	leaq	-0x30(%rbp), %rax
14000b2a2:     	movq	%rax, -0x20(%rbp)
14000b2a6:     	leaq	-0x9ced(%rip), %rax     # 0x1400015c0 <.text+0x5c0>
14000b2ad:     	movq	%rax, -0x18(%rbp)
14000b2b1:     	leaq	0x11728(%rip), %rax     # 0x14001c9e0
14000b2b8:     	movq	%rax, -0x60(%rbp)
14000b2bc:     	movq	$0x2, -0x58(%rbp)
14000b2c4:     	movq	$0x0, -0x40(%rbp)
14000b2cc:     	leaq	-0x20(%rbp), %rax
14000b2d0:     	movq	%rax, -0x50(%rbp)
14000b2d4:     	movq	$0x1, -0x48(%rbp)
14000b2dc:     	leaq	-0x8(%rbp), %rax
14000b2e0:     	movq	%rax, (%rbp)
14000b2e4:     	movq	$0x0, 0x8(%rbp)
14000b2ec:     	leaq	0xf8fd(%rip), %rdx      # 0x14001abf0
14000b2f3:     	movq	%rbp, %rcx
14000b2f6:     	leaq	-0x60(%rbp), %r8
14000b2fa:     	callq	0x140014a60 <.text+0x13a60>
14000b2ff:     	movq	0x8(%rbp), %rcx
14000b303:     	testb	%al, %al
14000b305:     	je	0x14000b33c <.text+0xa33c>
14000b307:     	testq	%rcx, %rcx
14000b30a:     	leaq	0x1025f(%rip), %rax     # 0x14001b570
14000b311:     	cmovneq	%rcx, %rax
14000b315:     	movq	%rax, (%rbp)
14000b319:     	movq	%rbp, %rcx
14000b31c:     	callq	0x140001c00 <.text+0xc00>
14000b321:     	lock
14000b322:     	decq	(%rsi)
14000b325:     	jne	0x14000b330 <.text+0xa330>
14000b327:     	leaq	-0x10(%rbp), %rcx
14000b32b:     	callq	0x1400028f0 <.text+0x18f0>
14000b330:     	xorl	%eax, %eax
14000b332:     	addq	$0x98, %rsp
14000b339:     	popq	%rsi
14000b33a:     	popq	%rbp
14000b33b:     	retq
14000b33c:     	testq	%rcx, %rcx
14000b33f:     	je	0x14000b34a <.text+0xa34a>
14000b341:     	leaq	0x8(%rbp), %rcx
14000b345:     	callq	0x140001c00 <.text+0xc00>
14000b34a:     	movq	$0x0, (%rbp)
14000b352:     	lock
14000b353:     	decq	(%rsi)
14000b356:     	je	0x14000b327 <.text+0xa327>
14000b358:     	jmp	0x14000b330 <.text+0xa330>
14000b35a:     	leaq	0xfa7f(%rip), %rcx      # 0x14001ade0
14000b361:     	leaq	0xfad8(%rip), %r8       # 0x14001ae40
14000b368:     	movl	$0x5e, %edx
14000b36d:     	callq	0x140019760 <.text+0x18760>
14000b372:     	ud2
14000b374:     	nopw	%cs:(%rax,%rax)
14000b380:     	movq	%rdx, 0x10(%rsp)
14000b385:     	pushq	%rbp
14000b386:     	pushq	%rsi
14000b387:     	subq	$0x28, %rsp
14000b38b:     	leaq	0x80(%rdx), %rbp
14000b392:     	callq	0x1400199a0 <.text+0x189a0>
14000b397:     	ud2
14000b399:     	nopl	(%rax)
14000b3a0:     	movq	%rdx, 0x10(%rsp)
14000b3a5:     	pushq	%rbp
14000b3a6:     	pushq	%rsi
14000b3a7:     	subq	$0x28, %rsp
14000b3ab:     	leaq	0x80(%rdx), %rbp
14000b3b2:     	cmpq	$0x0, 0x8(%rbp)
14000b3b7:     	je	0x14000b3c2 <.text+0xa3c2>
14000b3b9:     	leaq	0x8(%rbp), %rcx
14000b3bd:     	callq	0x140001c00 <.text+0xc00>
14000b3c2:     	nop
14000b3c3:     	addq	$0x28, %rsp
14000b3c7:     	popq	%rsi
14000b3c8:     	popq	%rbp
14000b3c9:     	retq
14000b3ca:     	int3
14000b3cb:     	int3
14000b3cc:     	int3
14000b3cd:     	int3
14000b3ce:     	int3
14000b3cf:     	int3
14000b3d0:     	pushq	%rbp
14000b3d1:     	pushq	%r15
14000b3d3:     	pushq	%r14
14000b3d5:     	pushq	%r12
14000b3d7:     	pushq	%rsi
14000b3d8:     	pushq	%rdi
14000b3d9:     	pushq	%rbx
14000b3da:     	subq	$0x80, %rsp
14000b3e1:     	leaq	0x80(%rsp), %rbp
14000b3e9:     	movq	$-0x2, -0x8(%rbp)
14000b3f1:     	movq	(%rcx), %rdx
14000b3f4:     	movq	0x8(%rcx), %rax
14000b3f8:     	xchgq	%rax, (%rdx)
14000b3fb:     	movl	%eax, %ecx
14000b3fd:     	andl	$0x3, %ecx
14000b400:     	movq	%rcx, -0x30(%rbp)
14000b404:     	cmpq	$0x2, %rcx
14000b408:     	jne	0x14000b57d <.text+0xa57d>
14000b40e:     	addq	$-0x2, %rax
14000b412:     	je	0x14000b4fe <.text+0xa4fe>
14000b418:     	leaq	-0x20(%rbp), %rsi
14000b41c:     	movq	0xecfd(%rip), %r15      # 0x14001a120
14000b423:     	leaq	-0x10(%rbp), %rdi
14000b427:     	jmp	0x14000b43c <.text+0xa43c>
14000b429:     	nopl	(%rax)
14000b430:     	movq	%r12, %rax
14000b433:     	testq	%r12, %r12
14000b436:     	je	0x14000b4fe <.text+0xa4fe>
14000b43c:     	movq	0x8(%rax), %r12
14000b440:     	movq	(%rax), %rbx
14000b443:     	movq	$0x0, (%rax)
14000b44a:     	testq	%rbx, %rbx
14000b44d:     	je	0x14000b510 <.text+0xa510>
14000b453:     	movq	%rbx, -0x10(%rbp)
14000b457:     	movb	$0x1, 0x10(%rax)
14000b45b:     	movb	$0x1, %al
14000b45d:     	xchgb	%al, 0x28(%rbx)
14000b460:     	cmpb	$-0x1, %al
14000b462:     	jne	0x14000b479 <.text+0xa479>
14000b464:     	addq	$0x28, %rbx
14000b468:     	movq	0x17e79(%rip), %rax     # 0x1400232e8
14000b46f:     	testq	%rax, %rax
14000b472:     	je	0x14000b48d <.text+0xa48d>
14000b474:     	movq	%rbx, %rcx
14000b477:     	callq	*%rax
14000b479:     	movq	-0x10(%rbp), %rax
14000b47d:     	lock
14000b47e:     	decq	(%rax)
14000b481:     	jne	0x14000b430 <.text+0xa430>
14000b483:     	movq	%rdi, %rcx
14000b486:     	callq	0x1400028f0 <.text+0x18f0>
14000b48b:     	jmp	0x14000b430 <.text+0xa430>
14000b48d:     	movq	0x17b9c(%rip), %rcx     # 0x140023030
14000b494:     	cmpq	$-0x1, %rcx
14000b498:     	jne	0x14000b4dc <.text+0xa4dc>
14000b49a:     	movq	$-0x1, -0x20(%rbp)
14000b4a2:     	movq	0x17b97(%rip), %rax     # 0x140023040
14000b4a9:     	movq	%rsi, %rcx
14000b4ac:     	movl	$0xc0000000, %edx       # imm = 0xC0000000
14000b4b1:     	xorl	%r8d, %r8d
14000b4b4:     	xorl	%r9d, %r9d
14000b4b7:     	callq	*%rax
14000b4b9:     	testl	%eax, %eax
14000b4bb:     	jne	0x14000b52a <.text+0xa52a>
14000b4bd:     	movq	-0x20(%rbp), %rcx
14000b4c1:     	movq	$-0x1, %rax
14000b4c8:     	lock
14000b4c9:     	cmpxchgq	%rcx, 0x17b5f(%rip)     # 0x140023030
14000b4d1:     	je	0x14000b4dc <.text+0xa4dc>
14000b4d3:     	movq	%rax, %r14
14000b4d6:     	callq	*%r15
14000b4d9:     	movq	%r14, %rcx
14000b4dc:     	movq	0x17b65(%rip), %rax     # 0x140023048
14000b4e3:     	movq	%rbx, %rdx
14000b4e6:     	xorl	%r8d, %r8d
14000b4e9:     	xorl	%r9d, %r9d
14000b4ec:     	callq	*%rax
14000b4ee:     	movq	-0x10(%rbp), %rax
14000b4f2:     	lock
14000b4f3:     	decq	(%rax)
14000b4f6:     	jne	0x14000b430 <.text+0xa430>
14000b4fc:     	jmp	0x14000b483 <.text+0xa483>
14000b4fe:     	addq	$0x80, %rsp
14000b505:     	popq	%rbx
14000b506:     	popq	%rdi
14000b507:     	popq	%rsi
14000b508:     	popq	%r12
14000b50a:     	popq	%r14
14000b50c:     	popq	%r15
14000b50e:     	popq	%rbp
14000b50f:     	retq
14000b510:     	leaq	0xf159(%rip), %rcx      # 0x14001a670
14000b517:     	leaq	0x115e2(%rip), %r8      # 0x14001cb00
14000b51e:     	movl	$0x2b, %edx
14000b523:     	callq	0x140019880 <.text+0x18880>
14000b528:     	ud2
14000b52a:     	movl	%eax, -0x14(%rbp)
14000b52d:     	leaq	-0x14(%rbp), %rax
14000b531:     	movq	%rax, -0x30(%rbp)
14000b535:     	leaq	0xc674(%rip), %rax      # 0x140017bb0 <.text+0x16bb0>
14000b53c:     	movq	%rax, -0x28(%rbp)
14000b540:     	leaq	0x11231(%rip), %rax     # 0x14001c778
14000b547:     	movq	%rax, -0x60(%rbp)
14000b54b:     	movq	$0x1, -0x58(%rbp)
14000b553:     	movq	$0x0, -0x40(%rbp)
14000b55b:     	leaq	-0x30(%rbp), %rax
14000b55f:     	movq	%rax, -0x50(%rbp)
14000b563:     	movq	$0x1, -0x48(%rbp)
14000b56b:     	leaq	0x11246(%rip), %rdx     # 0x14001c7b8
14000b572:     	leaq	-0x60(%rbp), %rcx
14000b576:     	callq	0x1400197d0 <.text+0x187d0>
14000b57b:     	ud2
14000b57d:     	movq	$0x0, -0x60(%rbp)
14000b585:     	leaq	0x11544(%rip), %rdx     # 0x14001cad0
14000b58c:     	leaq	0x11585(%rip), %r9      # 0x14001cb18
14000b593:     	leaq	-0x30(%rbp), %rcx
14000b597:     	leaq	-0x60(%rbp), %r8
14000b59b:     	callq	0x140018e20 <.text+0x17e20>
14000b5a0:     	ud2
14000b5a2:     	nopw	%cs:(%rax,%rax)
14000b5b0:     	movq	%rdx, 0x10(%rsp)
14000b5b5:     	pushq	%rbp
14000b5b6:     	pushq	%r15
14000b5b8:     	pushq	%r14
14000b5ba:     	pushq	%r12
14000b5bc:     	pushq	%rsi
14000b5bd:     	pushq	%rdi
14000b5be:     	pushq	%rbx
14000b5bf:     	subq	$0x20, %rsp
14000b5c3:     	leaq	0x80(%rdx), %rbp
14000b5ca:     	movq	-0x10(%rbp), %rax
14000b5ce:     	lock
14000b5cf:     	decq	(%rax)
14000b5d2:     	jne	0x14000b5dd <.text+0xa5dd>
14000b5d4:     	leaq	-0x10(%rbp), %rcx
14000b5d8:     	callq	0x1400028f0 <.text+0x18f0>
14000b5dd:     	nop
14000b5de:     	addq	$0x20, %rsp
14000b5e2:     	popq	%rbx
14000b5e3:     	popq	%rdi
14000b5e4:     	popq	%rsi
14000b5e5:     	popq	%r12
14000b5e7:     	popq	%r14
14000b5e9:     	popq	%r15
14000b5eb:     	popq	%rbp
14000b5ec:     	retq
14000b5ed:     	int3
14000b5ee:     	int3
14000b5ef:     	int3
14000b5f0:     	subq	$0x28, %rsp
14000b5f4:     	movq	0x17c7d(%rip), %rax     # 0x140023278
14000b5fb:     	testq	%rax, %rax
14000b5fe:     	leaq	-0x3845(%rip), %r8      # 0x140007dc0 <.text+0x6dc0>
14000b605:     	cmovneq	%rax, %r8
14000b609:     	callq	*%r8
14000b60c:     	movl	$0x7, %ecx
14000b611:     	int	$0x29
14000b613:     	ud2
14000b615:     	int3
14000b616:     	int3
14000b617:     	int3
14000b618:     	int3
14000b619:     	int3
14000b61a:     	int3
14000b61b:     	int3
14000b61c:     	int3
14000b61d:     	int3
14000b61e:     	int3
14000b61f:     	int3
14000b620:     	subq	$0x28, %rsp
14000b624:     	movq	%rcx, %rax
14000b627:     	movq	%rdx, %rcx
14000b62a:     	movq	%rax, %rdx
14000b62d:     	callq	0x14000b5f0 <.text+0xa5f0>
14000b632:     	ud2
14000b634:     	int3
14000b635:     	int3
14000b636:     	int3
14000b637:     	int3
14000b638:     	int3
14000b639:     	int3
14000b63a:     	int3
14000b63b:     	int3
14000b63c:     	int3
14000b63d:     	int3
14000b63e:     	int3
14000b63f:     	int3
14000b640:     	pushq	%r15
14000b642:     	pushq	%r14
14000b644:     	pushq	%r13
14000b646:     	pushq	%r12
14000b648:     	pushq	%rsi
14000b649:     	pushq	%rdi
14000b64a:     	pushq	%rbp
14000b64b:     	pushq	%rbx
14000b64c:     	subq	$0x38, %rsp
14000b650:     	movq	%rdx, %rsi
14000b653:     	cmpl	$0x2, (%rcx)
14000b656:     	jne	0x14000b6d2 <.text+0xa6d2>
14000b658:     	movq	0x48(%rcx), %rdi
14000b65c:     	testq	%rdi, %rdi
14000b65f:     	je	0x14000b704 <.text+0xa704>
14000b665:     	movq	0x40(%rcx), %rbx
14000b669:     	leaq	0x20(%rsp), %r14
14000b66e:     	leaq	0x103eb(%rip), %r15     # 0x14001ba60
14000b675:     	nopw	%cs:(%rax,%rax)
14000b680:     	movq	%r14, %rcx
14000b683:     	movq	%rbx, %rdx
14000b686:     	movq	%rdi, %r8
14000b689:     	callq	0x140016080 <.text+0x15080>
14000b68e:     	cmpq	$0x0, 0x20(%rsp)
14000b694:     	je	0x14000b6ea <.text+0xa6ea>
14000b696:     	movq	0x28(%rsp), %r12
14000b69b:     	movzbl	0x30(%rsp), %ebp
14000b6a0:     	movzbl	0x31(%rsp), %r13d
14000b6a6:     	movl	$0x3, %edx
14000b6ab:     	movq	%r15, %rcx
14000b6ae:     	movq	%rsi, %r8
14000b6b1:     	callq	0x140015b40 <.text+0x14b40>
14000b6b6:     	testb	%al, %al
14000b6b8:     	jne	0x14000b700 <.text+0xa700>
14000b6ba:     	testb	$0x1, %bpl
14000b6be:     	je	0x14000b704 <.text+0xa704>
14000b6c0:     	addq	%r13, %r12
14000b6c3:     	cmpq	%r12, %rdi
14000b6c6:     	jb	0x14000b717 <.text+0xa717>
14000b6c8:     	addq	%r12, %rbx
14000b6cb:     	subq	%r12, %rdi
14000b6ce:     	jne	0x14000b680 <.text+0xa680>
14000b6d0:     	jmp	0x14000b704 <.text+0xa704>
14000b6d2:     	movq	%rsi, %rdx
14000b6d5:     	addq	$0x38, %rsp
14000b6d9:     	popq	%rbx
14000b6da:     	popq	%rbp
14000b6db:     	popq	%rdi
14000b6dc:     	popq	%rsi
14000b6dd:     	popq	%r12
14000b6df:     	popq	%r13
14000b6e1:     	popq	%r14
14000b6e3:     	popq	%r15
14000b6e5:     	jmp	0x140012e30 <.text+0x11e30>
14000b6ea:     	movq	0x28(%rsp), %rcx
14000b6ef:     	movq	0x30(%rsp), %rdx
14000b6f4:     	movq	%rsi, %r8
14000b6f7:     	callq	0x140015b40 <.text+0x14b40>
14000b6fc:     	testb	%al, %al
14000b6fe:     	je	0x14000b704 <.text+0xa704>
14000b700:     	movb	$0x1, %al
14000b702:     	jmp	0x14000b706 <.text+0xa706>
14000b704:     	xorl	%eax, %eax
14000b706:     	addq	$0x38, %rsp
14000b70a:     	popq	%rbx
14000b70b:     	popq	%rbp
14000b70c:     	popq	%rdi
14000b70d:     	popq	%rsi
14000b70e:     	popq	%r12
14000b710:     	popq	%r13
14000b712:     	popq	%r14
14000b714:     	popq	%r15
14000b716:     	retq
14000b717:     	leaq	0x10892(%rip), %r8      # 0x14001bfb0
14000b71e:     	movq	%r12, %rcx
14000b721:     	movq	%rdi, %rdx
14000b724:     	callq	0x140019c50 <.text+0x18c50>
14000b729:     	ud2
14000b72b:     	int3
14000b72c:     	int3
14000b72d:     	int3
14000b72e:     	int3
14000b72f:     	int3
14000b730:     	pushq	%rbp
14000b731:     	pushq	%r15
14000b733:     	pushq	%r14
14000b735:     	pushq	%r12
14000b737:     	pushq	%rsi
14000b738:     	pushq	%rdi
14000b739:     	pushq	%rbx
14000b73a:     	subq	$0xa0, %rsp
14000b741:     	leaq	0x80(%rsp), %rbp
14000b749:     	movq	$-0x2, 0x18(%rbp)
14000b751:     	movq	%r9, %rdi
14000b754:     	movq	%r8, %rsi
14000b757:     	movq	%rdx, %rbx
14000b75a:     	movq	%rcx, %r14
14000b75d:     	movq	0x17b44(%rip), %r12     # 0x1400232a8
14000b764:     	testq	%r12, %r12
14000b767:     	je	0x14000b898 <.text+0xa898>
14000b76d:     	movq	%r12, %rcx
14000b770:     	movl	$0xffffffff, %edx       # imm = 0xFFFFFFFF
14000b775:     	xorl	%r8d, %r8d
14000b778:     	callq	*0xe97a(%rip)           # 0x14001a0f8
14000b77e:     	movq	0x17b6b(%rip), %rax     # 0x1400232f0
14000b785:     	testq	%rax, %rax
14000b788:     	jne	0x14000b7a7 <.text+0xa7a7>
14000b78a:     	leaq	0x113ef(%rip), %rcx     # 0x14001cb80
14000b791:     	callq	*0xe969(%rip)           # 0x14001a100
14000b797:     	movq	%rax, 0x17b52(%rip)     # 0x1400232f0
14000b79e:     	testq	%rax, %rax
14000b7a1:     	je	0x14000b9b8 <.text+0xa9b8>
14000b7a7:     	cmpb	$0x0, 0x17b02(%rip)     # 0x1400232b0
14000b7ae:     	movq	%r12, 0x10(%rbp)
14000b7b2:     	jne	0x14000b873 <.text+0xa873>
14000b7b8:     	movq	0x17b39(%rip), %rcx     # 0x1400232f8
14000b7bf:     	testq	%rcx, %rcx
14000b7c2:     	jne	0x14000b7e7 <.text+0xa7e7>
14000b7c4:     	leaq	0x113c1(%rip), %rdx     # 0x14001cb8c
14000b7cb:     	movq	%rax, %rcx
14000b7ce:     	callq	*0xe944(%rip)           # 0x14001a118
14000b7d4:     	testq	%rax, %rax
14000b7d7:     	je	0x14000b9d7 <.text+0xa9d7>
14000b7dd:     	movq	%rax, %rcx
14000b7e0:     	movq	%rax, 0x17b11(%rip)     # 0x1400232f8
14000b7e7:     	callq	*%rcx
14000b7e9:     	movl	%eax, %r15d
14000b7ec:     	movq	0x17b0d(%rip), %rax     # 0x140023300
14000b7f3:     	testq	%rax, %rax
14000b7f6:     	jne	0x14000b81c <.text+0xa81c>
14000b7f8:     	movq	0x17af1(%rip), %rcx     # 0x1400232f0
14000b7ff:     	leaq	0x11394(%rip), %rdx     # 0x14001cb9a
14000b806:     	callq	*0xe90c(%rip)           # 0x14001a118
14000b80c:     	testq	%rax, %rax
14000b80f:     	je	0x14000b9f1 <.text+0xa9f1>
14000b815:     	movq	%rax, 0x17ae4(%rip)     # 0x140023300
14000b81c:     	orl	$0x4, %r15d
14000b820:     	movl	%r15d, %ecx
14000b823:     	callq	*%rax
14000b825:     	movq	0x17adc(%rip), %r15     # 0x140023308
14000b82c:     	testq	%r15, %r15
14000b82f:     	jne	0x14000b858 <.text+0xa858>
14000b831:     	movq	0x17ab8(%rip), %rcx     # 0x1400232f0
14000b838:     	leaq	0x11369(%rip), %rdx     # 0x14001cba8
14000b83f:     	callq	*0xe8d3(%rip)           # 0x14001a118
14000b845:     	testq	%rax, %rax
14000b848:     	je	0x14000ba0b <.text+0xaa0b>
14000b84e:     	movq	%rax, %r15
14000b851:     	movq	%rax, 0x17ab0(%rip)     # 0x140023308
14000b858:     	callq	*0xe802(%rip)           # 0x14001a060
14000b85e:     	movq	%rax, %rcx
14000b861:     	xorl	%edx, %edx
14000b863:     	movl	$0x1, %r8d
14000b869:     	callq	*%r15
14000b86c:     	movb	$0x1, 0x17a3d(%rip)     # 0x1400232b0
14000b873:     	testq	%r14, %r14
14000b876:     	je	0x14000b981 <.text+0xa981>
14000b87c:     	movq	0x10(%rbx), %rcx
14000b880:     	movl	(%rbx), %edx
14000b882:     	movl	0x4(%rbx), %r8d
14000b886:     	movq	%rdi, 0x20(%rsp)
14000b88b:     	movq	%rsi, %r9
14000b88e:     	callq	0x14000bab0 <.text+0xaab0>
14000b893:     	jmp	0x14000b99b <.text+0xa99b>
14000b898:     	movups	0x10879(%rip), %xmm0    # 0x14001c118
14000b89f:     	movaps	%xmm0, -0x10(%rbp)
14000b8a3:     	movups	0x1085e(%rip), %xmm0    # 0x14001c108
14000b8aa:     	movaps	%xmm0, -0x20(%rbp)
14000b8ae:     	movb	$0x0, (%rbp)
14000b8b2:     	callq	*0xe7b8(%rip)           # 0x14001a070
14000b8b8:     	testl	%eax, %eax
14000b8ba:     	je	0x14000b92f <.text+0xa92f>
14000b8bc:     	movl	$0x1f, %ecx
14000b8c1:     	nopw	%cs:(%rax,%rax)
14000b8d0:     	cmpq	$0x20, %rcx
14000b8d4:     	ja	0x14000b9bd <.text+0xa9bd>
14000b8da:     	movl	%eax, %edx
14000b8dc:     	andb	$0xf, %dl
14000b8df:     	leal	0x30(%rdx), %r8d
14000b8e3:     	leal	0x37(%rdx), %r9d
14000b8e7:     	cmpb	$0xa, %dl
14000b8ea:     	movzbl	%r8b, %edx
14000b8ee:     	movzbl	%r9b, %r8d
14000b8f2:     	cmovbl	%edx, %r8d
14000b8f6:     	movb	%r8b, -0x20(%rbp,%rcx)
14000b8fb:     	cmpl	$0x10, %eax
14000b8fe:     	jb	0x14000b92f <.text+0xa92f>
14000b900:     	movl	%eax, %edx
14000b902:     	shrb	$0x4, %dl
14000b905:     	leal	0x30(%rdx), %r8d
14000b909:     	addb	$0x37, %dl
14000b90c:     	cmpb	$-0x60, %al
14000b90e:     	movzbl	%r8b, %r8d
14000b912:     	movzbl	%dl, %edx
14000b915:     	cmovbl	%r8d, %edx
14000b919:     	movb	%dl, -0x21(%rbp,%rcx)
14000b91d:     	movl	%eax, %edx
14000b91f:     	shrl	$0x8, %edx
14000b922:     	addq	$-0x2, %rcx
14000b926:     	cmpl	$0x100, %eax            # imm = 0x100
14000b92b:     	movl	%edx, %eax
14000b92d:     	jae	0x14000b8d0 <.text+0xa8d0>
14000b92f:     	movzbl	(%rbp), %eax
14000b933:     	movb	%al, -0x30(%rbp)
14000b936:     	movaps	-0x20(%rbp), %xmm0
14000b93a:     	movaps	-0x10(%rbp), %xmm1
14000b93e:     	movaps	%xmm1, -0x40(%rbp)
14000b942:     	movaps	%xmm0, -0x50(%rbp)
14000b946:     	leaq	-0x50(%rbp), %r8
14000b94a:     	xorl	%ecx, %ecx
14000b94c:     	xorl	%edx, %edx
14000b94e:     	callq	*0xe7b4(%rip)           # 0x14001a108
14000b954:     	testq	%rax, %rax
14000b957:     	je	0x14000b9a5 <.text+0xa9a5>
14000b959:     	movq	%rax, %r12
14000b95c:     	xorl	%eax, %eax
14000b95e:     	lock
14000b95f:     	cmpxchgq	%r12, 0x17941(%rip)     # 0x1400232a8
14000b967:     	je	0x14000b76d <.text+0xa76d>
14000b96d:     	movq	%rax, %r15
14000b970:     	movq	%r12, %rcx
14000b973:     	callq	*0xe7a7(%rip)           # 0x14001a120
14000b979:     	movq	%r15, %r12
14000b97c:     	jmp	0x14000b76d <.text+0xa76d>
14000b981:     	leaq	-0x1(%rbx), %rcx
14000b985:     	testq	%rbx, %rbx
14000b988:     	cmoveq	%rbx, %rcx
14000b98c:     	movq	%rdi, 0x20(%rsp)
14000b991:     	xorl	%edx, %edx
14000b993:     	movq	%rsi, %r9
14000b996:     	callq	0x14000bab0 <.text+0xaab0>
14000b99b:     	movq	0x10(%rbp), %rcx
14000b99f:     	callq	*0xe70b(%rip)           # 0x14001a0b0
14000b9a5:     	nop
14000b9a6:     	addq	$0xa0, %rsp
14000b9ad:     	popq	%rbx
14000b9ae:     	popq	%rdi
14000b9af:     	popq	%rsi
14000b9b0:     	popq	%r12
14000b9b2:     	popq	%r14
14000b9b4:     	popq	%r15
14000b9b6:     	popq	%rbp
14000b9b7:     	retq
14000b9b8:     	movq	%r12, %rcx
14000b9bb:     	jmp	0x14000b99f <.text+0xa99f>
14000b9bd:     	leaq	0x1076c(%rip), %r8      # 0x14001c130
14000b9c4:     	movl	$0x21, %edx
14000b9c9:     	movq	$-0x1, %rcx
14000b9d0:     	callq	0x140019920 <.text+0x18920>
14000b9d5:     	ud2
14000b9d7:     	leaq	0xec92(%rip), %rcx      # 0x14001a670
14000b9de:     	leaq	0x106db(%rip), %r8      # 0x14001c0c0
14000b9e5:     	movl	$0x2b, %edx
14000b9ea:     	callq	0x140019880 <.text+0x18880>
14000b9ef:     	jmp	0x14000ba23 <.text+0xaa23>
14000b9f1:     	leaq	0xec78(%rip), %rcx      # 0x14001a670
14000b9f8:     	leaq	0x106d9(%rip), %r8      # 0x14001c0d8
14000b9ff:     	movl	$0x2b, %edx
14000ba04:     	callq	0x140019880 <.text+0x18880>
14000ba09:     	jmp	0x14000ba23 <.text+0xaa23>
14000ba0b:     	leaq	0xec5e(%rip), %rcx      # 0x14001a670
14000ba12:     	leaq	0x106d7(%rip), %r8      # 0x14001c0f0
14000ba19:     	movl	$0x2b, %edx
14000ba1e:     	callq	0x140019880 <.text+0x18880>
14000ba23:     	ud2
14000ba25:     	nopw	%cs:(%rax,%rax)
14000ba30:     	movq	%rdx, 0x10(%rsp)
14000ba35:     	pushq	%rbp
14000ba36:     	pushq	%r15
14000ba38:     	pushq	%r14
14000ba3a:     	pushq	%r12
14000ba3c:     	pushq	%rsi
14000ba3d:     	pushq	%rdi
14000ba3e:     	pushq	%rbx
14000ba3f:     	subq	$0x30, %rsp
14000ba43:     	leaq	0x80(%rdx), %rbp
14000ba4a:     	movq	0x10(%rbp), %rcx
14000ba4e:     	callq	*0xe65c(%rip)           # 0x14001a0b0
14000ba54:     	nop
14000ba55:     	addq	$0x30, %rsp
14000ba59:     	popq	%rbx
14000ba5a:     	popq	%rdi
14000ba5b:     	popq	%rsi
14000ba5c:     	popq	%r12
14000ba5e:     	popq	%r14
14000ba60:     	popq	%r15
14000ba62:     	popq	%rbp
14000ba63:     	retq
14000ba64:     	nopw	%cs:(%rax,%rax)
14000ba70:     	movq	%rdx, 0x10(%rsp)
14000ba75:     	pushq	%rbp
14000ba76:     	pushq	%r15
14000ba78:     	pushq	%r14
14000ba7a:     	pushq	%r12
14000ba7c:     	pushq	%rsi
14000ba7d:     	pushq	%rdi
14000ba7e:     	pushq	%rbx
14000ba7f:     	subq	$0x30, %rsp
14000ba83:     	leaq	0x80(%rdx), %rbp
14000ba8a:     	movq	0x10(%rbp), %rcx
14000ba8e:     	callq	*0xe61c(%rip)           # 0x14001a0b0
14000ba94:     	nop
14000ba95:     	addq	$0x30, %rsp
14000ba99:     	popq	%rbx
14000ba9a:     	popq	%rdi
14000ba9b:     	popq	%rsi
14000ba9c:     	popq	%r12
14000ba9e:     	popq	%r14
14000baa0:     	popq	%r15
14000baa2:     	popq	%rbp
14000baa3:     	retq
14000baa4:     	int3
14000baa5:     	int3
14000baa6:     	int3
14000baa7:     	int3
14000baa8:     	int3
14000baa9:     	int3
14000baaa:     	int3
14000baab:     	int3
14000baac:     	int3
14000baad:     	int3
14000baae:     	int3
14000baaf:     	int3
14000bab0:     	pushq	%r15
14000bab2:     	pushq	%r14
14000bab4:     	pushq	%r13
14000bab6:     	pushq	%r12
14000bab8:     	pushq	%rsi
14000bab9:     	pushq	%rdi
14000baba:     	pushq	%rbp
14000babb:     	pushq	%rbx
14000babc:     	movl	$0x11d8, %eax           # imm = 0x11D8
14000bac1:     	callq	0x1400183a0 <.text+0x173a0>
14000bac6:     	subq	%rax, %rsp
14000bac9:     	movaps	%xmm6, 0x11c0(%rsp)
14000bad1:     	movq	%r9, 0xb0(%rsp)
14000bad9:     	movl	%r8d, %r14d
14000badc:     	movl	%edx, %ebp
14000bade:     	movq	%rcx, %r15
14000bae1:     	callq	*0xe579(%rip)           # 0x14001a060
14000bae7:     	movq	%rax, %rdi
14000baea:     	leaq	-0x1(%r15), %rbx
14000baee:     	testq	%r15, %r15
14000baf1:     	cmoveq	%r15, %rbx
14000baf5:     	xorl	%ecx, %ecx
14000baf7:     	cmpl	$0x1, %ebp
14000bafa:     	je	0x14000bbcc <.text+0xabcc>
14000bb00:     	movq	0x17819(%rip), %rax     # 0x140023320
14000bb07:     	testq	%rax, %rax
14000bb0a:     	jne	0x14000bb30 <.text+0xab30>
14000bb0c:     	movq	0x177dd(%rip), %rcx     # 0x1400232f0
14000bb13:     	leaq	0x110d0(%rip), %rdx     # 0x14001cbea
14000bb1a:     	callq	*0xe5f8(%rip)           # 0x14001a118
14000bb20:     	testq	%rax, %rax
14000bb23:     	je	0x14000c1c6 <.text+0xb1c6>
14000bb29:     	movq	%rax, 0x177f0(%rip)     # 0x140023320
14000bb30:     	movq	%rdi, %rcx
14000bb33:     	movq	%rbx, %rdx
14000bb36:     	callq	*%rax
14000bb38:     	movl	$0x0, 0xc0(%rsp)
14000bb43:     	testl	%eax, %eax
14000bb45:     	je	0x14000c0ee <.text+0xb0ee>
14000bb4b:     	movl	%eax, %ebp
14000bb4d:     	movq	0x177d4(%rip), %rax     # 0x140023328
14000bb54:     	testq	%rax, %rax
14000bb57:     	jne	0x14000bb7d <.text+0xab7d>
14000bb59:     	movq	0x17790(%rip), %rcx     # 0x1400232f0
14000bb60:     	leaq	0x1109d(%rip), %rdx     # 0x14001cc04
14000bb67:     	callq	*0xe5ab(%rip)           # 0x14001a118
14000bb6d:     	testq	%rax, %rax
14000bb70:     	je	0x14000c1c6 <.text+0xb1c6>
14000bb76:     	movq	%rax, 0x177ab(%rip)     # 0x140023328
14000bb7d:     	movl	$0x0, 0x1c8(%rsp)
14000bb88:     	leaq	0x1c8(%rsp), %rcx
14000bb90:     	movq	%rcx, 0x30(%rsp)
14000bb95:     	leaq	0xc0(%rsp), %rcx
14000bb9d:     	movq	%rcx, 0x28(%rsp)
14000bba2:     	movq	%rbx, 0x20(%rsp)
14000bba7:     	xorl	%r14d, %r14d
14000bbaa:     	movq	%rdi, %rcx
14000bbad:     	movq	%rbx, %rdx
14000bbb0:     	xorl	%r8d, %r8d
14000bbb3:     	movq	%rbx, %r9
14000bbb6:     	callq	*%rax
14000bbb8:     	movl	$0x0, %ecx
14000bbbd:     	cmpl	$0x1, %eax
14000bbc0:     	jne	0x14000bbcc <.text+0xabcc>
14000bbc2:     	movl	0xc0(%rsp), %r14d
14000bbca:     	movl	%ebp, %ecx
14000bbcc:     	leal	(%rcx,%r14), %esi
14000bbd0:     	incl	%esi
14000bbd2:     	cmpl	%esi, %r14d
14000bbd5:     	jae	0x14000c102 <.text+0xb102>
14000bbdb:     	leaq	0x1cc(%rsp), %r15
14000bbe3:     	leaq	0x1c8(%rsp), %r13
14000bbeb:     	xorps	%xmm6, %xmm6
14000bbee:     	leaq	0x48(%rsp), %r12
14000bbf3:     	movl	%esi, 0x38(%rsp)
14000bbf7:     	jmp	0x14000bc65 <.text+0xac65>
14000bbf9:     	nopl	(%rax)
14000bc00:     	movq	0x200(%rsp), %rax
14000bc08:     	movq	%r15, 0x48(%rsp)
14000bc0d:     	movq	%rdx, 0x50(%rsp)
14000bc12:     	movq	%r8, 0x58(%rsp)
14000bc17:     	movl	%r9d, 0x60(%rsp)
14000bc1c:     	movl	%ecx, 0x64(%rsp)
14000bc20:     	movq	%r10, 0x68(%rsp)
14000bc25:     	movq	%r13, 0x70(%rsp)
14000bc2a:     	movq	%rax, 0x78(%rsp)
14000bc2f:     	movq	0xb0(%rsp), %rcx
14000bc37:     	movq	%r12, %rdx
14000bc3a:     	movq	0x1240(%rsp), %rax
14000bc42:     	callq	*0x20(%rax)
14000bc45:     	movl	0x38(%rsp), %esi
14000bc49:     	leaq	0x1cc(%rsp), %r15
14000bc51:     	leaq	0x1c8(%rsp), %r13
14000bc59:     	incl	%r14d
14000bc5c:     	cmpl	%esi, %r14d
14000bc5f:     	je	0x14000c102 <.text+0xb102>
14000bc65:     	movl	$0xff4, %r8d            # imm = 0xFF4
14000bc6b:     	movq	%r15, %rcx
14000bc6e:     	xorl	%edx, %edx
14000bc70:     	callq	0x140018bf1 <.text+0x17bf1>
14000bc75:     	movl	$0x7d0, 0x218(%rsp)     # imm = 0x7D0
14000bc80:     	movl	$0x58, 0x1c8(%rsp)
14000bc8b:     	movq	0x1767e(%rip), %rax     # 0x140023310
14000bc92:     	testq	%rax, %rax
14000bc95:     	jne	0x14000bcbb <.text+0xacbb>
14000bc97:     	movq	0x17652(%rip), %rcx     # 0x1400232f0
14000bc9e:     	leaq	0x10f12(%rip), %rdx     # 0x14001cbb7
14000bca5:     	callq	*0xe46d(%rip)           # 0x14001a118
14000bcab:     	testq	%rax, %rax
14000bcae:     	je	0x14000c1c6 <.text+0xb1c6>
14000bcb4:     	movq	%rax, 0x17655(%rip)     # 0x140023310
14000bcbb:     	movq	$0x0, 0xc0(%rsp)
14000bcc7:     	movq	%r13, 0x20(%rsp)
14000bccc:     	movq	%rdi, %rcx
14000bccf:     	movq	%rbx, %rdx
14000bcd2:     	movl	%r14d, %r8d
14000bcd5:     	leaq	0xc0(%rsp), %rbp
14000bcdd:     	movq	%rbp, %r9
14000bce0:     	callq	*%rax
14000bce2:     	cmpl	$0x1, %eax
14000bce5:     	jne	0x14000bc59 <.text+0xac59>
14000bceb:     	movq	%r12, %rsi
14000bcee:     	movl	0x214(%rsp), %eax
14000bcf5:     	movl	0x218(%rsp), %ecx
14000bcfc:     	decq	%rcx
14000bcff:     	cmpq	%rcx, %rax
14000bd02:     	cmovbq	%rax, %rcx
14000bd06:     	movaps	%xmm6, 0x1b0(%rsp)
14000bd0e:     	movaps	%xmm6, 0x1a0(%rsp)
14000bd16:     	movaps	%xmm6, 0x190(%rsp)
14000bd1e:     	movaps	%xmm6, 0x180(%rsp)
14000bd26:     	movaps	%xmm6, 0x170(%rsp)
14000bd2e:     	movaps	%xmm6, 0x160(%rsp)
14000bd36:     	movaps	%xmm6, 0x150(%rsp)
14000bd3e:     	movaps	%xmm6, 0x140(%rsp)
14000bd46:     	movaps	%xmm6, 0x130(%rsp)
14000bd4e:     	movaps	%xmm6, 0x120(%rsp)
14000bd56:     	movaps	%xmm6, 0x110(%rsp)
14000bd5e:     	movaps	%xmm6, 0x100(%rsp)
14000bd66:     	movaps	%xmm6, 0xf0(%rsp)
14000bd6e:     	movaps	%xmm6, 0xe0(%rsp)
14000bd76:     	movaps	%xmm6, 0xd0(%rsp)
14000bd7e:     	movaps	%xmm6, 0xc0(%rsp)
14000bd86:     	leaq	0x21c(%rsp), %r9
14000bd8e:     	leaq	(%r9,%rcx,2), %rax
14000bd92:     	movl	$0x100, %r15d           # imm = 0x100
14000bd98:     	xorl	%r11d, %r11d
14000bd9b:     	movq	%rbp, %r8
14000bd9e:     	xorl	%r13d, %r13d
14000bda1:     	testw	%r11w, %r11w
14000bda5:     	je	0x14000bdc0 <.text+0xadc0>
14000bda7:     	nopw	(%rax,%rax)
14000bdb0:     	movl	%r10d, %edx
14000bdb3:     	jmp	0x14000bdd1 <.text+0xadd1>
14000bdb5:     	nopw	%cs:(%rax,%rax)
14000bdc0:     	cmpq	%rax, %r9
14000bdc3:     	je	0x14000c010 <.text+0xb010>
14000bdc9:     	movzwl	(%r9), %edx
14000bdcd:     	addq	$0x2, %r9
14000bdd1:     	movl	%edx, %ecx
14000bdd3:     	andl	$0xf800, %ecx           # imm = 0xF800
14000bdd9:     	movzwl	%dx, %r11d
14000bddd:     	cmpl	$0xd800, %ecx           # imm = 0xD800
14000bde3:     	jne	0x14000be00 <.text+0xae00>
14000bde5:     	movl	$0xfffd, %ecx           # imm = 0xFFFD
14000bdea:     	cmpl	$0xdbff, %r11d          # imm = 0xDBFF
14000bdf1:     	jbe	0x14000be30 <.text+0xae30>
14000bdf3:     	xorl	%r11d, %r11d
14000bdf6:     	jmp	0x14000bee0 <.text+0xaee0>
14000bdfb:     	nopl	(%rax,%rax)
14000be00:     	shlq	$0x10, %r11
14000be04:     	movq	%r11, %rcx
14000be07:     	shrq	$0x10, %rcx
14000be0b:     	cmpl	$0x80, %ecx
14000be11:     	jae	0x14000bea0 <.text+0xaea0>
14000be17:     	movl	$0x1, %r12d
14000be1d:     	xorl	%r11d, %r11d
14000be20:     	jmp	0x14000bee6 <.text+0xaee6>
14000be25:     	nopw	%cs:(%rax,%rax)
14000be30:     	cmpq	%rax, %r9
14000be33:     	je	0x14000be60 <.text+0xae60>
14000be35:     	movzwl	(%r9), %r12d
14000be39:     	addq	$0x2, %r9
14000be3d:     	movl	%r12d, %r11d
14000be40:     	addl	$0x2000, %r11d          # imm = 0x2000
14000be47:     	movzwl	%r11w, %ebp
14000be4b:     	movw	$0x1, %r11w
14000be50:     	cmpl	$0xfc00, %ebp           # imm = 0xFC00
14000be56:     	jae	0x14000be68 <.text+0xae68>
14000be58:     	movl	%r12d, %r10d
14000be5b:     	jmp	0x14000bee0 <.text+0xaee0>
14000be60:     	xorl	%r11d, %r11d
14000be63:     	movq	%rax, %r9
14000be66:     	jmp	0x14000bee0 <.text+0xaee0>
14000be68:     	movzwl	%r12w, %ecx
14000be6c:     	andl	$0x3ff, %edx            # imm = 0x3FF
14000be72:     	andl	$0x3ff, %ecx            # imm = 0x3FF
14000be78:     	shlq	$0x1a, %rdx
14000be7c:     	shlq	$0x10, %rcx
14000be80:     	orq	%rdx, %rcx
14000be83:     	movabsq	$0x100000000, %rdx      # imm = 0x100000000
14000be8d:     	addq	%rdx, %rcx
14000be90:     	shrq	$0x10, %rcx
14000be94:     	cmpl	$0x80, %ecx
14000be9a:     	jb	0x14000be17 <.text+0xae17>
14000bea0:     	cmpl	$0x800, %ecx            # imm = 0x800
14000bea6:     	jae	0x14000bec0 <.text+0xaec0>
14000bea8:     	movl	$0x2, %r12d
14000beae:     	xorl	%r11d, %r11d
14000beb1:     	jmp	0x14000bee6 <.text+0xaee6>
14000beb3:     	nopw	%cs:(%rax,%rax)
14000bec0:     	movl	$0x4, %r12d
14000bec6:     	xorl	%r11d, %r11d
14000bec9:     	cmpl	$0xffff, %ecx           # imm = 0xFFFF
14000becf:     	ja	0x14000bee6 <.text+0xaee6>
14000bed1:     	nopw	%cs:(%rax,%rax)
14000bee0:     	movl	$0x3, %r12d
14000bee6:     	movq	%r15, %rdx
14000bee9:     	subq	%r12, %rdx
14000beec:     	jbe	0x14000c010 <.text+0xb010>
14000bef2:     	movl	%ecx, 0x3c(%rsp)
14000bef6:     	cmpl	$0x80, %ecx
14000befc:     	jae	0x14000bf10 <.text+0xaf10>
14000befe:     	movb	%cl, (%r8)
14000bf01:     	movl	$0x1, %ecx
14000bf06:     	jmp	0x14000bfe0 <.text+0xafe0>
14000bf0b:     	nopl	(%rax,%rax)
14000bf10:     	cmpl	$0x800, %ecx            # imm = 0x800
14000bf16:     	jae	0x14000bf40 <.text+0xaf40>
14000bf18:     	movl	%ecx, %ebp
14000bf1a:     	shrl	$0x6, %ebp
14000bf1d:     	orb	$-0x40, %bpl
14000bf21:     	movb	%bpl, (%r8)
14000bf24:     	andb	$0x3f, %cl
14000bf27:     	orb	$-0x80, %cl
14000bf2a:     	movb	%cl, 0x1(%r8)
14000bf2e:     	movl	$0x2, %ecx
14000bf33:     	jmp	0x14000bfe0 <.text+0xafe0>
14000bf38:     	nopl	(%rax,%rax)
14000bf40:     	cmpl	$0x10000, %ecx          # imm = 0x10000
14000bf46:     	jae	0x14000bf89 <.text+0xaf89>
14000bf48:     	movq	$0x3, 0x40(%rsp)
14000bf51:     	cmpq	$0x2, %r15
14000bf55:     	jbe	0x14000c12f <.text+0xb12f>
14000bf5b:     	movl	%ecx, %ebp
14000bf5d:     	shrl	$0xc, %ebp
14000bf60:     	orb	$-0x20, %bpl
14000bf64:     	movb	%bpl, (%r8)
14000bf67:     	movl	%ecx, %ebp
14000bf69:     	shrl	$0x6, %ebp
14000bf6c:     	andb	$0x3f, %bpl
14000bf70:     	orb	$-0x80, %bpl
14000bf74:     	movb	%bpl, 0x1(%r8)
14000bf78:     	andb	$0x3f, %cl
14000bf7b:     	orb	$-0x80, %cl
14000bf7e:     	movb	%cl, 0x2(%r8)
14000bf82:     	movl	$0x3, %ecx
14000bf87:     	jmp	0x14000bfe0 <.text+0xafe0>
14000bf89:     	movq	$0x4, 0x40(%rsp)
14000bf92:     	cmpq	$0x3, %r15
14000bf96:     	jbe	0x14000c12f <.text+0xb12f>
14000bf9c:     	movl	%ecx, %ebp
14000bf9e:     	shrl	$0x12, %ebp
14000bfa1:     	orb	$-0x10, %bpl
14000bfa5:     	movb	%bpl, (%r8)
14000bfa8:     	movl	%ecx, %ebp
14000bfaa:     	shrl	$0xc, %ebp
14000bfad:     	andb	$0x3f, %bpl
14000bfb1:     	orb	$-0x80, %bpl
14000bfb5:     	movb	%bpl, 0x1(%r8)
14000bfb9:     	movl	%ecx, %ebp
14000bfbb:     	shrl	$0x6, %ebp
14000bfbe:     	andb	$0x3f, %bpl
14000bfc2:     	orb	$-0x80, %bpl
14000bfc6:     	movb	%bpl, 0x2(%r8)
14000bfca:     	andb	$0x3f, %cl
14000bfcd:     	orb	$-0x80, %cl
14000bfd0:     	movb	%cl, 0x3(%r8)
14000bfd4:     	movl	$0x4, %ecx
14000bfd9:     	nopl	(%rax)
14000bfe0:     	cmpq	%r15, %rcx
14000bfe3:     	ja	0x14000c11e <.text+0xb11e>
14000bfe9:     	addq	%r12, %r8
14000bfec:     	addq	%r12, %r13
14000bfef:     	movq	%rdx, %r15
14000bff2:     	testw	%r11w, %r11w
14000bff6:     	jne	0x14000bdb0 <.text+0xadb0>
14000bffc:     	jmp	0x14000bdc0 <.text+0xadc0>
14000c001:     	nopw	%cs:(%rax,%rax)
14000c010:     	cmpq	$0x101, %r13            # imm = 0x101
14000c017:     	jae	0x14000c1e0 <.text+0xb1e0>
14000c01d:     	movaps	%xmm6, 0x80(%rsp)
14000c025:     	movaps	%xmm6, 0x90(%rsp)
14000c02d:     	movq	$0x0, 0xa0(%rsp)
14000c039:     	movl	$0x28, 0x80(%rsp)
14000c044:     	movq	0x172cd(%rip), %rax     # 0x140023318
14000c04b:     	testq	%rax, %rax
14000c04e:     	movq	%rsi, %r12
14000c051:     	jne	0x14000c077 <.text+0xb077>
14000c053:     	movq	0x17296(%rip), %rcx     # 0x1400232f0
14000c05a:     	leaq	0x10b6c(%rip), %rdx     # 0x14001cbcd
14000c061:     	callq	*0xe0b1(%rip)           # 0x14001a118
14000c067:     	testq	%rax, %rax
14000c06a:     	je	0x14000c1c6 <.text+0xb1c6>
14000c070:     	movq	%rax, 0x172a1(%rip)     # 0x140023318
14000c077:     	movl	$0x0, 0x48(%rsp)
14000c07f:     	leaq	0x80(%rsp), %rcx
14000c087:     	movq	%rcx, 0x28(%rsp)
14000c08c:     	movq	%r12, 0x20(%rsp)
14000c091:     	xorl	%r15d, %r15d
14000c094:     	movq	%rdi, %rcx
14000c097:     	movq	%rbx, %rdx
14000c09a:     	movl	%r14d, %r8d
14000c09d:     	xorl	%r9d, %r9d
14000c0a0:     	callq	*%rax
14000c0a2:     	movl	$0x0, %r9d
14000c0a8:     	cmpl	$0x1, %eax
14000c0ab:     	leaq	0xc0(%rsp), %r10
14000c0b3:     	jne	0x14000bc00 <.text+0xac00>
14000c0b9:     	movl	0x90(%rsp), %ecx
14000c0c0:     	movq	$-0x1, %r8
14000c0c7:     	movq	0x98(%rsp), %rdx
14000c0cf:     	nop
14000c0d0:     	cmpw	$0x0, 0x2(%rdx,%r8,2)
14000c0d7:     	leaq	0x1(%r8), %r8
14000c0db:     	jne	0x14000c0d0 <.text+0xb0d0>
14000c0dd:     	movl	$0x1, %r9d
14000c0e3:     	movl	$0x1, %r15d
14000c0e9:     	jmp	0x14000bc00 <.text+0xac00>
14000c0ee:     	xorl	%r14d, %r14d
14000c0f1:     	xorl	%ecx, %ecx
14000c0f3:     	leal	(%rcx,%r14), %esi
14000c0f7:     	incl	%esi
14000c0f9:     	cmpl	%esi, %r14d
14000c0fc:     	jb	0x14000bbdb <.text+0xabdb>
14000c102:     	movaps	0x11c0(%rsp), %xmm6
14000c10a:     	addq	$0x11d8, %rsp           # imm = 0x11D8
14000c111:     	popq	%rbx
14000c112:     	popq	%rbp
14000c113:     	popq	%rdi
14000c114:     	popq	%rsi
14000c115:     	popq	%r12
14000c117:     	popq	%r13
14000c119:     	popq	%r14
14000c11b:     	popq	%r15
14000c11d:     	retq
14000c11e:     	leaq	0xe743(%rip), %r8       # 0x14001a868
14000c125:     	movq	%r15, %rdx
14000c128:     	callq	0x140019cd0 <.text+0x18cd0>
14000c12d:     	ud2
14000c12f:     	movq	%r15, 0xb8(%rsp)
14000c137:     	leaq	0x40(%rsp), %rax
14000c13c:     	movq	%rax, 0x48(%rsp)
14000c141:     	leaq	0xbcc8(%rip), %rax      # 0x140017e10 <.text+0x16e10>
14000c148:     	movq	%rax, 0x50(%rsp)
14000c14d:     	leaq	0x3c(%rsp), %rcx
14000c152:     	movq	%rcx, 0x58(%rsp)
14000c157:     	leaq	0xb5a2(%rip), %rcx      # 0x140017700 <.text+0x16700>
14000c15e:     	movq	%rcx, 0x60(%rsp)
14000c163:     	leaq	0xb8(%rsp), %rcx
14000c16b:     	movq	%rcx, 0x68(%rsp)
14000c170:     	movq	%rax, 0x70(%rsp)
14000c175:     	leaq	0xe744(%rip), %rax      # 0x14001a8c0
14000c17c:     	movq	%rax, 0x80(%rsp)
14000c184:     	movq	$0x3, 0x88(%rsp)
14000c190:     	movq	$0x0, 0xa0(%rsp)
14000c19c:     	movq	%rsi, 0x90(%rsp)
14000c1a4:     	movq	$0x3, 0x98(%rsp)
14000c1b0:     	leaq	0xe739(%rip), %rdx      # 0x14001a8f0
14000c1b7:     	leaq	0x80(%rsp), %rcx
14000c1bf:     	callq	0x1400197d0 <.text+0x187d0>
14000c1c4:     	ud2
14000c1c6:     	leaq	0xe4a3(%rip), %rcx      # 0x14001a670
14000c1cd:     	leaq	0x10a44(%rip), %r8      # 0x14001cc18
14000c1d4:     	movl	$0x2b, %edx
14000c1d9:     	callq	0x140019880 <.text+0x18880>
14000c1de:     	ud2
14000c1e0:     	leaq	0x10981(%rip), %r8      # 0x14001cb68
14000c1e7:     	movl	$0x100, %edx            # imm = 0x100
14000c1ec:     	movq	%r13, %rcx
14000c1ef:     	callq	0x140019cd0 <.text+0x18cd0>
14000c1f4:     	ud2
14000c1f6:     	int3
14000c1f7:     	int3
14000c1f8:     	int3
14000c1f9:     	int3
14000c1fa:     	int3
14000c1fb:     	int3
14000c1fc:     	int3
14000c1fd:     	int3
14000c1fe:     	int3
14000c1ff:     	int3
14000c200:     	movl	0x1713a(%rip), %eax     # 0x140023340
14000c206:     	movq	%gs:0x58, %rdx
14000c20f:     	movq	(%rdx,%rax,8), %rax
14000c213:     	movb	$0x2, 0x40(%rax)
14000c21a:     	movq	(%rcx), %rax
14000c21d:     	testq	%rax, %rax
14000c220:     	je	0x14000c22d <.text+0xb22d>
14000c222:     	lock
14000c223:     	decq	(%rax)
14000c226:     	jne	0x14000c22d <.text+0xb22d>
14000c228:     	jmp	0x1400028f0 <.text+0x18f0>
14000c22d:     	retq
14000c22e:     	int3
14000c22f:     	int3
14000c230:     	pushq	%rbp
14000c231:     	subq	$0x40, %rsp
14000c235:     	leaq	0x40(%rsp), %rbp
14000c23a:     	movq	$-0x2, -0x8(%rbp)
14000c242:     	movq	%rcx, -0x18(%rbp)
14000c246:     	movq	%rdx, -0x10(%rbp)
14000c24a:     	callq	*(%rdx)
14000c24c:     	movq	-0x10(%rbp), %rax
14000c250:     	movq	0x8(%rax), %rdx
14000c254:     	testq	%rdx, %rdx
14000c257:     	je	0x14000c26b <.text+0xb26b>
14000c259:     	movq	0x10(%rax), %r8
14000c25d:     	movq	-0x18(%rbp), %rcx
14000c261:     	addq	$0x40, %rsp
14000c265:     	popq	%rbp
14000c266:     	jmp	0x140001350 <.text+0x350>
14000c26b:     	nop
14000c26c:     	addq	$0x40, %rsp
14000c270:     	popq	%rbp
14000c271:     	retq
14000c272:     	nopw	%cs:(%rax,%rax)
14000c280:     	movq	%rdx, 0x10(%rsp)
14000c285:     	pushq	%rbp
14000c286:     	subq	$0x20, %rsp
14000c28a:     	leaq	0x40(%rdx), %rbp
14000c28e:     	movq	-0x10(%rbp), %rax
14000c292:     	movq	0x8(%rax), %rdx
14000c296:     	testq	%rdx, %rdx
14000c299:     	je	0x14000c2ac <.text+0xb2ac>
14000c29b:     	movq	-0x10(%rbp), %rax
14000c29f:     	movq	0x10(%rax), %r8
14000c2a3:     	movq	-0x18(%rbp), %rcx
14000c2a7:     	callq	0x140001350 <.text+0x350>
14000c2ac:     	nop
14000c2ad:     	addq	$0x20, %rsp
14000c2b1:     	popq	%rbp
14000c2b2:     	retq
14000c2b3:     	int3
14000c2b4:     	int3
14000c2b5:     	int3
14000c2b6:     	int3
14000c2b7:     	int3
14000c2b8:     	int3
14000c2b9:     	int3
14000c2ba:     	int3
14000c2bb:     	int3
14000c2bc:     	int3
14000c2bd:     	int3
14000c2be:     	int3
14000c2bf:     	int3
14000c2c0:     	pushq	%rbp
14000c2c1:     	subq	$0x30, %rsp
14000c2c5:     	leaq	0x30(%rsp), %rbp
14000c2ca:     	movq	$-0x2, -0x8(%rbp)
14000c2d2:     	testq	%rdx, %rdx
14000c2d5:     	je	0x14000c308 <.text+0xb308>
14000c2d7:     	leaq	0x16da2(%rip), %rax     # 0x140023080
14000c2de:     	cmpq	%rax, (%rdx)
14000c2e1:     	jne	0x14000c308 <.text+0xb308>
14000c2e3:     	movq	0x8(%rdx), %rax
14000c2e7:     	movq	0x10(%rdx), %r8
14000c2eb:     	movq	$0x0, 0x8(%rdx)
14000c2f3:     	testq	%rax, %rax
14000c2f6:     	je	0x14000c30f <.text+0xb30f>
14000c2f8:     	movq	%rax, (%rcx)
14000c2fb:     	movq	%r8, 0x8(%rcx)
14000c2ff:     	movq	%rcx, %rax
14000c302:     	addq	$0x30, %rsp
14000c306:     	popq	%rbp
14000c307:     	retq
14000c308:     	callq	0x1400081a0 <.text+0x71a0>
14000c30d:     	ud2
14000c30f:     	leaq	0x10b06(%rip), %rcx     # 0x14001ce1c
14000c316:     	leaq	0x10b4b(%rip), %r8      # 0x14001ce68
14000c31d:     	movl	$0x2b, %edx
14000c322:     	callq	0x140019880 <.text+0x18880>
14000c327:     	ud2
14000c329:     	nopl	(%rax)
14000c330:     	movq	%rdx, 0x10(%rsp)
14000c335:     	pushq	%rbp
14000c336:     	subq	$0x20, %rsp
14000c33a:     	leaq	0x30(%rdx), %rbp
14000c33e:     	callq	0x1400199a0 <.text+0x189a0>
14000c343:     	ud2
14000c345:     	int3
14000c346:     	int3
14000c347:     	int3
14000c348:     	int3
14000c349:     	int3
14000c34a:     	int3
14000c34b:     	int3
14000c34c:     	int3
14000c34d:     	int3
14000c34e:     	int3
14000c34f:     	int3
14000c350:     	subq	$0x38, %rsp
14000c354:     	callq	*0x18(%rdx)
14000c357:     	leaq	0x16d22(%rip), %rcx     # 0x140023080
14000c35e:     	movq	%rcx, 0x20(%rsp)
14000c363:     	movq	%rax, 0x28(%rsp)
14000c368:     	movq	%rdx, 0x30(%rsp)
14000c36d:     	leaq	0x5c(%rip), %rax        # 0x14000c3d0 <.text+0xb3d0>
14000c374:     	leaq	-0xc37b(%rip), %r8      # 0x140000000
14000c37b:     	subl	%r8d, %eax
14000c37e:     	xchgl	%eax, 0x16fb0(%rip)     # 0x140023334
14000c384:     	leaq	0x16ccd(%rip), %rax     # 0x140023058
14000c38b:     	subl	%r8d, %eax
14000c38e:     	xchgl	%eax, 0x16fa8(%rip)     # 0x14002333c
14000c394:     	leaq	0x16f95(%rip), %rdx     # 0x140023330
14000c39b:     	leaq	0x16cbe(%rip), %rax     # 0x140023060
14000c3a2:     	subl	%r8d, %eax
14000c3a5:     	xchgl	%eax, 0x16cb1(%rip)     # 0x14002305c
14000c3ab:     	subl	%r8d, %ecx
14000c3ae:     	xchgl	%ecx, 0x16cb0(%rip)     # 0x140023064
14000c3b4:     	leaq	0x75(%rip), %rax        # 0x14000c430 <.text+0xb430>
14000c3bb:     	subl	%r8d, %eax
14000c3be:     	xchgl	%eax, 0x16cb4(%rip)     # 0x140023078
14000c3c4:     	leaq	0x20(%rsp), %rcx
14000c3c9:     	callq	0x140018c03 <.text+0x17c03>
14000c3ce:     	ud2
14000c3d0:     	pushq	%rbp
14000c3d1:     	subq	$0x30, %rsp
14000c3d5:     	leaq	0x30(%rsp), %rbp
14000c3da:     	movq	$-0x2, -0x8(%rbp)
14000c3e2:     	movq	%rcx, %rax
14000c3e5:     	movq	0x8(%rcx), %rcx
14000c3e9:     	testq	%rcx, %rcx
14000c3ec:     	jne	0x14000c3f4 <.text+0xb3f4>
14000c3ee:     	addq	$0x30, %rsp
14000c3f2:     	popq	%rbp
14000c3f3:     	retq
14000c3f4:     	movq	0x10(%rax), %rdx
14000c3f8:     	callq	0x14000c230 <.text+0xb230>
14000c3fd:     	callq	0x1400080a0 <.text+0x70a0>
14000c402:     	ud2
14000c404:     	nopw	%cs:(%rax,%rax)
14000c410:     	movq	%rdx, 0x10(%rsp)
14000c415:     	pushq	%rbp
14000c416:     	subq	$0x20, %rsp
14000c41a:     	leaq	0x30(%rdx), %rbp
14000c41e:     	callq	0x1400199a0 <.text+0x189a0>
14000c423:     	ud2
14000c425:     	int3
14000c426:     	int3
14000c427:     	int3
14000c428:     	int3
14000c429:     	int3
14000c42a:     	int3
14000c42b:     	int3
14000c42c:     	int3
14000c42d:     	int3
14000c42e:     	int3
14000c42f:     	int3
14000c430:     	subq	$0x58, %rsp
14000c434:     	leaq	0x10a65(%rip), %rax     # 0x14001cea0
14000c43b:     	movq	%rax, 0x28(%rsp)
14000c440:     	movq	$0x1, 0x30(%rsp)
14000c449:     	leaq	0x10a60(%rip), %rax     # 0x14001ceb0
14000c450:     	movq	%rax, 0x38(%rsp)
14000c455:     	xorps	%xmm0, %xmm0
14000c458:     	movups	%xmm0, 0x40(%rsp)
14000c45d:     	leaq	0x10a4c(%rip), %rdx     # 0x14001ceb0
14000c464:     	leaq	0x28(%rsp), %rcx
14000c469:     	callq	0x1400197d0 <.text+0x187d0>
14000c46e:     	ud2
14000c470:     	pushq	%rsi
14000c471:     	pushq	%rdi
14000c472:     	subq	$0xb8, %rsp
14000c479:     	movq	0x8(%rcx), %r8
14000c47d:     	movq	0x20(%rcx), %rdx
14000c481:     	movl	$0x110001, %eax         # imm = 0x110001
14000c486:     	subq	%rdx, %r8
14000c489:     	jb	0x14000c89e <.text+0xb89e>
14000c48f:     	movq	(%rcx), %rax
14000c492:     	leaq	(%rax,%rdx), %r9
14000c496:     	movq	%r9, (%rcx)
14000c499:     	movq	%r8, 0x8(%rcx)
14000c49d:     	cmpq	$0x2, %rdx
14000c4a1:     	jne	0x14000c8fb <.text+0xb8fb>
14000c4a7:     	movzbl	(%rax), %r10d
14000c4ab:     	movzbl	0x1(%rax), %edx
14000c4af:     	leal	-0x30(%r10), %eax
14000c4b3:     	cmpl	$0xa, %eax
14000c4b6:     	jb	0x14000c4d6 <.text+0xb4d6>
14000c4b8:     	orl	$0x20, %r10d
14000c4bc:     	addl	$-0x61, %r10d
14000c4c0:     	addl	$0xa, %r10d
14000c4c4:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
14000c4c9:     	cmovael	%r10d, %eax
14000c4cd:     	cmpl	$0x10, %eax
14000c4d0:     	jae	0x14000c8e1 <.text+0xb8e1>
14000c4d6:     	leal	-0x30(%rdx), %r10d
14000c4da:     	cmpl	$0xa, %r10d
14000c4de:     	jb	0x14000c4fd <.text+0xb4fd>
14000c4e0:     	orl	$0x20, %edx
14000c4e3:     	addl	$-0x61, %edx
14000c4e6:     	addl	$0xa, %edx
14000c4e9:     	movl	$0xffffffff, %r10d      # imm = 0xFFFFFFFF
14000c4ef:     	cmovael	%edx, %r10d
14000c4f3:     	cmpl	$0x10, %r10d
14000c4f7:     	jae	0x14000c8e1 <.text+0xb8e1>
14000c4fd:     	shlb	$0x4, %al
14000c500:     	orb	%al, %r10b
14000c503:     	js	0x14000c54e <.text+0xb54e>
14000c505:     	movb	%r10b, 0x2c(%rsp)
14000c50a:     	movw	$0x0, 0x2d(%rsp)
14000c511:     	movb	$0x0, 0x2f(%rsp)
14000c516:     	leaq	0x2c(%rsp), %rdx
14000c51b:     	movq	%rdx, 0x30(%rsp)
14000c520:     	movq	$0x1, 0x38(%rsp)
14000c529:     	movl	$0x1, %r8d
14000c52f:     	leaq	0x48(%rsp), %rsi
14000c534:     	movq	%rsi, %rcx
14000c537:     	callq	0x140016080 <.text+0x15080>
14000c53c:     	cmpq	$0x0, 0x48(%rsp)
14000c542:     	je	0x14000c56c <.text+0xb56c>
14000c544:     	movl	$0x110000, %eax         # imm = 0x110000
14000c549:     	jmp	0x14000c89e <.text+0xb89e>
14000c54e:     	movl	$0x110000, %eax         # imm = 0x110000
14000c553:     	cmpb	$-0x40, %r10b
14000c557:     	jb	0x14000c89e <.text+0xb89e>
14000c55d:     	cmpb	$-0x20, %r10b
14000c561:     	jae	0x14000c5b2 <.text+0xb5b2>
14000c563:     	movl	$0x2, %edx
14000c568:     	xorl	%eax, %eax
14000c56a:     	jmp	0x14000c5c3 <.text+0xb5c3>
14000c56c:     	movq	0x50(%rsp), %rcx
14000c571:     	movq	0x58(%rsp), %rax
14000c576:     	movq	%rcx, 0x78(%rsp)
14000c57b:     	movq	%rax, 0x80(%rsp)
14000c583:     	leaq	(%rcx,%rax), %rdx
14000c587:     	testq	%rax, %rax
14000c58a:     	je	0x14000c5a5 <.text+0xb5a5>
14000c58c:     	movzbl	(%rcx), %r9d
14000c590:     	testb	%r9b, %r9b
14000c593:     	js	0x14000c67d <.text+0xb67d>
14000c599:     	leaq	0x1(%rcx), %r8
14000c59d:     	movl	%r9d, %eax
14000c5a0:     	jmp	0x14000c81e <.text+0xb81e>
14000c5a5:     	movl	$0x110000, %eax         # imm = 0x110000
14000c5aa:     	movq	%rcx, %r8
14000c5ad:     	jmp	0x14000c81e <.text+0xb81e>
14000c5b2:     	cmpb	$-0x10, %r10b
14000c5b6:     	jae	0x14000c6d2 <.text+0xb6d2>
14000c5bc:     	movl	$0x3, %edx
14000c5c1:     	movb	$0x1, %al
14000c5c3:     	movb	%r10b, 0x2c(%rsp)
14000c5c8:     	movw	$0x0, 0x2d(%rsp)
14000c5cf:     	movb	$0x0, 0x2f(%rsp)
14000c5d4:     	leaq	0x2c(%rsp), %r11
14000c5d9:     	movq	%r11, 0x30(%rsp)
14000c5de:     	movq	%rdx, 0x38(%rsp)
14000c5e3:     	cmpq	$0x2, %r8
14000c5e7:     	jb	0x14000c544 <.text+0xb544>
14000c5ed:     	leaq	0x2(%r9), %rdx
14000c5f1:     	leaq	-0x2(%r8), %r11
14000c5f5:     	movq	%rdx, (%rcx)
14000c5f8:     	movq	%r11, 0x8(%rcx)
14000c5fc:     	movzbl	(%r9), %edi
14000c600:     	movzbl	0x1(%r9), %edx
14000c605:     	leal	-0x30(%rdi), %esi
14000c608:     	cmpl	$0xa, %esi
14000c60b:     	jb	0x14000c627 <.text+0xb627>
14000c60d:     	orl	$0x20, %edi
14000c610:     	addl	$-0x61, %edi
14000c613:     	addl	$0xa, %edi
14000c616:     	movl	$0xffffffff, %esi       # imm = 0xFFFFFFFF
14000c61b:     	cmovael	%edi, %esi
14000c61e:     	cmpl	$0xf, %esi
14000c621:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c627:     	leal	-0x30(%rdx), %edi
14000c62a:     	cmpl	$0xa, %edi
14000c62d:     	jb	0x14000c649 <.text+0xb649>
14000c62f:     	orl	$0x20, %edx
14000c632:     	addl	$-0x61, %edx
14000c635:     	addl	$0xa, %edx
14000c638:     	movl	$0xffffffff, %edi       # imm = 0xFFFFFFFF
14000c63d:     	cmovael	%edx, %edi
14000c640:     	cmpl	$0xf, %edi
14000c643:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c649:     	movq	0x38(%rsp), %rdx
14000c64e:     	cmpq	$0x2, %rdx
14000c652:     	jb	0x14000c8a8 <.text+0xb8a8>
14000c658:     	shlb	$0x4, %sil
14000c65c:     	orb	%sil, %dil
14000c65f:     	movq	0x30(%rsp), %rdx
14000c664:     	movb	%dil, 0x1(%rdx)
14000c668:     	cmpb	$-0x20, %r10b
14000c66c:     	jae	0x14000c6e6 <.text+0xb6e6>
14000c66e:     	movq	0x30(%rsp), %rdx
14000c673:     	movq	0x38(%rsp), %r8
14000c678:     	jmp	0x14000c52f <.text+0xb52f>
14000c67d:     	movl	%r9d, %eax
14000c680:     	andl	$0x1f, %eax
14000c683:     	movzbl	0x1(%rcx), %r11d
14000c688:     	andl	$0x3f, %r11d
14000c68c:     	cmpb	$-0x21, %r9b
14000c690:     	jbe	0x14000c808 <.text+0xb808>
14000c696:     	movzbl	0x2(%rcx), %r10d
14000c69b:     	shll	$0x6, %r11d
14000c69f:     	andl	$0x3f, %r10d
14000c6a3:     	orl	%r11d, %r10d
14000c6a6:     	cmpb	$-0x10, %r9b
14000c6aa:     	jb	0x14000c814 <.text+0xb814>
14000c6b0:     	leaq	0x4(%rcx), %r8
14000c6b4:     	movzbl	0x3(%rcx), %r9d
14000c6b9:     	andl	$0x7, %eax
14000c6bc:     	shll	$0x12, %eax
14000c6bf:     	shll	$0x6, %r10d
14000c6c3:     	andl	$0x3f, %r9d
14000c6c7:     	orl	%r10d, %r9d
14000c6ca:     	orl	%r9d, %eax
14000c6cd:     	jmp	0x14000c81e <.text+0xb81e>
14000c6d2:     	cmpb	$-0x8, %r10b
14000c6d6:     	jae	0x14000c89e <.text+0xb89e>
14000c6dc:     	movl	$0x4, %edx
14000c6e1:     	jmp	0x14000c568 <.text+0xb568>
14000c6e6:     	cmpq	$0x2, %r11
14000c6ea:     	jb	0x14000c544 <.text+0xb544>
14000c6f0:     	leaq	0x4(%r9), %rdx
14000c6f4:     	leaq	-0x4(%r8), %r10
14000c6f8:     	movq	%rdx, (%rcx)
14000c6fb:     	movq	%r10, 0x8(%rcx)
14000c6ff:     	movzbl	0x2(%r9), %esi
14000c704:     	movzbl	0x3(%r9), %edx
14000c709:     	leal	-0x30(%rsi), %r11d
14000c70d:     	cmpl	$0xa, %r11d
14000c711:     	jb	0x14000c730 <.text+0xb730>
14000c713:     	orl	$0x20, %esi
14000c716:     	addl	$-0x61, %esi
14000c719:     	addl	$0xa, %esi
14000c71c:     	movl	$0xffffffff, %r11d      # imm = 0xFFFFFFFF
14000c722:     	cmovael	%esi, %r11d
14000c726:     	cmpl	$0xf, %r11d
14000c72a:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c730:     	leal	-0x30(%rdx), %esi
14000c733:     	cmpl	$0xa, %esi
14000c736:     	jb	0x14000c752 <.text+0xb752>
14000c738:     	orl	$0x20, %edx
14000c73b:     	addl	$-0x61, %edx
14000c73e:     	addl	$0xa, %edx
14000c741:     	movl	$0xffffffff, %esi       # imm = 0xFFFFFFFF
14000c746:     	cmovael	%edx, %esi
14000c749:     	cmpl	$0xf, %esi
14000c74c:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c752:     	movq	0x38(%rsp), %rdx
14000c757:     	cmpq	$0x3, %rdx
14000c75b:     	jb	0x14000c8bb <.text+0xb8bb>
14000c761:     	shlb	$0x4, %r11b
14000c765:     	orb	%r11b, %sil
14000c768:     	movq	0x30(%rsp), %rdx
14000c76d:     	movb	%sil, 0x2(%rdx)
14000c771:     	testb	%al, %al
14000c773:     	jne	0x14000c66e <.text+0xb66e>
14000c779:     	cmpq	$0x2, %r10
14000c77d:     	jb	0x14000c544 <.text+0xb544>
14000c783:     	leaq	0x6(%r9), %rax
14000c787:     	addq	$-0x6, %r8
14000c78b:     	movq	%rax, (%rcx)
14000c78e:     	movq	%r8, 0x8(%rcx)
14000c792:     	movzbl	0x4(%r9), %edx
14000c797:     	movzbl	0x5(%r9), %ecx
14000c79c:     	leal	-0x30(%rdx), %eax
14000c79f:     	cmpl	$0xa, %eax
14000c7a2:     	jb	0x14000c7be <.text+0xb7be>
14000c7a4:     	orl	$0x20, %edx
14000c7a7:     	addl	$-0x61, %edx
14000c7aa:     	addl	$0xa, %edx
14000c7ad:     	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
14000c7b2:     	cmovael	%edx, %eax
14000c7b5:     	cmpl	$0xf, %eax
14000c7b8:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c7be:     	leal	-0x30(%rcx), %r8d
14000c7c2:     	cmpl	$0xa, %r8d
14000c7c6:     	jb	0x14000c7e5 <.text+0xb7e5>
14000c7c8:     	orl	$0x20, %ecx
14000c7cb:     	addl	$-0x61, %ecx
14000c7ce:     	addl	$0xa, %ecx
14000c7d1:     	movl	$0xffffffff, %r8d       # imm = 0xFFFFFFFF
14000c7d7:     	cmovael	%ecx, %r8d
14000c7db:     	cmpl	$0xf, %r8d
14000c7df:     	ja	0x14000c8e1 <.text+0xb8e1>
14000c7e5:     	movq	0x38(%rsp), %rdx
14000c7ea:     	cmpq	$0x4, %rdx
14000c7ee:     	jb	0x14000c8ce <.text+0xb8ce>
14000c7f4:     	shlb	$0x4, %al
14000c7f7:     	orb	%al, %r8b
14000c7fa:     	movq	0x30(%rsp), %rax
14000c7ff:     	movb	%r8b, 0x3(%rax)
14000c803:     	jmp	0x14000c66e <.text+0xb66e>
14000c808:     	leaq	0x2(%rcx), %r8
14000c80c:     	shll	$0x6, %eax
14000c80f:     	orl	%r11d, %eax
14000c812:     	jmp	0x14000c81e <.text+0xb81e>
14000c814:     	leaq	0x3(%rcx), %r8
14000c818:     	shll	$0xc, %eax
14000c81b:     	orl	%r10d, %eax
14000c81e:     	cmpq	%rdx, %r8
14000c821:     	je	0x14000c88f <.text+0xb88f>
14000c823:     	movzbl	(%r8), %r9d
14000c827:     	testb	%r9b, %r9b
14000c82a:     	jns	0x14000c915 <.text+0xb915>
14000c830:     	cmpb	$-0x20, %r9b
14000c834:     	jb	0x14000c915 <.text+0xb915>
14000c83a:     	cmpb	$-0x10, %r9b
14000c83e:     	jb	0x14000c915 <.text+0xb915>
14000c844:     	movzbl	0x1(%r8), %r10d
14000c849:     	andl	$0x3f, %r10d
14000c84d:     	movzbl	0x2(%r8), %r11d
14000c852:     	andl	$0x3f, %r11d
14000c856:     	movzbl	0x3(%r8), %r8d
14000c85b:     	andl	$0x7, %r9d
14000c85f:     	shll	$0x12, %r9d
14000c863:     	shll	$0xc, %r10d
14000c867:     	shll	$0x6, %r11d
14000c86b:     	orl	%r10d, %r11d
14000c86e:     	andl	$0x3f, %r8d
14000c872:     	orl	%r11d, %r8d
14000c875:     	orl	%r9d, %r8d
14000c878:     	cmpl	$0x110000, %r8d         # imm = 0x110000
14000c87f:     	sete	%r8b
14000c883:     	cmpl	$0x110000, %eax         # imm = 0x110000
14000c888:     	jne	0x14000c899 <.text+0xb899>
14000c88a:     	jmp	0x14000c915 <.text+0xb915>
14000c88f:     	movb	$0x1, %r8b
14000c892:     	cmpl	$0x110000, %eax         # imm = 0x110000
14000c897:     	je	0x14000c915 <.text+0xb915>
14000c899:     	testb	%r8b, %r8b
14000c89c:     	je	0x14000c915 <.text+0xb915>
14000c89e:     	addq	$0xb8, %rsp
14000c8a5:     	popq	%rdi
14000c8a6:     	popq	%rsi
14000c8a7:     	retq
14000c8a8:     	movl	$0x1, %ecx
14000c8ad:     	leaq	0x10dc4(%rip), %r8      # 0x14001d678
14000c8b4:     	callq	0x140019920 <.text+0x18920>
14000c8b9:     	ud2
14000c8bb:     	movl	$0x2, %ecx
14000c8c0:     	leaq	0x10db1(%rip), %r8      # 0x14001d678
14000c8c7:     	callq	0x140019920 <.text+0x18920>
14000c8cc:     	ud2
14000c8ce:     	movl	$0x3, %ecx
14000c8d3:     	leaq	0x10d9e(%rip), %r8      # 0x14001d678
14000c8da:     	callq	0x140019920 <.text+0x18920>
14000c8df:     	ud2
14000c8e1:     	leaq	0x10978(%rip), %rcx     # 0x14001d260
14000c8e8:     	leaq	0x10ca9(%rip), %r8      # 0x14001d598
14000c8ef:     	movl	$0x2b, %edx
14000c8f4:     	callq	0x140019880 <.text+0x18880>
14000c8f9:     	ud2
14000c8fb:     	leaq	0x10c56(%rip), %rcx     # 0x14001d558
14000c902:     	leaq	0x10c77(%rip), %r8      # 0x14001d580
14000c909:     	movl	$0x28, %edx
14000c90e:     	callq	0x140019880 <.text+0x18880>
14000c913:     	ud2
14000c915:     	callq	0x14000d480 <.text+0xc480>
14000c91a:     	movq	%rax, 0x40(%rsp)
14000c91f:     	leaq	0x30(%rsp), %rax
14000c924:     	movq	%rax, 0x48(%rsp)
14000c929:     	leaq	0x5d0(%rip), %rax       # 0x14000cf00 <.text+0xbf00>
14000c930:     	movq	%rax, 0x50(%rsp)
14000c935:     	leaq	0x78(%rsp), %rax
14000c93a:     	movq	%rax, 0x58(%rsp)
14000c93f:     	leaq	0x7a(%rip), %rax        # 0x14000c9c0 <.text+0xb9c0>
14000c946:     	movq	%rax, 0x60(%rsp)
14000c94b:     	leaq	0x40(%rsp), %rax
14000c950:     	movq	%rax, 0x68(%rsp)
14000c955:     	leaq	0xb4b4(%rip), %rax      # 0x140017e10 <.text+0x16e10>
14000c95c:     	movq	%rax, 0x70(%rsp)
14000c961:     	leaq	0x10cb8(%rip), %rax     # 0x14001d620
14000c968:     	movq	%rax, 0x88(%rsp)
14000c970:     	movq	$0x4, 0x90(%rsp)
14000c97c:     	movq	$0x0, 0xa8(%rsp)
14000c988:     	movq	%rsi, 0x98(%rsp)
14000c990:     	movq	$0x3, 0xa0(%rsp)
14000c99c:     	leaq	0x10cbd(%rip), %rdx     # 0x14001d660
14000c9a3:     	leaq	0x88(%rsp), %rcx
14000c9ab:     	callq	0x1400197d0 <.text+0x187d0>
14000c9b0:     	ud2
14000c9b2:     	int3
14000c9b3:     	int3
14000c9b4:     	int3
14000c9b5:     	int3
14000c9b6:     	int3
14000c9b7:     	int3
14000c9b8:     	int3
14000c9b9:     	int3
14000c9ba:     	int3
14000c9bb:     	int3
14000c9bc:     	int3
14000c9bd:     	int3
14000c9be:     	int3
14000c9bf:     	int3
14000c9c0:     	movq	%rdx, %r8
14000c9c3:     	movq	(%rcx), %rax
14000c9c6:     	movq	0x8(%rcx), %rdx
14000c9ca:     	movq	%rax, %rcx
14000c9cd:     	jmp	0x1400157d0 <.text+0x147d0>
14000c9d2:     	int3
14000c9d3:     	int3
14000c9d4:     	int3
14000c9d5:     	int3
14000c9d6:     	int3
14000c9d7:     	int3
14000c9d8:     	int3
14000c9d9:     	int3
14000c9da:     	int3
14000c9db:     	int3
14000c9dc:     	int3
14000c9dd:     	int3
14000c9de:     	int3
14000c9df:     	int3
14000c9e0:     	movq	%rdx, %rax
14000c9e3:     	movq	(%rcx), %rcx
14000c9e6:     	movzbl	(%rcx), %ecx
14000c9e9:     	leaq	0x10f10(%rip), %rdx     # 0x14001d900
14000c9f0:     	movq	(%rdx,%rcx,8), %r8
14000c9f4:     	leaq	0x10f2d(%rip), %r9      # 0x14001d928
14000c9fb:     	movslq	(%r9,%rcx,4), %rdx
14000c9ff:     	addq	%r9, %rdx
14000ca02:     	movq	%rax, %rcx
14000ca05:     	jmp	0x140015330 <.text+0x14330>
14000ca0a:     	int3
14000ca0b:     	int3
14000ca0c:     	int3
14000ca0d:     	int3
14000ca0e:     	int3
14000ca0f:     	int3
14000ca10:     	subq	$0x58, %rsp
14000ca14:     	movq	(%rcx), %rcx
14000ca17:     	cmpq	$0x0, (%rcx)
14000ca1b:     	je	0x14000ca26 <.text+0xba26>
14000ca1d:     	addq	$0x58, %rsp
14000ca21:     	jmp	0x14000d6b0 <.text+0xc6b0>
14000ca26:     	movups	0x8(%rcx), %xmm0
14000ca2a:     	movups	%xmm0, 0x28(%rsp)
14000ca2f:     	movq	$0x0, 0x38(%rsp)
14000ca38:     	movl	$0x0, 0x40(%rsp)
14000ca40:     	movq	%rdx, 0x48(%rsp)
14000ca45:     	movl	$0x0, 0x50(%rsp)
14000ca4d:     	leaq	0x28(%rsp), %rcx
14000ca52:     	movb	$0x1, %dl
14000ca54:     	callq	0x140010190 <.text+0xf190>
14000ca59:     	nop
14000ca5a:     	addq	$0x58, %rsp
14000ca5e:     	retq
14000ca5f:     	int3
14000ca60:     	movq	%rdx, %rcx
14000ca63:     	leaq	0x1045e(%rip), %rdx     # 0x14001cec8
14000ca6a:     	movl	$0x2, %r8d
14000ca70:     	jmp	0x140015010 <.text+0x14010>
14000ca75:     	int3
14000ca76:     	int3
14000ca77:     	int3
14000ca78:     	int3
14000ca79:     	int3
14000ca7a:     	int3
14000ca7b:     	int3
14000ca7c:     	int3
14000ca7d:     	int3
14000ca7e:     	int3
14000ca7f:     	int3
14000ca80:     	subq	$0x28, %rsp
14000ca84:     	movl	$0x0, 0x24(%rsp)
14000ca8c:     	cmpl	$0x80, %edx
14000ca92:     	jae	0x14000caa9 <.text+0xbaa9>
14000ca94:     	movb	%dl, 0x24(%rsp)
14000ca98:     	movl	$0x1, %r8d
14000ca9e:     	cmpq	$0x0, (%rcx)
14000caa2:     	jne	0x14000cb08 <.text+0xbb08>
14000caa4:     	jmp	0x14000cb51 <.text+0xbb51>
14000caa9:     	movl	%edx, %eax
14000caab:     	cmpl	$0x800, %edx            # imm = 0x800
14000cab1:     	jae	0x14000cad4 <.text+0xbad4>
14000cab3:     	shrl	$0x6, %eax
14000cab6:     	orb	$-0x40, %al
14000cab8:     	movb	%al, 0x24(%rsp)
14000cabc:     	andb	$0x3f, %dl
14000cabf:     	orb	$-0x80, %dl
14000cac2:     	movb	%dl, 0x25(%rsp)
14000cac6:     	movl	$0x2, %r8d
14000cacc:     	cmpq	$0x0, (%rcx)
14000cad0:     	jne	0x14000cb08 <.text+0xbb08>
14000cad2:     	jmp	0x14000cb51 <.text+0xbb51>
14000cad4:     	cmpl	$0x10000, %edx          # imm = 0x10000
14000cada:     	jae	0x14000cb16 <.text+0xbb16>
14000cadc:     	shrl	$0xc, %eax
14000cadf:     	orb	$-0x20, %al
14000cae1:     	movb	%al, 0x24(%rsp)
14000cae5:     	movl	%edx, %eax
14000cae7:     	shrl	$0x6, %eax
14000caea:     	andb	$0x3f, %al
14000caec:     	orb	$-0x80, %al
14000caee:     	movb	%al, 0x25(%rsp)
14000caf2:     	andb	$0x3f, %dl
14000caf5:     	orb	$-0x80, %dl
14000caf8:     	movb	%dl, 0x26(%rsp)
14000cafc:     	movl	$0x3, %r8d
14000cb02:     	cmpq	$0x0, (%rcx)
14000cb06:     	je	0x14000cb51 <.text+0xbb51>
14000cb08:     	movq	$0x1, (%rcx)
14000cb0f:     	movb	$0x1, %al
14000cb11:     	addq	$0x28, %rsp
14000cb15:     	retq
14000cb16:     	shrl	$0x12, %eax
14000cb19:     	andb	$0x7, %al
14000cb1b:     	orb	$-0x10, %al
14000cb1d:     	movb	%al, 0x24(%rsp)
14000cb21:     	movl	%edx, %eax
14000cb23:     	shrl	$0xc, %eax
14000cb26:     	andb	$0x3f, %al
14000cb28:     	orb	$-0x80, %al
14000cb2a:     	movb	%al, 0x25(%rsp)
14000cb2e:     	movl	%edx, %eax
14000cb30:     	shrl	$0x6, %eax
14000cb33:     	andb	$0x3f, %al
14000cb35:     	orb	$-0x80, %al
14000cb37:     	movb	%al, 0x26(%rsp)
14000cb3b:     	andb	$0x3f, %dl
14000cb3e:     	orb	$-0x80, %dl
14000cb41:     	movb	%dl, 0x27(%rsp)
14000cb45:     	movl	$0x4, %r8d
14000cb4b:     	cmpq	$0x0, (%rcx)
14000cb4f:     	jne	0x14000cb08 <.text+0xbb08>
14000cb51:     	xorl	%eax, %eax
14000cb53:     	subq	%r8, 0x8(%rcx)
14000cb57:     	setb	%al
14000cb5a:     	movq	%rax, (%rcx)
14000cb5d:     	movb	$0x1, %al
14000cb5f:     	jb	0x14000cb11 <.text+0xbb11>
14000cb61:     	movq	0x10(%rcx), %rcx
14000cb65:     	leaq	0x24(%rsp), %rdx
14000cb6a:     	callq	0x140015330 <.text+0x14330>
14000cb6f:     	nop
14000cb70:     	addq	$0x28, %rsp
14000cb74:     	retq
14000cb75:     	int3
14000cb76:     	int3
14000cb77:     	int3
14000cb78:     	int3
14000cb79:     	int3
14000cb7a:     	int3
14000cb7b:     	int3
14000cb7c:     	int3
14000cb7d:     	int3
14000cb7e:     	int3
14000cb7f:     	int3
14000cb80:     	movq	%rdx, %r8
14000cb83:     	leaq	0x105e6(%rip), %rdx     # 0x14001d170
14000cb8a:     	jmp	0x140014a60 <.text+0x13a60>
14000cb8f:     	int3
14000cb90:     	pushq	%r15
14000cb92:     	pushq	%r14
14000cb94:     	pushq	%r13
14000cb96:     	pushq	%r12
14000cb98:     	pushq	%rsi
14000cb99:     	pushq	%rdi
14000cb9a:     	pushq	%rbp
14000cb9b:     	pushq	%rbx
14000cb9c:     	subq	$0x58, %rsp
14000cba0:     	movq	%rdx, %rax
14000cba3:     	movq	0xc8(%rsp), %rdx
14000cbab:     	movq	0x20(%rax), %r10
14000cbaf:     	leaq	(%rdx,%r10), %r11
14000cbb3:     	decq	%r11
14000cbb6:     	cmpq	%r9, %r11
14000cbb9:     	jae	0x14000cdcc <.text+0xbdcc>
14000cbbf:     	movzbl	0xd0(%rsp), %ebp
14000cbc7:     	movq	0xc0(%rsp), %rsi
14000cbcf:     	leaq	-0x1(%rdx), %rdi
14000cbd3:     	movq	0x18(%rax), %r14
14000cbd7:     	movq	(%rax), %rbx
14000cbda:     	movq	0x10(%rax), %r15
14000cbde:     	movq	%rdx, %r12
14000cbe1:     	movq	%r15, 0x50(%rsp)
14000cbe6:     	subq	%r15, %r12
14000cbe9:     	movq	%r12, 0x48(%rsp)
14000cbee:     	movq	0x30(%rax), %r13
14000cbf2:     	leaq	(%rdx,%rdx), %r15
14000cbf6:     	movq	%r15, 0x40(%rsp)
14000cbfb:     	movl	$0x1, %r15d
14000cc01:     	movq	%rbx, 0x30(%rsp)
14000cc06:     	subq	%rbx, %r15
14000cc09:     	movq	%r15, 0x38(%rsp)
14000cc0e:     	testb	%bpl, %bpl
14000cc11:     	je	0x14000cc50 <.text+0xbc50>
14000cc13:     	movq	%r10, %r12
14000cc16:     	nopw	%cs:(%rax,%rax)
14000cc20:     	movzbl	(%r8,%r11), %r10d
14000cc25:     	btq	%r10, %r14
14000cc29:     	jb	0x14000cc70 <.text+0xbc70>
14000cc2b:     	addq	%rdx, %r12
14000cc2e:     	movq	%r12, 0x20(%rax)
14000cc32:     	leaq	(%rdi,%r12), %r11
14000cc36:     	leaq	(%rdi,%r12), %r10
14000cc3a:     	cmpq	%r9, %r10
14000cc3d:     	jb	0x14000cc20 <.text+0xbc20>
14000cc3f:     	jmp	0x14000cdcc <.text+0xbdcc>
14000cc44:     	nopw	%cs:(%rax,%rax)
14000cc50:     	movzbl	(%r8,%r11), %r11d
14000cc55:     	btq	%r11, %r14
14000cc59:     	jae	0x14000cc74 <.text+0xbc74>
14000cc5b:     	movq	%r13, %rbx
14000cc5e:     	movq	%r10, %r12
14000cc61:     	jmp	0x14000cce0 <.text+0xbce0>
14000cc63:     	nopw	%cs:(%rax,%rax)
14000cc70:     	xorl	%ebx, %ebx
14000cc72:     	jmp	0x14000cce0 <.text+0xbce0>
14000cc74:     	leaq	(%r10,%rdx), %r12
14000cc78:     	movq	%r12, 0x20(%rax)
14000cc7c:     	movq	$0x0, 0x30(%rax)
14000cc84:     	leaq	(%rdi,%r12), %r11
14000cc88:     	cmpq	%r9, %r11
14000cc8b:     	jae	0x14000cdcc <.text+0xbdcc>
14000cc91:     	addq	0x40(%rsp), %r10
14000cc96:     	nopw	%cs:(%rax,%rax)
14000cca0:     	movzbl	-0x1(%r8,%r10), %r11d
14000cca6:     	btq	%r11, %r14
14000ccaa:     	jb	0x14000cccf <.text+0xbccf>
14000ccac:     	addq	%rdx, %r12
14000ccaf:     	movq	%r10, 0x20(%rax)
14000ccb3:     	movq	$0x0, 0x30(%rax)
14000ccbb:     	leaq	(%r10,%rdx), %r11
14000ccbf:     	decq	%r11
14000ccc2:     	addq	%rdx, %r10
14000ccc5:     	cmpq	%r9, %r11
14000ccc8:     	jb	0x14000cca0 <.text+0xbca0>
14000ccca:     	jmp	0x14000cdcc <.text+0xbdcc>
14000cccf:     	xorl	%ebx, %ebx
14000ccd1:     	xorl	%r13d, %r13d
14000ccd4:     	nopw	%cs:(%rax,%rax)
14000cce0:     	movq	0x30(%rsp), %r11
14000cce5:     	cmpq	%r13, %r11
14000cce8:     	movq	%r13, 0x28(%rsp)
14000cced:     	movq	%r13, %r10
14000ccf0:     	cmovaq	%r11, %r10
14000ccf4:     	movl	%ebp, %r15d
14000ccf7:     	testb	%bpl, %bpl
14000ccfa:     	cmovneq	%r11, %r10
14000ccfe:     	cmpq	%rdx, %r10
14000cd01:     	jae	0x14000cd31 <.text+0xbd31>
14000cd03:     	leaq	(%r8,%r12), %r13
14000cd07:     	movq	%r10, %r11
14000cd0a:     	nopw	(%rax,%rax)
14000cd10:     	leaq	(%r12,%r11), %rbp
14000cd14:     	cmpq	%r9, %rbp
14000cd17:     	jae	0x14000ce2e <.text+0xbe2e>
14000cd1d:     	movzbl	(%rsi,%r11), %ebp
14000cd22:     	cmpb	(%r13,%r11), %bpl
14000cd27:     	jne	0x14000cd8a <.text+0xbd8a>
14000cd29:     	incq	%r11
14000cd2c:     	cmpq	%r11, %rdx
14000cd2f:     	jne	0x14000cd10 <.text+0xbd10>
14000cd31:     	movq	0x30(%rsp), %r10
14000cd36:     	movl	%r15d, %ebp
14000cd39:     	nopl	(%rax)
14000cd40:     	cmpq	%r10, %rbx
14000cd43:     	jae	0x14000cdd4 <.text+0xbdd4>
14000cd49:     	decq	%r10
14000cd4c:     	cmpq	%rdx, %r10
14000cd4f:     	jae	0x14000ce09 <.text+0xbe09>
14000cd55:     	leaq	(%r10,%r12), %r11
14000cd59:     	cmpq	%r9, %r11
14000cd5c:     	jae	0x14000ce1a <.text+0xbe1a>
14000cd62:     	movzbl	(%rsi,%r10), %r13d
14000cd67:     	cmpb	(%r8,%r11), %r13b
14000cd6b:     	je	0x14000cd40 <.text+0xbd40>
14000cd6d:     	addq	0x50(%rsp), %r12
14000cd72:     	movq	%r12, 0x20(%rax)
14000cd76:     	movq	0x48(%rsp), %r11
14000cd7b:     	movq	%r12, %r10
14000cd7e:     	testb	%bpl, %bpl
14000cd81:     	movq	0x28(%rsp), %r13
14000cd86:     	jne	0x14000cda6 <.text+0xbda6>
14000cd88:     	jmp	0x14000cdb8 <.text+0xbdb8>
14000cd8a:     	addq	0x38(%rsp), %r12
14000cd8f:     	movq	%r12, %r10
14000cd92:     	addq	%r11, %r10
14000cd95:     	movq	%r10, 0x20(%rax)
14000cd99:     	movl	%r15d, %ebp
14000cd9c:     	testb	%r15b, %r15b
14000cd9f:     	je	0x14000cdb5 <.text+0xbdb5>
14000cda1:     	movq	0x28(%rsp), %r13
14000cda6:     	leaq	(%rdi,%r10), %r11
14000cdaa:     	cmpq	%r9, %r11
14000cdad:     	jb	0x14000cc0e <.text+0xbc0e>
14000cdb3:     	jmp	0x14000cdcc <.text+0xbdcc>
14000cdb5:     	xorl	%r11d, %r11d
14000cdb8:     	movq	%r11, 0x30(%rax)
14000cdbc:     	movq	%r11, %r13
14000cdbf:     	leaq	(%rdi,%r10), %r11
14000cdc3:     	cmpq	%r9, %r11
14000cdc6:     	jb	0x14000cc0e <.text+0xbc0e>
14000cdcc:     	movq	%r9, 0x20(%rax)
14000cdd0:     	xorl	%eax, %eax
14000cdd2:     	jmp	0x14000cdf5 <.text+0xbdf5>
14000cdd4:     	addq	%r12, %rdx
14000cdd7:     	movq	%rdx, 0x20(%rax)
14000cddb:     	testb	%bpl, %bpl
14000cdde:     	jne	0x14000cde8 <.text+0xbde8>
14000cde0:     	movq	$0x0, 0x30(%rax)
14000cde8:     	movq	%r12, 0x8(%rcx)
14000cdec:     	movq	%rdx, 0x10(%rcx)
14000cdf0:     	movl	$0x1, %eax
14000cdf5:     	movq	%rax, (%rcx)
14000cdf8:     	addq	$0x58, %rsp
14000cdfc:     	popq	%rbx
14000cdfd:     	popq	%rbp
14000cdfe:     	popq	%rdi
14000cdff:     	popq	%rsi
14000ce00:     	popq	%r12
14000ce02:     	popq	%r13
14000ce04:     	popq	%r14
14000ce06:     	popq	%r15
14000ce08:     	retq
14000ce09:     	leaq	0x10198(%rip), %r8      # 0x14001cfa8
14000ce10:     	movq	%r10, %rcx
14000ce13:     	callq	0x140019920 <.text+0x18920>
14000ce18:     	ud2
14000ce1a:     	leaq	0x1019f(%rip), %r8      # 0x14001cfc0
14000ce21:     	movq	%r11, %rcx
14000ce24:     	movq	%r9, %rdx
14000ce27:     	callq	0x140019920 <.text+0x18920>
14000ce2c:     	ud2
14000ce2e:     	addq	%r12, %r10
14000ce31:     	cmpq	%r10, %r9
14000ce34:     	cmovaq	%r9, %r10
14000ce38:     	leaq	0x10199(%rip), %r8      # 0x14001cfd8
14000ce3f:     	movq	%r10, %rcx
14000ce42:     	movq	%r9, %rdx
14000ce45:     	callq	0x140019920 <.text+0x18920>
14000ce4a:     	ud2
14000ce4c:     	int3
14000ce4d:     	int3
14000ce4e:     	int3
14000ce4f:     	int3
14000ce50:     	pushq	%rsi
14000ce51:     	pushq	%rdi
14000ce52:     	subq	$0x38, %rsp
14000ce56:     	movl	%edx, %edi
14000ce58:     	movq	%rcx, %rsi
14000ce5b:     	cmpl	$0x27, %edx
14000ce5e:     	ja	0x14000ce79 <.text+0xbe79>
14000ce60:     	movl	%edi, %eax
14000ce62:     	leaq	0x10c77(%rip), %rcx     # 0x14001dae0
14000ce69:     	movslq	(%rcx,%rax,4), %rax
14000ce6d:     	addq	%rcx, %rax
14000ce70:     	jmpq	*%rax
14000ce72:     	movq	%rsi, %rcx
14000ce75:     	movb	$0x30, %dl
14000ce77:     	jmp	0x14000cec4 <.text+0xbec4>
14000ce79:     	cmpl	$0x5c, %edi
14000ce7c:     	jne	0x14000ce85 <.text+0xbe85>
14000ce7e:     	movq	%rsi, %rcx
14000ce81:     	movb	$0x5c, %dl
14000ce83:     	jmp	0x14000cec4 <.text+0xbec4>
14000ce85:     	movl	%edi, %ecx
14000ce87:     	callq	0x140017fb0 <.text+0x16fb0>
14000ce8c:     	testb	%al, %al
14000ce8e:     	jne	0x14000cecf <.text+0xbecf>
14000ce90:     	movl	%edi, %ecx
14000ce92:     	callq	0x1400173c0 <.text+0x163c0>
14000ce97:     	testb	%al, %al
14000ce99:     	je	0x14000cecf <.text+0xbecf>
14000ce9b:     	movb	$-0x80, (%rsi)
14000ce9e:     	movl	%edi, 0x4(%rsi)
14000cea1:     	jmp	0x14000ceea <.text+0xbeea>
14000cea3:     	movq	%rsi, %rcx
14000cea6:     	movb	$0x74, %dl
14000cea8:     	jmp	0x14000cec4 <.text+0xbec4>
14000ceaa:     	movq	%rsi, %rcx
14000cead:     	movb	$0x6e, %dl
14000ceaf:     	jmp	0x14000cec4 <.text+0xbec4>
14000ceb1:     	movq	%rsi, %rcx
14000ceb4:     	movb	$0x72, %dl
14000ceb6:     	jmp	0x14000cec4 <.text+0xbec4>
14000ceb8:     	movq	%rsi, %rcx
14000cebb:     	movb	$0x22, %dl
14000cebd:     	jmp	0x14000cec4 <.text+0xbec4>
14000cebf:     	movq	%rsi, %rcx
14000cec2:     	movb	$0x27, %dl
14000cec4:     	addq	$0x38, %rsp
14000cec8:     	popq	%rdi
14000cec9:     	popq	%rsi
14000ceca:     	jmp	0x140014050 <.text+0x13050>
14000cecf:     	leaq	0x2c(%rsp), %rcx
14000ced4:     	movl	%edi, %edx
14000ced6:     	callq	0x140013f60 <.text+0x12f60>
14000cedb:     	movl	0x34(%rsp), %eax
14000cedf:     	movl	%eax, 0x8(%rsi)
14000cee2:     	movq	0x2c(%rsp), %rax
14000cee7:     	movq	%rax, (%rsi)
14000ceea:     	addq	$0x38, %rsp
14000ceee:     	popq	%rdi
14000ceef:     	popq	%rsi
14000cef0:     	retq
14000cef1:     	int3
14000cef2:     	int3
14000cef3:     	int3
14000cef4:     	int3
14000cef5:     	int3
14000cef6:     	int3
14000cef7:     	int3
14000cef8:     	int3
14000cef9:     	int3
14000cefa:     	int3
14000cefb:     	int3
14000cefc:     	int3
14000cefd:     	int3
14000cefe:     	int3
14000ceff:     	int3
14000cf00:     	pushq	%r15
14000cf02:     	pushq	%r14
14000cf04:     	pushq	%rsi
14000cf05:     	pushq	%rdi
14000cf06:     	pushq	%rbx
14000cf07:     	subq	$0x40, %rsp
14000cf0b:     	movq	(%rcx), %r14
14000cf0e:     	movq	0x8(%rcx), %r15
14000cf12:     	leaq	0x30(%rsp), %rcx
14000cf17:     	callq	0x140015730 <.text+0x14730>
14000cf1c:     	testq	%r15, %r15
14000cf1f:     	je	0x14000cf5b <.text+0xbf5b>
14000cf21:     	leaq	0xffa8(%rip), %rsi      # 0x14001ced0
14000cf28:     	leaq	0x30(%rsp), %rdi
14000cf2d:     	leaq	0x28(%rsp), %rbx
14000cf32:     	nopw	%cs:(%rax,%rax)
14000cf40:     	movq	%r14, 0x28(%rsp)
14000cf45:     	incq	%r14
14000cf48:     	movq	%rdi, %rcx
14000cf4b:     	movq	%rbx, %rdx
14000cf4e:     	movq	%rsi, %r8
14000cf51:     	callq	0x1400148e0 <.text+0x138e0>
14000cf56:     	decq	%r15
14000cf59:     	jne	0x14000cf40 <.text+0xbf40>
14000cf5b:     	leaq	0x30(%rsp), %rcx
14000cf60:     	callq	0x140014a10 <.text+0x13a10>
14000cf65:     	nop
14000cf66:     	addq	$0x40, %rsp
14000cf6a:     	popq	%rbx
14000cf6b:     	popq	%rdi
14000cf6c:     	popq	%rsi
14000cf6d:     	popq	%r14
14000cf6f:     	popq	%r15
14000cf71:     	retq
14000cf72:     	int3
14000cf73:     	int3
14000cf74:     	int3
14000cf75:     	int3
14000cf76:     	int3
14000cf77:     	int3
14000cf78:     	int3
14000cf79:     	int3
14000cf7a:     	int3
14000cf7b:     	int3
14000cf7c:     	int3
14000cf7d:     	int3
14000cf7e:     	int3
14000cf7f:     	int3
14000cf80:     	movq	%rdx, %rcx
14000cf83:     	leaq	0x1017e(%rip), %rdx     # 0x14001d108
14000cf8a:     	movl	$0x5, %r8d
14000cf90:     	jmp	0x140015330 <.text+0x14330>
14000cf95:     	int3
14000cf96:     	int3
14000cf97:     	int3
14000cf98:     	int3
14000cf99:     	int3
14000cf9a:     	int3
14000cf9b:     	int3
14000cf9c:     	int3
14000cf9d:     	int3
14000cf9e:     	int3
14000cf9f:     	int3
14000cfa0:     	subq	$0x48, %rsp
14000cfa4:     	movq	%rdx, %rax
14000cfa7:     	movq	%rcx, 0x40(%rsp)
14000cfac:     	leaq	0x1019d(%rip), %rcx     # 0x14001d150
14000cfb3:     	movq	%rcx, 0x30(%rsp)
14000cfb8:     	leaq	0x40(%rsp), %rcx
14000cfbd:     	movq	%rcx, 0x28(%rsp)
14000cfc2:     	movq	$0x4, 0x20(%rsp)
14000cfcb:     	leaq	0x10166(%rip), %rdx     # 0x14001d138
14000cfd2:     	leaq	0x1016c(%rip), %r9      # 0x14001d145
14000cfd9:     	movl	$0xd, %r8d
14000cfdf:     	movq	%rax, %rcx
14000cfe2:     	callq	0x1400153b0 <.text+0x143b0>
14000cfe7:     	nop
14000cfe8:     	addq	$0x48, %rsp
14000cfec:     	retq
14000cfed:     	int3
14000cfee:     	int3
14000cfef:     	int3
14000cff0:     	pushq	%r15
14000cff2:     	pushq	%r14
14000cff4:     	pushq	%r13
14000cff6:     	pushq	%r12
14000cff8:     	pushq	%rsi
14000cff9:     	pushq	%rdi
14000cffa:     	pushq	%rbp
14000cffb:     	pushq	%rbx
14000cffc:     	subq	$0x68, %rsp
14000d000:     	movq	%rcx, %rax
14000d003:     	cmpq	$0x0, (%rdx)
14000d007:     	je	0x14000d242 <.text+0xc242>
14000d00d:     	movq	0x28(%rdx), %r8
14000d011:     	movq	0x50(%rdx), %r11
14000d015:     	cmpq	%r11, %r8
14000d018:     	je	0x14000d248 <.text+0xc248>
14000d01e:     	movq	0x48(%rdx), %rsi
14000d022:     	movq	0x60(%rdx), %r9
14000d026:     	leaq	(%r8,%r9), %rcx
14000d02a:     	decq	%rcx
14000d02d:     	movq	%r11, %r10
14000d030:     	cmpq	%r11, %rcx
14000d033:     	jae	0x14000d417 <.text+0xc417>
14000d039:     	movq	0x38(%rdx), %rbp
14000d03d:     	movq	0x58(%rdx), %r14
14000d041:     	leaq	-0x1(%r9), %rdi
14000d045:     	movq	0x20(%rdx), %r12
14000d049:     	movq	0x8(%rdx), %r13
14000d04d:     	movq	0x18(%rdx), %r15
14000d051:     	movq	%r9, %r10
14000d054:     	subq	%r15, %r10
14000d057:     	movq	%r10, 0x50(%rsp)
14000d05c:     	leaq	(%r8,%r9), %r10
14000d060:     	movq	%r10, 0x30(%rsp)
14000d065:     	movq	%rdi, 0x60(%rsp)
14000d06a:     	addq	%r10, %rdi
14000d06d:     	movq	%rdi, %r10
14000d070:     	movq	%rdi, 0x38(%rsp)
14000d075:     	cmpq	%r11, %rdi
14000d078:     	setae	%r10b
14000d07c:     	testq	%r9, %r9
14000d07f:     	setne	%dil
14000d083:     	addq	%r8, %r15
14000d086:     	movq	%r15, 0x58(%rsp)
14000d08b:     	movq	%r8, %r15
14000d08e:     	subq	%r13, %r15
14000d091:     	incq	%r15
14000d094:     	movq	%r15, 0x48(%rsp)
14000d099:     	orb	%r10b, %dil
14000d09c:     	movb	%dil, 0x2f(%rsp)
14000d0a1:     	leaq	(%rsi,%r8), %r15
14000d0a5:     	movq	%rbp, %rdi
14000d0a8:     	movq	%r8, %r10
14000d0ab:     	movq	%r12, 0x40(%rsp)
14000d0b0:     	cmpq	$-0x1, %rbp
14000d0b4:     	je	0x14000d105 <.text+0xc105>
14000d0b6:     	cmpq	%r10, %r8
14000d0b9:     	jne	0x14000d417 <.text+0xc417>
14000d0bf:     	movzbl	(%rsi,%rcx), %ecx
14000d0c3:     	btq	%rcx, %r12
14000d0c7:     	movq	%rdi, %rbx
14000d0ca:     	jb	0x14000d16c <.text+0xc16c>
14000d0d0:     	movq	0x30(%rsp), %r10
14000d0d5:     	movq	%r10, 0x28(%rdx)
14000d0d9:     	movq	$0x0, 0x38(%rdx)
14000d0e1:     	cmpb	$0x0, 0x2f(%rsp)
14000d0e6:     	jne	0x14000d3b3 <.text+0xc3b3>
14000d0ec:     	movq	0x38(%rsp), %rcx
14000d0f1:     	movzbl	(%rsi,%rcx), %ecx
14000d0f5:     	btq	%rcx, %r12
14000d0f9:     	jae	0x14000d3be <.text+0xc3be>
14000d0ff:     	xorl	%ebx, %ebx
14000d101:     	xorl	%edi, %edi
14000d103:     	jmp	0x14000d16c <.text+0xc16c>
14000d105:     	cmpq	%r11, 0x38(%rsp)
14000d10a:     	jb	0x14000d124 <.text+0xc124>
14000d10c:     	cmpq	%r10, %r8
14000d10f:     	jne	0x14000d417 <.text+0xc417>
14000d115:     	movzbl	(%rsi,%rcx), %ecx
14000d119:     	btq	%rcx, %r12
14000d11d:     	jb	0x14000d16a <.text+0xc16a>
14000d11f:     	jmp	0x14000d236 <.text+0xc236>
14000d124:     	cmpq	%r10, %r8
14000d127:     	jne	0x14000d417 <.text+0xc417>
14000d12d:     	movzbl	(%rsi,%rcx), %ecx
14000d131:     	movl	$0x1, %r10d
14000d137:     	shlq	%cl, %r10
14000d13a:     	testq	%r9, %r9
14000d13d:     	je	0x14000d149 <.text+0xc149>
14000d13f:     	testq	%r12, %r10
14000d142:     	jne	0x14000d16a <.text+0xc16a>
14000d144:     	jmp	0x14000d412 <.text+0xc412>
14000d149:     	testq	%r12, %r10
14000d14c:     	jne	0x14000d16a <.text+0xc16a>
14000d14e:     	movq	0x30(%rsp), %rcx
14000d153:     	movq	%rcx, 0x28(%rdx)
14000d157:     	movq	0x38(%rsp), %rcx
14000d15c:     	movzbl	(%rsi,%rcx), %ecx
14000d160:     	btq	%rcx, %r12
14000d164:     	jae	0x14000d240 <.text+0xc240>
14000d16a:     	xorl	%ebx, %ebx
14000d16c:     	cmpq	%rdi, %r13
14000d16f:     	movq	%rdi, %rcx
14000d172:     	cmovaq	%r13, %rcx
14000d176:     	cmpq	$-0x1, %rbp
14000d17a:     	cmoveq	%r13, %rcx
14000d17e:     	movq	%rcx, %r10
14000d181:     	cmpq	%r9, %rcx
14000d184:     	jae	0x14000d1b0 <.text+0xc1b0>
14000d186:     	nopw	%cs:(%rax,%rax)
14000d190:     	leaq	(%r8,%r10), %r12
14000d194:     	cmpq	%r11, %r12
14000d197:     	jae	0x14000d3f7 <.text+0xc3f7>
14000d19d:     	movzbl	(%r14,%r10), %r12d
14000d1a2:     	cmpb	(%r15,%r10), %r12b
14000d1a6:     	jne	0x14000d208 <.text+0xc208>
14000d1a8:     	incq	%r10
14000d1ab:     	cmpq	%r10, %r9
14000d1ae:     	jne	0x14000d190 <.text+0xc190>
14000d1b0:     	movq	%r13, %rcx
14000d1b3:     	nopw	%cs:(%rax,%rax)
14000d1c0:     	cmpq	%rcx, %rbx
14000d1c3:     	jae	0x14000d298 <.text+0xc298>
14000d1c9:     	decq	%rcx
14000d1cc:     	cmpq	%r9, %rcx
14000d1cf:     	jae	0x14000d3d2 <.text+0xc3d2>
14000d1d5:     	leaq	(%rcx,%r8), %r10
14000d1d9:     	cmpq	%r11, %r10
14000d1dc:     	jae	0x14000d3e3 <.text+0xc3e3>
14000d1e2:     	movzbl	(%r14,%rcx), %r12d
14000d1e7:     	cmpb	(%rsi,%r10), %r12b
14000d1eb:     	je	0x14000d1c0 <.text+0xc1c0>
14000d1ed:     	movq	0x58(%rsp), %r10
14000d1f2:     	movq	%r10, 0x28(%rdx)
14000d1f6:     	movq	0x50(%rsp), %rcx
14000d1fb:     	cmpq	$-0x1, %rbp
14000d1ff:     	movq	0x40(%rsp), %r12
14000d204:     	jne	0x14000d21e <.text+0xc21e>
14000d206:     	jmp	0x14000d225 <.text+0xc225>
14000d208:     	addq	0x48(%rsp), %r10
14000d20d:     	movq	%r10, 0x28(%rdx)
14000d211:     	cmpq	$-0x1, %rbp
14000d215:     	movq	0x40(%rsp), %r12
14000d21a:     	je	0x14000d225 <.text+0xc225>
14000d21c:     	xorl	%ecx, %ecx
14000d21e:     	movq	%rcx, 0x38(%rdx)
14000d222:     	movq	%rcx, %rdi
14000d225:     	movq	0x60(%rsp), %rcx
14000d22a:     	addq	%r10, %rcx
14000d22d:     	cmpq	%r11, %rcx
14000d230:     	jb	0x14000d0b0 <.text+0xc0b0>
14000d236:     	movq	%r11, %r10
14000d239:     	jmp	0x14000d417 <.text+0xc417>
14000d23e:     	nop
14000d240:     	jmp	0x14000d240 <.text+0xc240>
14000d242:     	cmpb	$0x0, 0x1a(%rdx)
14000d246:     	je	0x14000d254 <.text+0xc254>
14000d248:     	movq	$0x2, (%rax)
14000d24f:     	jmp	0x14000d464 <.text+0xc464>
14000d254:     	movzbl	0x18(%rdx), %r10d
14000d259:     	movl	%r10d, %ecx
14000d25c:     	xorb	$0x1, %cl
14000d25f:     	movb	%cl, 0x18(%rdx)
14000d262:     	movq	0x8(%rdx), %r8
14000d266:     	movq	0x48(%rdx), %rcx
14000d26a:     	movq	0x50(%rdx), %r9
14000d26e:     	testq	%r8, %r8
14000d271:     	je	0x14000d2c3 <.text+0xc2c3>
14000d273:     	movq	%r9, %r11
14000d276:     	subq	%r8, %r11
14000d279:     	jbe	0x14000d2d5 <.text+0xc2d5>
14000d27b:     	cmpb	$-0x41, (%rcx,%r8)
14000d280:     	jg	0x14000d2d7 <.text+0xc2d7>
14000d282:     	leaq	0xff17(%rip), %rax      # 0x14001d1a0
14000d289:     	movq	%rax, 0x20(%rsp)
14000d28e:     	movq	%r9, %rdx
14000d291:     	callq	0x140019e10 <.text+0x18e10>
14000d296:     	ud2
14000d298:     	movq	0x30(%rsp), %rcx
14000d29d:     	movq	%rcx, 0x28(%rdx)
14000d2a1:     	cmpq	$-0x1, %rbp
14000d2a5:     	je	0x14000d2af <.text+0xc2af>
14000d2a7:     	movq	$0x0, 0x38(%rdx)
14000d2af:     	movq	$0x0, (%rax)
14000d2b6:     	movq	%r8, 0x8(%rax)
14000d2ba:     	movq	%rcx, 0x10(%rax)
14000d2be:     	jmp	0x14000d464 <.text+0xc464>
14000d2c3:     	movq	%r9, %r11
14000d2c6:     	testq	%r11, %r11
14000d2c9:     	jne	0x14000d2dc <.text+0xc2dc>
14000d2cb:     	testb	%r10b, %r10b
14000d2ce:     	jne	0x14000d34d <.text+0xc34d>
14000d2d0:     	jmp	0x14000d36a <.text+0xc36a>
14000d2d5:     	jne	0x14000d282 <.text+0xc282>
14000d2d7:     	testq	%r11, %r11
14000d2da:     	je	0x14000d2cb <.text+0xc2cb>
14000d2dc:     	movzbl	(%rcx,%r8), %ebx
14000d2e1:     	movzbl	%bl, %r9d
14000d2e5:     	testb	%r9b, %r9b
14000d2e8:     	jns	0x14000d348 <.text+0xc348>
14000d2ea:     	movl	%r9d, %r11d
14000d2ed:     	andl	$0x1f, %r11d
14000d2f1:     	movzbl	0x1(%rcx,%r8), %esi
14000d2f7:     	andl	$0x3f, %esi
14000d2fa:     	cmpb	$-0x21, %r9b
14000d2fe:     	jbe	0x14000d335 <.text+0xc335>
14000d300:     	movzbl	0x2(%rcx,%r8), %r9d
14000d306:     	shll	$0x6, %esi
14000d309:     	andl	$0x3f, %r9d
14000d30d:     	orl	%esi, %r9d
14000d310:     	cmpb	$-0x10, %bl
14000d313:     	jb	0x14000d341 <.text+0xc341>
14000d315:     	movzbl	0x3(%rcx,%r8), %ecx
14000d31b:     	andl	$0x7, %r11d
14000d31f:     	shll	$0x12, %r11d
14000d323:     	shll	$0x6, %r9d
14000d327:     	andl	$0x3f, %ecx
14000d32a:     	orl	%r9d, %ecx
14000d32d:     	orl	%r11d, %ecx
14000d330:     	movl	%ecx, %r9d
14000d333:     	jmp	0x14000d348 <.text+0xc348>
14000d335:     	shll	$0x6, %r11d
14000d339:     	orl	%esi, %r11d
14000d33c:     	movl	%r11d, %r9d
14000d33f:     	jmp	0x14000d348 <.text+0xc348>
14000d341:     	shll	$0xc, %r11d
14000d345:     	orl	%r11d, %r9d
14000d348:     	testb	%r10b, %r10b
14000d34b:     	je	0x14000d361 <.text+0xc361>
14000d34d:     	movq	%r8, 0x8(%rax)
14000d351:     	movq	%r8, 0x10(%rax)
14000d355:     	movq	$0x0, (%rax)
14000d35c:     	jmp	0x14000d464 <.text+0xc464>
14000d361:     	cmpl	$0x110000, %r9d         # imm = 0x110000
14000d368:     	jne	0x14000d373 <.text+0xc373>
14000d36a:     	movb	$0x1, 0x1a(%rdx)
14000d36e:     	jmp	0x14000d248 <.text+0xc248>
14000d373:     	movl	$0x1, %ecx
14000d378:     	cmpl	$0x80, %r9d
14000d37f:     	jb	0x14000d39f <.text+0xc39f>
14000d381:     	movl	$0x2, %ecx
14000d386:     	cmpl	$0x800, %r9d            # imm = 0x800
14000d38d:     	jb	0x14000d39f <.text+0xc39f>
14000d38f:     	cmpl	$0x10000, %r9d          # imm = 0x10000
14000d396:     	movl	$0x4, %ecx
14000d39b:     	sbbq	$0x0, %rcx
14000d39f:     	addq	%r8, %rcx
14000d3a2:     	movq	%rcx, 0x8(%rdx)
14000d3a6:     	movq	%r8, 0x8(%rax)
14000d3aa:     	movq	%rcx, 0x10(%rax)
14000d3ae:     	jmp	0x14000d45d <.text+0xc45d>
14000d3b3:     	cmpq	%r11, 0x38(%rsp)
14000d3b8:     	cmovaeq	%r11, %r10
14000d3bc:     	jmp	0x14000d417 <.text+0xc417>
14000d3be:     	movq	%r8, 0x28(%rdx)
14000d3c2:     	nopw	%cs:(%rax,%rax)
14000d3d0:     	jmp	0x14000d3d0 <.text+0xc3d0>
14000d3d2:     	leaq	0xfbcf(%rip), %r8       # 0x14001cfa8
14000d3d9:     	movq	%r9, %rdx
14000d3dc:     	callq	0x140019920 <.text+0x18920>
14000d3e1:     	ud2
14000d3e3:     	leaq	0xfbd6(%rip), %r8       # 0x14001cfc0
14000d3ea:     	movq	%r10, %rcx
14000d3ed:     	movq	%r11, %rdx
14000d3f0:     	callq	0x140019920 <.text+0x18920>
14000d3f5:     	ud2
14000d3f7:     	addq	%r8, %rcx
14000d3fa:     	cmpq	%rcx, %r11
14000d3fd:     	cmovaq	%r11, %rcx
14000d401:     	leaq	0xfbd0(%rip), %r8       # 0x14001cfd8
14000d408:     	movq	%r11, %rdx
14000d40b:     	callq	0x140019920 <.text+0x18920>
14000d410:     	ud2
14000d412:     	movq	0x30(%rsp), %r10
14000d417:     	testq	%r10, %r10
14000d41a:     	je	0x14000d447 <.text+0xc447>
14000d41c:     	movq	%r10, %rcx
14000d41f:     	jmp	0x14000d437 <.text+0xc437>
14000d421:     	nopw	%cs:(%rax,%rax)
14000d430:     	je	0x14000d44a <.text+0xc44a>
14000d432:     	incq	%rcx
14000d435:     	je	0x14000d447 <.text+0xc447>
14000d437:     	cmpq	%r11, %rcx
14000d43a:     	jae	0x14000d430 <.text+0xc430>
14000d43c:     	cmpb	$-0x41, (%rsi,%rcx)
14000d440:     	jle	0x14000d432 <.text+0xc432>
14000d442:     	movq	%rcx, %r11
14000d445:     	jmp	0x14000d44a <.text+0xc44a>
14000d447:     	xorl	%r11d, %r11d
14000d44a:     	cmpq	%r10, %r11
14000d44d:     	cmovaq	%r11, %r10
14000d451:     	movq	%r10, 0x28(%rdx)
14000d455:     	movq	%r8, 0x8(%rax)
14000d459:     	movq	%r11, 0x10(%rax)
14000d45d:     	movq	$0x1, (%rax)
14000d464:     	addq	$0x68, %rsp
14000d468:     	popq	%rbx
14000d469:     	popq	%rbp
14000d46a:     	popq	%rdi
14000d46b:     	popq	%rsi
14000d46c:     	popq	%r12
14000d46e:     	popq	%r13
14000d470:     	popq	%r14
14000d472:     	popq	%r15
14000d474:     	retq
14000d475:     	int3
14000d476:     	int3
14000d477:     	int3
14000d478:     	int3
14000d479:     	int3
14000d47a:     	int3
14000d47b:     	int3
14000d47c:     	int3
14000d47d:     	int3
14000d47e:     	int3
14000d47f:     	int3
14000d480:     	subq	%rcx, %rdx
14000d483:     	cmpq	$0x20, %rdx
14000d487:     	jb	0x140016790 <.text+0x15790>
14000d48d:     	jmp	0x140016280 <.text+0x15280>
14000d492:     	int3
14000d493:     	int3
14000d494:     	int3
14000d495:     	int3
14000d496:     	int3
14000d497:     	int3
14000d498:     	int3
14000d499:     	int3
14000d49a:     	int3
14000d49b:     	int3
14000d49c:     	int3
14000d49d:     	int3
14000d49e:     	int3
14000d49f:     	int3
14000d4a0:     	pushq	%r15
14000d4a2:     	pushq	%r14
14000d4a4:     	pushq	%r13
14000d4a6:     	pushq	%r12
14000d4a8:     	pushq	%rsi
14000d4a9:     	pushq	%rdi
14000d4aa:     	pushq	%rbp
14000d4ab:     	pushq	%rbx
14000d4ac:     	subq	$0x28, %rsp
14000d4b0:     	movq	0x18(%rdx), %r12
14000d4b4:     	movq	0x10(%rdx), %r15
14000d4b8:     	xorl	%eax, %eax
14000d4ba:     	movq	%r12, %r8
14000d4bd:     	subq	%r15, %r8
14000d4c0:     	jb	0x14000d68e <.text+0xc68e>
14000d4c6:     	movq	%rdx, %rdi
14000d4c9:     	movq	0x8(%rdx), %rbp
14000d4cd:     	cmpq	%rbp, %r12
14000d4d0:     	ja	0x14000d68e <.text+0xc68e>
14000d4d6:     	movq	%rcx, 0x20(%rsp)
14000d4db:     	movq	(%rdi), %rsi
14000d4de:     	leaq	(%rsi,%r15), %rdx
14000d4e2:     	leaq	0x28(%rdi), %r14
14000d4e6:     	movq	0x20(%rdi), %rbx
14000d4ea:     	cmpq	$0x4, %rbx
14000d4ee:     	jbe	0x14000d5d0 <.text+0xc5d0>
14000d4f4:     	jmp	0x14000d510 <.text+0xc510>
14000d4f6:     	nopw	%cs:(%rax,%rax)
14000d500:     	leaq	(%rsi,%r15), %rdx
14000d504:     	movq	%r12, %r8
14000d507:     	subq	%r15, %r8
14000d50a:     	jb	0x14000d687 <.text+0xc687>
14000d510:     	movzbl	-0x1(%r14,%rbx), %ecx
14000d516:     	cmpq	$0x10, %r8
14000d51a:     	jae	0x14000d550 <.text+0xc550>
14000d51c:     	xorl	%r9d, %r9d
14000d51f:     	testq	%r8, %r8
14000d522:     	je	0x14000d541 <.text+0xc541>
14000d524:     	nopw	%cs:(%rax,%rax)
14000d530:     	cmpb	%cl, (%rdx,%r9)
14000d534:     	je	0x14000d563 <.text+0xc563>
14000d536:     	incq	%r9
14000d539:     	cmpq	%r9, %r8
14000d53c:     	jne	0x14000d530 <.text+0xc530>
14000d53e:     	movq	%r8, %r9
14000d541:     	xorl	%eax, %eax
14000d543:     	cmpq	$0x1, %rax
14000d547:     	je	0x14000d580 <.text+0xc580>
14000d549:     	jmp	0x14000d67a <.text+0xc67a>
14000d54e:     	nop
14000d550:     	callq	0x140015e60 <.text+0x14e60>
14000d555:     	movq	%rdx, %r9
14000d558:     	cmpq	$0x1, %rax
14000d55c:     	je	0x14000d580 <.text+0xc580>
14000d55e:     	jmp	0x14000d67a <.text+0xc67a>
14000d563:     	movl	$0x1, %eax
14000d568:     	cmpq	$0x1, %rax
14000d56c:     	jne	0x14000d67a <.text+0xc67a>
14000d572:     	nopw	%cs:(%rax,%rax)
14000d580:     	addq	%r9, %r15
14000d583:     	incq	%r15
14000d586:     	movq	%r15, 0x10(%rdi)
14000d58a:     	cmpq	%rbx, %r15
14000d58d:     	jb	0x14000d500 <.text+0xc500>
14000d593:     	cmpq	%rbp, %r15
14000d596:     	ja	0x14000d500 <.text+0xc500>
14000d59c:     	leaq	0xfc15(%rip), %r8       # 0x14001d1b8
14000d5a3:     	movl	$0x4, %edx
14000d5a8:     	movq	%rbx, %rcx
14000d5ab:     	callq	0x140019cd0 <.text+0x18cd0>
14000d5b0:     	ud2
14000d5b2:     	nopw	%cs:(%rax,%rax)
14000d5c0:     	leaq	(%rsi,%r15), %rdx
14000d5c4:     	movq	%r12, %r8
14000d5c7:     	subq	%r15, %r8
14000d5ca:     	jb	0x14000d687 <.text+0xc687>
14000d5d0:     	movzbl	-0x1(%r14,%rbx), %ecx
14000d5d6:     	cmpq	$0x10, %r8
14000d5da:     	jae	0x14000d610 <.text+0xc610>
14000d5dc:     	xorl	%r9d, %r9d
14000d5df:     	testq	%r8, %r8
14000d5e2:     	je	0x14000d601 <.text+0xc601>
14000d5e4:     	nopw	%cs:(%rax,%rax)
14000d5f0:     	cmpb	%cl, (%rdx,%r9)
14000d5f4:     	je	0x14000d620 <.text+0xc620>
14000d5f6:     	incq	%r9
14000d5f9:     	cmpq	%r9, %r8
14000d5fc:     	jne	0x14000d5f0 <.text+0xc5f0>
14000d5fe:     	movq	%r8, %r9
14000d601:     	xorl	%eax, %eax
14000d603:     	cmpq	$0x1, %rax
14000d607:     	je	0x14000d630 <.text+0xc630>
14000d609:     	jmp	0x14000d67a <.text+0xc67a>
14000d60b:     	nopl	(%rax,%rax)
14000d610:     	callq	0x140015e60 <.text+0x14e60>
14000d615:     	movq	%rdx, %r9
14000d618:     	cmpq	$0x1, %rax
14000d61c:     	je	0x14000d630 <.text+0xc630>
14000d61e:     	jmp	0x14000d67a <.text+0xc67a>
14000d620:     	movl	$0x1, %eax
14000d625:     	cmpq	$0x1, %rax
14000d629:     	jne	0x14000d67a <.text+0xc67a>
14000d62b:     	nopl	(%rax,%rax)
14000d630:     	addq	%r9, %r15
14000d633:     	incq	%r15
14000d636:     	movq	%r15, 0x10(%rdi)
14000d63a:     	movq	%r15, %r13
14000d63d:     	subq	%rbx, %r13
14000d640:     	jb	0x14000d5c0 <.text+0xc5c0>
14000d646:     	cmpq	%rbp, %r15
14000d649:     	ja	0x14000d5c0 <.text+0xc5c0>
14000d64f:     	leaq	(%rsi,%r13), %rcx
14000d653:     	movq	%r14, %rdx
14000d656:     	movq	%rbx, %r8
14000d659:     	callq	0x140018bfd <.text+0x17bfd>
14000d65e:     	testl	%eax, %eax
14000d660:     	jne	0x14000d5c0 <.text+0xc5c0>
14000d666:     	movq	0x20(%rsp), %rcx
14000d66b:     	movq	%r13, 0x8(%rcx)
14000d66f:     	movq	%r15, 0x10(%rcx)
14000d673:     	movl	$0x1, %eax
14000d678:     	jmp	0x14000d68e <.text+0xc68e>
14000d67a:     	movq	%r12, 0x10(%rdi)
14000d67e:     	xorl	%eax, %eax
14000d680:     	movq	0x20(%rsp), %rcx
14000d685:     	jmp	0x14000d68e <.text+0xc68e>
14000d687:     	movq	0x20(%rsp), %rcx
14000d68c:     	xorl	%eax, %eax
14000d68e:     	movq	%rax, (%rcx)
14000d691:     	addq	$0x28, %rsp
14000d695:     	popq	%rbx
14000d696:     	popq	%rbp
14000d697:     	popq	%rdi
14000d698:     	popq	%rsi
14000d699:     	popq	%r12
14000d69b:     	popq	%r13
14000d69d:     	popq	%r14
14000d69f:     	popq	%r15
14000d6a1:     	retq
14000d6a2:     	int3
14000d6a3:     	int3
14000d6a4:     	int3
14000d6a5:     	int3
14000d6a6:     	int3
14000d6a7:     	int3
14000d6a8:     	int3
14000d6a9:     	int3
14000d6aa:     	int3
14000d6ab:     	int3
14000d6ac:     	int3
14000d6ad:     	int3
14000d6ae:     	int3
14000d6af:     	int3
14000d6b0:     	pushq	%r15
14000d6b2:     	pushq	%r14
14000d6b4:     	pushq	%r13
14000d6b6:     	pushq	%r12
14000d6b8:     	pushq	%rsi
14000d6b9:     	pushq	%rdi
14000d6ba:     	pushq	%rbp
14000d6bb:     	pushq	%rbx
14000d6bc:     	subq	$0x98, %rsp
14000d6c3:     	movq	%rdx, %r14
14000d6c6:     	movq	(%rcx), %rsi
14000d6c9:     	movq	0x8(%rcx), %rbx
14000d6cd:     	movq	0x10(%rcx), %rax
14000d6d1:     	movq	%rax, 0x48(%rsp)
14000d6d6:     	xorl	%eax, %eax
14000d6d8:     	movq	%rax, 0x38(%rsp)
14000d6dd:     	jmp	0x14000d6f6 <.text+0xc6f6>
14000d6df:     	nop
14000d6e0:     	movq	%r14, %rcx
14000d6e3:     	movq	%rbp, %rdx
14000d6e6:     	movq	%r12, %r8
14000d6e9:     	callq	0x140015330 <.text+0x14330>
14000d6ee:     	testb	%al, %al
14000d6f0:     	jne	0x14000e0ea <.text+0xd0ea>
14000d6f6:     	movq	0x38(%rsp), %rdi
14000d6fb:     	cmpq	0x48(%rsp), %rdi
14000d700:     	setne	%r10b
14000d704:     	je	0x14000e0da <.text+0xd0da>
14000d70a:     	testq	%rbx, %rbx
14000d70d:     	je	0x14000e102 <.text+0xd102>
14000d713:     	leaq	0x1(%rdi), %rax
14000d717:     	movq	%rax, 0x38(%rsp)
14000d71c:     	xorl	%r12d, %r12d
14000d71f:     	movq	%rbx, %r15
14000d722:     	movzbl	(%rsi,%r12), %r8d
14000d727:     	movzbl	%r8b, %ecx
14000d72b:     	testb	%cl, %cl
14000d72d:     	jns	0x14000d7f0 <.text+0xc7f0>
14000d733:     	jmp	0x14000d76d <.text+0xc76d>
14000d735:     	nopw	%cs:(%rax,%rax)
14000d740:     	cmpq	$0x2, %r15
14000d744:     	jb	0x14000e102 <.text+0xd102>
14000d74a:     	cmpb	$-0x41, 0x1(%rsi,%r12)
14000d750:     	jle	0x14000e11c <.text+0xd11c>
14000d756:     	decq	%r15
14000d759:     	incq	%r12
14000d75c:     	movzbl	(%rsi,%r12), %r8d
14000d761:     	movzbl	%r8b, %ecx
14000d765:     	testb	%cl, %cl
14000d767:     	jns	0x14000d7f0 <.text+0xc7f0>
14000d76d:     	movl	%ecx, %eax
14000d76f:     	andl	$0x1f, %eax
14000d772:     	movzbl	0x1(%rsi,%r12), %r9d
14000d778:     	andl	$0x3f, %r9d
14000d77c:     	cmpb	$-0x21, %cl
14000d77f:     	jbe	0x14000d7c0 <.text+0xc7c0>
14000d781:     	movzbl	0x2(%rsi,%r12), %edx
14000d787:     	shll	$0x6, %r9d
14000d78b:     	andl	$0x3f, %edx
14000d78e:     	orl	%r9d, %edx
14000d791:     	cmpb	$-0x10, %r8b
14000d795:     	jb	0x14000d7d0 <.text+0xc7d0>
14000d797:     	movzbl	0x3(%rsi,%r12), %ecx
14000d79d:     	andl	$0x7, %eax
14000d7a0:     	shll	$0x12, %eax
14000d7a3:     	shll	$0x6, %edx
14000d7a6:     	andl	$0x3f, %ecx
14000d7a9:     	orl	%edx, %ecx
14000d7ab:     	orl	%eax, %ecx
14000d7ad:     	cmpl	$0x110000, %ecx         # imm = 0x110000
14000d7b3:     	jne	0x14000d7f0 <.text+0xc7f0>
14000d7b5:     	jmp	0x14000e102 <.text+0xd102>
14000d7ba:     	nopw	(%rax,%rax)
14000d7c0:     	shll	$0x6, %eax
14000d7c3:     	orl	%r9d, %eax
14000d7c6:     	movl	%eax, %ecx
14000d7c8:     	jmp	0x14000d7f0 <.text+0xc7f0>
14000d7ca:     	nopw	(%rax,%rax)
14000d7d0:     	shll	$0xc, %eax
14000d7d3:     	orl	%eax, %edx
14000d7d5:     	movl	%edx, %ecx
14000d7d7:     	addl	$-0x30, %ecx
14000d7da:     	cmpl	$0x9, %ecx
14000d7dd:     	jbe	0x14000d740 <.text+0xc740>
14000d7e3:     	jmp	0x14000d7fc <.text+0xc7fc>
14000d7e5:     	nopw	%cs:(%rax,%rax)
14000d7f0:     	addl	$-0x30, %ecx
14000d7f3:     	cmpl	$0x9, %ecx
14000d7f6:     	jbe	0x14000d740 <.text+0xc740>
14000d7fc:     	testq	%r12, %r12
14000d7ff:     	je	0x14000d815 <.text+0xc815>
14000d801:     	cmpq	%rbx, %r15
14000d804:     	ja	0x14000e141 <.text+0xd141>
14000d80a:     	cmpb	$-0x41, (%rsi,%r12)
14000d80f:     	jle	0x14000e141 <.text+0xd141>
14000d815:     	movl	%r10d, 0x34(%rsp)
14000d81a:     	leaq	0x50(%rsp), %rcx
14000d81f:     	movq	%rsi, %rdx
14000d822:     	movq	%r12, %r8
14000d825:     	callq	0x140017500 <.text+0x16500>
14000d82a:     	cmpb	$0x0, 0x50(%rsp)
14000d82f:     	jne	0x14000e17f <.text+0xd17f>
14000d835:     	leaq	(%rsi,%r12), %r9
14000d839:     	movq	0x58(%rsp), %rbp
14000d83e:     	testq	%rbp, %rbp
14000d841:     	je	0x14000d880 <.text+0xc880>
14000d843:     	subq	%rbp, %rbx
14000d846:     	cmpq	%r15, %rbp
14000d849:     	jae	0x14000d890 <.text+0xc890>
14000d84b:     	leaq	(%rsi,%rbp), %rax
14000d84f:     	cmpb	$-0x41, (%r12,%rax)
14000d854:     	jle	0x14000e205 <.text+0xd205>
14000d85a:     	cmpb	$-0x41, (%r12,%rax)
14000d85f:     	jle	0x14000e271 <.text+0xd271>
14000d865:     	subq	%r12, %rbx
14000d868:     	testq	%rbp, %rbp
14000d86b:     	jne	0x14000d8a4 <.text+0xc8a4>
14000d86d:     	jmp	0x14000d9f0 <.text+0xc9f0>
14000d872:     	nopw	%cs:(%rax,%rax)
14000d880:     	movq	%r15, %rbx
14000d883:     	jmp	0x14000d9f0 <.text+0xc9f0>
14000d888:     	nopl	(%rax,%rax)
14000d890:     	cmpq	%r12, %rbx
14000d893:     	jne	0x14000e205 <.text+0xd205>
14000d899:     	xorl	%ebx, %ebx
14000d89b:     	testq	%rbp, %rbp
14000d89e:     	je	0x14000d9f0 <.text+0xc9f0>
14000d8a4:     	movq	0x38(%rsp), %rax
14000d8a9:     	cmpq	0x48(%rsp), %rax
14000d8ae:     	jne	0x14000d9f0 <.text+0xc9f0>
14000d8b4:     	movl	0x34(%r14), %eax
14000d8b8:     	andl	$0x4, %eax
14000d8bb:     	je	0x14000d9f0 <.text+0xc9f0>
14000d8c1:     	cmpb	$0x68, (%r9)
14000d8c5:     	jne	0x14000d9f0 <.text+0xc9f0>
14000d8cb:     	cmpq	$0x2, %rbp
14000d8cf:     	jb	0x14000d8dd <.text+0xc8dd>
14000d8d1:     	cmpb	$-0x41, 0x1(%rsi,%r12)
14000d8d7:     	jle	0x14000e2c3 <.text+0xd2c3>
14000d8dd:     	leaq	0x1(%rsi,%r12), %rax
14000d8e2:     	cmpq	$0x1, %rbp
14000d8e6:     	movq	%rbp, %rcx
14000d8e9:     	adcq	$0x0, %rcx
14000d8ed:     	addq	%rsi, %rcx
14000d8f0:     	addq	%r12, %rcx
14000d8f3:     	jmp	0x14000d91f <.text+0xc91f>
14000d8f5:     	addq	$0x2, %rax
14000d8f9:     	shll	$0x6, %r8d
14000d8fd:     	orl	%r11d, %r8d
14000d900:     	movl	%r8d, %edx
14000d903:     	leal	-0x30(%rdx), %r8d
14000d907:     	cmpl	$0xa, %r8d
14000d90b:     	jb	0x14000d91f <.text+0xc91f>
14000d90d:     	nopl	(%rax)
14000d910:     	orl	$0x20, %edx
14000d913:     	addl	$-0x61, %edx
14000d916:     	cmpl	$0x6, %edx
14000d919:     	jae	0x14000d9f0 <.text+0xc9f0>
14000d91f:     	cmpq	%rax, %rcx
14000d922:     	je	0x14000e0da <.text+0xd0da>
14000d928:     	movzbl	(%rax), %r10d
14000d92c:     	movzbl	%r10b, %edx
14000d930:     	testb	%dl, %dl
14000d932:     	js	0x14000d950 <.text+0xc950>
14000d934:     	incq	%rax
14000d937:     	leal	-0x30(%rdx), %r8d
14000d93b:     	cmpl	$0xa, %r8d
14000d93f:     	jae	0x14000d910 <.text+0xc910>
14000d941:     	jmp	0x14000d91f <.text+0xc91f>
14000d943:     	nopw	%cs:(%rax,%rax)
14000d950:     	movl	%edx, %r8d
14000d953:     	andl	$0x1f, %r8d
14000d957:     	movzbl	0x1(%rax), %r11d
14000d95c:     	andl	$0x3f, %r11d
14000d960:     	cmpb	$-0x21, %dl
14000d963:     	jbe	0x14000d8f5 <.text+0xc8f5>
14000d965:     	movq	%r9, %r15
14000d968:     	movzbl	0x2(%rax), %r9d
14000d96d:     	shll	$0x6, %r11d
14000d971:     	andl	$0x3f, %r9d
14000d975:     	orl	%r11d, %r9d
14000d978:     	cmpb	$-0x10, %r10b
14000d97c:     	jb	0x14000d9bd <.text+0xc9bd>
14000d97e:     	movzbl	0x3(%rax), %edx
14000d982:     	andl	$0x7, %r8d
14000d986:     	shll	$0x12, %r8d
14000d98a:     	shll	$0x6, %r9d
14000d98e:     	andl	$0x3f, %edx
14000d991:     	orl	%r9d, %edx
14000d994:     	orl	%r8d, %edx
14000d997:     	cmpl	$0x110000, %edx         # imm = 0x110000
14000d99d:     	je	0x14000e0da <.text+0xd0da>
14000d9a3:     	addq	$0x4, %rax
14000d9a7:     	movq	%r15, %r9
14000d9aa:     	leal	-0x30(%rdx), %r8d
14000d9ae:     	cmpl	$0xa, %r8d
14000d9b2:     	jae	0x14000d910 <.text+0xc910>
14000d9b8:     	jmp	0x14000d91f <.text+0xc91f>
14000d9bd:     	addq	$0x3, %rax
14000d9c1:     	shll	$0xc, %r8d
14000d9c5:     	orl	%r8d, %r9d
14000d9c8:     	movl	%r9d, %edx
14000d9cb:     	movq	%r15, %r9
14000d9ce:     	leal	-0x30(%rdx), %r8d
14000d9d2:     	cmpl	$0xa, %r8d
14000d9d6:     	jae	0x14000d910 <.text+0xc910>
14000d9dc:     	jmp	0x14000d91f <.text+0xc91f>
14000d9e1:     	nopw	%cs:(%rax,%rax)
14000d9f0:     	testq	%rdi, %rdi
14000d9f3:     	je	0x14000da18 <.text+0xca18>
14000d9f5:     	movl	$0x2, %r8d
14000d9fb:     	movq	%r14, %rcx
14000d9fe:     	leaq	0xf91b(%rip), %rdx      # 0x14001d320
14000da05:     	movq	%r9, %rdi
14000da08:     	callq	0x140015330 <.text+0x14330>
14000da0d:     	movq	%rdi, %r9
14000da10:     	testb	%al, %al
14000da12:     	jne	0x14000e0ea <.text+0xd0ea>
14000da18:     	cmpq	$0x2, %rbp
14000da1c:     	jae	0x14000da30 <.text+0xca30>
14000da1e:     	movq	%rbp, %rdi
14000da21:     	jmp	0x14000da60 <.text+0xca60>
14000da23:     	nopw	%cs:(%rax,%rax)
14000da30:     	movzwl	(%r9), %eax
14000da34:     	movq	%rbp, %rdi
14000da37:     	cmpl	$0x245f, %eax           # imm = 0x245F
14000da3c:     	jne	0x14000da60 <.text+0xca60>
14000da3e:     	cmpb	$-0x41, 0x1(%rsi,%r12)
14000da44:     	jle	0x14000e2b7 <.text+0xd2b7>
14000da4a:     	leaq	(%rsi,%r12), %r9
14000da4e:     	incq	%r9
14000da51:     	leaq	-0x1(%rbp), %rdi
14000da55:     	nopw	%cs:(%rax,%rax)
14000da60:     	addq	%rbp, %rsi
14000da63:     	addq	%r12, %rsi
14000da66:     	movq	%r9, %rbp
14000da69:     	movq	%rdi, %r12
14000da6c:     	testq	%rdi, %rdi
14000da6f:     	je	0x14000daf0 <.text+0xcaf0>
14000da71:     	movzbl	(%rbp), %eax
14000da75:     	cmpl	$0x24, %eax
14000da78:     	je	0x14000dbf0 <.text+0xcbf0>
14000da7e:     	cmpl	$0x2e, %eax
14000da81:     	jne	0x14000daf0 <.text+0xcaf0>
14000da83:     	cmpq	$0x2, %r12
14000da87:     	jb	0x14000dc7d <.text+0xcc7d>
14000da8d:     	cmpb	$-0x41, 0x1(%rbp)
14000da91:     	jle	0x14000e246 <.text+0xd246>
14000da97:     	movzbl	0x1(%rbp), %edx
14000da9b:     	movzbl	%dl, %eax
14000da9e:     	testb	%al, %al
14000daa0:     	js	0x14000e00f <.text+0xd00f>
14000daa6:     	cmpl	$0x2e, %eax
14000daa9:     	jne	0x14000e074 <.text+0xd074>
14000daaf:     	movl	$0x2, %r8d
14000dab5:     	movq	%r14, %rcx
14000dab8:     	leaq	0xf861(%rip), %rdx      # 0x14001d320
14000dabf:     	callq	0x140015330 <.text+0x14330>
14000dac4:     	testb	%al, %al
14000dac6:     	jne	0x14000e0e4 <.text+0xd0e4>
14000dacc:     	cmpq	$0x3, %r12
14000dad0:     	jb	0x14000e055 <.text+0xd055>
14000dad6:     	cmpb	$-0x40, 0x2(%rbp)
14000dada:     	jl	0x14000e2e8 <.text+0xd2e8>
14000dae0:     	addq	$-0x2, %r12
14000dae4:     	movq	%r12, %rdi
14000dae7:     	jmp	0x14000e057 <.text+0xd057>
14000daec:     	nopl	(%rax)
14000daf0:     	leaq	(%r12,%rbp), %rax
14000daf4:     	xorl	%r8d, %r8d
14000daf7:     	movq	%rbp, %rcx
14000dafa:     	jmp	0x14000db22 <.text+0xcb22>
14000dafc:     	nopl	(%rax)
14000db00:     	leaq	0x1(%rcx), %r9
14000db04:     	cmpl	$0x24, %edx
14000db07:     	je	0x14000dbd0 <.text+0xcbd0>
14000db0d:     	movq	%r13, %r8
14000db10:     	subq	%rcx, %r8
14000db13:     	addq	%r9, %r8
14000db16:     	movq	%r9, %rcx
14000db19:     	cmpl	$0x2e, %edx
14000db1c:     	je	0x14000dbd0 <.text+0xcbd0>
14000db22:     	cmpq	%rax, %rcx
14000db25:     	je	0x14000d6e0 <.text+0xc6e0>
14000db2b:     	movq	%r8, %r13
14000db2e:     	movzbl	(%rcx), %r9d
14000db32:     	movzbl	%r9b, %edx
14000db36:     	testb	%dl, %dl
14000db38:     	jns	0x14000db00 <.text+0xcb00>
14000db3a:     	movl	%edx, %r8d
14000db3d:     	andl	$0x1f, %r8d
14000db41:     	movzbl	0x1(%rcx), %r11d
14000db46:     	andl	$0x3f, %r11d
14000db4a:     	cmpb	$-0x21, %dl
14000db4d:     	jbe	0x14000db99 <.text+0xcb99>
14000db4f:     	movzbl	0x2(%rcx), %r10d
14000db54:     	shll	$0x6, %r11d
14000db58:     	andl	$0x3f, %r10d
14000db5c:     	orl	%r11d, %r10d
14000db5f:     	cmpb	$-0x10, %r9b
14000db63:     	jb	0x14000dbb2 <.text+0xcbb2>
14000db65:     	movzbl	0x3(%rcx), %edx
14000db69:     	andl	$0x7, %r8d
14000db6d:     	shll	$0x12, %r8d
14000db71:     	shll	$0x6, %r10d
14000db75:     	andl	$0x3f, %edx
14000db78:     	orl	%r10d, %edx
14000db7b:     	orl	%r8d, %edx
14000db7e:     	cmpl	$0x110000, %edx         # imm = 0x110000
14000db84:     	je	0x14000d6e0 <.text+0xc6e0>
14000db8a:     	leaq	0x4(%rcx), %r9
14000db8e:     	cmpl	$0x24, %edx
14000db91:     	jne	0x14000db0d <.text+0xcb0d>
14000db97:     	jmp	0x14000dbd0 <.text+0xcbd0>
14000db99:     	leaq	0x2(%rcx), %r9
14000db9d:     	shll	$0x6, %r8d
14000dba1:     	orl	%r11d, %r8d
14000dba4:     	movl	%r8d, %edx
14000dba7:     	cmpl	$0x24, %edx
14000dbaa:     	jne	0x14000db0d <.text+0xcb0d>
14000dbb0:     	jmp	0x14000dbd0 <.text+0xcbd0>
14000dbb2:     	leaq	0x3(%rcx), %r9
14000dbb6:     	shll	$0xc, %r8d
14000dbba:     	orl	%r8d, %r10d
14000dbbd:     	movl	%r10d, %edx
14000dbc0:     	cmpl	$0x24, %edx
14000dbc3:     	jne	0x14000db0d <.text+0xcb0d>
14000dbc9:     	nopl	(%rax)
14000dbd0:     	testq	%r13, %r13
14000dbd3:     	je	0x14000dc0e <.text+0xcc0e>
14000dbd5:     	cmpq	%r13, %r12
14000dbd8:     	jbe	0x14000dc29 <.text+0xcc29>
14000dbda:     	cmpb	$-0x41, (%rbp,%r13)
14000dbe0:     	jg	0x14000dc38 <.text+0xcc38>
14000dbe2:     	jmp	0x14000e1b9 <.text+0xd1b9>
14000dbe7:     	nopw	(%rax,%rax)
14000dbf0:     	cmpq	$0x2, %r12
14000dbf4:     	jb	0x14000dca7 <.text+0xcca7>
14000dbfa:     	cmpb	$-0x41, 0x1(%rbp)
14000dbfe:     	jle	0x14000e24f <.text+0xd24f>
14000dc04:     	leaq	-0x1(%r12), %rax
14000dc09:     	jmp	0x14000dca9 <.text+0xcca9>
14000dc0e:     	movq	%r14, %rcx
14000dc11:     	movq	%rbp, %rdx
14000dc14:     	movq	%r13, %r8
14000dc17:     	callq	0x140015330 <.text+0x14330>
14000dc1c:     	testb	%al, %al
14000dc1e:     	jne	0x14000e0e4 <.text+0xd0e4>
14000dc24:     	xorl	%r13d, %r13d
14000dc27:     	jmp	0x14000dc6f <.text+0xcc6f>
14000dc29:     	jne	0x14000e1b9 <.text+0xd1b9>
14000dc2f:     	testq	%rbp, %rbp
14000dc32:     	je	0x14000e1b9 <.text+0xd1b9>
14000dc38:     	movq	%r14, %rcx
14000dc3b:     	movq	%rbp, %rdx
14000dc3e:     	movq	%r13, %r8
14000dc41:     	callq	0x140015330 <.text+0x14330>
14000dc46:     	testb	%al, %al
14000dc48:     	jne	0x14000e0e4 <.text+0xd0e4>
14000dc4e:     	movq	%r12, %rax
14000dc51:     	subq	%r13, %rax
14000dc54:     	jbe	0x14000dc63 <.text+0xcc63>
14000dc56:     	cmpb	$-0x40, (%rbp,%r13)
14000dc5c:     	jge	0x14000dc6c <.text+0xcc6c>
14000dc5e:     	jmp	0x14000e1d8 <.text+0xd1d8>
14000dc63:     	jne	0x14000e1d8 <.text+0xd1d8>
14000dc69:     	movq	%r12, %r13
14000dc6c:     	movq	%rax, %r12
14000dc6f:     	addq	%r13, %rbp
14000dc72:     	movq	%r12, %rdi
14000dc75:     	movq	%rbp, %r9
14000dc78:     	jmp	0x14000da66 <.text+0xca66>
14000dc7d:     	movl	$0x1, %r8d
14000dc83:     	movq	%r14, %rcx
14000dc86:     	leaq	0xf783(%rip), %rdx      # 0x14001d410
14000dc8d:     	callq	0x140015330 <.text+0x14330>
14000dc92:     	testb	%al, %al
14000dc94:     	jne	0x14000e0e4 <.text+0xd0e4>
14000dc9a:     	xorl	%edi, %edi
14000dc9c:     	incq	%rbp
14000dc9f:     	movq	%rbp, %r9
14000dca2:     	jmp	0x14000da66 <.text+0xca66>
14000dca7:     	xorl	%eax, %eax
14000dca9:     	leaq	0x1(%rbp), %r15
14000dcad:     	movq	%r15, 0x50(%rsp)
14000dcb2:     	movq	%rax, 0x58(%rsp)
14000dcb7:     	movq	$0x0, 0x60(%rsp)
14000dcc0:     	movq	%rax, 0x68(%rsp)
14000dcc5:     	movq	$0x1, 0x70(%rsp)
14000dcce:     	movabsq	$0x2400000024, %rax     # imm = 0x2400000024
14000dcd8:     	movq	%rax, 0x78(%rsp)
14000dcdd:     	leaq	0x80(%rsp), %rcx
14000dce5:     	leaq	0x50(%rsp), %rdx
14000dcea:     	callq	0x14000d4a0 <.text+0xc4a0>
14000dcef:     	cmpq	$0x0, 0x80(%rsp)
14000dcf8:     	je	0x14000d6e0 <.text+0xc6e0>
14000dcfe:     	movq	0x88(%rsp), %rdx
14000dd06:     	cmpq	$-0x1, %rdx
14000dd0a:     	je	0x14000e1f7 <.text+0xd1f7>
14000dd10:     	leaq	0x1(%rdx), %r9
14000dd14:     	cmpq	$0x2, %r12
14000dd18:     	jb	0x14000dd24 <.text+0xcd24>
14000dd1a:     	cmpb	$-0x40, (%r15)
14000dd1e:     	jl	0x14000e160 <.text+0xd160>
14000dd24:     	cmpq	%r12, %r9
14000dd27:     	jae	0x14000dd3b <.text+0xcd3b>
14000dd29:     	cmpb	$-0x40, (%rbp,%r9)
14000dd2f:     	jl	0x14000e160 <.text+0xd160>
14000dd35:     	leaq	0x2(%rdx), %r9
14000dd39:     	jmp	0x14000dd50 <.text+0xcd50>
14000dd3b:     	jne	0x14000e160 <.text+0xd160>
14000dd41:     	movq	%rdx, %r9
14000dd44:     	movq	%r12, %rdi
14000dd47:     	movq	%rbp, %rax
14000dd4a:     	addq	$0x2, %r9
14000dd4e:     	je	0x14000dd8a <.text+0xcd8a>
14000dd50:     	movq	%r12, %rdi
14000dd53:     	subq	%r9, %rdi
14000dd56:     	jbe	0x14000dd65 <.text+0xcd65>
14000dd58:     	cmpb	$-0x40, (%rbp,%r9)
14000dd5e:     	jge	0x14000dd6b <.text+0xcd6b>
14000dd60:     	jmp	0x14000e227 <.text+0xd227>
14000dd65:     	jne	0x14000e227 <.text+0xd227>
14000dd6b:     	addq	%rbp, %r9
14000dd6e:     	cmpq	$0x1, %rdx
14000dd72:     	je	0x14000ddb5 <.text+0xcdb5>
14000dd74:     	cmpq	$0x2, %rdx
14000dd78:     	je	0x14000df53 <.text+0xcf53>
14000dd7e:     	movq	%r9, %rax
14000dd81:     	testq	%rdx, %rdx
14000dd84:     	je	0x14000d6e0 <.text+0xc6e0>
14000dd8a:     	cmpb	$0x75, 0x1(%rbp)
14000dd8e:     	jne	0x14000d6e0 <.text+0xc6e0>
14000dd94:     	movq	%rax, %r9
14000dd97:     	cmpq	$0x2, %rdx
14000dd9b:     	jb	0x14000e293 <.text+0xd293>
14000dda1:     	cmpb	$-0x41, 0x2(%rbp)
14000dda5:     	jle	0x14000e298 <.text+0xd298>
14000ddab:     	movq	%r9, 0x40(%rsp)
14000ddb0:     	decq	%rdx
14000ddb3:     	jmp	0x14000ddd7 <.text+0xcdd7>
14000ddb5:     	cmpb	$0x43, (%r15)
14000ddb9:     	leaq	0xf618(%rip), %rax      # 0x14001d3d8
14000ddc0:     	je	0x14000dfeb <.text+0xcfeb>
14000ddc6:     	cmpb	$0x75, (%r15)
14000ddca:     	jne	0x14000d6e0 <.text+0xc6e0>
14000ddd0:     	movq	%r9, 0x40(%rsp)
14000ddd5:     	xorl	%edx, %edx
14000ddd7:     	leaq	0x2(%rbp), %rcx
14000dddb:     	leaq	(%rdx,%rbp), %rax
14000dddf:     	addq	$0x2, %rax
14000dde3:     	movq	%rcx, %r8
14000dde6:     	nopw	%cs:(%rax,%rax)
14000ddf0:     	cmpq	%rax, %r8
14000ddf3:     	je	0x14000deda <.text+0xceda>
14000ddf9:     	movzbl	(%r8), %r15d
14000ddfd:     	movzbl	%r15b, %r9d
14000de01:     	testb	%r9b, %r9b
14000de04:     	js	0x14000de20 <.text+0xce20>
14000de06:     	incq	%r8
14000de09:     	leal	-0x30(%r9), %r10d
14000de0d:     	cmpl	$0xa, %r10d
14000de11:     	jae	0x14000deb5 <.text+0xceb5>
14000de17:     	jmp	0x14000ddf0 <.text+0xcdf0>
14000de19:     	nopl	(%rax)
14000de20:     	movq	%rbx, %r13
14000de23:     	movq	%r14, %rbx
14000de26:     	movl	%r9d, %r10d
14000de29:     	andl	$0x1f, %r10d
14000de2d:     	movzbl	0x1(%r8), %r14d
14000de32:     	andl	$0x3f, %r14d
14000de36:     	cmpb	$-0x21, %r9b
14000de3a:     	jbe	0x14000de83 <.text+0xce83>
14000de3c:     	movzbl	0x2(%r8), %r11d
14000de41:     	shll	$0x6, %r14d
14000de45:     	andl	$0x3f, %r11d
14000de49:     	orl	%r14d, %r11d
14000de4c:     	cmpb	$-0x10, %r15b
14000de50:     	jb	0x14000de93 <.text+0xce93>
14000de52:     	movzbl	0x3(%r8), %r9d
14000de57:     	andl	$0x7, %r10d
14000de5b:     	shll	$0x12, %r10d
14000de5f:     	shll	$0x6, %r11d
14000de63:     	andl	$0x3f, %r9d
14000de67:     	orl	%r11d, %r9d
14000de6a:     	orl	%r10d, %r9d
14000de6d:     	cmpl	$0x110000, %r9d         # imm = 0x110000
14000de74:     	movq	%rbx, %r14
14000de77:     	je	0x14000e0bc <.text+0xd0bc>
14000de7d:     	addq	$0x4, %r8
14000de81:     	jmp	0x14000dea4 <.text+0xcea4>
14000de83:     	addq	$0x2, %r8
14000de87:     	shll	$0x6, %r10d
14000de8b:     	orl	%r14d, %r10d
14000de8e:     	movl	%r10d, %r9d
14000de91:     	jmp	0x14000dea1 <.text+0xcea1>
14000de93:     	addq	$0x3, %r8
14000de97:     	shll	$0xc, %r10d
14000de9b:     	orl	%r10d, %r11d
14000de9e:     	movl	%r11d, %r9d
14000dea1:     	movq	%rbx, %r14
14000dea4:     	movq	%r13, %rbx
14000dea7:     	leal	-0x30(%r9), %r10d
14000deab:     	cmpl	$0xa, %r10d
14000deaf:     	jb	0x14000ddf0 <.text+0xcdf0>
14000deb5:     	addl	$-0x61, %r9d
14000deb9:     	cmpl	$0x6, %r9d
14000debd:     	jb	0x14000ddf0 <.text+0xcdf0>
14000dec3:     	movb	$0x1, %r15b
14000dec6:     	movl	$0x10, %r8d
14000decc:     	callq	0x1400174f0 <.text+0x164f0>
14000ded1:     	testb	$0x1, %al
14000ded3:     	je	0x14000def0 <.text+0xcef0>
14000ded5:     	jmp	0x14000d6e0 <.text+0xc6e0>
14000deda:     	xorl	%r15d, %r15d
14000dedd:     	movl	$0x10, %r8d
14000dee3:     	callq	0x1400174f0 <.text+0x164f0>
14000dee8:     	testb	$0x1, %al
14000deea:     	jne	0x14000d6e0 <.text+0xc6e0>
14000def0:     	shrq	$0x20, %rax
14000def4:     	movl	%eax, %ecx
14000def6:     	xorl	$0xd800, %ecx           # imm = 0xD800
14000defc:     	addl	$0xffef0000, %ecx       # imm = 0xFFEF0000
14000df02:     	cmpl	$0xffef0800, %ecx       # imm = 0xFFEF0800
14000df08:     	movl	$0x110000, %ecx         # imm = 0x110000
14000df0d:     	cmovbl	%ecx, %eax
14000df10:     	cmpl	$0x110000, %eax         # imm = 0x110000
14000df15:     	sete	%cl
14000df18:     	orb	%cl, %r15b
14000df1b:     	jne	0x14000d6e0 <.text+0xc6e0>
14000df21:     	movl	%eax, 0x50(%rsp)
14000df25:     	movl	%eax, %ecx
14000df27:     	callq	0x140017f70 <.text+0x16f70>
14000df2c:     	testb	%al, %al
14000df2e:     	jne	0x14000d6e0 <.text+0xc6e0>
14000df34:     	leaq	0x50(%rsp), %rcx
14000df39:     	movq	%r14, %rdx
14000df3c:     	callq	0x140015c80 <.text+0x14c80>
14000df41:     	testb	%al, %al
14000df43:     	movq	0x40(%rsp), %r9
14000df48:     	je	0x14000da66 <.text+0xca66>
14000df4e:     	jmp	0x14000e0e4 <.text+0xd0e4>
14000df53:     	movzwl	(%r15), %ecx
14000df57:     	leaq	0xf481(%rip), %rax      # 0x14001d3df
14000df5e:     	cmpl	$0x5053, %ecx           # imm = 0x5053
14000df64:     	je	0x14000dfeb <.text+0xcfeb>
14000df6a:     	movzwl	(%r15), %ecx
14000df6e:     	leaq	0xf469(%rip), %rax      # 0x14001d3de
14000df75:     	cmpl	$0x5042, %ecx           # imm = 0x5042
14000df7b:     	je	0x14000dfeb <.text+0xcfeb>
14000df7d:     	movzwl	(%r15), %ecx
14000df81:     	leaq	0xf455(%rip), %rax      # 0x14001d3dd
14000df88:     	cmpl	$0x4652, %ecx           # imm = 0x4652
14000df8e:     	je	0x14000dfeb <.text+0xcfeb>
14000df90:     	movzwl	(%r15), %ecx
14000df94:     	leaq	0xf441(%rip), %rax      # 0x14001d3dc
14000df9b:     	cmpl	$0x544c, %ecx           # imm = 0x544C
14000dfa1:     	je	0x14000dfeb <.text+0xcfeb>
14000dfa3:     	movzwl	(%r15), %ecx
14000dfa7:     	leaq	0xf42d(%rip), %rax      # 0x14001d3db
14000dfae:     	cmpl	$0x5447, %ecx           # imm = 0x5447
14000dfb4:     	je	0x14000dfeb <.text+0xcfeb>
14000dfb6:     	movzwl	(%r15), %ecx
14000dfba:     	leaq	0xf419(%rip), %rax      # 0x14001d3da
14000dfc1:     	cmpl	$0x504c, %ecx           # imm = 0x504C
14000dfc7:     	je	0x14000dfeb <.text+0xcfeb>
14000dfc9:     	movzwl	(%r15), %ecx
14000dfcd:     	leaq	0xf405(%rip), %rax      # 0x14001d3d9
14000dfd4:     	cmpl	$0x5052, %ecx           # imm = 0x5052
14000dfda:     	je	0x14000dfeb <.text+0xcfeb>
14000dfdc:     	cmpb	$0x75, (%r15)
14000dfe0:     	je	0x14000dda1 <.text+0xcda1>
14000dfe6:     	jmp	0x14000d6e0 <.text+0xc6e0>
14000dfeb:     	movl	$0x1, %r8d
14000dff1:     	movq	%r14, %rcx
14000dff4:     	movq	%rax, %rdx
14000dff7:     	movq	%r9, %r15
14000dffa:     	callq	0x140015330 <.text+0x14330>
14000dfff:     	movq	%r15, %r9
14000e002:     	testb	%al, %al
14000e004:     	je	0x14000da66 <.text+0xca66>
14000e00a:     	jmp	0x14000e0e4 <.text+0xd0e4>
14000e00f:     	movl	%eax, %ecx
14000e011:     	andl	$0x1f, %ecx
14000e014:     	movzbl	0x2(%rbp), %r8d
14000e019:     	andl	$0x3f, %r8d
14000e01d:     	cmpb	$-0x21, %al
14000e01f:     	jbe	0x14000e063 <.text+0xd063>
14000e021:     	movzbl	0x3(%rbp), %eax
14000e025:     	shll	$0x6, %r8d
14000e029:     	andl	$0x3f, %eax
14000e02c:     	orl	%r8d, %eax
14000e02f:     	cmpb	$-0x10, %dl
14000e032:     	jb	0x14000e0ac <.text+0xd0ac>
14000e034:     	movzbl	0x4(%rbp), %edx
14000e038:     	andl	$0x7, %ecx
14000e03b:     	shll	$0x12, %ecx
14000e03e:     	shll	$0x6, %eax
14000e041:     	andl	$0x3f, %edx
14000e044:     	orl	%eax, %edx
14000e046:     	orl	%ecx, %edx
14000e048:     	movl	%edx, %eax
14000e04a:     	cmpl	$0x2e, %eax
14000e04d:     	je	0x14000daaf <.text+0xcaaf>
14000e053:     	jmp	0x14000e074 <.text+0xd074>
14000e055:     	xorl	%edi, %edi
14000e057:     	addq	$0x2, %rbp
14000e05b:     	movq	%rbp, %r9
14000e05e:     	jmp	0x14000da66 <.text+0xca66>
14000e063:     	shll	$0x6, %ecx
14000e066:     	orl	%r8d, %ecx
14000e069:     	movl	%ecx, %eax
14000e06b:     	cmpl	$0x2e, %eax
14000e06e:     	je	0x14000daaf <.text+0xcaaf>
14000e074:     	movl	$0x1, %r8d
14000e07a:     	movq	%r14, %rcx
14000e07d:     	leaq	0xf38c(%rip), %rdx      # 0x14001d410
14000e084:     	callq	0x140015330 <.text+0x14330>
14000e089:     	testb	%al, %al
14000e08b:     	jne	0x14000e0e4 <.text+0xd0e4>
14000e08d:     	cmpq	$0x2, %r12
14000e091:     	jb	0x14000dc9a <.text+0xcc9a>
14000e097:     	cmpb	$-0x40, 0x1(%rbp)
14000e09b:     	jl	0x14000e2ff <.text+0xd2ff>
14000e0a1:     	decq	%r12
14000e0a4:     	movq	%r12, %rdi
14000e0a7:     	jmp	0x14000dc9c <.text+0xcc9c>
14000e0ac:     	shll	$0xc, %ecx
14000e0af:     	orl	%ecx, %eax
14000e0b1:     	cmpl	$0x2e, %eax
14000e0b4:     	je	0x14000daaf <.text+0xcaaf>
14000e0ba:     	jmp	0x14000e074 <.text+0xd074>
14000e0bc:     	xorl	%r15d, %r15d
14000e0bf:     	movq	%r13, %rbx
14000e0c2:     	movl	$0x10, %r8d
14000e0c8:     	callq	0x1400174f0 <.text+0x164f0>
14000e0cd:     	testb	$0x1, %al
14000e0cf:     	je	0x14000def0 <.text+0xcef0>
14000e0d5:     	jmp	0x14000d6e0 <.text+0xc6e0>
14000e0da:     	movl	$0x0, 0x34(%rsp)
14000e0e2:     	jmp	0x14000e0ea <.text+0xd0ea>
14000e0e4:     	movb	$0x1, %al
14000e0e6:     	movl	%eax, 0x34(%rsp)
14000e0ea:     	movl	0x34(%rsp), %eax
14000e0ee:     	addq	$0x98, %rsp
14000e0f5:     	popq	%rbx
14000e0f6:     	popq	%rbp
14000e0f7:     	popq	%rdi
14000e0f8:     	popq	%rsi
14000e0f9:     	popq	%r12
14000e0fb:     	popq	%r13
14000e0fd:     	popq	%r14
14000e0ff:     	popq	%r15
14000e101:     	retq
14000e102:     	leaq	0xf157(%rip), %rcx      # 0x14001d260
14000e109:     	leaq	0xf180(%rip), %r8       # 0x14001d290
14000e110:     	movl	$0x2b, %edx
14000e115:     	callq	0x140019880 <.text+0x18880>
14000e11a:     	ud2
14000e11c:     	addq	%r12, %rsi
14000e11f:     	leaq	0xf182(%rip), %rax      # 0x14001d2a8
14000e126:     	movq	%rax, 0x20(%rsp)
14000e12b:     	movl	$0x1, %r8d
14000e131:     	movq	%rsi, %rcx
14000e134:     	movq	%r15, %rdx
14000e137:     	movq	%r15, %r9
14000e13a:     	callq	0x140019e10 <.text+0x18e10>
14000e13f:     	ud2
14000e141:     	leaq	0xf178(%rip), %rax      # 0x14001d2c0
14000e148:     	movq	%rax, 0x20(%rsp)
14000e14d:     	movq	%rsi, %rcx
14000e150:     	movq	%rbx, %rdx
14000e153:     	xorl	%r8d, %r8d
14000e156:     	movq	%r12, %r9
14000e159:     	callq	0x140019e10 <.text+0x18e10>
14000e15e:     	ud2
14000e160:     	leaq	0xf221(%rip), %rax      # 0x14001d388
14000e167:     	movq	%rax, 0x20(%rsp)
14000e16c:     	movl	$0x1, %r8d
14000e172:     	movq	%rbp, %rcx
14000e175:     	movq	%r12, %rdx
14000e178:     	callq	0x140019e10 <.text+0x18e10>
14000e17d:     	ud2
14000e17f:     	movzbl	0x51(%rsp), %eax
14000e184:     	movb	%al, 0x80(%rsp)
14000e18b:     	leaq	0xf146(%rip), %rax      # 0x14001d2d8
14000e192:     	movq	%rax, 0x20(%rsp)
14000e197:     	leaq	0xeefa(%rip), %rcx      # 0x14001d098
14000e19e:     	leaq	0xef43(%rip), %r9       # 0x14001d0e8
14000e1a5:     	leaq	0x80(%rsp), %r8
14000e1ad:     	movl	$0x2b, %edx
14000e1b2:     	callq	0x140019bb0 <.text+0x18bb0>
14000e1b7:     	ud2
14000e1b9:     	leaq	0xf180(%rip), %rax      # 0x14001d340
14000e1c0:     	movq	%rax, 0x20(%rsp)
14000e1c5:     	movq	%rbp, %rcx
14000e1c8:     	movq	%r12, %rdx
14000e1cb:     	xorl	%r8d, %r8d
14000e1ce:     	movq	%r13, %r9
14000e1d1:     	callq	0x140019e10 <.text+0x18e10>
14000e1d6:     	ud2
14000e1d8:     	leaq	0xf179(%rip), %rax      # 0x14001d358
14000e1df:     	movq	%rax, 0x20(%rsp)
14000e1e4:     	movq	%rbp, %rcx
14000e1e7:     	movq	%r12, %rdx
14000e1ea:     	movq	%r13, %r8
14000e1ed:     	movq	%r12, %r9
14000e1f0:     	callq	0x140019e10 <.text+0x18e10>
14000e1f5:     	ud2
14000e1f7:     	leaq	0xf18a(%rip), %rcx      # 0x14001d388
14000e1fe:     	callq	0x140019dd0 <.text+0x18dd0>
14000e203:     	ud2
14000e205:     	addq	%r12, %rsi
14000e208:     	leaq	0xf0e1(%rip), %rax      # 0x14001d2f0
14000e20f:     	movq	%rax, 0x20(%rsp)
14000e214:     	movq	%rsi, %rcx
14000e217:     	movq	%r15, %rdx
14000e21a:     	movq	%rbp, %r8
14000e21d:     	movq	%r15, %r9
14000e220:     	callq	0x140019e10 <.text+0x18e10>
14000e225:     	ud2
14000e227:     	leaq	0xf172(%rip), %rax      # 0x14001d3a0
14000e22e:     	movq	%rax, 0x20(%rsp)
14000e233:     	movq	%rbp, %rcx
14000e236:     	movq	%r12, %rdx
14000e239:     	movq	%r9, %r8
14000e23c:     	movq	%r12, %r9
14000e23f:     	callq	0x140019e10 <.text+0x18e10>
14000e244:     	ud2
14000e246:     	leaq	0xf193(%rip), %rax      # 0x14001d3e0
14000e24d:     	jmp	0x14000e256 <.text+0xd256>
14000e24f:     	leaq	0xf11a(%rip), %rax      # 0x14001d370
14000e256:     	movq	%rax, 0x20(%rsp)
14000e25b:     	movl	$0x1, %r8d
14000e261:     	movq	%rbp, %rcx
14000e264:     	movq	%r12, %rdx
14000e267:     	movq	%r12, %r9
14000e26a:     	callq	0x140019e10 <.text+0x18e10>
14000e26f:     	ud2
14000e271:     	addq	%r12, %rsi
14000e274:     	leaq	0xf08d(%rip), %rax      # 0x14001d308
14000e27b:     	movq	%rax, 0x20(%rsp)
14000e280:     	movq	%rsi, %rcx
14000e283:     	movq	%r15, %rdx
14000e286:     	xorl	%r8d, %r8d
14000e289:     	movq	%rbp, %r9
14000e28c:     	callq	0x140019e10 <.text+0x18e10>
14000e291:     	ud2
14000e293:     	movl	$0x1, %edx
14000e298:     	leaq	0xf121(%rip), %rax      # 0x14001d3c0
14000e29f:     	movq	%rax, 0x20(%rsp)
14000e2a4:     	movl	$0x1, %r8d
14000e2aa:     	movq	%r15, %rcx
14000e2ad:     	movq	%rdx, %r9
14000e2b0:     	callq	0x140019e10 <.text+0x18e10>
14000e2b5:     	ud2
14000e2b7:     	addq	%r12, %rsi
14000e2ba:     	leaq	0xf067(%rip), %rax      # 0x14001d328
14000e2c1:     	jmp	0x14000e2cd <.text+0xd2cd>
14000e2c3:     	addq	%r12, %rsi
14000e2c6:     	leaq	0xef7b(%rip), %rax      # 0x14001d248
14000e2cd:     	movq	%rax, 0x20(%rsp)
14000e2d2:     	movl	$0x1, %r8d
14000e2d8:     	movq	%rsi, %rcx
14000e2db:     	movq	%rbp, %rdx
14000e2de:     	movq	%rbp, %r9
14000e2e1:     	callq	0x140019e10 <.text+0x18e10>
14000e2e6:     	ud2
14000e2e8:     	leaq	0xf109(%rip), %rax      # 0x14001d3f8
14000e2ef:     	movq	%rax, 0x20(%rsp)
14000e2f4:     	movl	$0x2, %r8d
14000e2fa:     	jmp	0x14000e261 <.text+0xd261>
14000e2ff:     	leaq	0xf112(%rip), %rax      # 0x14001d418
14000e306:     	jmp	0x14000e256 <.text+0xd256>
14000e30b:     	int3
14000e30c:     	int3
14000e30d:     	int3
14000e30e:     	int3
14000e30f:     	int3
14000e310:     	pushq	%r15
14000e312:     	pushq	%r14
14000e314:     	pushq	%r13
14000e316:     	pushq	%r12
14000e318:     	pushq	%rsi
14000e319:     	pushq	%rdi
14000e31a:     	pushq	%rbp
14000e31b:     	pushq	%rbx
14000e31c:     	subq	$0x298, %rsp            # imm = 0x298
14000e323:     	movq	%rdx, %rsi
14000e326:     	movq	%rcx, %r12
14000e329:     	leaq	0x98(%rsp), %rcx
14000e331:     	movl	$0x200, %r8d            # imm = 0x200
14000e337:     	xorl	%edx, %edx
14000e339:     	callq	0x140018bf1 <.text+0x17bf1>
14000e33e:     	movq	0x18(%r12), %rcx
14000e343:     	movq	%rcx, %rax
14000e346:     	movq	%rcx, 0x70(%rsp)
14000e34b:     	testq	%rcx, %rcx
14000e34e:     	je	0x14000e476 <.text+0xd476>
14000e354:     	movq	%rsi, 0x60(%rsp)
14000e359:     	movq	0x10(%r12), %rax
14000e35e:     	movq	%rax, 0x58(%rsp)
14000e363:     	movzbl	(%rax), %r8d
14000e367:     	movq	(%r12), %rcx
14000e36b:     	movq	0x8(%r12), %rax
14000e370:     	testq	%rax, %rax
14000e373:     	movq	%rcx, 0x88(%rsp)
14000e37b:     	movq	%rax, 0x90(%rsp)
14000e383:     	je	0x14000e49a <.text+0xd49a>
14000e389:     	addq	%rcx, %rax
14000e38c:     	xorl	%r12d, %r12d
14000e38f:     	nop
14000e390:     	movzbl	(%rcx), %r11d
14000e394:     	movzbl	%r11b, %edx
14000e398:     	testb	%dl, %dl
14000e39a:     	js	0x14000e3c0 <.text+0xd3c0>
14000e39c:     	incq	%rcx
14000e39f:     	cmpq	$0x80, %r12
14000e3a6:     	jne	0x14000e460 <.text+0xd460>
14000e3ac:     	jmp	0x14000e86d <.text+0xd86d>
14000e3b1:     	nopw	%cs:(%rax,%rax)
14000e3c0:     	movl	%edx, %r9d
14000e3c3:     	andl	$0x1f, %r9d
14000e3c7:     	movzbl	0x1(%rcx), %esi
14000e3cb:     	andl	$0x3f, %esi
14000e3ce:     	cmpb	$-0x21, %dl
14000e3d1:     	jbe	0x14000e41f <.text+0xd41f>
14000e3d3:     	movzbl	0x2(%rcx), %r10d
14000e3d8:     	shll	$0x6, %esi
14000e3db:     	andl	$0x3f, %r10d
14000e3df:     	orl	%esi, %r10d
14000e3e2:     	cmpb	$-0x10, %r11b
14000e3e6:     	jb	0x14000e43b <.text+0xd43b>
14000e3e8:     	movzbl	0x3(%rcx), %edx
14000e3ec:     	andl	$0x7, %r9d
14000e3f0:     	shll	$0x12, %r9d
14000e3f4:     	shll	$0x6, %r10d
14000e3f8:     	andl	$0x3f, %edx
14000e3fb:     	orl	%r10d, %edx
14000e3fe:     	orl	%r9d, %edx
14000e401:     	cmpl	$0x110000, %edx         # imm = 0x110000
14000e407:     	je	0x14000e49d <.text+0xd49d>
14000e40d:     	addq	$0x4, %rcx
14000e411:     	cmpq	$0x80, %r12
14000e418:     	jne	0x14000e460 <.text+0xd460>
14000e41a:     	jmp	0x14000e86d <.text+0xd86d>
14000e41f:     	addq	$0x2, %rcx
14000e423:     	shll	$0x6, %r9d
14000e427:     	orl	%esi, %r9d
14000e42a:     	movl	%r9d, %edx
14000e42d:     	cmpq	$0x80, %r12
14000e434:     	jne	0x14000e460 <.text+0xd460>
14000e436:     	jmp	0x14000e86d <.text+0xd86d>
14000e43b:     	addq	$0x3, %rcx
14000e43f:     	shll	$0xc, %r9d
14000e443:     	orl	%r9d, %r10d
14000e446:     	movl	%r10d, %edx
14000e449:     	cmpq	$0x80, %r12
14000e450:     	je	0x14000e86d <.text+0xd86d>
14000e456:     	nopw	%cs:(%rax,%rax)
14000e460:     	movl	%edx, 0x98(%rsp,%r12,4)
14000e468:     	incq	%r12
14000e46b:     	cmpq	%rax, %rcx
14000e46e:     	jne	0x14000e390 <.text+0xd390>
14000e474:     	jmp	0x14000e49d <.text+0xd49d>
14000e476:     	movq	(%r12), %rdx
14000e47a:     	movq	0x8(%r12), %r8
14000e47f:     	movq	%rsi, %rcx
14000e482:     	addq	$0x298, %rsp            # imm = 0x298
14000e489:     	popq	%rbx
14000e48a:     	popq	%rbp
14000e48b:     	popq	%rdi
14000e48c:     	popq	%rsi
14000e48d:     	popq	%r12
14000e48f:     	popq	%r13
14000e491:     	popq	%r14
14000e493:     	popq	%r15
14000e495:     	jmp	0x140015330 <.text+0x14330>
14000e49a:     	xorl	%r12d, %r12d
14000e49d:     	movq	0x70(%rsp), %rax
14000e4a2:     	movq	0x58(%rsp), %rdi
14000e4a7:     	addq	%rdi, %rax
14000e4aa:     	movq	%rax, 0x78(%rsp)
14000e4af:     	leaq	-0x1(%r12), %rax
14000e4b4:     	movq	%rax, 0x80(%rsp)
14000e4bc:     	leaq	0x4(,%r12,4), %rax
14000e4c4:     	movq	%rax, 0x40(%rsp)
14000e4c9:     	leaq	(%rsp,%r12,4), %rbp
14000e4cd:     	addq	$0x98, %rbp
14000e4d4:     	movq	%r12, %rax
14000e4d7:     	negq	%rax
14000e4da:     	movq	%rax, 0x50(%rsp)
14000e4df:     	movq	%r12, %rax
14000e4e2:     	notq	%rax
14000e4e5:     	movq	%rax, 0x48(%rsp)
14000e4ea:     	leaq	0x1(%r12), %rax
14000e4ef:     	movq	%rax, 0x20(%rsp)
14000e4f4:     	movl	$0x2bc, %eax            # imm = 0x2BC
14000e4f9:     	movq	%rax, 0x28(%rsp)
14000e4fe:     	movl	$0x48, %r14d
14000e504:     	movl	$0x80, %ebx
14000e509:     	movl	$0x1a, %r9d
14000e50f:     	movabsq	$-0x15f15f15f15f15f1, %rsi # imm = 0xEA0EA0EA0EA0EA0F
14000e519:     	xorl	%eax, %eax
14000e51b:     	movq	%rax, 0x30(%rsp)
14000e520:     	xorl	%ecx, %ecx
14000e522:     	movl	$0x24, %edx
14000e527:     	subq	%r14, %rdx
14000e52a:     	movl	$0x0, %eax
14000e52f:     	cmovaeq	%rdx, %rax
14000e533:     	cmpq	$0x1, %rax
14000e537:     	adcq	$0x0, %rax
14000e53b:     	cmpq	$0x1a, %rax
14000e53f:     	movl	$0x1a, %r15d
14000e545:     	cmovaeq	%r9, %rax
14000e549:     	leal	-0x61(%r8), %edx
14000e54d:     	cmpb	$0x1a, %dl
14000e550:     	jb	0x14000e566 <.text+0xd566>
14000e552:     	leal	-0x30(%r8), %edx
14000e556:     	cmpb	$0x9, %dl
14000e559:     	ja	0x14000e86d <.text+0xd86d>
14000e55f:     	addb	$-0x16, %r8b
14000e563:     	movl	%r8d, %edx
14000e566:     	incq	%rdi
14000e569:     	movzbl	%dl, %r9d
14000e56d:     	cmpq	%r9, %rax
14000e570:     	jbe	0x14000e5a0 <.text+0xd5a0>
14000e572:     	addq	%r9, %rcx
14000e575:     	jb	0x14000e86d <.text+0xd86d>
14000e57b:     	leaq	0x1(%r12), %r13
14000e580:     	movq	%rcx, %rax
14000e583:     	orq	%r13, %rax
14000e586:     	shrq	$0x20, %rax
14000e58a:     	je	0x14000e63b <.text+0xd63b>
14000e590:     	movq	%rcx, %rax
14000e593:     	xorl	%edx, %edx
14000e595:     	divq	%r13
14000e598:     	movq	%rdx, %r10
14000e59b:     	jmp	0x14000e645 <.text+0xd645>
14000e5a0:     	movl	$0x24, %r8d
14000e5a6:     	subq	%rax, %r8
14000e5a9:     	movl	$0x48, %r13d
14000e5af:     	nop
14000e5b0:     	movq	%r13, %rax
14000e5b3:     	subq	%r14, %rax
14000e5b6:     	movl	$0x0, %r11d
14000e5bc:     	cmovaeq	%rax, %r11
14000e5c0:     	cmpq	$0x1, %r11
14000e5c4:     	adcq	$0x0, %r11
14000e5c8:     	cmpq	$0x1a, %r11
14000e5cc:     	cmovaeq	%r15, %r11
14000e5d0:     	cmpq	0x78(%rsp), %rdi
14000e5d5:     	je	0x14000e86d <.text+0xd86d>
14000e5db:     	movzbl	(%rdi), %eax
14000e5de:     	leal	-0x61(%rax), %edx
14000e5e1:     	cmpb	$0x1a, %dl
14000e5e4:     	jb	0x14000e5f6 <.text+0xd5f6>
14000e5e6:     	leal	-0x30(%rax), %edx
14000e5e9:     	cmpb	$0x9, %dl
14000e5ec:     	ja	0x14000e86d <.text+0xd86d>
14000e5f2:     	addb	$-0x16, %al
14000e5f4:     	movl	%eax, %edx
14000e5f6:     	movzbl	%dl, %r10d
14000e5fa:     	movq	%r10, %rax
14000e5fd:     	mulq	%r8
14000e600:     	jo	0x14000e86d <.text+0xd86d>
14000e606:     	addq	%rax, %r9
14000e609:     	jb	0x14000e86d <.text+0xd86d>
14000e60f:     	incq	%rdi
14000e612:     	cmpq	%r10, %r11
14000e615:     	ja	0x14000e572 <.text+0xd572>
14000e61b:     	movl	$0x24, %edx
14000e620:     	subq	%r11, %rdx
14000e623:     	addq	$0x24, %r13
14000e627:     	movq	%r8, %rax
14000e62a:     	mulq	%rdx
14000e62d:     	movq	%rax, %r8
14000e630:     	jno	0x14000e5b0 <.text+0xd5b0>
14000e636:     	jmp	0x14000e86d <.text+0xd86d>
14000e63b:     	movl	%ecx, %eax
14000e63d:     	xorl	%edx, %edx
14000e63f:     	divl	%r13d
14000e642:     	movl	%edx, %r10d
14000e645:     	addq	%rax, %rbx
14000e648:     	movq	0x68(%rsp), %rax
14000e64d:     	cmovaeq	%rbx, %rax
14000e651:     	movq	%rax, 0x68(%rsp)
14000e656:     	jb	0x14000e86d <.text+0xd86d>
14000e65c:     	movq	%rbx, %rax
14000e65f:     	shrq	$0x20, %rax
14000e663:     	jne	0x14000e86d <.text+0xd86d>
14000e669:     	cmpl	$0x110000, %ebx         # imm = 0x110000
14000e66f:     	je	0x14000e86d <.text+0xd86d>
14000e675:     	movl	%ebx, %eax
14000e677:     	xorl	$0xd800, %eax           # imm = 0xD800
14000e67c:     	addl	$0xfffff800, %eax       # imm = 0xFFFFF800
14000e681:     	cmpl	$0x10f7ff, %eax         # imm = 0x10F7FF
14000e686:     	ja	0x14000e86d <.text+0xd86d>
14000e68c:     	cmpq	$0x7f, %r12
14000e690:     	ja	0x14000e86d <.text+0xd86d>
14000e696:     	cmpq	%r10, %r12
14000e699:     	jbe	0x14000e6d0 <.text+0xd6d0>
14000e69b:     	movl	%r12d, %eax
14000e69e:     	subl	%r10d, %eax
14000e6a1:     	testb	$0x3, %al
14000e6a3:     	movq	0x30(%rsp), %r15
14000e6a8:     	je	0x14000e723 <.text+0xd723>
14000e6aa:     	movq	%rcx, %rax
14000e6ad:     	movq	0x20(%rsp), %r8
14000e6b2:     	orq	%r8, %rax
14000e6b5:     	shrq	$0x20, %rax
14000e6b9:     	je	0x14000e6e7 <.text+0xd6e7>
14000e6bb:     	movq	%rcx, %rax
14000e6be:     	xorl	%edx, %edx
14000e6c0:     	divq	%r8
14000e6c3:     	jmp	0x14000e6ee <.text+0xd6ee>
14000e6c5:     	nopw	%cs:(%rax,%rax)
14000e6d0:     	cmpq	$0x80, %r10
14000e6d7:     	movq	0x30(%rsp), %r15
14000e6dc:     	jb	0x14000e75f <.text+0xd75f>
14000e6e2:     	jmp	0x14000e943 <.text+0xd943>
14000e6e7:     	movl	%ecx, %eax
14000e6e9:     	xorl	%edx, %edx
14000e6eb:     	divl	%r8d
14000e6ee:     	imulq	0x48(%rsp), %rax
14000e6f4:     	addq	%rax, %rcx
14000e6f7:     	xorl	%eax, %eax
14000e6f9:     	nopl	(%rax)
14000e700:     	movl	-0x4(%rbp,%rax,4), %edx
14000e704:     	movl	%edx, (%rbp,%rax,4)
14000e708:     	decq	%rax
14000e70b:     	movl	%r12d, %edx
14000e70e:     	subb	%cl, %dl
14000e710:     	movzbl	%dl, %edx
14000e713:     	andl	$0x3, %edx
14000e716:     	addq	%rax, %rdx
14000e719:     	jne	0x14000e700 <.text+0xd700>
14000e71b:     	subq	0x50(%rsp), %rax
14000e720:     	movq	%rax, %r12
14000e723:     	movq	0x80(%rsp), %rax
14000e72b:     	addq	%r15, %rax
14000e72e:     	subq	%r10, %rax
14000e731:     	cmpq	$0x3, %rax
14000e735:     	jb	0x14000e75f <.text+0xd75f>
14000e737:     	nopw	(%rax,%rax)
14000e740:     	movups	0x88(%rsp,%r12,4), %xmm0
14000e749:     	movups	%xmm0, 0x8c(%rsp,%r12,4)
14000e752:     	leaq	-0x4(%r12), %rax
14000e757:     	movq	%rax, %r12
14000e75a:     	cmpq	%r10, %rax
14000e75d:     	ja	0x14000e740 <.text+0xd740>
14000e75f:     	movl	%ebx, 0x98(%rsp,%r10,4)
14000e767:     	cmpq	0x78(%rsp), %rdi
14000e76c:     	je	0x14000e906 <.text+0xd906>
14000e772:     	movzbl	(%rdi), %r8d
14000e776:     	movq	%r9, %rax
14000e779:     	shrq	$0x20, %rax
14000e77d:     	je	0x14000e78e <.text+0xd78e>
14000e77f:     	movq	%r9, %rax
14000e782:     	xorl	%edx, %edx
14000e784:     	divq	0x28(%rsp)
14000e789:     	movq	%rax, %r9
14000e78c:     	jmp	0x14000e79a <.text+0xd79a>
14000e78e:     	movl	%r9d, %eax
14000e791:     	xorl	%edx, %edx
14000e793:     	divl	0x28(%rsp)
14000e797:     	movl	%eax, %r9d
14000e79a:     	movq	0x20(%rsp), %rbx
14000e79f:     	movq	%r9, %rax
14000e7a2:     	orq	%r13, %rax
14000e7a5:     	shrq	$0x20, %rax
14000e7a9:     	je	0x14000e7c7 <.text+0xd7c7>
14000e7ab:     	movq	%r9, %rax
14000e7ae:     	xorl	%edx, %edx
14000e7b0:     	divq	%r13
14000e7b3:     	movq	%rax, %rcx
14000e7b6:     	addq	%r9, %rcx
14000e7b9:     	xorl	%r11d, %r11d
14000e7bc:     	cmpq	$0x1c8, %rcx            # imm = 0x1C8
14000e7c3:     	jae	0x14000e7e0 <.text+0xd7e0>
14000e7c5:     	jmp	0x14000e80d <.text+0xd80d>
14000e7c7:     	movl	%r9d, %eax
14000e7ca:     	xorl	%edx, %edx
14000e7cc:     	divl	%r13d
14000e7cf:     	movl	%eax, %ecx
14000e7d1:     	addq	%r9, %rcx
14000e7d4:     	xorl	%r11d, %r11d
14000e7d7:     	cmpq	$0x1c8, %rcx            # imm = 0x1C8
14000e7de:     	jb	0x14000e80d <.text+0xd80d>
14000e7e0:     	movq	%rcx, %r9
14000e7e3:     	nopw	%cs:(%rax,%rax)
14000e7f0:     	movq	%r9, %rax
14000e7f3:     	mulq	%rsi
14000e7f6:     	movq	%rdx, %rcx
14000e7f9:     	shrq	$0x5, %rcx
14000e7fd:     	addq	$0x24, %r11
14000e801:     	cmpq	$0x3e57, %r9            # imm = 0x3E57
14000e808:     	movq	%rcx, %r9
14000e80b:     	ja	0x14000e7f0 <.text+0xd7f0>
14000e80d:     	incq	%r10
14000e810:     	leal	(,%rcx,4), %eax
14000e817:     	leal	(%rax,%rax,8), %eax
14000e81a:     	addl	$0x26, %ecx
14000e81d:     	xorl	%edx, %edx
14000e81f:     	divw	%cx
14000e822:     	movzwl	%ax, %r14d
14000e826:     	addq	%r11, %r14
14000e829:     	incq	%r15
14000e82c:     	movq	%r15, 0x30(%rsp)
14000e831:     	addq	$0x4, 0x40(%rsp)
14000e837:     	addq	$0x4, %rbp
14000e83b:     	decq	0x50(%rsp)
14000e840:     	decq	0x48(%rsp)
14000e845:     	incq	%rbx
14000e848:     	movq	%rbx, 0x20(%rsp)
14000e84d:     	movl	$0x2, %eax
14000e852:     	movq	%rax, 0x28(%rsp)
14000e857:     	movq	%r13, %r12
14000e85a:     	movq	0x68(%rsp), %rbx
14000e85f:     	movq	%r10, %rcx
14000e862:     	movl	$0x1a, %r9d
14000e868:     	jmp	0x14000e522 <.text+0xd522>
14000e86d:     	leaq	0xecbc(%rip), %rdx      # 0x14001d530
14000e874:     	movl	$0x9, %r8d
14000e87a:     	movq	0x60(%rsp), %rsi
14000e87f:     	movq	%rsi, %rcx
14000e882:     	callq	0x140015330 <.text+0x14330>
14000e887:     	movb	$0x1, %bpl
14000e88a:     	testb	%al, %al
14000e88c:     	jne	0x14000e8de <.text+0xd8de>
14000e88e:     	movq	0x90(%rsp), %r8
14000e896:     	testq	%r8, %r8
14000e899:     	je	0x14000e8c8 <.text+0xd8c8>
14000e89b:     	movq	%rsi, %rcx
14000e89e:     	movq	0x88(%rsp), %rdx
14000e8a6:     	callq	0x140015330 <.text+0x14330>
14000e8ab:     	testb	%al, %al
14000e8ad:     	jne	0x14000e8de <.text+0xd8de>
14000e8af:     	leaq	0xec83(%rip), %rdx      # 0x14001d539
14000e8b6:     	movl	$0x1, %r8d
14000e8bc:     	movq	%rsi, %rcx
14000e8bf:     	callq	0x140015330 <.text+0x14330>
14000e8c4:     	testb	%al, %al
14000e8c6:     	jne	0x14000e8de <.text+0xd8de>
14000e8c8:     	movq	%rsi, %rcx
14000e8cb:     	movq	0x58(%rsp), %rdx
14000e8d0:     	movq	0x70(%rsp), %r8
14000e8d5:     	callq	0x140015330 <.text+0x14330>
14000e8da:     	testb	%al, %al
14000e8dc:     	je	0x14000e8f4 <.text+0xd8f4>
14000e8de:     	movl	%ebp, %eax
14000e8e0:     	addq	$0x298, %rsp            # imm = 0x298
14000e8e7:     	popq	%rbx
14000e8e8:     	popq	%rbp
14000e8e9:     	popq	%rdi
14000e8ea:     	popq	%rsi
14000e8eb:     	popq	%r12
14000e8ed:     	popq	%r13
14000e8ef:     	popq	%r14
14000e8f1:     	popq	%r15
14000e8f3:     	retq
14000e8f4:     	leaq	0xec3f(%rip), %rdx      # 0x14001d53a
14000e8fb:     	movl	$0x1, %r8d
14000e901:     	jmp	0x14000e47f <.text+0xd47f>
14000e906:     	leaq	0x3c(%rsp), %rdi
14000e90b:     	movq	0x60(%rsp), %rsi
14000e910:     	leaq	0x98(%rsp), %rbx
14000e918:     	movq	0x40(%rsp), %r14
14000e91d:     	nopl	(%rax)
14000e920:     	movl	(%rbx), %eax
14000e922:     	movl	%eax, 0x3c(%rsp)
14000e926:     	movq	%rdi, %rcx
14000e929:     	movq	%rsi, %rdx
14000e92c:     	callq	0x140015c80 <.text+0x14c80>
14000e931:     	movl	%eax, %ebp
14000e933:     	testb	%al, %al
14000e935:     	jne	0x14000e8de <.text+0xd8de>
14000e937:     	addq	$0x4, %rbx
14000e93b:     	addq	$-0x4, %r14
14000e93f:     	jne	0x14000e920 <.text+0xd920>
14000e941:     	jmp	0x14000e8de <.text+0xd8de>
14000e943:     	leaq	0xebce(%rip), %r8       # 0x14001d518
14000e94a:     	movl	$0x80, %edx
14000e94f:     	movq	%r10, %rcx
14000e952:     	callq	0x140019920 <.text+0x18920>
14000e957:     	ud2
14000e959:     	int3
14000e95a:     	int3
14000e95b:     	int3
14000e95c:     	int3
14000e95d:     	int3
14000e95e:     	int3
14000e95f:     	int3
14000e960:     	pushq	%r14
14000e962:     	pushq	%rsi
14000e963:     	pushq	%rdi
14000e964:     	pushq	%rbx
14000e965:     	subq	$0xa8, %rsp
14000e96c:     	movq	%rdx, %rsi
14000e96f:     	movq	%rcx, %rdi
14000e972:     	movq	$0x1, 0x20(%rsp)
14000e97b:     	leaq	0xebb9(%rip), %r9       # 0x14001d53b
14000e982:     	leaq	0x40(%rsp), %rbx
14000e987:     	movq	%rbx, %rcx
14000e98a:     	movq	%rdi, %rdx
14000e98d:     	movq	%rsi, %r8
14000e990:     	callq	0x140016860 <.text+0x15860>
14000e995:     	leaq	0x28(%rsp), %r14
14000e99a:     	nopw	(%rax,%rax)
14000e9a0:     	movq	%r14, %rcx
14000e9a3:     	movq	%rbx, %rdx
14000e9a6:     	callq	0x14000cff0 <.text+0xbff0>
14000e9ab:     	movq	0x28(%rsp), %rax
14000e9b0:     	cmpq	$0x1, %rax
14000e9b4:     	je	0x14000e9d8 <.text+0xd9d8>
14000e9b6:     	cmpl	$0x2, %eax
14000e9b9:     	jne	0x14000e9a0 <.text+0xd9a0>
14000e9bb:     	movq	%rsi, %rcx
14000e9be:     	movq	%rsi, %rax
14000e9c1:     	subq	%rcx, %rax
14000e9c4:     	cmpq	$0x10, %rax
14000e9c8:     	ja	0x14000e9e9 <.text+0xd9e9>
14000e9ca:     	movl	$0x1, %eax
14000e9cf:     	cmpq	%rcx, %rsi
14000e9d2:     	jne	0x14000e9f8 <.text+0xd9f8>
14000e9d4:     	xorl	%edx, %edx
14000e9d6:     	jmp	0x14000e9eb <.text+0xd9eb>
14000e9d8:     	movq	0x30(%rsp), %rcx
14000e9dd:     	movq	%rsi, %rax
14000e9e0:     	subq	%rcx, %rax
14000e9e3:     	cmpq	$0x10, %rax
14000e9e7:     	jbe	0x14000e9ca <.text+0xd9ca>
14000e9e9:     	xorl	%eax, %eax
14000e9eb:     	addq	$0xa8, %rsp
14000e9f2:     	popq	%rbx
14000e9f3:     	popq	%rdi
14000e9f4:     	popq	%rsi
14000e9f5:     	popq	%r14
14000e9f7:     	retq
14000e9f8:     	addq	%rdi, %rsi
14000e9fb:     	addq	%rdi, %rcx
14000e9fe:     	xorl	%edx, %edx
14000ea00:     	movl	$0xffffffff, %r8d       # imm = 0xFFFFFFFF
14000ea06:     	jmp	0x14000ea22 <.text+0xda22>
14000ea08:     	nopl	(%rax,%rax)
14000ea10:     	movq	%rdx, %r9
14000ea13:     	shlq	$0x4, %r9
14000ea17:     	movl	%r10d, %edx
14000ea1a:     	orq	%r9, %rdx
14000ea1d:     	cmpq	%rsi, %rcx
14000ea20:     	je	0x14000e9eb <.text+0xd9eb>
14000ea22:     	movzbl	(%rcx), %ebx
14000ea25:     	movzbl	%bl, %r9d
14000ea29:     	testb	%r9b, %r9b
14000ea2c:     	js	0x14000ea40 <.text+0xda40>
14000ea2e:     	incq	%rcx
14000ea31:     	leal	-0x30(%r9), %r10d
14000ea35:     	cmpl	$0xa, %r10d
14000ea39:     	jb	0x14000ea10 <.text+0xda10>
14000ea3b:     	jmp	0x14000eae0 <.text+0xdae0>
14000ea40:     	movl	%r9d, %r10d
14000ea43:     	andl	$0x1f, %r10d
14000ea47:     	movzbl	0x1(%rcx), %edi
14000ea4b:     	andl	$0x3f, %edi
14000ea4e:     	cmpb	$-0x21, %r9b
14000ea52:     	jbe	0x14000eaa4 <.text+0xdaa4>
14000ea54:     	movzbl	0x2(%rcx), %r11d
14000ea59:     	shll	$0x6, %edi
14000ea5c:     	andl	$0x3f, %r11d
14000ea60:     	orl	%edi, %r11d
14000ea63:     	cmpb	$-0x10, %bl
14000ea66:     	jb	0x14000eac2 <.text+0xdac2>
14000ea68:     	movzbl	0x3(%rcx), %r9d
14000ea6d:     	andl	$0x7, %r10d
14000ea71:     	shll	$0x12, %r10d
14000ea75:     	shll	$0x6, %r11d
14000ea79:     	andl	$0x3f, %r9d
14000ea7d:     	orl	%r11d, %r9d
14000ea80:     	orl	%r10d, %r9d
14000ea83:     	cmpl	$0x110000, %r9d         # imm = 0x110000
14000ea8a:     	je	0x14000e9eb <.text+0xd9eb>
14000ea90:     	addq	$0x4, %rcx
14000ea94:     	leal	-0x30(%r9), %r10d
14000ea98:     	cmpl	$0xa, %r10d
14000ea9c:     	jb	0x14000ea10 <.text+0xda10>
14000eaa2:     	jmp	0x14000eae0 <.text+0xdae0>
14000eaa4:     	addq	$0x2, %rcx
14000eaa8:     	shll	$0x6, %r10d
14000eaac:     	orl	%edi, %r10d
14000eaaf:     	movl	%r10d, %r9d
14000eab2:     	leal	-0x30(%r9), %r10d
14000eab6:     	cmpl	$0xa, %r10d
14000eaba:     	jb	0x14000ea10 <.text+0xda10>
14000eac0:     	jmp	0x14000eae0 <.text+0xdae0>
14000eac2:     	addq	$0x3, %rcx
14000eac6:     	shll	$0xc, %r10d
14000eaca:     	orl	%r10d, %r11d
14000eacd:     	movl	%r11d, %r9d
14000ead0:     	leal	-0x30(%r9), %r10d
14000ead4:     	cmpl	$0xa, %r10d
14000ead8:     	jb	0x14000ea10 <.text+0xda10>
14000eade:     	nop
14000eae0:     	orl	$0x20, %r9d
14000eae4:     	addl	$-0x61, %r9d
14000eae8:     	addl	$0xa, %r9d
14000eaec:     	cmovbl	%r8d, %r9d
14000eaf0:     	movl	%r9d, %r10d
14000eaf3:     	cmpl	$0x10, %r9d
14000eaf7:     	jb	0x14000ea10 <.text+0xda10>
14000eafd:     	leaq	0xe75c(%rip), %rcx      # 0x14001d260
14000eb04:     	leaq	0xea35(%rip), %r8       # 0x14001d540
14000eb0b:     	movl	$0x2b, %edx
14000eb10:     	callq	0x140019880 <.text+0x18880>
14000eb15:     	ud2
14000eb17:     	int3
14000eb18:     	int3
14000eb19:     	int3
14000eb1a:     	int3
14000eb1b:     	int3
14000eb1c:     	int3
14000eb1d:     	int3
14000eb1e:     	int3
14000eb1f:     	int3
14000eb20:     	pushq	%rsi
14000eb21:     	pushq	%rdi
14000eb22:     	pushq	%rbx
14000eb23:     	subq	$0x30, %rsp
14000eb27:     	movq	%rdx, %r9
14000eb2a:     	movq	0x10(%rdx), %r8
14000eb2e:     	movq	(%rdx), %rax
14000eb31:     	movq	0x8(%rdx), %rdx
14000eb35:     	movl	$0x1, %r10d
14000eb3b:     	xorl	%r11d, %r11d
14000eb3e:     	movq	%rax, %rsi
14000eb41:     	nopw	%cs:(%rax,%rax)
14000eb50:     	leaq	(%r8,%r11), %rdi
14000eb54:     	cmpq	%rdx, %rdi
14000eb57:     	jae	0x14000eba6 <.text+0xdba6>
14000eb59:     	movzbl	(%rsi,%r8), %edi
14000eb5e:     	leaq	(%r8,%r11), %rbx
14000eb62:     	incq	%rbx
14000eb65:     	movq	%rbx, 0x10(%r9)
14000eb69:     	leal	-0x30(%rdi), %ebx
14000eb6c:     	decq	%r10
14000eb6f:     	incq	%r11
14000eb72:     	incq	%rsi
14000eb75:     	cmpb	$0xa, %bl
14000eb78:     	jb	0x14000eb50 <.text+0xdb50>
14000eb7a:     	leal	-0x61(%rdi), %ebx
14000eb7d:     	cmpb	$0x6, %bl
14000eb80:     	jb	0x14000eb50 <.text+0xdb50>
14000eb82:     	cmpb	$0x5f, %dil
14000eb86:     	jne	0x14000eba6 <.text+0xdba6>
14000eb88:     	movq	%r8, %r9
14000eb8b:     	subq	%r10, %r9
14000eb8e:     	cmpq	%r9, %r8
14000eb91:     	ja	0x14000ebc7 <.text+0xdbc7>
14000eb93:     	testq	%r8, %r8
14000eb96:     	je	0x14000ebb5 <.text+0xdbb5>
14000eb98:     	cmpq	%rdx, %r8
14000eb9b:     	jae	0x14000ebb3 <.text+0xdbb3>
14000eb9d:     	cmpb	$-0x40, (%rax,%r8)
14000eba2:     	jge	0x14000ebb5 <.text+0xdbb5>
14000eba4:     	jmp	0x14000ebc7 <.text+0xdbc7>
14000eba6:     	movb	$0x0, 0x8(%rcx)
14000ebaa:     	movq	$0x0, (%rcx)
14000ebb1:     	jmp	0x14000ebf8 <.text+0xdbf8>
14000ebb3:     	jne	0x14000ebc7 <.text+0xdbc7>
14000ebb5:     	cmpq	%r10, %r8
14000ebb8:     	je	0x14000ebeb <.text+0xdbeb>
14000ebba:     	cmpq	%rdx, %r9
14000ebbd:     	jae	0x14000ebdd <.text+0xdbdd>
14000ebbf:     	cmpb	$-0x41, -0x1(%rsi,%r8)
14000ebc5:     	jg	0x14000ebeb <.text+0xdbeb>
14000ebc7:     	leaq	0xeb02(%rip), %rcx      # 0x14001d6d0
14000ebce:     	movq	%rcx, 0x20(%rsp)
14000ebd3:     	movq	%rax, %rcx
14000ebd6:     	callq	0x140019e10 <.text+0x18e10>
14000ebdb:     	ud2
14000ebdd:     	movq	%rdx, %rsi
14000ebe0:     	notq	%rsi
14000ebe3:     	addq	%r8, %rsi
14000ebe6:     	addq	%r11, %rsi
14000ebe9:     	jne	0x14000ebc7 <.text+0xdbc7>
14000ebeb:     	addq	%r8, %rax
14000ebee:     	negq	%r10
14000ebf1:     	movq	%rax, (%rcx)
14000ebf4:     	movq	%r10, 0x8(%rcx)
14000ebf8:     	addq	$0x30, %rsp
14000ebfc:     	popq	%rbx
14000ebfd:     	popq	%rdi
14000ebfe:     	popq	%rsi
14000ebff:     	retq
14000ec00:     	pushq	%rsi
14000ec01:     	pushq	%rdi
14000ec02:     	movq	%rdx, %r8
14000ec05:     	movq	(%rdx), %r10
14000ec08:     	movq	0x8(%rdx), %r11
14000ec0c:     	movq	0x10(%rdx), %r9
14000ec10:     	cmpq	%r11, %r9
14000ec13:     	jae	0x14000ec2f <.text+0xdc2f>
14000ec15:     	cmpb	$0x5f, (%r10,%r9)
14000ec1a:     	jne	0x14000ec2f <.text+0xdc2f>
14000ec1c:     	incq	%r9
14000ec1f:     	movq	%r9, 0x10(%r8)
14000ec23:     	movq	$0x0, 0x8(%rcx)
14000ec2b:     	xorl	%eax, %eax
14000ec2d:     	jmp	0x14000eca7 <.text+0xdca7>
14000ec2f:     	xorl	%eax, %eax
14000ec31:     	movl	$0x3e, %esi
14000ec36:     	nopw	%cs:(%rax,%rax)
14000ec40:     	cmpq	%r11, %r9
14000ec43:     	jae	0x14000eca1 <.text+0xdca1>
14000ec45:     	cmpb	$0x5f, (%r10,%r9)
14000ec4a:     	je	0x14000ec95 <.text+0xdc95>
14000ec4c:     	movzbl	(%r10,%r9), %edx
14000ec51:     	leal	-0x30(%rdx), %edi
14000ec54:     	cmpb	$0xa, %dil
14000ec58:     	jb	0x14000ec7e <.text+0xdc7e>
14000ec5a:     	leal	-0x61(%rdx), %edi
14000ec5d:     	cmpb	$0x1a, %dil
14000ec61:     	jae	0x14000ec70 <.text+0xdc70>
14000ec63:     	addb	$-0x57, %dl
14000ec66:     	jmp	0x14000ec7c <.text+0xdc7c>
14000ec68:     	nopl	(%rax,%rax)
14000ec70:     	leal	-0x41(%rdx), %edi
14000ec73:     	cmpb	$0x1a, %dil
14000ec77:     	jae	0x14000eca1 <.text+0xdca1>
14000ec79:     	addb	$-0x1d, %dl
14000ec7c:     	movl	%edx, %edi
14000ec7e:     	incq	%r9
14000ec81:     	movq	%r9, 0x10(%r8)
14000ec85:     	mulq	%rsi
14000ec88:     	jo	0x14000eca1 <.text+0xdca1>
14000ec8a:     	movzbl	%dil, %edx
14000ec8e:     	addq	%rdx, %rax
14000ec91:     	jae	0x14000ec40 <.text+0xdc40>
14000ec93:     	jmp	0x14000eca1 <.text+0xdca1>
14000ec95:     	incq	%r9
14000ec98:     	movq	%r9, 0x10(%r8)
14000ec9c:     	incq	%rax
14000ec9f:     	jne	0x14000ecac <.text+0xdcac>
14000eca1:     	movb	$0x0, 0x1(%rcx)
14000eca5:     	movb	$0x1, %al
14000eca7:     	movb	%al, (%rcx)
14000eca9:     	popq	%rdi
14000ecaa:     	popq	%rsi
14000ecab:     	retq
14000ecac:     	movq	%rax, 0x8(%rcx)
14000ecb0:     	xorl	%eax, %eax
14000ecb2:     	jmp	0x14000eca7 <.text+0xdca7>
14000ecb4:     	int3
14000ecb5:     	int3
14000ecb6:     	int3
14000ecb7:     	int3
14000ecb8:     	int3
14000ecb9:     	int3
14000ecba:     	int3
14000ecbb:     	int3
14000ecbc:     	int3
14000ecbd:     	int3
14000ecbe:     	int3
14000ecbf:     	int3
14000ecc0:     	pushq	%rsi
14000ecc1:     	pushq	%rdi
14000ecc2:     	movq	0x8(%rdx), %r9
14000ecc6:     	movq	0x10(%rdx), %rax
14000ecca:     	cmpq	%r9, %rax
14000eccd:     	jae	0x14000ecfc <.text+0xdcfc>
14000eccf:     	movq	%rdx, %r8
14000ecd2:     	movq	(%rdx), %r10
14000ecd5:     	cmpb	$0x73, (%r10,%rax)
14000ecda:     	jne	0x14000ecfc <.text+0xdcfc>
14000ecdc:     	leaq	0x1(%rax), %r11
14000ece0:     	movq	%r11, 0x10(%r8)
14000ece4:     	cmpq	%r9, %r11
14000ece7:     	jae	0x14000ed08 <.text+0xdd08>
14000ece9:     	cmpb	$0x5f, (%r10,%r11)
14000ecee:     	jne	0x14000ed08 <.text+0xdd08>
14000ecf0:     	addq	$0x2, %rax
14000ecf4:     	movq	%rax, 0x10(%r8)
14000ecf8:     	xorl	%eax, %eax
14000ecfa:     	jmp	0x14000ed71 <.text+0xdd71>
14000ecfc:     	movq	$0x0, 0x8(%rcx)
14000ed04:     	xorl	%eax, %eax
14000ed06:     	jmp	0x14000ed7c <.text+0xdd7c>
14000ed08:     	xorl	%eax, %eax
14000ed0a:     	movl	$0x3e, %esi
14000ed0f:     	nop
14000ed10:     	cmpq	%r9, %r11
14000ed13:     	jae	0x14000ed76 <.text+0xdd76>
14000ed15:     	movzbl	(%r10,%r11), %edx
14000ed1a:     	cmpb	$0x5f, %dl
14000ed1d:     	je	0x14000ed65 <.text+0xdd65>
14000ed1f:     	leal	-0x30(%rdx), %edi
14000ed22:     	cmpb	$0xa, %dil
14000ed26:     	jb	0x14000ed4e <.text+0xdd4e>
14000ed28:     	leal	-0x61(%rdx), %edi
14000ed2b:     	cmpb	$0x1a, %dil
14000ed2f:     	jae	0x14000ed40 <.text+0xdd40>
14000ed31:     	addb	$-0x57, %dl
14000ed34:     	jmp	0x14000ed4c <.text+0xdd4c>
14000ed36:     	nopw	%cs:(%rax,%rax)
14000ed40:     	leal	-0x41(%rdx), %edi
14000ed43:     	cmpb	$0x1a, %dil
14000ed47:     	jae	0x14000ed76 <.text+0xdd76>
14000ed49:     	addb	$-0x1d, %dl
14000ed4c:     	movl	%edx, %edi
14000ed4e:     	incq	%r11
14000ed51:     	movq	%r11, 0x10(%r8)
14000ed55:     	mulq	%rsi
14000ed58:     	jo	0x14000ed76 <.text+0xdd76>
14000ed5a:     	movzbl	%dil, %edx
14000ed5e:     	addq	%rdx, %rax
14000ed61:     	jae	0x14000ed10 <.text+0xdd10>
14000ed63:     	jmp	0x14000ed76 <.text+0xdd76>
14000ed65:     	incq	%r11
14000ed68:     	movq	%r11, 0x10(%r8)
14000ed6c:     	incq	%rax
14000ed6f:     	je	0x14000ed76 <.text+0xdd76>
14000ed71:     	incq	%rax
14000ed74:     	jne	0x14000ed81 <.text+0xdd81>
14000ed76:     	movb	$0x0, 0x1(%rcx)
14000ed7a:     	movb	$0x1, %al
14000ed7c:     	movb	%al, (%rcx)
14000ed7e:     	popq	%rdi
14000ed7f:     	popq	%rsi
14000ed80:     	retq
14000ed81:     	movq	%rax, 0x8(%rcx)
14000ed85:     	xorl	%eax, %eax
14000ed87:     	jmp	0x14000ed7c <.text+0xdd7c>
14000ed89:     	int3
14000ed8a:     	int3
14000ed8b:     	int3
14000ed8c:     	int3
14000ed8d:     	int3
14000ed8e:     	int3
14000ed8f:     	int3
14000ed90:     	movq	0x10(%rcx), %rdx
14000ed94:     	cmpq	0x8(%rcx), %rdx
14000ed98:     	jae	0x14000edba <.text+0xddba>
14000ed9a:     	movq	(%rcx), %rax
14000ed9d:     	movzbl	(%rax,%rdx), %eax
14000eda1:     	incq	%rdx
14000eda4:     	movq	%rdx, 0x10(%rcx)
14000eda8:     	leal	-0x41(%rax), %ecx
14000edab:     	cmpb	$0x1a, %cl
14000edae:     	jae	0x14000edc9 <.text+0xddc9>
14000edb0:     	xorl	%ecx, %ecx
14000edb2:     	shlq	$0x20, %rax
14000edb6:     	orq	%rcx, %rax
14000edb9:     	retq
14000edba:     	movl	$0x1, %ecx
14000edbf:     	xorl	%eax, %eax
14000edc1:     	shlq	$0x20, %rax
14000edc5:     	orq	%rcx, %rax
14000edc8:     	retq
14000edc9:     	addb	$-0x7b, %al
14000edcb:     	xorl	%edx, %edx
14000edcd:     	xorl	%ecx, %ecx
14000edcf:     	cmpb	$-0x1a, %al
14000edd1:     	setb	%cl
14000edd4:     	movl	$0x110000, %eax         # imm = 0x110000
14000edd9:     	cmovbq	%rdx, %rax
14000eddd:     	shlq	$0x20, %rax
14000ede1:     	orq	%rcx, %rax
14000ede4:     	retq
14000ede5:     	int3
14000ede6:     	int3
14000ede7:     	int3
14000ede8:     	int3
14000ede9:     	int3
14000edea:     	int3
14000edeb:     	int3
14000edec:     	int3
14000eded:     	int3
14000edee:     	int3
14000edef:     	int3
14000edf0:     	pushq	%rsi
14000edf1:     	pushq	%rdi
14000edf2:     	pushq	%rbx
14000edf3:     	subq	$0x30, %rsp
14000edf7:     	movq	%rdx, %r10
14000edfa:     	movq	0x8(%rdx), %r11
14000edfe:     	movq	0x10(%rdx), %r8
14000ee02:     	cmpq	%r11, %r8
14000ee05:     	jae	0x14000ee25 <.text+0xde25>
14000ee07:     	movq	(%r10), %rax
14000ee0a:     	cmpb	$0x75, (%rax,%r8)
14000ee0f:     	jne	0x14000ee25 <.text+0xde25>
14000ee11:     	incq	%r8
14000ee14:     	movq	%r8, 0x10(%r10)
14000ee18:     	movb	$0x1, %sil
14000ee1b:     	cmpq	%r11, %r8
14000ee1e:     	jb	0x14000ee30 <.text+0xde30>
14000ee20:     	jmp	0x14000eeb4 <.text+0xdeb4>
14000ee25:     	xorl	%esi, %esi
14000ee27:     	cmpq	%r11, %r8
14000ee2a:     	jae	0x14000eeb4 <.text+0xdeb4>
14000ee30:     	movq	(%r10), %rax
14000ee33:     	movzbl	(%rax,%r8), %eax
14000ee38:     	leal	-0x3a(%rax), %edx
14000ee3b:     	cmpb	$-0xa, %dl
14000ee3e:     	jb	0x14000eeb4 <.text+0xdeb4>
14000ee40:     	incq	%r8
14000ee43:     	movq	%r8, 0x10(%r10)
14000ee47:     	addb	$-0x30, %al
14000ee49:     	je	0x14000ee8b <.text+0xde8b>
14000ee4b:     	movzbl	%al, %eax
14000ee4e:     	movq	(%r10), %r9
14000ee51:     	movl	$0xa, %edi
14000ee56:     	nopw	%cs:(%rax,%rax)
14000ee60:     	cmpq	%r11, %r8
14000ee63:     	jae	0x14000ee8d <.text+0xde8d>
14000ee65:     	movzbl	(%r9,%r8), %ebx
14000ee6a:     	leal	-0x3a(%rbx), %edx
14000ee6d:     	cmpb	$-0xa, %dl
14000ee70:     	jb	0x14000ee8d <.text+0xde8d>
14000ee72:     	incq	%r8
14000ee75:     	movq	%r8, 0x10(%r10)
14000ee79:     	mulq	%rdi
14000ee7c:     	jo	0x14000eeb4 <.text+0xdeb4>
14000ee7e:     	addb	$-0x30, %bl
14000ee81:     	movzbl	%bl, %edx
14000ee84:     	addq	%rdx, %rax
14000ee87:     	jae	0x14000ee60 <.text+0xde60>
14000ee89:     	jmp	0x14000eeb4 <.text+0xdeb4>
14000ee8b:     	xorl	%eax, %eax
14000ee8d:     	cmpq	%r11, %r8
14000ee90:     	jae	0x14000eea3 <.text+0xdea3>
14000ee92:     	movq	(%r10), %rdx
14000ee95:     	cmpb	$0x5f, (%rdx,%r8)
14000ee9a:     	jne	0x14000eea3 <.text+0xdea3>
14000ee9c:     	incq	%r8
14000ee9f:     	movq	%r8, 0x10(%r10)
14000eea3:     	movq	%r8, %r9
14000eea6:     	addq	%rax, %r9
14000eea9:     	jb	0x14000eeb4 <.text+0xdeb4>
14000eeab:     	movq	%r9, 0x10(%r10)
14000eeaf:     	cmpq	%r11, %r9
14000eeb2:     	jbe	0x14000eec7 <.text+0xdec7>
14000eeb4:     	movb	$0x0, 0x8(%rcx)
14000eeb8:     	movq	$0x0, (%rcx)
14000eebf:     	addq	$0x30, %rsp
14000eec3:     	popq	%rbx
14000eec4:     	popq	%rdi
14000eec5:     	popq	%rsi
14000eec6:     	retq
14000eec7:     	movq	(%r10), %r10
14000eeca:     	cmpq	%r11, %r8
14000eecd:     	jae	0x14000eedb <.text+0xdedb>
14000eecf:     	cmpb	$-0x40, (%r10,%r8)
14000eed4:     	jge	0x14000eee1 <.text+0xdee1>
14000eed6:     	jmp	0x14000efd1 <.text+0xdfd1>
14000eedb:     	jne	0x14000efd1 <.text+0xdfd1>
14000eee1:     	testq	%r9, %r9
14000eee4:     	je	0x14000eef6 <.text+0xdef6>
14000eee6:     	cmpq	%r11, %r9
14000eee9:     	jae	0x14000eef6 <.text+0xdef6>
14000eeeb:     	cmpb	$-0x41, (%r10,%r9)
14000eef0:     	jle	0x14000efd1 <.text+0xdfd1>
14000eef6:     	leaq	(%r10,%r8), %r11
14000eefa:     	movq	%r9, %rdx
14000eefd:     	subq	%r8, %rdx
14000ef00:     	testb	%sil, %sil
14000ef03:     	je	0x14000ef54 <.text+0xdf54>
14000ef05:     	addq	%r9, %r10
14000ef08:     	leaq	0xdfe1(%rip), %rsi      # 0x14001cef0
14000ef0f:     	xorl	%r8d, %r8d
14000ef12:     	nopw	%cs:(%rax,%rax)
14000ef20:     	movq	%rax, %r9
14000ef23:     	addq	%r8, %r9
14000ef26:     	je	0x14000ef73 <.text+0xdf73>
14000ef28:     	leaq	-0x1(%r8), %r9
14000ef2c:     	cmpb	$0x5f, -0x1(%r10,%r8)
14000ef32:     	movq	%r9, %r8
14000ef35:     	jne	0x14000ef20 <.text+0xdf20>
14000ef37:     	leaq	(%rax,%r9), %r8
14000ef3b:     	incq	%r8
14000ef3e:     	addq	%r9, %rax
14000ef41:     	je	0x14000ef85 <.text+0xdf85>
14000ef43:     	cmpq	%rdx, %rax
14000ef46:     	jae	0x14000ef77 <.text+0xdf77>
14000ef48:     	cmpb	$-0x41, (%r10,%r9)
14000ef4d:     	jg	0x14000ef85 <.text+0xdf85>
14000ef4f:     	jmp	0x14000f003 <.text+0xe003>
14000ef54:     	movq	%r11, (%rcx)
14000ef57:     	movq	%rdx, 0x8(%rcx)
14000ef5b:     	leaq	0xdf8e(%rip), %rax      # 0x14001cef0
14000ef62:     	movq	%rax, 0x10(%rcx)
14000ef66:     	movq	$0x0, 0x18(%rcx)
14000ef6e:     	jmp	0x14000eebf <.text+0xdebf>
14000ef73:     	xorl	%eax, %eax
14000ef75:     	jmp	0x14000efaf <.text+0xdfaf>
14000ef77:     	testq	%r9, %r9
14000ef7a:     	jne	0x14000f003 <.text+0xe003>
14000ef80:     	testq	%r8, %r8
14000ef83:     	je	0x14000efcc <.text+0xdfcc>
14000ef85:     	cmpq	%rdx, %r8
14000ef88:     	jae	0x14000ef97 <.text+0xdf97>
14000ef8a:     	cmpb	$-0x41, 0x1(%r10,%r9)
14000ef90:     	jle	0x14000efea <.text+0xdfea>
14000ef92:     	notq	%r9
14000ef95:     	jmp	0x14000efa3 <.text+0xdfa3>
14000ef97:     	cmpq	$-0x1, %r9
14000ef9b:     	jne	0x14000efea <.text+0xdfea>
14000ef9d:     	notq	%r9
14000efa0:     	movq	%rdx, %r8
14000efa3:     	movq	%r9, %rdx
14000efa6:     	addq	%r11, %r8
14000efa9:     	movq	%r11, %rsi
14000efac:     	movq	%r8, %r11
14000efaf:     	testq	%rdx, %rdx
14000efb2:     	je	0x14000eeb4 <.text+0xdeb4>
14000efb8:     	movq	%rsi, (%rcx)
14000efbb:     	movq	%rax, 0x8(%rcx)
14000efbf:     	movq	%r11, 0x10(%rcx)
14000efc3:     	movq	%rdx, 0x18(%rcx)
14000efc7:     	jmp	0x14000eebf <.text+0xdebf>
14000efcc:     	xorl	%r8d, %r8d
14000efcf:     	jmp	0x14000efa6 <.text+0xdfa6>
14000efd1:     	leaq	0xe710(%rip), %rax      # 0x14001d6e8
14000efd8:     	movq	%rax, 0x20(%rsp)
14000efdd:     	movq	%r10, %rcx
14000efe0:     	movq	%r11, %rdx
14000efe3:     	callq	0x140019e10 <.text+0x18e10>
14000efe8:     	ud2
14000efea:     	leaq	0xe727(%rip), %rax      # 0x14001d718
14000eff1:     	movq	%rax, 0x20(%rsp)
14000eff6:     	movq	%r11, %rcx
14000eff9:     	movq	%rdx, %r9
14000effc:     	callq	0x140019e10 <.text+0x18e10>
14000f001:     	ud2
14000f003:     	leaq	0xe6f6(%rip), %rcx      # 0x14001d700
14000f00a:     	movq	%rcx, 0x20(%rsp)
14000f00f:     	movq	%r11, %rcx
14000f012:     	xorl	%r8d, %r8d
14000f015:     	movq	%rax, %r9
14000f018:     	callq	0x140019e10 <.text+0x18e10>
14000f01d:     	ud2
14000f01f:     	int3
14000f020:     	pushq	%rsi
14000f021:     	pushq	%rdi
14000f022:     	subq	$0x38, %rsp
14000f026:     	movq	%rcx, %rsi
14000f029:     	movq	0x20(%rcx), %rdi
14000f02d:     	movq	$0x0, 0x20(%rcx)
14000f035:     	xorl	%edx, %edx
14000f037:     	callq	0x140010190 <.text+0xf190>
14000f03c:     	testb	%al, %al
14000f03e:     	jne	0x14000f04b <.text+0xe04b>
14000f040:     	movq	%rdi, 0x20(%rsi)
14000f044:     	addq	$0x38, %rsp
14000f048:     	popq	%rdi
14000f049:     	popq	%rsi
14000f04a:     	retq
14000f04b:     	leaq	0xe6de(%rip), %rax      # 0x14001d730
14000f052:     	movq	%rax, 0x20(%rsp)
14000f057:     	leaq	0xe44a(%rip), %rcx      # 0x14001d4a8
14000f05e:     	leaq	0xdff3(%rip), %r9       # 0x14001d058
14000f065:     	leaq	0x37(%rsp), %r8
14000f06a:     	movl	$0x3d, %edx
14000f06f:     	callq	0x140019bb0 <.text+0x18bb0>
14000f074:     	ud2
14000f076:     	int3
14000f077:     	int3
14000f078:     	int3
14000f079:     	int3
14000f07a:     	int3
14000f07b:     	int3
14000f07c:     	int3
14000f07d:     	int3
14000f07e:     	int3
14000f07f:     	int3
14000f080:     	pushq	%rsi
14000f081:     	pushq	%rdi
14000f082:     	pushq	%rbx
14000f083:     	subq	$0x40, %rsp
14000f087:     	movq	%rcx, %rsi
14000f08a:     	movq	(%rcx), %r9
14000f08d:     	testq	%r9, %r9
14000f090:     	je	0x14000f12e <.text+0xe12e>
14000f096:     	movl	%edx, %r8d
14000f099:     	movq	0x8(%rsi), %r10
14000f09d:     	movq	0x10(%rsi), %rcx
14000f0a1:     	cmpq	%r10, %rcx
14000f0a4:     	jae	0x14000f0bc <.text+0xe0bc>
14000f0a6:     	cmpb	$0x5f, (%r9,%rcx)
14000f0ab:     	jne	0x14000f0bc <.text+0xe0bc>
14000f0ad:     	leaq	0x1(%rcx), %rax
14000f0b1:     	movq	%rax, 0x10(%rsi)
14000f0b5:     	xorl	%eax, %eax
14000f0b7:     	jmp	0x14000f15f <.text+0xe15f>
14000f0bc:     	xorl	%eax, %eax
14000f0be:     	movl	$0x3e, %edi
14000f0c3:     	movq	%rcx, %r11
14000f0c6:     	nopw	%cs:(%rax,%rax)
14000f0d0:     	cmpq	%r10, %r11
14000f0d3:     	jae	0x14000f1b4 <.text+0xe1b4>
14000f0d9:     	movzbl	(%r9,%r11), %edx
14000f0de:     	cmpb	$0x5f, %dl
14000f0e1:     	je	0x14000f153 <.text+0xe153>
14000f0e3:     	leal	-0x30(%rdx), %ebx
14000f0e6:     	cmpb	$0xa, %bl
14000f0e9:     	jb	0x14000f111 <.text+0xe111>
14000f0eb:     	leal	-0x61(%rdx), %ebx
14000f0ee:     	cmpb	$0x1a, %bl
14000f0f1:     	jae	0x14000f100 <.text+0xe100>
14000f0f3:     	addb	$-0x57, %dl
14000f0f6:     	jmp	0x14000f10f <.text+0xe10f>
14000f0f8:     	nopl	(%rax,%rax)
14000f100:     	leal	-0x41(%rdx), %ebx
14000f103:     	cmpb	$0x1a, %bl
14000f106:     	jae	0x14000f1b4 <.text+0xe1b4>
14000f10c:     	addb	$-0x1d, %dl
14000f10f:     	movl	%edx, %ebx
14000f111:     	incq	%r11
14000f114:     	movq	%r11, 0x10(%rsi)
14000f118:     	mulq	%rdi
14000f11b:     	jo	0x14000f1b4 <.text+0xe1b4>
14000f121:     	movzbl	%bl, %edx
14000f124:     	addq	%rdx, %rax
14000f127:     	jae	0x14000f0d0 <.text+0xe0d0>
14000f129:     	jmp	0x14000f1b4 <.text+0xe1b4>
14000f12e:     	movq	0x20(%rsi), %r8
14000f132:     	testq	%r8, %r8
14000f135:     	je	0x14000f1e2 <.text+0xe1e2>
14000f13b:     	leaq	0xe62f(%rip), %rcx      # 0x14001d771
14000f142:     	movl	$0x1, %edx
14000f147:     	addq	$0x40, %rsp
14000f14b:     	popq	%rbx
14000f14c:     	popq	%rdi
14000f14d:     	popq	%rsi
14000f14e:     	jmp	0x140015b40 <.text+0x14b40>
14000f153:     	incq	%r11
14000f156:     	movq	%r11, 0x10(%rsi)
14000f15a:     	incq	%rax
14000f15d:     	je	0x14000f1b4 <.text+0xe1b4>
14000f15f:     	decq	%rcx
14000f162:     	cmpq	%rcx, %rax
14000f165:     	jae	0x14000f1b4 <.text+0xe1b4>
14000f167:     	movl	0x18(%rsi), %ecx
14000f16a:     	incl	%ecx
14000f16c:     	cmpl	$0x1f5, %ecx            # imm = 0x1F5
14000f172:     	jae	0x14000f1ec <.text+0xe1ec>
14000f174:     	cmpq	$0x0, 0x20(%rsi)
14000f179:     	je	0x14000f1e2 <.text+0xe1e2>
14000f17b:     	movups	(%rsi), %xmm0
14000f17e:     	movups	0x10(%rsi), %xmm1
14000f182:     	movaps	%xmm1, 0x30(%rsp)
14000f187:     	movaps	%xmm0, 0x20(%rsp)
14000f18c:     	movq	%rax, 0x10(%rsi)
14000f190:     	movl	%ecx, 0x18(%rsi)
14000f193:     	testb	%r8b, %r8b
14000f196:     	setne	%dl
14000f199:     	movq	%rsi, %rcx
14000f19c:     	callq	0x140011870 <.text+0x10870>
14000f1a1:     	movaps	0x20(%rsp), %xmm0
14000f1a6:     	movaps	0x30(%rsp), %xmm1
14000f1ab:     	movups	%xmm0, (%rsi)
14000f1ae:     	movups	%xmm1, 0x10(%rsi)
14000f1b2:     	jmp	0x14000f1e4 <.text+0xe1e4>
14000f1b4:     	movq	0x20(%rsi), %r8
14000f1b8:     	testq	%r8, %r8
14000f1bb:     	je	0x14000f1d6 <.text+0xe1d6>
14000f1bd:     	leaq	0xe584(%rip), %rcx      # 0x14001d748
14000f1c4:     	movl	$0x10, %edx
14000f1c9:     	callq	0x140015b40 <.text+0x14b40>
14000f1ce:     	movl	%eax, %ecx
14000f1d0:     	movb	$0x1, %al
14000f1d2:     	testb	%cl, %cl
14000f1d4:     	jne	0x14000f1e4 <.text+0xe1e4>
14000f1d6:     	xorl	%eax, %eax
14000f1d8:     	movq	$0x0, (%rsi)
14000f1df:     	movb	%al, 0x8(%rsi)
14000f1e2:     	xorl	%eax, %eax
14000f1e4:     	addq	$0x40, %rsp
14000f1e8:     	popq	%rbx
14000f1e9:     	popq	%rdi
14000f1ea:     	popq	%rsi
14000f1eb:     	retq
14000f1ec:     	movq	0x20(%rsi), %r8
14000f1f0:     	testq	%r8, %r8
14000f1f3:     	je	0x14000f210 <.text+0xe210>
14000f1f5:     	leaq	0xe55c(%rip), %rcx      # 0x14001d758
14000f1fc:     	movl	$0x19, %edx
14000f201:     	callq	0x140015b40 <.text+0x14b40>
14000f206:     	movl	%eax, %ecx
14000f208:     	movb	$0x1, %al
14000f20a:     	testb	%cl, %cl
14000f20c:     	je	0x14000f1d8 <.text+0xe1d8>
14000f20e:     	jmp	0x14000f1e4 <.text+0xe1e4>
14000f210:     	movb	$0x1, %al
14000f212:     	jmp	0x14000f1d8 <.text+0xe1d8>
14000f214:     	int3
14000f215:     	int3
14000f216:     	int3
14000f217:     	int3
14000f218:     	int3
14000f219:     	int3
14000f21a:     	int3
14000f21b:     	int3
14000f21c:     	int3
14000f21d:     	int3
14000f21e:     	int3
14000f21f:     	int3
14000f220:     	pushq	%rsi
14000f221:     	pushq	%rdi
14000f222:     	subq	$0x48, %rsp
14000f226:     	movq	%rcx, %rsi
14000f229:     	movq	(%rcx), %r8
14000f22c:     	testq	%r8, %r8
14000f22f:     	je	0x14000f2cd <.text+0xe2cd>
14000f235:     	movq	0x8(%rsi), %r9
14000f239:     	movq	0x10(%rsi), %rcx
14000f23d:     	cmpq	%r9, %rcx
14000f240:     	jae	0x14000f258 <.text+0xe258>
14000f242:     	cmpb	$0x5f, (%r8,%rcx)
14000f247:     	jne	0x14000f258 <.text+0xe258>
14000f249:     	leaq	0x1(%rcx), %rax
14000f24d:     	movq	%rax, 0x10(%rsi)
14000f251:     	xorl	%eax, %eax
14000f253:     	jmp	0x14000f2fd <.text+0xe2fd>
14000f258:     	xorl	%eax, %eax
14000f25a:     	movl	$0x3e, %r11d
14000f260:     	movq	%rcx, %r10
14000f263:     	nopw	%cs:(%rax,%rax)
14000f270:     	cmpq	%r9, %r10
14000f273:     	jae	0x14000f34c <.text+0xe34c>
14000f279:     	movzbl	(%r8,%r10), %edx
14000f27e:     	cmpb	$0x5f, %dl
14000f281:     	je	0x14000f2f1 <.text+0xe2f1>
14000f283:     	leal	-0x30(%rdx), %edi
14000f286:     	cmpb	$0xa, %dil
14000f28a:     	jb	0x14000f2b2 <.text+0xe2b2>
14000f28c:     	leal	-0x61(%rdx), %edi
14000f28f:     	cmpb	$0x1a, %dil
14000f293:     	jae	0x14000f2a0 <.text+0xe2a0>
14000f295:     	addb	$-0x57, %dl
14000f298:     	jmp	0x14000f2b0 <.text+0xe2b0>
14000f29a:     	nopw	(%rax,%rax)
14000f2a0:     	leal	-0x41(%rdx), %edi
14000f2a3:     	cmpb	$0x1a, %dil
14000f2a7:     	jae	0x14000f34c <.text+0xe34c>
14000f2ad:     	addb	$-0x1d, %dl
14000f2b0:     	movl	%edx, %edi
14000f2b2:     	incq	%r10
14000f2b5:     	movq	%r10, 0x10(%rsi)
14000f2b9:     	mulq	%r11
14000f2bc:     	jo	0x14000f34c <.text+0xe34c>
14000f2c2:     	movzbl	%dil, %edx
14000f2c6:     	addq	%rdx, %rax
14000f2c9:     	jae	0x14000f270 <.text+0xe270>
14000f2cb:     	jmp	0x14000f34c <.text+0xe34c>
14000f2cd:     	movq	0x20(%rsi), %r8
14000f2d1:     	testq	%r8, %r8
14000f2d4:     	je	0x14000f37a <.text+0xe37a>
14000f2da:     	leaq	0xe490(%rip), %rcx      # 0x14001d771
14000f2e1:     	movl	$0x1, %edx
14000f2e6:     	addq	$0x48, %rsp
14000f2ea:     	popq	%rdi
14000f2eb:     	popq	%rsi
14000f2ec:     	jmp	0x140015b40 <.text+0x14b40>
14000f2f1:     	incq	%r10
14000f2f4:     	movq	%r10, 0x10(%rsi)
14000f2f8:     	incq	%rax
14000f2fb:     	je	0x14000f34c <.text+0xe34c>
14000f2fd:     	decq	%rcx
14000f300:     	cmpq	%rcx, %rax
14000f303:     	jae	0x14000f34c <.text+0xe34c>
14000f305:     	movl	0x18(%rsi), %ecx
14000f308:     	incl	%ecx
14000f30a:     	cmpl	$0x1f5, %ecx            # imm = 0x1F5
14000f310:     	jae	0x14000f383 <.text+0xe383>
14000f312:     	cmpq	$0x0, 0x20(%rsi)
14000f317:     	je	0x14000f37a <.text+0xe37a>
14000f319:     	movups	(%rsi), %xmm0
14000f31c:     	movups	0x10(%rsi), %xmm1
14000f320:     	movaps	%xmm1, 0x30(%rsp)
14000f325:     	movaps	%xmm0, 0x20(%rsp)
14000f32a:     	movq	%rax, 0x10(%rsi)
14000f32e:     	movl	%ecx, 0x18(%rsi)
14000f331:     	movq	%rsi, %rcx
14000f334:     	callq	0x1400109d0 <.text+0xf9d0>
14000f339:     	movaps	0x20(%rsp), %xmm0
14000f33e:     	movaps	0x30(%rsp), %xmm1
14000f343:     	movups	%xmm0, (%rsi)
14000f346:     	movups	%xmm1, 0x10(%rsi)
14000f34a:     	jmp	0x14000f37c <.text+0xe37c>
14000f34c:     	movq	0x20(%rsi), %r8
14000f350:     	testq	%r8, %r8
14000f353:     	je	0x14000f36e <.text+0xe36e>
14000f355:     	leaq	0xe3ec(%rip), %rcx      # 0x14001d748
14000f35c:     	movl	$0x10, %edx
14000f361:     	callq	0x140015b40 <.text+0x14b40>
14000f366:     	movl	%eax, %ecx
14000f368:     	movb	$0x1, %al
14000f36a:     	testb	%cl, %cl
14000f36c:     	jne	0x14000f37c <.text+0xe37c>
14000f36e:     	xorl	%eax, %eax
14000f370:     	movq	$0x0, (%rsi)
14000f377:     	movb	%al, 0x8(%rsi)
14000f37a:     	xorl	%eax, %eax
14000f37c:     	addq	$0x48, %rsp
14000f380:     	popq	%rdi
14000f381:     	popq	%rsi
14000f382:     	retq
14000f383:     	movq	0x20(%rsi), %r8
14000f387:     	testq	%r8, %r8
14000f38a:     	je	0x14000f3a7 <.text+0xe3a7>
14000f38c:     	leaq	0xe3c5(%rip), %rcx      # 0x14001d758
14000f393:     	movl	$0x19, %edx
14000f398:     	callq	0x140015b40 <.text+0x14b40>
14000f39d:     	movl	%eax, %ecx
14000f39f:     	movb	$0x1, %al
14000f3a1:     	testb	%cl, %cl
14000f3a3:     	je	0x14000f370 <.text+0xe370>
14000f3a5:     	jmp	0x14000f37c <.text+0xe37c>
14000f3a7:     	movb	$0x1, %al
14000f3a9:     	jmp	0x14000f370 <.text+0xe370>
14000f3ab:     	int3
14000f3ac:     	int3
14000f3ad:     	int3
14000f3ae:     	int3
14000f3af:     	int3
14000f3b0:     	pushq	%rsi
14000f3b1:     	pushq	%rdi
14000f3b2:     	pushq	%rbx
14000f3b3:     	subq	$0x40, %rsp
14000f3b7:     	movq	%rcx, %rsi
14000f3ba:     	movq	(%rcx), %r9
14000f3bd:     	testq	%r9, %r9
14000f3c0:     	je	0x14000f45e <.text+0xe45e>
14000f3c6:     	movl	%edx, %r8d
14000f3c9:     	movq	0x8(%rsi), %r10
14000f3cd:     	movq	0x10(%rsi), %rcx
14000f3d1:     	cmpq	%r10, %rcx
14000f3d4:     	jae	0x14000f3ec <.text+0xe3ec>
14000f3d6:     	cmpb	$0x5f, (%r9,%rcx)
14000f3db:     	jne	0x14000f3ec <.text+0xe3ec>
14000f3dd:     	leaq	0x1(%rcx), %rax
14000f3e1:     	movq	%rax, 0x10(%rsi)
14000f3e5:     	xorl	%eax, %eax
14000f3e7:     	jmp	0x14000f48f <.text+0xe48f>
14000f3ec:     	xorl	%eax, %eax
14000f3ee:     	movl	$0x3e, %edi
14000f3f3:     	movq	%rcx, %r11
14000f3f6:     	nopw	%cs:(%rax,%rax)
14000f400:     	cmpq	%r10, %r11
14000f403:     	jae	0x14000f4e4 <.text+0xe4e4>
14000f409:     	movzbl	(%r9,%r11), %edx
14000f40e:     	cmpb	$0x5f, %dl
14000f411:     	je	0x14000f483 <.text+0xe483>
14000f413:     	leal	-0x30(%rdx), %ebx
14000f416:     	cmpb	$0xa, %bl
14000f419:     	jb	0x14000f441 <.text+0xe441>
14000f41b:     	leal	-0x61(%rdx), %ebx
14000f41e:     	cmpb	$0x1a, %bl
14000f421:     	jae	0x14000f430 <.text+0xe430>
14000f423:     	addb	$-0x57, %dl
14000f426:     	jmp	0x14000f43f <.text+0xe43f>
14000f428:     	nopl	(%rax,%rax)
14000f430:     	leal	-0x41(%rdx), %ebx
14000f433:     	cmpb	$0x1a, %bl
14000f436:     	jae	0x14000f4e4 <.text+0xe4e4>
14000f43c:     	addb	$-0x1d, %dl
14000f43f:     	movl	%edx, %ebx
14000f441:     	incq	%r11
14000f444:     	movq	%r11, 0x10(%rsi)
14000f448:     	mulq	%rdi
14000f44b:     	jo	0x14000f4e4 <.text+0xe4e4>
14000f451:     	movzbl	%bl, %edx
14000f454:     	addq	%rdx, %rax
14000f457:     	jae	0x14000f400 <.text+0xe400>
14000f459:     	jmp	0x14000f4e4 <.text+0xe4e4>
14000f45e:     	movq	0x20(%rsi), %r8
14000f462:     	testq	%r8, %r8
14000f465:     	je	0x14000f512 <.text+0xe512>
14000f46b:     	leaq	0xe2ff(%rip), %rcx      # 0x14001d771
14000f472:     	movl	$0x1, %edx
14000f477:     	addq	$0x40, %rsp
14000f47b:     	popq	%rbx
14000f47c:     	popq	%rdi
14000f47d:     	popq	%rsi
14000f47e:     	jmp	0x140015b40 <.text+0x14b40>
14000f483:     	incq	%r11
14000f486:     	movq	%r11, 0x10(%rsi)
14000f48a:     	incq	%rax
14000f48d:     	je	0x14000f4e4 <.text+0xe4e4>
14000f48f:     	decq	%rcx
14000f492:     	cmpq	%rcx, %rax
14000f495:     	jae	0x14000f4e4 <.text+0xe4e4>
14000f497:     	movl	0x18(%rsi), %ecx
14000f49a:     	incl	%ecx
14000f49c:     	cmpl	$0x1f5, %ecx            # imm = 0x1F5
14000f4a2:     	jae	0x14000f51c <.text+0xe51c>
14000f4a4:     	cmpq	$0x0, 0x20(%rsi)
14000f4a9:     	je	0x14000f512 <.text+0xe512>
14000f4ab:     	movups	(%rsi), %xmm0
14000f4ae:     	movups	0x10(%rsi), %xmm1
14000f4b2:     	movaps	%xmm1, 0x30(%rsp)
14000f4b7:     	movaps	%xmm0, 0x20(%rsp)
14000f4bc:     	movq	%rax, 0x10(%rsi)
14000f4c0:     	movl	%ecx, 0x18(%rsi)
14000f4c3:     	testb	%r8b, %r8b
14000f4c6:     	setne	%dl
14000f4c9:     	movq	%rsi, %rcx
14000f4cc:     	callq	0x140010190 <.text+0xf190>
14000f4d1:     	movaps	0x20(%rsp), %xmm0
14000f4d6:     	movaps	0x30(%rsp), %xmm1
14000f4db:     	movups	%xmm0, (%rsi)
14000f4de:     	movups	%xmm1, 0x10(%rsi)
14000f4e2:     	jmp	0x14000f514 <.text+0xe514>
14000f4e4:     	movq	0x20(%rsi), %r8
14000f4e8:     	testq	%r8, %r8
14000f4eb:     	je	0x14000f506 <.text+0xe506>
14000f4ed:     	leaq	0xe254(%rip), %rcx      # 0x14001d748
14000f4f4:     	movl	$0x10, %edx
14000f4f9:     	callq	0x140015b40 <.text+0x14b40>
14000f4fe:     	movl	%eax, %ecx
14000f500:     	movb	$0x1, %al
14000f502:     	testb	%cl, %cl
14000f504:     	jne	0x14000f514 <.text+0xe514>
14000f506:     	xorl	%eax, %eax
14000f508:     	movq	$0x0, (%rsi)
14000f50f:     	movb	%al, 0x8(%rsi)
14000f512:     	xorl	%eax, %eax
14000f514:     	addq	$0x40, %rsp
14000f518:     	popq	%rbx
14000f519:     	popq	%rdi
14000f51a:     	popq	%rsi
14000f51b:     	retq
14000f51c:     	movq	0x20(%rsi), %r8
14000f520:     	testq	%r8, %r8
14000f523:     	je	0x14000f540 <.text+0xe540>
14000f525:     	leaq	0xe22c(%rip), %rcx      # 0x14001d758
14000f52c:     	movl	$0x19, %edx
14000f531:     	callq	0x140015b40 <.text+0x14b40>
14000f536:     	movl	%eax, %ecx
14000f538:     	movb	$0x1, %al
14000f53a:     	testb	%cl, %cl
14000f53c:     	je	0x14000f508 <.text+0xe508>
14000f53e:     	jmp	0x14000f514 <.text+0xe514>
14000f540:     	movb	$0x1, %al
14000f542:     	jmp	0x14000f508 <.text+0xe508>
14000f544:     	int3
14000f545:     	int3
14000f546:     	int3
14000f547:     	int3
14000f548:     	int3
14000f549:     	int3
14000f54a:     	int3
14000f54b:     	int3
14000f54c:     	int3
14000f54d:     	int3
14000f54e:     	int3
14000f54f:     	int3
14000f550:     	pushq	%r14
14000f552:     	pushq	%rsi
14000f553:     	pushq	%rdi
14000f554:     	pushq	%rbp
14000f555:     	pushq	%rbx
14000f556:     	subq	$0x40, %rsp
14000f55a:     	testq	%rcx, %rcx
14000f55d:     	je	0x14000f630 <.text+0xe630>
14000f563:     	movl	%edx, %ebp
14000f565:     	movq	%rcx, %rdi
14000f568:     	movl	$0x27, %edx
14000f56d:     	callq	0x140015770 <.text+0x14770>
14000f572:     	movb	$0x1, %sil
14000f575:     	testb	%al, %al
14000f577:     	jne	0x14000f632 <.text+0xe632>
14000f57d:     	leaq	0x34(%rsp), %rbx
14000f582:     	leaq	0x28(%rsp), %r14
14000f587:     	cmpl	$0x22, %ebp
14000f58a:     	jne	0x14000f5ab <.text+0xe5ab>
14000f58c:     	movq	%rdi, %rcx
14000f58f:     	movl	$0x22, %edx
14000f594:     	callq	0x140015770 <.text+0x14770>
14000f599:     	movl	$0x110000, %ebp         # imm = 0x110000
14000f59e:     	testb	%al, %al
14000f5a0:     	jne	0x14000f632 <.text+0xe632>
14000f5a6:     	cmpl	$0x22, %ebp
14000f5a9:     	je	0x14000f58c <.text+0xe58c>
14000f5ab:     	cmpl	$0x110000, %ebp         # imm = 0x110000
14000f5b1:     	je	0x14000f63f <.text+0xe63f>
14000f5b7:     	movq	%rbx, %rcx
14000f5ba:     	movl	%ebp, %edx
14000f5bc:     	callq	0x14000ce50 <.text+0xbe50>
14000f5c1:     	movl	0x3c(%rsp), %eax
14000f5c5:     	movl	%eax, 0x30(%rsp)
14000f5c9:     	movq	0x34(%rsp), %rax
14000f5ce:     	movq	%rax, 0x28(%rsp)
14000f5d3:     	jmp	0x14000f5fa <.text+0xe5fa>
14000f5d5:     	nopw	%cs:(%rax,%rax)
14000f5e0:     	movl	0x2c(%rsp), %ebp
14000f5e4:     	movq	%r14, %rcx
14000f5e7:     	callq	0x140014070 <.text+0x13070>
14000f5ec:     	movq	%rdi, %rcx
14000f5ef:     	movl	%ebp, %edx
14000f5f1:     	callq	0x140015770 <.text+0x14770>
14000f5f6:     	testb	%al, %al
14000f5f8:     	jne	0x14000f632 <.text+0xe632>
14000f5fa:     	cmpb	$-0x80, 0x28(%rsp)
14000f5ff:     	je	0x14000f5e0 <.text+0xe5e0>
14000f601:     	movzbl	0x32(%rsp), %eax
14000f606:     	cmpb	0x33(%rsp), %al
14000f60a:     	jae	0x14000f621 <.text+0xe621>
14000f60c:     	movzbl	%al, %ecx
14000f60f:     	leal	0x1(%rax), %edx
14000f612:     	movb	%dl, 0x32(%rsp)
14000f616:     	cmpb	$0xa, %al
14000f618:     	jae	0x14000f650 <.text+0xe650>
14000f61a:     	movzbl	0x28(%rsp,%rcx), %ebp
14000f61f:     	jmp	0x14000f5ec <.text+0xe5ec>
14000f621:     	movl	$0x110000, %ebp         # imm = 0x110000
14000f626:     	cmpl	$0x22, %ebp
14000f629:     	jne	0x14000f5ab <.text+0xe5ab>
14000f62b:     	jmp	0x14000f58c <.text+0xe58c>
14000f630:     	xorl	%esi, %esi
14000f632:     	movl	%esi, %eax
14000f634:     	addq	$0x40, %rsp
14000f638:     	popq	%rbx
14000f639:     	popq	%rbp
14000f63a:     	popq	%rdi
14000f63b:     	popq	%rsi
14000f63c:     	popq	%r14
14000f63e:     	retq
14000f63f:     	movq	%rdi, %rcx
14000f642:     	movl	$0x27, %edx
14000f647:     	callq	0x140015770 <.text+0x14770>
14000f64c:     	movl	%eax, %esi
14000f64e:     	jmp	0x14000f632 <.text+0xe632>
14000f650:     	leaq	0xd9e9(%rip), %r8       # 0x14001d040
14000f657:     	movl	$0xa, %edx
14000f65c:     	callq	0x140019920 <.text+0x18920>
14000f661:     	ud2
14000f663:     	int3
14000f664:     	int3
14000f665:     	int3
14000f666:     	int3
14000f667:     	int3
14000f668:     	int3
14000f669:     	int3
14000f66a:     	int3
14000f66b:     	int3
14000f66c:     	int3
14000f66d:     	int3
14000f66e:     	int3
14000f66f:     	int3
14000f670:     	pushq	%r15
14000f672:     	pushq	%r14
14000f674:     	pushq	%rsi
14000f675:     	pushq	%rdi
14000f676:     	pushq	%rbx
14000f677:     	subq	$0x30, %rsp
14000f67b:     	movq	0x20(%rcx), %rsi
14000f67f:     	testq	%rsi, %rsi
14000f682:     	je	0x14000f6d6 <.text+0xe6d6>
14000f684:     	movq	%rdx, %r14
14000f687:     	movq	%rcx, %rbx
14000f68a:     	leaq	0xe0e1(%rip), %rcx      # 0x14001d772
14000f691:     	movl	$0x1, %edx
14000f696:     	movq	%rsi, %r8
14000f699:     	callq	0x140015b40 <.text+0x14b40>
14000f69e:     	movb	$0x1, %dil
14000f6a1:     	testb	%al, %al
14000f6a3:     	jne	0x14000f6d8 <.text+0xe6d8>
14000f6a5:     	testq	%r14, %r14
14000f6a8:     	je	0x14000f6e6 <.text+0xe6e6>
14000f6aa:     	movl	0x28(%rbx), %r15d
14000f6ae:     	subq	%r14, %r15
14000f6b1:     	jae	0x14000f705 <.text+0xe705>
14000f6b3:     	leaq	0xe08e(%rip), %rcx      # 0x14001d748
14000f6ba:     	movl	$0x10, %edx
14000f6bf:     	movq	%rsi, %r8
14000f6c2:     	callq	0x140015b40 <.text+0x14b40>
14000f6c7:     	testb	%al, %al
14000f6c9:     	jne	0x14000f6d8 <.text+0xe6d8>
14000f6cb:     	movq	$0x0, (%rbx)
14000f6d2:     	movb	$0x0, 0x8(%rbx)
14000f6d6:     	xorl	%edi, %edi
14000f6d8:     	movl	%edi, %eax
14000f6da:     	addq	$0x30, %rsp
14000f6de:     	popq	%rbx
14000f6df:     	popq	%rdi
14000f6e0:     	popq	%rsi
14000f6e1:     	popq	%r14
14000f6e3:     	popq	%r15
14000f6e5:     	retq
14000f6e6:     	leaq	0xdfdd(%rip), %rcx      # 0x14001d6ca
14000f6ed:     	movl	$0x1, %edx
14000f6f2:     	movq	%rsi, %r8
14000f6f5:     	addq	$0x30, %rsp
14000f6f9:     	popq	%rbx
14000f6fa:     	popq	%rdi
14000f6fb:     	popq	%rsi
14000f6fc:     	popq	%r14
14000f6fe:     	popq	%r15
14000f700:     	jmp	0x140015b40 <.text+0x14b40>
14000f705:     	cmpq	$0x1a, %r15
14000f709:     	jae	0x14000f725 <.text+0xe725>
14000f70b:     	addl	$0x61, %r15d
14000f70f:     	movl	%r15d, 0x24(%rsp)
14000f714:     	leaq	0x24(%rsp), %rcx
14000f719:     	movq	%rsi, %rdx
14000f71c:     	callq	0x140015c80 <.text+0x14c80>
14000f721:     	movl	%eax, %edi
14000f723:     	jmp	0x14000f6d8 <.text+0xe6d8>
14000f725:     	leaq	0xdf9e(%rip), %rcx      # 0x14001d6ca
14000f72c:     	movl	$0x1, %edx
14000f731:     	movq	%rsi, %r8
14000f734:     	callq	0x140015b40 <.text+0x14b40>
14000f739:     	testb	%al, %al
14000f73b:     	jne	0x14000f6d8 <.text+0xe6d8>
14000f73d:     	movq	%r15, 0x28(%rsp)
14000f742:     	leaq	0x28(%rsp), %rcx
14000f747:     	movq	%rsi, %rdx
14000f74a:     	callq	0x140017e10 <.text+0x16e10>
14000f74f:     	movl	%eax, %edi
14000f751:     	jmp	0x14000f6d8 <.text+0xe6d8>
14000f753:     	int3
14000f754:     	int3
14000f755:     	int3
14000f756:     	int3
14000f757:     	int3
14000f758:     	int3
14000f759:     	int3
14000f75a:     	int3
14000f75b:     	int3
14000f75c:     	int3
14000f75d:     	int3
14000f75e:     	int3
14000f75f:     	int3
14000f760:     	pushq	%r15
14000f762:     	pushq	%r14
14000f764:     	pushq	%rsi
14000f765:     	pushq	%rdi
14000f766:     	pushq	%rbx
14000f767:     	subq	$0x20, %rsp
14000f76b:     	movq	%rcx, %rsi
14000f76e:     	movq	(%rcx), %rcx
14000f771:     	testq	%rcx, %rcx
14000f774:     	je	0x14000f868 <.text+0xe868>
14000f77a:     	movq	0x8(%rsi), %r8
14000f77e:     	movq	0x10(%rsi), %rax
14000f782:     	cmpq	%r8, %rax
14000f785:     	jae	0x14000f7b8 <.text+0xe7b8>
14000f787:     	cmpb	$0x47, (%rcx,%rax)
14000f78b:     	jne	0x14000f7b8 <.text+0xe7b8>
14000f78d:     	leaq	0x1(%rax), %r9
14000f791:     	movq	%r9, 0x10(%rsi)
14000f795:     	cmpq	%r8, %r9
14000f798:     	jae	0x14000f8a4 <.text+0xe8a4>
14000f79e:     	cmpb	$0x5f, (%rcx,%r9)
14000f7a3:     	jne	0x14000f8a4 <.text+0xe8a4>
14000f7a9:     	addq	$0x2, %rax
14000f7ad:     	movq	%rax, 0x10(%rsi)
14000f7b1:     	xorl	%edi, %edi
14000f7b3:     	jmp	0x14000f916 <.text+0xe916>
14000f7b8:     	xorl	%edi, %edi
14000f7ba:     	movq	0x20(%rsi), %r8
14000f7be:     	testq	%r8, %r8
14000f7c1:     	je	0x14000f891 <.text+0xe891>
14000f7c7:     	testq	%rdi, %rdi
14000f7ca:     	je	0x14000f96e <.text+0xe96e>
14000f7d0:     	leaq	0xdf9c(%rip), %rcx      # 0x14001d773
14000f7d7:     	movl	$0x4, %edx
14000f7dc:     	callq	0x140015b40 <.text+0x14b40>
14000f7e1:     	movb	$0x1, %bl
14000f7e3:     	testb	%al, %al
14000f7e5:     	jne	0x14000f94c <.text+0xe94c>
14000f7eb:     	incl	0x28(%rsi)
14000f7ee:     	movl	$0x1, %r15d
14000f7f4:     	movl	$0x1, %edx
14000f7f9:     	movq	%rsi, %rcx
14000f7fc:     	callq	0x14000f670 <.text+0xe670>
14000f801:     	testb	%al, %al
14000f803:     	jne	0x14000f94c <.text+0xe94c>
14000f809:     	leaq	0xdf69(%rip), %r14      # 0x14001d779
14000f810:     	jmp	0x14000f83b <.text+0xe83b>
14000f812:     	nopw	%cs:(%rax,%rax)
14000f820:     	incl	0x28(%rsi)
14000f823:     	movl	$0x1, %edx
14000f828:     	movq	%rsi, %rcx
14000f82b:     	callq	0x14000f670 <.text+0xe670>
14000f830:     	incq	%r15
14000f833:     	testb	%al, %al
14000f835:     	jne	0x14000f94c <.text+0xe94c>
14000f83b:     	cmpq	%r15, %rdi
14000f83e:     	je	0x14000f950 <.text+0xe950>
14000f844:     	testq	%r15, %r15
14000f847:     	je	0x14000f820 <.text+0xe820>
14000f849:     	movq	0x20(%rsi), %r8
14000f84d:     	testq	%r8, %r8
14000f850:     	je	0x14000f820 <.text+0xe820>
14000f852:     	movl	$0x2, %edx
14000f857:     	movq	%r14, %rcx
14000f85a:     	callq	0x140015b40 <.text+0x14b40>
14000f85f:     	testb	%al, %al
14000f861:     	je	0x14000f820 <.text+0xe820>
14000f863:     	jmp	0x14000f94c <.text+0xe94c>
14000f868:     	movq	0x20(%rsi), %r8
14000f86c:     	testq	%r8, %r8
14000f86f:     	je	0x14000f94a <.text+0xe94a>
14000f875:     	leaq	0xdef5(%rip), %rcx      # 0x14001d771
14000f87c:     	movl	$0x1, %edx
14000f881:     	addq	$0x20, %rsp
14000f885:     	popq	%rbx
14000f886:     	popq	%rdi
14000f887:     	popq	%rsi
14000f888:     	popq	%r14
14000f88a:     	popq	%r15
14000f88c:     	jmp	0x140015b40 <.text+0x14b40>
14000f891:     	movq	%rsi, %rcx
14000f894:     	addq	$0x20, %rsp
14000f898:     	popq	%rbx
14000f899:     	popq	%rdi
14000f89a:     	popq	%rsi
14000f89b:     	popq	%r14
14000f89d:     	popq	%r15
14000f89f:     	jmp	0x140010ef0 <.text+0xfef0>
14000f8a4:     	xorl	%edi, %edi
14000f8a6:     	movl	$0x3e, %r10d
14000f8ac:     	nopl	(%rax)
14000f8b0:     	cmpq	%r8, %r9
14000f8b3:     	jae	0x14000f91f <.text+0xe91f>
14000f8b5:     	movzbl	(%rcx,%r9), %eax
14000f8ba:     	cmpb	$0x5f, %al
14000f8bc:     	je	0x14000f90a <.text+0xe90a>
14000f8be:     	leal	-0x30(%rax), %r11d
14000f8c2:     	cmpb	$0xa, %r11b
14000f8c6:     	jb	0x14000f8ed <.text+0xe8ed>
14000f8c8:     	leal	-0x61(%rax), %edx
14000f8cb:     	cmpb	$0x1a, %dl
14000f8ce:     	jae	0x14000f8e0 <.text+0xe8e0>
14000f8d0:     	addb	$-0x57, %al
14000f8d2:     	jmp	0x14000f8ea <.text+0xe8ea>
14000f8d4:     	nopw	%cs:(%rax,%rax)
14000f8e0:     	leal	-0x41(%rax), %edx
14000f8e3:     	cmpb	$0x1a, %dl
14000f8e6:     	jae	0x14000f91f <.text+0xe91f>
14000f8e8:     	addb	$-0x1d, %al
14000f8ea:     	movl	%eax, %r11d
14000f8ed:     	incq	%r9
14000f8f0:     	movq	%r9, 0x10(%rsi)
14000f8f4:     	movq	%rdi, %rax
14000f8f7:     	mulq	%r10
14000f8fa:     	jo	0x14000f91f <.text+0xe91f>
14000f8fc:     	movq	%rax, %rdi
14000f8ff:     	movzbl	%r11b, %eax
14000f903:     	addq	%rax, %rdi
14000f906:     	jae	0x14000f8b0 <.text+0xe8b0>
14000f908:     	jmp	0x14000f91f <.text+0xe91f>
14000f90a:     	incq	%r9
14000f90d:     	movq	%r9, 0x10(%rsi)
14000f911:     	incq	%rdi
14000f914:     	je	0x14000f91f <.text+0xe91f>
14000f916:     	incq	%rdi
14000f919:     	jne	0x14000f7ba <.text+0xe7ba>
14000f91f:     	movq	0x20(%rsi), %r8
14000f923:     	testq	%r8, %r8
14000f926:     	je	0x14000f93f <.text+0xe93f>
14000f928:     	leaq	0xde19(%rip), %rcx      # 0x14001d748
14000f92f:     	movl	$0x10, %edx
14000f934:     	callq	0x140015b40 <.text+0x14b40>
14000f939:     	movb	$0x1, %bl
14000f93b:     	testb	%al, %al
14000f93d:     	jne	0x14000f94c <.text+0xe94c>
14000f93f:     	movq	$0x0, (%rsi)
14000f946:     	movb	$0x0, 0x8(%rsi)
14000f94a:     	xorl	%ebx, %ebx
14000f94c:     	movl	%ebx, %eax
14000f94e:     	jmp	0x14000f979 <.text+0xe979>
14000f950:     	movq	0x20(%rsi), %r8
14000f954:     	testq	%r8, %r8
14000f957:     	je	0x14000f96e <.text+0xe96e>
14000f959:     	leaq	0xde17(%rip), %rcx      # 0x14001d777
14000f960:     	movl	$0x2, %edx
14000f965:     	callq	0x140015b40 <.text+0x14b40>
14000f96a:     	testb	%al, %al
14000f96c:     	jne	0x14000f94c <.text+0xe94c>
14000f96e:     	movq	%rsi, %rcx
14000f971:     	callq	0x140010ef0 <.text+0xfef0>
14000f976:     	subl	%edi, 0x28(%rsi)
14000f979:     	addq	$0x20, %rsp
14000f97d:     	popq	%rbx
14000f97e:     	popq	%rdi
14000f97f:     	popq	%rsi
14000f980:     	popq	%r14
14000f982:     	popq	%r15
14000f984:     	retq
14000f985:     	int3
14000f986:     	int3
14000f987:     	int3
14000f988:     	int3
14000f989:     	int3
14000f98a:     	int3
14000f98b:     	int3
14000f98c:     	int3
14000f98d:     	int3
14000f98e:     	int3
14000f98f:     	int3
14000f990:     	pushq	%r15
14000f992:     	pushq	%r14
14000f994:     	pushq	%rsi
14000f995:     	pushq	%rdi
14000f996:     	pushq	%rbx
14000f997:     	subq	$0x20, %rsp
14000f99b:     	movq	%rcx, %rsi
14000f99e:     	movq	(%rcx), %rcx
14000f9a1:     	testq	%rcx, %rcx
14000f9a4:     	je	0x14000fa98 <.text+0xea98>
14000f9aa:     	movq	0x8(%rsi), %r8
14000f9ae:     	movq	0x10(%rsi), %rax
14000f9b2:     	cmpq	%r8, %rax
14000f9b5:     	jae	0x14000f9e8 <.text+0xe9e8>
14000f9b7:     	cmpb	$0x47, (%rcx,%rax)
14000f9bb:     	jne	0x14000f9e8 <.text+0xe9e8>
14000f9bd:     	leaq	0x1(%rax), %r9
14000f9c1:     	movq	%r9, 0x10(%rsi)
14000f9c5:     	cmpq	%r8, %r9
14000f9c8:     	jae	0x14000fb23 <.text+0xeb23>
14000f9ce:     	cmpb	$0x5f, (%rcx,%r9)
14000f9d3:     	jne	0x14000fb23 <.text+0xeb23>
14000f9d9:     	addq	$0x2, %rax
14000f9dd:     	movq	%rax, 0x10(%rsi)
14000f9e1:     	xorl	%edi, %edi
14000f9e3:     	jmp	0x14000fbab <.text+0xebab>
14000f9e8:     	xorl	%edi, %edi
14000f9ea:     	movq	0x20(%rsi), %r8
14000f9ee:     	testq	%r8, %r8
14000f9f1:     	je	0x14000fabd <.text+0xeabd>
14000f9f7:     	testq	%rdi, %rdi
14000f9fa:     	je	0x14000fc08 <.text+0xec08>
14000fa00:     	leaq	0xdd6c(%rip), %rcx      # 0x14001d773
14000fa07:     	movl	$0x4, %edx
14000fa0c:     	callq	0x140015b40 <.text+0x14b40>
14000fa11:     	movb	$0x1, %bl
14000fa13:     	testb	%al, %al
14000fa15:     	jne	0x14000fc76 <.text+0xec76>
14000fa1b:     	incl	0x28(%rsi)
14000fa1e:     	movl	$0x1, %r15d
14000fa24:     	movl	$0x1, %edx
14000fa29:     	movq	%rsi, %rcx
14000fa2c:     	callq	0x14000f670 <.text+0xe670>
14000fa31:     	testb	%al, %al
14000fa33:     	jne	0x14000fc76 <.text+0xec76>
14000fa39:     	leaq	0xdd39(%rip), %r14      # 0x14001d779
14000fa40:     	jmp	0x14000fa6b <.text+0xea6b>
14000fa42:     	nopw	%cs:(%rax,%rax)
14000fa50:     	incl	0x28(%rsi)
14000fa53:     	movl	$0x1, %edx
14000fa58:     	movq	%rsi, %rcx
14000fa5b:     	callq	0x14000f670 <.text+0xe670>
14000fa60:     	incq	%r15
14000fa63:     	testb	%al, %al
14000fa65:     	jne	0x14000fc76 <.text+0xec76>
14000fa6b:     	cmpq	%r15, %rdi
14000fa6e:     	je	0x14000fbea <.text+0xebea>
14000fa74:     	testq	%r15, %r15
14000fa77:     	je	0x14000fa50 <.text+0xea50>
14000fa79:     	movq	0x20(%rsi), %r8
14000fa7d:     	testq	%r8, %r8
14000fa80:     	je	0x14000fa50 <.text+0xea50>
14000fa82:     	movl	$0x2, %edx
14000fa87:     	movq	%r14, %rcx
14000fa8a:     	callq	0x140015b40 <.text+0x14b40>
14000fa8f:     	testb	%al, %al
14000fa91:     	je	0x14000fa50 <.text+0xea50>
14000fa93:     	jmp	0x14000fc76 <.text+0xec76>
14000fa98:     	movq	0x20(%rsi), %r8
14000fa9c:     	testq	%r8, %r8
14000fa9f:     	je	0x14000fb1c <.text+0xeb1c>
14000faa1:     	leaq	0xdcc9(%rip), %rcx      # 0x14001d771
14000faa8:     	movl	$0x1, %edx
14000faad:     	addq	$0x20, %rsp
14000fab1:     	popq	%rbx
14000fab2:     	popq	%rdi
14000fab3:     	popq	%rsi
14000fab4:     	popq	%r14
14000fab6:     	popq	%r15
14000fab8:     	jmp	0x140015b40 <.text+0x14b40>
14000fabd:     	xorl	%ebx, %ebx
14000fabf:     	leaq	0xdcdc(%rip), %rdi      # 0x14001d7a2
14000fac6:     	nopw	%cs:(%rax,%rax)
14000fad0:     	movq	0x10(%rsi), %rax
14000fad4:     	cmpq	0x8(%rsi), %rax
14000fad8:     	jae	0x14000fae4 <.text+0xeae4>
14000fada:     	cmpb	$0x45, (%rcx,%rax)
14000fade:     	je	0x14000fb91 <.text+0xeb91>
14000fae4:     	subq	$0x1, %rbx
14000fae8:     	jb	0x14000fb08 <.text+0xeb08>
14000faea:     	movq	0x20(%rsi), %r8
14000faee:     	testq	%r8, %r8
14000faf1:     	je	0x14000fb08 <.text+0xeb08>
14000faf3:     	movl	$0x3, %edx
14000faf8:     	movq	%rdi, %rcx
14000fafb:     	callq	0x140015b40 <.text+0x14b40>
14000fb00:     	testb	%al, %al
14000fb02:     	jne	0x14000fb8a <.text+0xeb8a>
14000fb08:     	movq	%rsi, %rcx
14000fb0b:     	callq	0x140011670 <.text+0x10670>
14000fb10:     	testb	%al, %al
14000fb12:     	jne	0x14000fb8a <.text+0xeb8a>
14000fb14:     	movq	(%rsi), %rcx
14000fb17:     	testq	%rcx, %rcx
14000fb1a:     	jne	0x14000fad0 <.text+0xead0>
14000fb1c:     	xorl	%ebx, %ebx
14000fb1e:     	jmp	0x14000fc76 <.text+0xec76>
14000fb23:     	xorl	%edi, %edi
14000fb25:     	movl	$0x3e, %r10d
14000fb2b:     	nopl	(%rax,%rax)
14000fb30:     	cmpq	%r8, %r9
14000fb33:     	jae	0x14000fbb4 <.text+0xebb4>
14000fb35:     	movzbl	(%rcx,%r9), %eax
14000fb3a:     	cmpb	$0x5f, %al
14000fb3c:     	je	0x14000fb9f <.text+0xeb9f>
14000fb3e:     	leal	-0x30(%rax), %r11d
14000fb42:     	cmpb	$0xa, %r11b
14000fb46:     	jb	0x14000fb6d <.text+0xeb6d>
14000fb48:     	leal	-0x61(%rax), %edx
14000fb4b:     	cmpb	$0x1a, %dl
14000fb4e:     	jae	0x14000fb60 <.text+0xeb60>
14000fb50:     	addb	$-0x57, %al
14000fb52:     	jmp	0x14000fb6a <.text+0xeb6a>
14000fb54:     	nopw	%cs:(%rax,%rax)
14000fb60:     	leal	-0x41(%rax), %edx
14000fb63:     	cmpb	$0x1a, %dl
14000fb66:     	jae	0x14000fbb4 <.text+0xebb4>
14000fb68:     	addb	$-0x1d, %al
14000fb6a:     	movl	%eax, %r11d
14000fb6d:     	incq	%r9
14000fb70:     	movq	%r9, 0x10(%rsi)
14000fb74:     	movq	%rdi, %rax
14000fb77:     	mulq	%r10
14000fb7a:     	jo	0x14000fbb4 <.text+0xebb4>
14000fb7c:     	movq	%rax, %rdi
14000fb7f:     	movzbl	%r11b, %eax
14000fb83:     	addq	%rax, %rdi
14000fb86:     	jae	0x14000fb30 <.text+0xeb30>
14000fb88:     	jmp	0x14000fbb4 <.text+0xebb4>
14000fb8a:     	movb	$0x1, %bl
14000fb8c:     	jmp	0x14000fc76 <.text+0xec76>
14000fb91:     	incq	%rax
14000fb94:     	movq	%rax, 0x10(%rsi)
14000fb98:     	xorl	%ebx, %ebx
14000fb9a:     	jmp	0x14000fc76 <.text+0xec76>
14000fb9f:     	incq	%r9
14000fba2:     	movq	%r9, 0x10(%rsi)
14000fba6:     	incq	%rdi
14000fba9:     	je	0x14000fbb4 <.text+0xebb4>
14000fbab:     	incq	%rdi
14000fbae:     	jne	0x14000f9ea <.text+0xe9ea>
14000fbb4:     	movq	0x20(%rsi), %r8
14000fbb8:     	testq	%r8, %r8
14000fbbb:     	je	0x14000fbd8 <.text+0xebd8>
14000fbbd:     	leaq	0xdb84(%rip), %rcx      # 0x14001d748
14000fbc4:     	movl	$0x10, %edx
14000fbc9:     	callq	0x140015b40 <.text+0x14b40>
14000fbce:     	movb	$0x1, %bl
14000fbd0:     	testb	%al, %al
14000fbd2:     	jne	0x14000fc76 <.text+0xec76>
14000fbd8:     	movq	$0x0, (%rsi)
14000fbdf:     	movb	$0x0, 0x8(%rsi)
14000fbe3:     	xorl	%ebx, %ebx
14000fbe5:     	jmp	0x14000fc76 <.text+0xec76>
14000fbea:     	movq	0x20(%rsi), %r8
14000fbee:     	testq	%r8, %r8
14000fbf1:     	je	0x14000fc08 <.text+0xec08>
14000fbf3:     	leaq	0xdb7d(%rip), %rcx      # 0x14001d777
14000fbfa:     	movl	$0x2, %edx
14000fbff:     	callq	0x140015b40 <.text+0x14b40>
14000fc04:     	testb	%al, %al
14000fc06:     	jne	0x14000fc76 <.text+0xec76>
14000fc08:     	movq	(%rsi), %rax
14000fc0b:     	testq	%rax, %rax
14000fc0e:     	je	0x14000fc71 <.text+0xec71>
14000fc10:     	xorl	%r14d, %r14d
14000fc13:     	leaq	0xdb88(%rip), %rbx      # 0x14001d7a2
14000fc1a:     	nopw	(%rax,%rax)
14000fc20:     	movq	0x10(%rsi), %rcx
14000fc24:     	cmpq	0x8(%rsi), %rcx
14000fc28:     	jae	0x14000fc30 <.text+0xec30>
14000fc2a:     	cmpb	$0x45, (%rax,%rcx)
14000fc2e:     	je	0x14000fc6a <.text+0xec6a>
14000fc30:     	subq	$0x1, %r14
14000fc34:     	jb	0x14000fc50 <.text+0xec50>
14000fc36:     	movq	0x20(%rsi), %r8
14000fc3a:     	testq	%r8, %r8
14000fc3d:     	je	0x14000fc50 <.text+0xec50>
14000fc3f:     	movl	$0x3, %edx
14000fc44:     	movq	%rbx, %rcx
14000fc47:     	callq	0x140015b40 <.text+0x14b40>
14000fc4c:     	testb	%al, %al
14000fc4e:     	jne	0x14000fc66 <.text+0xec66>
14000fc50:     	movq	%rsi, %rcx
14000fc53:     	callq	0x140011670 <.text+0x10670>
14000fc58:     	testb	%al, %al
14000fc5a:     	jne	0x14000fc66 <.text+0xec66>
14000fc5c:     	movq	(%rsi), %rax
14000fc5f:     	testq	%rax, %rax
14000fc62:     	jne	0x14000fc20 <.text+0xec20>
14000fc64:     	jmp	0x14000fc71 <.text+0xec71>
14000fc66:     	movb	$0x1, %bl
14000fc68:     	jmp	0x14000fc73 <.text+0xec73>
14000fc6a:     	incq	%rcx
14000fc6d:     	movq	%rcx, 0x10(%rsi)
14000fc71:     	xorl	%ebx, %ebx
14000fc73:     	subl	%edi, 0x28(%rsi)
14000fc76:     	movl	%ebx, %eax
14000fc78:     	addq	$0x20, %rsp
14000fc7c:     	popq	%rbx
14000fc7d:     	popq	%rdi
14000fc7e:     	popq	%rsi
14000fc7f:     	popq	%r14
14000fc81:     	popq	%r15
14000fc83:     	retq
14000fc84:     	int3
14000fc85:     	int3
14000fc86:     	int3
14000fc87:     	int3
14000fc88:     	int3
14000fc89:     	int3
14000fc8a:     	int3
14000fc8b:     	int3
14000fc8c:     	int3
14000fc8d:     	int3
14000fc8e:     	int3
14000fc8f:     	int3
14000fc90:     	pushq	%r15
14000fc92:     	pushq	%r14
14000fc94:     	pushq	%r13
14000fc96:     	pushq	%r12
14000fc98:     	pushq	%rsi
14000fc99:     	pushq	%rdi
14000fc9a:     	pushq	%rbp
14000fc9b:     	pushq	%rbx
14000fc9c:     	subq	$0x68, %rsp
14000fca0:     	movq	%rcx, %rsi
14000fca3:     	movq	(%rcx), %rcx
14000fca6:     	testq	%rcx, %rcx
14000fca9:     	je	0x14000ff25 <.text+0xef25>
14000fcaf:     	movl	$0x3e, %r14d
14000fcb5:     	leaq	0x20(%rsp), %rdi
14000fcba:     	leaq	0x40(%rsp), %r15
14000fcbf:     	leaq	0xdb25(%rip), %r12      # 0x14001d7eb
14000fcc6:     	leaq	0xdaac(%rip), %r13      # 0x14001d779
14000fccd:     	xorl	%ebp, %ebp
14000fccf:     	jmp	0x14000fcf9 <.text+0xecf9>
14000fcd1:     	nopw	%cs:(%rax,%rax)
14000fce0:     	movq	$0x0, (%rsi)
14000fce7:     	movb	%bl, 0x8(%rsi)
14000fcea:     	movq	(%rsi), %rcx
14000fced:     	incq	%rbp
14000fcf0:     	testq	%rcx, %rcx
14000fcf3:     	je	0x14000ff25 <.text+0xef25>
14000fcf9:     	movq	0x10(%rsi), %rax
14000fcfd:     	cmpq	0x8(%rsi), %rax
14000fd01:     	jae	0x14000fd0d <.text+0xed0d>
14000fd03:     	cmpb	$0x45, (%rcx,%rax)
14000fd07:     	je	0x14000ff3b <.text+0xef3b>
14000fd0d:     	testq	%rbp, %rbp
14000fd10:     	je	0x14000fd3c <.text+0xed3c>
14000fd12:     	movq	0x20(%rsi), %r8
14000fd16:     	testq	%r8, %r8
14000fd19:     	je	0x14000fd3c <.text+0xed3c>
14000fd1b:     	movl	$0x2, %edx
14000fd20:     	movq	%r13, %rcx
14000fd23:     	callq	0x140015b40 <.text+0x14b40>
14000fd28:     	testb	%al, %al
14000fd2a:     	jne	0x14000ff13 <.text+0xef13>
14000fd30:     	movq	(%rsi), %rcx
14000fd33:     	testq	%rcx, %rcx
14000fd36:     	je	0x14000fde2 <.text+0xede2>
14000fd3c:     	movq	0x8(%rsi), %r8
14000fd40:     	movq	0x10(%rsi), %rax
14000fd44:     	cmpq	%r8, %rax
14000fd47:     	jae	0x14000fe30 <.text+0xee30>
14000fd4d:     	cmpb	$0x73, (%rcx,%rax)
14000fd51:     	jne	0x14000fe30 <.text+0xee30>
14000fd57:     	leaq	0x1(%rax), %r9
14000fd5b:     	movq	%r9, 0x10(%rsi)
14000fd5f:     	cmpq	%r8, %r9
14000fd62:     	jae	0x14000fd78 <.text+0xed78>
14000fd64:     	cmpb	$0x5f, (%rcx,%r9)
14000fd69:     	jne	0x14000fd78 <.text+0xed78>
14000fd6b:     	addq	$0x2, %rax
14000fd6f:     	movq	%rax, 0x10(%rsi)
14000fd73:     	jmp	0x14000fe30 <.text+0xee30>
14000fd78:     	xorl	%eax, %eax
14000fd7a:     	nopw	(%rax,%rax)
14000fd80:     	cmpq	%r8, %r9
14000fd83:     	jae	0x14000fef5 <.text+0xeef5>
14000fd89:     	movzbl	(%rcx,%r9), %edx
14000fd8e:     	cmpb	$0x5f, %dl
14000fd91:     	je	0x14000fe12 <.text+0xee12>
14000fd93:     	leal	-0x30(%rdx), %r10d
14000fd97:     	cmpb	$0xa, %r10b
14000fd9b:     	jb	0x14000fdc4 <.text+0xedc4>
14000fd9d:     	leal	-0x61(%rdx), %r10d
14000fda1:     	cmpb	$0x1a, %r10b
14000fda5:     	jae	0x14000fdb0 <.text+0xedb0>
14000fda7:     	addb	$-0x57, %dl
14000fdaa:     	jmp	0x14000fdc1 <.text+0xedc1>
14000fdac:     	nopl	(%rax)
14000fdb0:     	leal	-0x41(%rdx), %r10d
14000fdb4:     	cmpb	$0x1a, %r10b
14000fdb8:     	jae	0x14000fef5 <.text+0xeef5>
14000fdbe:     	addb	$-0x1d, %dl
14000fdc1:     	movl	%edx, %r10d
14000fdc4:     	incq	%r9
14000fdc7:     	movq	%r9, 0x10(%rsi)
14000fdcb:     	mulq	%r14
14000fdce:     	jo	0x14000fef5 <.text+0xeef5>
14000fdd4:     	movzbl	%r10b, %edx
14000fdd8:     	addq	%rdx, %rax
14000fddb:     	jae	0x14000fd80 <.text+0xed80>
14000fddd:     	jmp	0x14000fef5 <.text+0xeef5>
14000fde2:     	movq	0x20(%rsi), %r8
14000fde6:     	testq	%r8, %r8
14000fde9:     	je	0x14000ff25 <.text+0xef25>
14000fdef:     	movl	$0x1, %ebx
14000fdf4:     	movl	$0x1, %edx
14000fdf9:     	leaq	0xd971(%rip), %rcx      # 0x14001d771
14000fe00:     	callq	0x140015b40 <.text+0x14b40>
14000fe05:     	testb	%al, %al
14000fe07:     	je	0x14000fcea <.text+0xecea>
14000fe0d:     	jmp	0x14000ff27 <.text+0xef27>
14000fe12:     	incq	%r9
14000fe15:     	movq	%r9, 0x10(%rsi)
14000fe19:     	incq	%rax
14000fe1c:     	je	0x14000fef5 <.text+0xeef5>
14000fe22:     	cmpq	$-0x1, %rax
14000fe26:     	je	0x14000fef5 <.text+0xeef5>
14000fe2c:     	nopl	(%rax)
14000fe30:     	movq	%rdi, %rcx
14000fe33:     	movq	%rsi, %rdx
14000fe36:     	callq	0x14000edf0 <.text+0xddf0>
14000fe3b:     	cmpq	$0x0, 0x20(%rsp)
14000fe41:     	je	0x14000fea0 <.text+0xeea0>
14000fe43:     	movups	0x20(%rsp), %xmm0
14000fe48:     	movups	0x30(%rsp), %xmm1
14000fe4d:     	movaps	%xmm1, 0x50(%rsp)
14000fe52:     	movaps	%xmm0, 0x40(%rsp)
14000fe57:     	movq	0x20(%rsi), %rbx
14000fe5b:     	testq	%rbx, %rbx
14000fe5e:     	je	0x14000fe8b <.text+0xee8b>
14000fe60:     	movq	%r15, %rcx
14000fe63:     	movq	%rbx, %rdx
14000fe66:     	callq	0x14000e310 <.text+0xd310>
14000fe6b:     	testb	%al, %al
14000fe6d:     	jne	0x14000ff13 <.text+0xef13>
14000fe73:     	movl	$0x2, %edx
14000fe78:     	movq	%r12, %rcx
14000fe7b:     	movq	%rbx, %r8
14000fe7e:     	callq	0x140015b40 <.text+0x14b40>
14000fe83:     	testb	%al, %al
14000fe85:     	jne	0x14000ff13 <.text+0xef13>
14000fe8b:     	movq	%rsi, %rcx
14000fe8e:     	movb	$0x1, %dl
14000fe90:     	callq	0x140011870 <.text+0x10870>
14000fe95:     	testb	%al, %al
14000fe97:     	je	0x14000fcea <.text+0xecea>
14000fe9d:     	jmp	0x14000ff13 <.text+0xef13>
14000fe9f:     	nop
14000fea0:     	movzbl	0x28(%rsp), %ebx
14000fea5:     	movq	0x20(%rsi), %r8
14000fea9:     	testb	%bl, %bl
14000feab:     	je	0x14000fed1 <.text+0xeed1>
14000fead:     	testq	%r8, %r8
14000feb0:     	je	0x14000fce0 <.text+0xece0>
14000feb6:     	movl	$0x19, %edx
14000febb:     	leaq	0xd896(%rip), %rcx      # 0x14001d758
14000fec2:     	callq	0x140015b40 <.text+0x14b40>
14000fec7:     	testb	%al, %al
14000fec9:     	je	0x14000fce0 <.text+0xece0>
14000fecf:     	jmp	0x14000ff13 <.text+0xef13>
14000fed1:     	testq	%r8, %r8
14000fed4:     	je	0x14000fce0 <.text+0xece0>
14000feda:     	movl	$0x10, %edx
14000fedf:     	leaq	0xd862(%rip), %rcx      # 0x14001d748
14000fee6:     	callq	0x140015b40 <.text+0x14b40>
14000feeb:     	testb	%al, %al
14000feed:     	je	0x14000fce0 <.text+0xece0>
14000fef3:     	jmp	0x14000ff13 <.text+0xef13>
14000fef5:     	movq	0x20(%rsi), %r8
14000fef9:     	testq	%r8, %r8
14000fefc:     	je	0x14000ff1a <.text+0xef1a>
14000fefe:     	leaq	0xd843(%rip), %rcx      # 0x14001d748
14000ff05:     	movl	$0x10, %edx
14000ff0a:     	callq	0x140015b40 <.text+0x14b40>
14000ff0f:     	testb	%al, %al
14000ff11:     	je	0x14000ff1a <.text+0xef1a>
14000ff13:     	movl	$0x1, %ebx
14000ff18:     	jmp	0x14000ff27 <.text+0xef27>
14000ff1a:     	movq	$0x0, (%rsi)
14000ff21:     	movb	$0x0, 0x8(%rsi)
14000ff25:     	xorl	%ebx, %ebx
14000ff27:     	movq	%rbx, %rax
14000ff2a:     	addq	$0x68, %rsp
14000ff2e:     	popq	%rbx
14000ff2f:     	popq	%rbp
14000ff30:     	popq	%rdi
14000ff31:     	popq	%rsi
14000ff32:     	popq	%r12
14000ff34:     	popq	%r13
14000ff36:     	popq	%r14
14000ff38:     	popq	%r15
14000ff3a:     	retq
14000ff3b:     	incq	%rax
14000ff3e:     	movq	%rax, 0x10(%rsi)
14000ff42:     	jmp	0x14000ff25 <.text+0xef25>
14000ff44:     	int3
14000ff45:     	int3
14000ff46:     	int3
14000ff47:     	int3
14000ff48:     	int3
14000ff49:     	int3
14000ff4a:     	int3
14000ff4b:     	int3
14000ff4c:     	int3
14000ff4d:     	int3
14000ff4e:     	int3
14000ff4f:     	int3
14000ff50:     	pushq	%r14
14000ff52:     	pushq	%rsi
14000ff53:     	pushq	%rdi
14000ff54:     	pushq	%rbx
14000ff55:     	subq	$0x28, %rsp
14000ff59:     	movq	(%rcx), %rax
14000ff5c:     	testq	%rax, %rax
14000ff5f:     	je	0x14000ffba <.text+0xefba>
14000ff61:     	movq	%rcx, %rbx
14000ff64:     	xorl	%edi, %edi
14000ff66:     	leaq	0xd80c(%rip), %r14      # 0x14001d779
14000ff6d:     	xorl	%esi, %esi
14000ff6f:     	nop
14000ff70:     	movq	0x10(%rbx), %rcx
14000ff74:     	cmpq	0x8(%rbx), %rcx
14000ff78:     	jae	0x14000ff80 <.text+0xef80>
14000ff7a:     	cmpb	$0x45, (%rax,%rcx)
14000ff7e:     	je	0x14000ffc7 <.text+0xefc7>
14000ff80:     	testq	%rsi, %rsi
14000ff83:     	je	0x14000ff9f <.text+0xef9f>
14000ff85:     	movq	0x20(%rbx), %r8
14000ff89:     	testq	%r8, %r8
14000ff8c:     	je	0x14000ff9f <.text+0xef9f>
14000ff8e:     	movl	$0x2, %edx
14000ff93:     	movq	%r14, %rcx
14000ff96:     	callq	0x140015b40 <.text+0x14b40>
14000ff9b:     	testb	%al, %al
14000ff9d:     	jne	0x14000ffc0 <.text+0xefc0>
14000ff9f:     	movq	%rbx, %rcx
14000ffa2:     	movb	$0x1, %dl
14000ffa4:     	callq	0x140011870 <.text+0x10870>
14000ffa9:     	testb	%al, %al
14000ffab:     	jne	0x14000ffc0 <.text+0xefc0>
14000ffad:     	incq	%rsi
14000ffb0:     	movq	(%rbx), %rax
14000ffb3:     	testq	%rax, %rax
14000ffb6:     	jne	0x14000ff70 <.text+0xef70>
14000ffb8:     	jmp	0x14000ffd0 <.text+0xefd0>
14000ffba:     	xorl	%esi, %esi
14000ffbc:     	xorl	%edi, %edi
14000ffbe:     	jmp	0x14000ffd0 <.text+0xefd0>
14000ffc0:     	movl	$0x1, %edi
14000ffc5:     	jmp	0x14000ffd0 <.text+0xefd0>
14000ffc7:     	incq	%rcx
14000ffca:     	movq	%rcx, 0x10(%rbx)
14000ffce:     	xorl	%edi, %edi
14000ffd0:     	movq	%rdi, %rax
14000ffd3:     	movq	%rsi, %rdx
14000ffd6:     	addq	$0x28, %rsp
14000ffda:     	popq	%rbx
14000ffdb:     	popq	%rdi
14000ffdc:     	popq	%rsi
14000ffdd:     	popq	%r14
14000ffdf:     	retq
14000ffe0:     	pushq	%r14
14000ffe2:     	pushq	%rsi
14000ffe3:     	pushq	%rdi
14000ffe4:     	pushq	%rbx
14000ffe5:     	subq	$0x28, %rsp
14000ffe9:     	movq	(%rcx), %rax
14000ffec:     	testq	%rax, %rax
14000ffef:     	je	0x140010048 <.text+0xf048>
14000fff1:     	movq	%rcx, %rdi
14000fff4:     	xorl	%esi, %esi
14000fff6:     	leaq	0xd77c(%rip), %rbx      # 0x14001d779
14000fffd:     	xorl	%r14d, %r14d
140010000:     	movq	0x10(%rdi), %rcx
140010004:     	cmpq	0x8(%rdi), %rcx
140010008:     	jae	0x140010010 <.text+0xf010>
14001000a:     	cmpb	$0x45, (%rax,%rcx)
14001000e:     	je	0x140010053 <.text+0xf053>
140010010:     	subq	$0x1, %r14
140010014:     	jb	0x140010030 <.text+0xf030>
140010016:     	movq	0x20(%rdi), %r8
14001001a:     	testq	%r8, %r8
14001001d:     	je	0x140010030 <.text+0xf030>
14001001f:     	movl	$0x2, %edx
140010024:     	movq	%rbx, %rcx
140010027:     	callq	0x140015b40 <.text+0x14b40>
14001002c:     	testb	%al, %al
14001002e:     	jne	0x14001004c <.text+0xf04c>
140010030:     	movq	%rdi, %rcx
140010033:     	movb	$0x1, %dl
140010035:     	callq	0x140011870 <.text+0x10870>
14001003a:     	testb	%al, %al
14001003c:     	jne	0x14001004c <.text+0xf04c>
14001003e:     	movq	(%rdi), %rax
140010041:     	testq	%rax, %rax
140010044:     	jne	0x140010000 <.text+0xf000>
140010046:     	jmp	0x14001005c <.text+0xf05c>
140010048:     	xorl	%esi, %esi
14001004a:     	jmp	0x14001005c <.text+0xf05c>
14001004c:     	movl	$0x1, %esi
140010051:     	jmp	0x14001005c <.text+0xf05c>
140010053:     	incq	%rcx
140010056:     	movq	%rcx, 0x10(%rdi)
14001005a:     	xorl	%esi, %esi
14001005c:     	movq	%rsi, %rax
14001005f:     	addq	$0x28, %rsp
140010063:     	popq	%rbx
140010064:     	popq	%rdi
140010065:     	popq	%rsi
140010066:     	popq	%r14
140010068:     	retq
140010069:     	int3
14001006a:     	int3
14001006b:     	int3
14001006c:     	int3
14001006d:     	int3
14001006e:     	int3
14001006f:     	int3
140010070:     	pushq	%r14
140010072:     	pushq	%rsi
140010073:     	pushq	%rdi
140010074:     	pushq	%rbx
140010075:     	subq	$0x28, %rsp
140010079:     	movq	(%rcx), %rax
14001007c:     	testq	%rax, %rax
14001007f:     	je	0x1400100d8 <.text+0xf0d8>
140010081:     	movq	%rcx, %rbx
140010084:     	xorl	%edi, %edi
140010086:     	leaq	0xd6ec(%rip), %r14      # 0x14001d779
14001008d:     	xorl	%esi, %esi
14001008f:     	nop
140010090:     	movq	0x10(%rbx), %rcx
140010094:     	cmpq	0x8(%rbx), %rcx
140010098:     	jae	0x1400100a0 <.text+0xf0a0>
14001009a:     	cmpb	$0x45, (%rax,%rcx)
14001009e:     	je	0x1400100e5 <.text+0xf0e5>
1400100a0:     	testq	%rsi, %rsi
1400100a3:     	je	0x1400100bf <.text+0xf0bf>
1400100a5:     	movq	0x20(%rbx), %r8
1400100a9:     	testq	%r8, %r8
1400100ac:     	je	0x1400100bf <.text+0xf0bf>
1400100ae:     	movl	$0x2, %edx
1400100b3:     	movq	%r14, %rcx
1400100b6:     	callq	0x140015b40 <.text+0x14b40>
1400100bb:     	testb	%al, %al
1400100bd:     	jne	0x1400100de <.text+0xf0de>
1400100bf:     	movq	%rbx, %rcx
1400100c2:     	callq	0x1400109d0 <.text+0xf9d0>
1400100c7:     	testb	%al, %al
1400100c9:     	jne	0x1400100de <.text+0xf0de>
1400100cb:     	incq	%rsi
1400100ce:     	movq	(%rbx), %rax
1400100d1:     	testq	%rax, %rax
1400100d4:     	jne	0x140010090 <.text+0xf090>
1400100d6:     	jmp	0x1400100ee <.text+0xf0ee>
1400100d8:     	xorl	%esi, %esi
1400100da:     	xorl	%edi, %edi
1400100dc:     	jmp	0x1400100ee <.text+0xf0ee>
1400100de:     	movl	$0x1, %edi
1400100e3:     	jmp	0x1400100ee <.text+0xf0ee>
1400100e5:     	incq	%rcx
1400100e8:     	movq	%rcx, 0x10(%rbx)
1400100ec:     	xorl	%edi, %edi
1400100ee:     	movq	%rdi, %rax
1400100f1:     	movq	%rsi, %rdx
1400100f4:     	addq	$0x28, %rsp
1400100f8:     	popq	%rbx
1400100f9:     	popq	%rdi
1400100fa:     	popq	%rsi
1400100fb:     	popq	%r14
1400100fd:     	retq
1400100fe:     	int3
1400100ff:     	int3
140010100:     	pushq	%r14
140010102:     	pushq	%rsi
140010103:     	pushq	%rdi
140010104:     	pushq	%rbx
140010105:     	subq	$0x28, %rsp
140010109:     	movq	(%rcx), %rax
14001010c:     	testq	%rax, %rax
14001010f:     	je	0x140010166 <.text+0xf166>
140010111:     	movq	%rcx, %rdi
140010114:     	xorl	%esi, %esi
140010116:     	leaq	0xd65c(%rip), %rbx      # 0x14001d779
14001011d:     	xorl	%r14d, %r14d
140010120:     	movq	0x10(%rdi), %rcx
140010124:     	cmpq	0x8(%rdi), %rcx
140010128:     	jae	0x140010130 <.text+0xf130>
14001012a:     	cmpb	$0x45, (%rax,%rcx)
14001012e:     	je	0x140010171 <.text+0xf171>
140010130:     	subq	$0x1, %r14
140010134:     	jb	0x140010150 <.text+0xf150>
140010136:     	movq	0x20(%rdi), %r8
14001013a:     	testq	%r8, %r8
14001013d:     	je	0x140010150 <.text+0xf150>
14001013f:     	movl	$0x2, %edx
140010144:     	movq	%rbx, %rcx
140010147:     	callq	0x140015b40 <.text+0x14b40>
14001014c:     	testb	%al, %al
14001014e:     	jne	0x14001016a <.text+0xf16a>
140010150:     	movq	%rdi, %rcx
140010153:     	callq	0x1400108a0 <.text+0xf8a0>
140010158:     	testb	%al, %al
14001015a:     	jne	0x14001016a <.text+0xf16a>
14001015c:     	movq	(%rdi), %rax
14001015f:     	testq	%rax, %rax
140010162:     	jne	0x140010120 <.text+0xf120>
140010164:     	jmp	0x14001017a <.text+0xf17a>
140010166:     	xorl	%esi, %esi
140010168:     	jmp	0x14001017a <.text+0xf17a>
14001016a:     	movl	$0x1, %esi
14001016f:     	jmp	0x14001017a <.text+0xf17a>
140010171:     	incq	%rcx
140010174:     	movq	%rcx, 0x10(%rdi)
140010178:     	xorl	%esi, %esi
14001017a:     	movq	%rsi, %rax
14001017d:     	addq	$0x28, %rsp
140010181:     	popq	%rbx
140010182:     	popq	%rdi
140010183:     	popq	%rsi
140010184:     	popq	%r14
140010186:     	retq
140010187:     	int3
140010188:     	int3
140010189:     	int3
14001018a:     	int3
14001018b:     	int3
14001018c:     	int3
14001018d:     	int3
14001018e:     	int3
14001018f:     	int3
140010190:     	pushq	%r14
140010192:     	pushq	%rsi
140010193:     	pushq	%rdi
140010194:     	pushq	%rbp
140010195:     	pushq	%rbx
140010196:     	subq	$0x90, %rsp
14001019d:     	movq	%rcx, %rsi
1400101a0:     	movq	(%rcx), %rcx
1400101a3:     	testq	%rcx, %rcx
1400101a6:     	je	0x140010644 <.text+0xf644>
1400101ac:     	movl	0x18(%rsi), %eax
1400101af:     	incl	%eax
1400101b1:     	movl	%eax, 0x18(%rsi)
1400101b4:     	cmpl	$0x1f5, %eax            # imm = 0x1F5
1400101b9:     	jae	0x140010235 <.text+0xf235>
1400101bb:     	movq	0x8(%rsi), %r8
1400101bf:     	movq	0x10(%rsi), %rax
1400101c3:     	cmpq	%r8, %rax
1400101c6:     	jae	0x140010723 <.text+0xf723>
1400101cc:     	movl	%edx, %ebp
1400101ce:     	movzbl	(%rcx,%rax), %ebx
1400101d2:     	leaq	0x1(%rax), %rdx
1400101d6:     	movq	%rdx, 0x10(%rsi)
1400101da:     	leal	-0x42(%rbx), %r9d
1400101de:     	cmpl	$0x17, %r9d
1400101e2:     	ja	0x140010723 <.text+0xf723>
1400101e8:     	leaq	0xd991(%rip), %r10      # 0x14001db80
1400101ef:     	movslq	(%r10,%r9,4), %r9
1400101f3:     	addq	%r10, %r9
1400101f6:     	jmpq	*%r9
1400101f9:     	cmpq	%r8, %rdx
1400101fc:     	jae	0x140010689 <.text+0xf689>
140010202:     	cmpb	$0x73, (%rcx,%rdx)
140010206:     	jne	0x140010689 <.text+0xf689>
14001020c:     	leaq	0x2(%rax), %r9
140010210:     	movq	%r9, 0x10(%rsi)
140010214:     	cmpq	%r8, %r9
140010217:     	jae	0x140010446 <.text+0xf446>
14001021d:     	cmpb	$0x5f, (%rcx,%r9)
140010222:     	jne	0x140010446 <.text+0xf446>
140010228:     	addq	$0x3, %rax
14001022c:     	movq	%rax, 0x10(%rsi)
140010230:     	jmp	0x140010689 <.text+0xf689>
140010235:     	movq	0x20(%rsi), %r8
140010239:     	testq	%r8, %r8
14001023c:     	je	0x14001025a <.text+0xf25a>
14001023e:     	leaq	0xd513(%rip), %rcx      # 0x14001d758
140010245:     	movl	$0x19, %edx
14001024a:     	callq	0x140015b40 <.text+0x14b40>
14001024f:     	movb	$0x1, %dil
140010252:     	testb	%al, %al
140010254:     	jne	0x140010751 <.text+0xf751>
14001025a:     	movq	$0x0, (%rsi)
140010261:     	movb	$0x1, 0x8(%rsi)
140010265:     	jmp	0x14001074f <.text+0xf74f>
14001026a:     	movq	%rsi, %rcx
14001026d:     	movl	%ebp, %edx
14001026f:     	callq	0x14000f3b0 <.text+0xe3b0>
140010274:     	movb	$0x1, %dil
140010277:     	jmp	0x140010714 <.text+0xf714>
14001027c:     	leaq	0x20(%rsp), %rcx
140010281:     	movq	%rsi, %rdx
140010284:     	callq	0x14000ecc0 <.text+0xdcc0>
140010289:     	cmpb	$0x0, 0x20(%rsp)
14001028e:     	je	0x1400104b0 <.text+0xf4b0>
140010294:     	movzbl	0x21(%rsp), %ebx
140010299:     	movq	0x20(%rsi), %r8
14001029d:     	testb	%bl, %bl
14001029f:     	je	0x1400105e4 <.text+0xf5e4>
1400102a5:     	testq	%r8, %r8
1400102a8:     	je	0x140010605 <.text+0xf605>
1400102ae:     	leaq	0xd4a3(%rip), %rcx      # 0x14001d758
1400102b5:     	movl	$0x19, %edx
1400102ba:     	jmp	0x1400105f5 <.text+0xf5f5>
1400102bf:     	movq	%rsi, %rcx
1400102c2:     	movl	%ebp, %edx
1400102c4:     	callq	0x140010190 <.text+0xf190>
1400102c9:     	movb	$0x1, %dil
1400102cc:     	testb	%al, %al
1400102ce:     	jne	0x140010751 <.text+0xf751>
1400102d4:     	testb	%bpl, %bpl
1400102d7:     	je	0x1400102fb <.text+0xf2fb>
1400102d9:     	movq	0x20(%rsi), %r8
1400102dd:     	testq	%r8, %r8
1400102e0:     	je	0x1400102fb <.text+0xf2fb>
1400102e2:     	leaq	0xd037(%rip), %rcx      # 0x14001d320
1400102e9:     	movl	$0x2, %edx
1400102ee:     	callq	0x140015b40 <.text+0x14b40>
1400102f3:     	testb	%al, %al
1400102f5:     	jne	0x140010751 <.text+0xf751>
1400102fb:     	movq	0x20(%rsi), %r8
1400102ff:     	testq	%r8, %r8
140010302:     	je	0x14001031d <.text+0xf31d>
140010304:     	leaq	0xd0d1(%rip), %rcx      # 0x14001d3dc
14001030b:     	movl	$0x1, %edx
140010310:     	callq	0x140015b40 <.text+0x14b40>
140010315:     	testb	%al, %al
140010317:     	jne	0x140010751 <.text+0xf751>
14001031d:     	movq	%rsi, %rcx
140010320:     	callq	0x140010100 <.text+0xf100>
140010325:     	testq	%rax, %rax
140010328:     	jne	0x140010751 <.text+0xf751>
14001032e:     	jmp	0x1400106fa <.text+0xf6fa>
140010333:     	movq	%rsi, %rcx
140010336:     	callq	0x14000ed90 <.text+0xdd90>
14001033b:     	movq	%rax, %rbx
14001033e:     	testb	$0x1, %bl
140010341:     	jne	0x14001041c <.text+0xf41c>
140010347:     	movq	%rsi, %rcx
14001034a:     	movl	%ebp, %edx
14001034c:     	callq	0x140010190 <.text+0xf190>
140010351:     	movb	$0x1, %dil
140010354:     	testb	%al, %al
140010356:     	jne	0x140010751 <.text+0xf751>
14001035c:     	cmpq	$0x0, (%rsi)
140010360:     	je	0x140010614 <.text+0xf614>
140010366:     	leaq	0x20(%rsp), %rcx
14001036b:     	movq	%rsi, %rdx
14001036e:     	callq	0x14000ecc0 <.text+0xdcc0>
140010373:     	cmpb	$0x0, 0x20(%rsp)
140010378:     	jne	0x140010294 <.text+0xf294>
14001037e:     	cmpq	$0x0, (%rsi)
140010382:     	je	0x140010644 <.text+0xf644>
140010388:     	movq	0x28(%rsp), %r14
14001038d:     	leaq	0x20(%rsp), %rcx
140010392:     	movq	%rsi, %rdx
140010395:     	callq	0x14000edf0 <.text+0xddf0>
14001039a:     	cmpq	$0x0, 0x20(%rsp)
1400103a0:     	je	0x1400105d3 <.text+0xf5d3>
1400103a6:     	shrq	$0x20, %rbx
1400103aa:     	movups	0x20(%rsp), %xmm0
1400103af:     	movups	0x30(%rsp), %xmm1
1400103b4:     	movaps	%xmm1, 0x50(%rsp)
1400103b9:     	movaps	%xmm0, 0x40(%rsp)
1400103be:     	cmpl	$0x110000, %ebx         # imm = 0x110000
1400103c4:     	jne	0x140010761 <.text+0xf761>
1400103ca:     	movq	0x48(%rsp), %rax
1400103cf:     	orq	0x58(%rsp), %rax
1400103d4:     	je	0x140010718 <.text+0xf718>
1400103da:     	movq	0x20(%rsi), %r8
1400103de:     	testq	%r8, %r8
1400103e1:     	je	0x140010718 <.text+0xf718>
1400103e7:     	leaq	0xcf32(%rip), %rcx      # 0x14001d320
1400103ee:     	movl	$0x2, %edx
1400103f3:     	callq	0x140015b40 <.text+0x14b40>
1400103f8:     	testb	%al, %al
1400103fa:     	jne	0x140010751 <.text+0xf751>
140010400:     	movq	0x20(%rsi), %rdx
140010404:     	testq	%rdx, %rdx
140010407:     	je	0x140010718 <.text+0xf718>
14001040d:     	leaq	0x40(%rsp), %rcx
140010412:     	callq	0x14000e310 <.text+0xd310>
140010417:     	jmp	0x140010714 <.text+0xf714>
14001041c:     	movq	0x20(%rsi), %r8
140010420:     	andl	$0x100, %ebx            # imm = 0x100
140010426:     	jne	0x14001057b <.text+0xf57b>
14001042c:     	testq	%r8, %r8
14001042f:     	je	0x14001059c <.text+0xf59c>
140010435:     	leaq	0xd30c(%rip), %rcx      # 0x14001d748
14001043c:     	movl	$0x10, %edx
140010441:     	jmp	0x14001058c <.text+0xf58c>
140010446:     	xorl	%eax, %eax
140010448:     	movl	$0x3e, %r10d
14001044e:     	cmpq	%r8, %r9
140010451:     	jae	0x140010723 <.text+0xf723>
140010457:     	movzbl	(%rcx,%r9), %edx
14001045c:     	cmpb	$0x5f, %dl
14001045f:     	je	0x14001066f <.text+0xf66f>
140010465:     	leal	-0x30(%rdx), %r11d
140010469:     	cmpb	$0xa, %r11b
14001046d:     	jb	0x140010492 <.text+0xf492>
14001046f:     	leal	-0x61(%rdx), %r11d
140010473:     	cmpb	$0x1a, %r11b
140010477:     	jae	0x14001047e <.text+0xf47e>
140010479:     	addb	$-0x57, %dl
14001047c:     	jmp	0x14001048f <.text+0xf48f>
14001047e:     	leal	-0x41(%rdx), %r11d
140010482:     	cmpb	$0x1a, %r11b
140010486:     	jae	0x140010723 <.text+0xf723>
14001048c:     	addb	$-0x1d, %dl
14001048f:     	movl	%edx, %r11d
140010492:     	incq	%r9
140010495:     	movq	%r9, 0x10(%rsi)
140010499:     	mulq	%r10
14001049c:     	jo	0x140010723 <.text+0xf723>
1400104a2:     	movzbl	%r11b, %edx
1400104a6:     	addq	%rdx, %rax
1400104a9:     	jae	0x14001044e <.text+0xf44e>
1400104ab:     	jmp	0x140010723 <.text+0xf723>
1400104b0:     	movq	0x28(%rsp), %rax
1400104b5:     	movq	%rax, 0x68(%rsp)
1400104ba:     	cmpq	$0x0, (%rsi)
1400104be:     	je	0x1400105ae <.text+0xf5ae>
1400104c4:     	leaq	0x20(%rsp), %rcx
1400104c9:     	movq	%rsi, %rdx
1400104cc:     	callq	0x14000edf0 <.text+0xddf0>
1400104d1:     	cmpq	$0x0, 0x20(%rsp)
1400104d7:     	je	0x1400105d3 <.text+0xf5d3>
1400104dd:     	movups	0x20(%rsp), %xmm0
1400104e2:     	movups	0x30(%rsp), %xmm1
1400104e7:     	movaps	%xmm1, 0x80(%rsp)
1400104ef:     	movaps	%xmm0, 0x70(%rsp)
1400104f4:     	movq	0x20(%rsi), %rdx
1400104f8:     	testq	%rdx, %rdx
1400104fb:     	je	0x140010718 <.text+0xf718>
140010501:     	leaq	0x70(%rsp), %rcx
140010506:     	callq	0x14000e310 <.text+0xd310>
14001050b:     	movb	$0x1, %dil
14001050e:     	testb	%al, %al
140010510:     	jne	0x140010751 <.text+0xf751>
140010516:     	movq	0x20(%rsi), %rcx
14001051a:     	testq	%rcx, %rcx
14001051d:     	je	0x140010718 <.text+0xf718>
140010523:     	testb	$0x4, 0x34(%rcx)
140010527:     	jne	0x140010718 <.text+0xf718>
14001052d:     	leaq	0xd247(%rip), %rdx      # 0x14001d77b
140010534:     	movl	$0x1, %r8d
14001053a:     	callq	0x140015330 <.text+0x14330>
14001053f:     	testb	%al, %al
140010541:     	jne	0x140010573 <.text+0xf573>
140010543:     	movq	0x20(%rsi), %rdx
140010547:     	leaq	0x68(%rsp), %rcx
14001054c:     	callq	0x1400177a0 <.text+0x167a0>
140010551:     	testb	%al, %al
140010553:     	jne	0x140010573 <.text+0xf573>
140010555:     	movq	0x20(%rsi), %rcx
140010559:     	leaq	0xd21c(%rip), %rdx      # 0x14001d77c
140010560:     	movl	$0x1, %r8d
140010566:     	callq	0x140015330 <.text+0x14330>
14001056b:     	testb	%al, %al
14001056d:     	je	0x140010718 <.text+0xf718>
140010573:     	movb	$0x1, %dil
140010576:     	jmp	0x140010751 <.text+0xf751>
14001057b:     	testq	%r8, %r8
14001057e:     	je	0x14001059c <.text+0xf59c>
140010580:     	leaq	0xd1d1(%rip), %rcx      # 0x14001d758
140010587:     	movl	$0x19, %edx
14001058c:     	callq	0x140015b40 <.text+0x14b40>
140010591:     	movb	$0x1, %dil
140010594:     	testb	%al, %al
140010596:     	jne	0x140010751 <.text+0xf751>
14001059c:     	shrl	$0x8, %ebx
14001059f:     	movq	$0x0, (%rsi)
1400105a6:     	movb	%bl, 0x8(%rsi)
1400105a9:     	jmp	0x14001074f <.text+0xf74f>
1400105ae:     	movq	0x20(%rsi), %r8
1400105b2:     	testq	%r8, %r8
1400105b5:     	je	0x14001074f <.text+0xf74f>
1400105bb:     	leaq	0xd1af(%rip), %rcx      # 0x14001d771
1400105c2:     	movl	$0x1, %edx
1400105c7:     	callq	0x140015b40 <.text+0x14b40>
1400105cc:     	movl	%eax, %edi
1400105ce:     	jmp	0x140010751 <.text+0xf751>
1400105d3:     	movzbl	0x28(%rsp), %ebx
1400105d8:     	movq	0x20(%rsi), %r8
1400105dc:     	testb	%bl, %bl
1400105de:     	jne	0x1400102a5 <.text+0xf2a5>
1400105e4:     	testq	%r8, %r8
1400105e7:     	je	0x140010605 <.text+0xf605>
1400105e9:     	leaq	0xd158(%rip), %rcx      # 0x14001d748
1400105f0:     	movl	$0x10, %edx
1400105f5:     	callq	0x140015b40 <.text+0x14b40>
1400105fa:     	movb	$0x1, %dil
1400105fd:     	testb	%al, %al
1400105ff:     	jne	0x140010751 <.text+0xf751>
140010605:     	movq	$0x0, (%rsi)
14001060c:     	movb	%bl, 0x8(%rsi)
14001060f:     	jmp	0x14001074f <.text+0xf74f>
140010614:     	movq	0x20(%rsi), %r8
140010618:     	testq	%r8, %r8
14001061b:     	je	0x14001074f <.text+0xf74f>
140010621:     	leaq	0xccf8(%rip), %rcx      # 0x14001d320
140010628:     	movl	$0x2, %edx
14001062d:     	callq	0x140015b40 <.text+0x14b40>
140010632:     	testb	%al, %al
140010634:     	jne	0x140010751 <.text+0xf751>
14001063a:     	cmpq	$0x0, (%rsi)
14001063e:     	jne	0x140010366 <.text+0xf366>
140010644:     	movq	0x20(%rsi), %r8
140010648:     	testq	%r8, %r8
14001064b:     	je	0x14001074f <.text+0xf74f>
140010651:     	leaq	0xd119(%rip), %rcx      # 0x14001d771
140010658:     	movl	$0x1, %edx
14001065d:     	addq	$0x90, %rsp
140010664:     	popq	%rbx
140010665:     	popq	%rbp
140010666:     	popq	%rdi
140010667:     	popq	%rsi
140010668:     	popq	%r14
14001066a:     	jmp	0x140015b40 <.text+0x14b40>
14001066f:     	incq	%r9
140010672:     	movq	%r9, 0x10(%rsi)
140010676:     	incq	%rax
140010679:     	je	0x140010723 <.text+0xf723>
14001067f:     	cmpq	$-0x1, %rax
140010683:     	je	0x140010723 <.text+0xf723>
140010689:     	movq	%rsi, %rcx
14001068c:     	callq	0x14000f020 <.text+0xe020>
140010691:     	movq	0x20(%rsi), %r8
140010695:     	testq	%r8, %r8
140010698:     	je	0x1400106b6 <.text+0xf6b6>
14001069a:     	leaq	0xcd3b(%rip), %rcx      # 0x14001d3dc
1400106a1:     	movl	$0x1, %edx
1400106a6:     	callq	0x140015b40 <.text+0x14b40>
1400106ab:     	movb	$0x1, %dil
1400106ae:     	testb	%al, %al
1400106b0:     	jne	0x140010751 <.text+0xf751>
1400106b6:     	movq	%rsi, %rcx
1400106b9:     	callq	0x1400109d0 <.text+0xf9d0>
1400106be:     	movb	$0x1, %dil
1400106c1:     	testb	%al, %al
1400106c3:     	jne	0x140010751 <.text+0xf751>
1400106c9:     	cmpb	$0x4d, %bl
1400106cc:     	je	0x1400106fa <.text+0xf6fa>
1400106ce:     	movq	0x20(%rsi), %r8
1400106d2:     	testq	%r8, %r8
1400106d5:     	je	0x1400106ec <.text+0xf6ec>
1400106d7:     	leaq	0xd0af(%rip), %rcx      # 0x14001d78d
1400106de:     	movl	$0x4, %edx
1400106e3:     	callq	0x140015b40 <.text+0x14b40>
1400106e8:     	testb	%al, %al
1400106ea:     	jne	0x140010751 <.text+0xf751>
1400106ec:     	movq	%rsi, %rcx
1400106ef:     	xorl	%edx, %edx
1400106f1:     	callq	0x140010190 <.text+0xf190>
1400106f6:     	testb	%al, %al
1400106f8:     	jne	0x140010751 <.text+0xf751>
1400106fa:     	movq	0x20(%rsi), %r8
1400106fe:     	testq	%r8, %r8
140010701:     	je	0x140010718 <.text+0xf718>
140010703:     	leaq	0xccd1(%rip), %rcx      # 0x14001d3db
14001070a:     	movl	$0x1, %edx
14001070f:     	callq	0x140015b40 <.text+0x14b40>
140010714:     	testb	%al, %al
140010716:     	jne	0x140010751 <.text+0xf751>
140010718:     	cmpq	$0x0, (%rsi)
14001071c:     	je	0x14001074f <.text+0xf74f>
14001071e:     	decl	0x18(%rsi)
140010721:     	jmp	0x14001074f <.text+0xf74f>
140010723:     	movq	0x20(%rsi), %r8
140010727:     	testq	%r8, %r8
14001072a:     	je	0x140010744 <.text+0xf744>
14001072c:     	leaq	0xd015(%rip), %rcx      # 0x14001d748
140010733:     	movl	$0x10, %edx
140010738:     	callq	0x140015b40 <.text+0x14b40>
14001073d:     	movb	$0x1, %dil
140010740:     	testb	%al, %al
140010742:     	jne	0x140010751 <.text+0xf751>
140010744:     	movq	$0x0, (%rsi)
14001074b:     	movb	$0x0, 0x8(%rsi)
14001074f:     	xorl	%edi, %edi
140010751:     	movl	%edi, %eax
140010753:     	addq	$0x90, %rsp
14001075a:     	popq	%rbx
14001075b:     	popq	%rbp
14001075c:     	popq	%rdi
14001075d:     	popq	%rsi
14001075e:     	popq	%r14
140010760:     	retq
140010761:     	movq	0x20(%rsi), %r8
140010765:     	testq	%r8, %r8
140010768:     	je	0x14001077f <.text+0xf77f>
14001076a:     	leaq	0xd00c(%rip), %rcx      # 0x14001d77d
140010771:     	movl	$0x3, %edx
140010776:     	callq	0x140015b40 <.text+0x14b40>
14001077b:     	testb	%al, %al
14001077d:     	jne	0x140010751 <.text+0xf751>
14001077f:     	cmpl	$0x43, %ebx
140010782:     	je	0x1400107a0 <.text+0xf7a0>
140010784:     	cmpl	$0x53, %ebx
140010787:     	jne	0x1400107bc <.text+0xf7bc>
140010789:     	movq	0x20(%rsi), %r8
14001078d:     	testq	%r8, %r8
140010790:     	je	0x1400107db <.text+0xf7db>
140010792:     	leaq	0xcfee(%rip), %rcx      # 0x14001d787
140010799:     	movl	$0x4, %edx
14001079e:     	jmp	0x1400107b5 <.text+0xf7b5>
1400107a0:     	movq	0x20(%rsi), %r8
1400107a4:     	testq	%r8, %r8
1400107a7:     	je	0x1400107db <.text+0xf7db>
1400107a9:     	leaq	0xcfd0(%rip), %rcx      # 0x14001d780
1400107b0:     	movl	$0x7, %edx
1400107b5:     	callq	0x140015b40 <.text+0x14b40>
1400107ba:     	jmp	0x1400107d3 <.text+0xf7d3>
1400107bc:     	movq	0x20(%rsi), %rdx
1400107c0:     	movl	%ebx, 0x20(%rsp)
1400107c4:     	testq	%rdx, %rdx
1400107c7:     	je	0x1400107db <.text+0xf7db>
1400107c9:     	leaq	0x20(%rsp), %rcx
1400107ce:     	callq	0x140015c80 <.text+0x14c80>
1400107d3:     	testb	%al, %al
1400107d5:     	jne	0x140010751 <.text+0xf751>
1400107db:     	movq	0x48(%rsp), %rax
1400107e0:     	orq	0x58(%rsp), %rax
1400107e5:     	movq	0x20(%rsi), %r8
1400107e9:     	jne	0x14001084a <.text+0xf84a>
1400107eb:     	testq	%r8, %r8
1400107ee:     	je	0x140010718 <.text+0xf718>
1400107f4:     	leaq	0xcf91(%rip), %rcx      # 0x14001d78c
1400107fb:     	movl	$0x1, %edx
140010800:     	callq	0x140015b40 <.text+0x14b40>
140010805:     	testb	%al, %al
140010807:     	jne	0x140010751 <.text+0xf751>
14001080d:     	movq	0x20(%rsi), %rdx
140010811:     	movq	%r14, 0x20(%rsp)
140010816:     	testq	%rdx, %rdx
140010819:     	je	0x140010718 <.text+0xf718>
14001081f:     	leaq	0x20(%rsp), %rcx
140010824:     	callq	0x140017e10 <.text+0x16e10>
140010829:     	testb	%al, %al
14001082b:     	jne	0x140010751 <.text+0xf751>
140010831:     	movq	0x20(%rsi), %r8
140010835:     	testq	%r8, %r8
140010838:     	je	0x140010718 <.text+0xf718>
14001083e:     	leaq	0xccf5(%rip), %rcx      # 0x14001d53a
140010845:     	jmp	0x14001070a <.text+0xf70a>
14001084a:     	testq	%r8, %r8
14001084d:     	je	0x140010718 <.text+0xf718>
140010853:     	leaq	0xcf31(%rip), %rcx      # 0x14001d78b
14001085a:     	movl	$0x1, %edx
14001085f:     	callq	0x140015b40 <.text+0x14b40>
140010864:     	testb	%al, %al
140010866:     	jne	0x140010751 <.text+0xf751>
14001086c:     	movq	0x20(%rsi), %rdx
140010870:     	testq	%rdx, %rdx
140010873:     	je	0x140010718 <.text+0xf718>
140010879:     	leaq	0x40(%rsp), %rcx
14001087e:     	callq	0x14000e310 <.text+0xd310>
140010883:     	testb	%al, %al
140010885:     	jne	0x140010751 <.text+0xf751>
14001088b:     	movq	0x20(%rsi), %r8
14001088f:     	testq	%r8, %r8
140010892:     	jne	0x1400107f4 <.text+0xf7f4>
140010898:     	jmp	0x140010718 <.text+0xf718>
14001089d:     	int3
14001089e:     	int3
14001089f:     	int3
1400108a0:     	pushq	%rsi
1400108a1:     	subq	$0x20, %rsp
1400108a5:     	movq	%rcx, %rsi
1400108a8:     	movq	(%rcx), %rcx
1400108ab:     	testq	%rcx, %rcx
1400108ae:     	je	0x140010902 <.text+0xf902>
1400108b0:     	movq	0x8(%rsi), %r8
1400108b4:     	movq	0x10(%rsi), %rax
1400108b8:     	cmpq	%r8, %rax
1400108bb:     	jae	0x140010902 <.text+0xf902>
1400108bd:     	cmpb	$0x4c, (%rcx,%rax)
1400108c1:     	jne	0x1400108e6 <.text+0xf8e6>
1400108c3:     	leaq	0x1(%rax), %r9
1400108c7:     	movq	%r9, 0x10(%rsi)
1400108cb:     	cmpq	%r8, %r9
1400108ce:     	jae	0x14001090f <.text+0xf90f>
1400108d0:     	cmpb	$0x5f, (%rcx,%r9)
1400108d5:     	jne	0x14001090f <.text+0xf90f>
1400108d7:     	addq	$0x2, %rax
1400108db:     	movq	%rax, 0x10(%rsi)
1400108df:     	xorl	%eax, %eax
1400108e1:     	jmp	0x1400109b8 <.text+0xf9b8>
1400108e6:     	cmpb	$0x4b, (%rcx,%rax)
1400108ea:     	jne	0x140010902 <.text+0xf902>
1400108ec:     	incq	%rax
1400108ef:     	movq	%rax, 0x10(%rsi)
1400108f3:     	movq	%rsi, %rcx
1400108f6:     	xorl	%edx, %edx
1400108f8:     	addq	$0x20, %rsp
1400108fc:     	popq	%rsi
1400108fd:     	jmp	0x140011870 <.text+0x10870>
140010902:     	movq	%rsi, %rcx
140010905:     	addq	$0x20, %rsp
140010909:     	popq	%rsi
14001090a:     	jmp	0x1400109d0 <.text+0xf9d0>
14001090f:     	xorl	%eax, %eax
140010911:     	movl	$0x3e, %r10d
140010917:     	nopw	(%rax,%rax)
140010920:     	cmpq	%r8, %r9
140010923:     	jae	0x140010983 <.text+0xf983>
140010925:     	movzbl	(%rcx,%r9), %edx
14001092a:     	cmpb	$0x5f, %dl
14001092d:     	je	0x140010977 <.text+0xf977>
14001092f:     	leal	-0x30(%rdx), %r11d
140010933:     	cmpb	$0xa, %r11b
140010937:     	jb	0x140010960 <.text+0xf960>
140010939:     	leal	-0x61(%rdx), %r11d
14001093d:     	cmpb	$0x1a, %r11b
140010941:     	jae	0x140010950 <.text+0xf950>
140010943:     	addb	$-0x57, %dl
140010946:     	jmp	0x14001095d <.text+0xf95d>
140010948:     	nopl	(%rax,%rax)
140010950:     	leal	-0x41(%rdx), %r11d
140010954:     	cmpb	$0x1a, %r11b
140010958:     	jae	0x140010983 <.text+0xf983>
14001095a:     	addb	$-0x1d, %dl
14001095d:     	movl	%edx, %r11d
140010960:     	incq	%r9
140010963:     	movq	%r9, 0x10(%rsi)
140010967:     	mulq	%r10
14001096a:     	jo	0x140010983 <.text+0xf983>
14001096c:     	movzbl	%r11b, %edx
140010970:     	addq	%rdx, %rax
140010973:     	jae	0x140010920 <.text+0xf920>
140010975:     	jmp	0x140010983 <.text+0xf983>
140010977:     	incq	%r9
14001097a:     	movq	%r9, 0x10(%rsi)
14001097e:     	incq	%rax
140010981:     	jne	0x1400109b8 <.text+0xf9b8>
140010983:     	movq	0x20(%rsi), %r8
140010987:     	testq	%r8, %r8
14001098a:     	je	0x1400109a5 <.text+0xf9a5>
14001098c:     	leaq	0xcdb5(%rip), %rcx      # 0x14001d748
140010993:     	movl	$0x10, %edx
140010998:     	callq	0x140015b40 <.text+0x14b40>
14001099d:     	movl	%eax, %ecx
14001099f:     	movb	$0x1, %al
1400109a1:     	testb	%cl, %cl
1400109a3:     	jne	0x1400109b2 <.text+0xf9b2>
1400109a5:     	movq	$0x0, (%rsi)
1400109ac:     	movb	$0x0, 0x8(%rsi)
1400109b0:     	xorl	%eax, %eax
1400109b2:     	addq	$0x20, %rsp
1400109b6:     	popq	%rsi
1400109b7:     	retq
1400109b8:     	movq	%rsi, %rcx
1400109bb:     	movq	%rax, %rdx
1400109be:     	addq	$0x20, %rsp
1400109c2:     	popq	%rsi
1400109c3:     	jmp	0x14000f670 <.text+0xe670>
1400109c8:     	int3
1400109c9:     	int3
1400109ca:     	int3
1400109cb:     	int3
1400109cc:     	int3
1400109cd:     	int3
1400109ce:     	int3
1400109cf:     	int3
1400109d0:     	pushq	%r15
1400109d2:     	pushq	%r14
1400109d4:     	pushq	%r13
1400109d6:     	pushq	%r12
1400109d8:     	pushq	%rsi
1400109d9:     	pushq	%rdi
1400109da:     	pushq	%rbx
1400109db:     	subq	$0x30, %rsp
1400109df:     	movq	%rcx, %rsi
1400109e2:     	movq	(%rcx), %r15
1400109e5:     	testq	%r15, %r15
1400109e8:     	je	0x140010af0 <.text+0xfaf0>
1400109ee:     	movq	0x8(%rsi), %r12
1400109f2:     	movq	0x10(%rsi), %rbx
1400109f6:     	cmpq	%r12, %rbx
1400109f9:     	jae	0x140010b1d <.text+0xfb1d>
1400109ff:     	movzbl	(%r15,%rbx), %r14d
140010a04:     	leaq	0x1(%rbx), %r13
140010a08:     	movq	%r13, 0x10(%rsi)
140010a0c:     	leal	-0x61(%r14), %eax
140010a10:     	cmpb	$0x19, %al
140010a12:     	ja	0x140010a25 <.text+0xfa25>
140010a14:     	movzbl	%al, %ecx
140010a17:     	movl	$0x3bcfbbf, %edx        # imm = 0x3BCFBBF
140010a1c:     	btl	%ecx, %edx
140010a1f:     	jb	0x140010b87 <.text+0xfb87>
140010a25:     	movl	0x18(%rsi), %eax
140010a28:     	incl	%eax
140010a2a:     	movl	%eax, 0x18(%rsi)
140010a2d:     	cmpl	$0x1f4, %eax            # imm = 0x1F4
140010a32:     	ja	0x140010b52 <.text+0xfb52>
140010a38:     	movzbl	%r14b, %eax
140010a3c:     	addl	$-0x41, %eax
140010a3f:     	cmpl	$0x13, %eax
140010a42:     	ja	0x140010c8b <.text+0xfc8b>
140010a48:     	leaq	0xd191(%rip), %rcx      # 0x14001dbe0
140010a4f:     	movslq	(%rcx,%rax,4), %rax
140010a53:     	addq	%rcx, %rax
140010a56:     	jmpq	*%rax
140010a58:     	movq	0x20(%rsi), %r8
140010a5c:     	testq	%r8, %r8
140010a5f:     	je	0x140010a7d <.text+0xfa7d>
140010a61:     	leaq	0xcd13(%rip), %rcx      # 0x14001d77b
140010a68:     	movl	$0x1, %edx
140010a6d:     	callq	0x140015b40 <.text+0x14b40>
140010a72:     	movb	$0x1, %dil
140010a75:     	testb	%al, %al
140010a77:     	jne	0x140010ea7 <.text+0xfea7>
140010a7d:     	movq	%rsi, %rcx
140010a80:     	callq	0x1400109d0 <.text+0xf9d0>
140010a85:     	movb	$0x1, %dil
140010a88:     	testb	%al, %al
140010a8a:     	jne	0x140010ea7 <.text+0xfea7>
140010a90:     	cmpb	$0x41, %r14b
140010a94:     	jne	0x140010acd <.text+0xfacd>
140010a96:     	movq	0x20(%rsi), %r8
140010a9a:     	testq	%r8, %r8
140010a9d:     	je	0x140010ab8 <.text+0xfab8>
140010a9f:     	leaq	0xccf6(%rip), %rcx      # 0x14001d79c
140010aa6:     	movl	$0x2, %edx
140010aab:     	callq	0x140015b40 <.text+0x14b40>
140010ab0:     	testb	%al, %al
140010ab2:     	jne	0x140010ea7 <.text+0xfea7>
140010ab8:     	movb	$0x1, %dil
140010abb:     	movq	%rsi, %rcx
140010abe:     	movb	$0x1, %dl
140010ac0:     	callq	0x140011870 <.text+0x10870>
140010ac5:     	testb	%al, %al
140010ac7:     	jne	0x140010ea7 <.text+0xfea7>
140010acd:     	movq	0x20(%rsi), %r8
140010ad1:     	testq	%r8, %r8
140010ad4:     	je	0x140010e9c <.text+0xfe9c>
140010ada:     	leaq	0xcc9b(%rip), %rcx      # 0x14001d77c
140010ae1:     	movl	$0x1, %edx
140010ae6:     	callq	0x140015b40 <.text+0x14b40>
140010aeb:     	jmp	0x140010e95 <.text+0xfe95>
140010af0:     	movq	0x20(%rsi), %r8
140010af4:     	testq	%r8, %r8
140010af7:     	je	0x140010ea5 <.text+0xfea5>
140010afd:     	leaq	0xcc6d(%rip), %rcx      # 0x14001d771
140010b04:     	movl	$0x1, %edx
140010b09:     	addq	$0x30, %rsp
140010b0d:     	popq	%rbx
140010b0e:     	popq	%rdi
140010b0f:     	popq	%rsi
140010b10:     	popq	%r12
140010b12:     	popq	%r13
140010b14:     	popq	%r14
140010b16:     	popq	%r15
140010b18:     	jmp	0x140015b40 <.text+0x14b40>
140010b1d:     	movq	0x20(%rsi), %r8
140010b21:     	testq	%r8, %r8
140010b24:     	je	0x140010b42 <.text+0xfb42>
140010b26:     	leaq	0xcc1b(%rip), %rcx      # 0x14001d748
140010b2d:     	movl	$0x10, %edx
140010b32:     	callq	0x140015b40 <.text+0x14b40>
140010b37:     	movb	$0x1, %dil
140010b3a:     	testb	%al, %al
140010b3c:     	jne	0x140010ea7 <.text+0xfea7>
140010b42:     	movq	$0x0, (%rsi)
140010b49:     	movb	$0x0, 0x8(%rsi)
140010b4d:     	jmp	0x140010ea5 <.text+0xfea5>
140010b52:     	movq	0x20(%rsi), %r8
140010b56:     	testq	%r8, %r8
140010b59:     	je	0x140010b77 <.text+0xfb77>
140010b5b:     	leaq	0xcbf6(%rip), %rcx      # 0x14001d758
140010b62:     	movl	$0x19, %edx
140010b67:     	callq	0x140015b40 <.text+0x14b40>
140010b6c:     	movb	$0x1, %dil
140010b6f:     	testb	%al, %al
140010b71:     	jne	0x140010ea7 <.text+0xfea7>
140010b77:     	movq	$0x0, (%rsi)
140010b7e:     	movb	$0x1, 0x8(%rsi)
140010b82:     	jmp	0x140010ea5 <.text+0xfea5>
140010b87:     	movq	0x20(%rsi), %r8
140010b8b:     	testq	%r8, %r8
140010b8e:     	je	0x140010ea5 <.text+0xfea5>
140010b94:     	movsbq	%al, %rax
140010b98:     	leaq	0xce71(%rip), %rcx      # 0x14001da10
140010b9f:     	movq	(%rcx,%rax,8), %rcx
140010ba3:     	leaq	0xcd96(%rip), %rdx      # 0x14001d940
140010baa:     	movq	(%rdx,%rax,8), %rdx
140010bae:     	jmp	0x140010b09 <.text+0xfb09>
140010bb3:     	movq	0x20(%rsi), %rbx
140010bb7:     	testq	%rbx, %rbx
140010bba:     	je	0x140010e8d <.text+0xfe8d>
140010bc0:     	leaq	0xc817(%rip), %rcx      # 0x14001d3de
140010bc7:     	movl	$0x1, %edx
140010bcc:     	movq	%rbx, %r8
140010bcf:     	callq	0x140015b40 <.text+0x14b40>
140010bd4:     	movb	$0x1, %dil
140010bd7:     	testb	%al, %al
140010bd9:     	jne	0x140010ea7 <.text+0xfea7>
140010bdf:     	cmpb	$0x50, %r14b
140010be3:     	jne	0x140010dee <.text+0xfdee>
140010be9:     	leaq	0xcba6(%rip), %rcx      # 0x14001d796
140010bf0:     	movl	$0x6, %edx
140010bf5:     	jmp	0x140010dfa <.text+0xfdfa>
140010bfa:     	movq	0x20(%rsi), %r8
140010bfe:     	testq	%r8, %r8
140010c01:     	je	0x140010c1f <.text+0xfc1f>
140010c03:     	leaq	0xc7d3(%rip), %rcx      # 0x14001d3dd
140010c0a:     	movl	$0x1, %edx
140010c0f:     	callq	0x140015b40 <.text+0x14b40>
140010c14:     	movb	$0x1, %dil
140010c17:     	testb	%al, %al
140010c19:     	jne	0x140010ea7 <.text+0xfea7>
140010c1f:     	cmpq	%r12, %r13
140010c22:     	jae	0x140010e66 <.text+0xfe66>
140010c28:     	cmpb	$0x4c, (%r15,%r13)
140010c2d:     	jne	0x140010e66 <.text+0xfe66>
140010c33:     	addq	$0x2, %rbx
140010c37:     	movq	%rbx, 0x10(%rsi)
140010c3b:     	leaq	0x20(%rsp), %rcx
140010c40:     	movq	%rsi, %rdx
140010c43:     	callq	0x14000ec00 <.text+0xdc00>
140010c48:     	cmpb	$0x0, 0x20(%rsp)
140010c4d:     	je	0x140010e2f <.text+0xfe2f>
140010c53:     	movzbl	0x21(%rsp), %ebx
140010c58:     	movq	0x20(%rsi), %r8
140010c5c:     	testb	%bl, %bl
140010c5e:     	je	0x140010eb9 <.text+0xfeb9>
140010c64:     	testq	%r8, %r8
140010c67:     	je	0x140010ed6 <.text+0xfed6>
140010c6d:     	leaq	0xcae4(%rip), %rcx      # 0x14001d758
140010c74:     	movl	$0x19, %edx
140010c79:     	jmp	0x140010eca <.text+0xfeca>
140010c7e:     	movq	%rsi, %rcx
140010c81:     	callq	0x14000f220 <.text+0xe220>
140010c86:     	jmp	0x140010e95 <.text+0xfe95>
140010c8b:     	movq	%rbx, 0x10(%rsi)
140010c8f:     	movq	%rsi, %rcx
140010c92:     	xorl	%edx, %edx
140010c94:     	callq	0x140010190 <.text+0xf190>
140010c99:     	jmp	0x140010e95 <.text+0xfe95>
140010c9e:     	movq	0x20(%rsi), %r8
140010ca2:     	testq	%r8, %r8
140010ca5:     	je	0x140010cc3 <.text+0xfcc3>
140010ca7:     	leaq	0xcaf0(%rip), %rcx      # 0x14001d79e
140010cae:     	movl	$0x4, %edx
140010cb3:     	callq	0x140015b40 <.text+0x14b40>
140010cb8:     	movb	$0x1, %dil
140010cbb:     	testb	%al, %al
140010cbd:     	jne	0x140010ea7 <.text+0xfea7>
140010cc3:     	movq	%rsi, %rcx
140010cc6:     	callq	0x14000f990 <.text+0xe990>
140010ccb:     	movb	$0x1, %dil
140010cce:     	testb	%al, %al
140010cd0:     	jne	0x140010ea7 <.text+0xfea7>
140010cd6:     	movq	(%rsi), %rcx
140010cd9:     	testq	%rcx, %rcx
140010cdc:     	je	0x140010e07 <.text+0xfe07>
140010ce2:     	movq	0x10(%rsi), %rax
140010ce6:     	cmpq	0x8(%rsi), %rax
140010cea:     	jae	0x140010e07 <.text+0xfe07>
140010cf0:     	cmpb	$0x4c, (%rcx,%rax)
140010cf4:     	jne	0x140010e07 <.text+0xfe07>
140010cfa:     	incq	%rax
140010cfd:     	movq	%rax, 0x10(%rsi)
140010d01:     	leaq	0x20(%rsp), %rcx
140010d06:     	movq	%rsi, %rdx
140010d09:     	callq	0x14000ec00 <.text+0xdc00>
140010d0e:     	cmpb	$0x0, 0x20(%rsp)
140010d13:     	jne	0x140010c53 <.text+0xfc53>
140010d19:     	movq	0x28(%rsp), %rbx
140010d1e:     	testq	%rbx, %rbx
140010d21:     	je	0x140010e9c <.text+0xfe9c>
140010d27:     	movq	0x20(%rsi), %r8
140010d2b:     	testq	%r8, %r8
140010d2e:     	je	0x140010d49 <.text+0xfd49>
140010d30:     	leaq	0xca6b(%rip), %rcx      # 0x14001d7a2
140010d37:     	movl	$0x3, %edx
140010d3c:     	callq	0x140015b40 <.text+0x14b40>
140010d41:     	testb	%al, %al
140010d43:     	jne	0x140010ea7 <.text+0xfea7>
140010d49:     	movq	%rsi, %rcx
140010d4c:     	movq	%rbx, %rdx
140010d4f:     	callq	0x14000f670 <.text+0xe670>
140010d54:     	jmp	0x140010e98 <.text+0xfe98>
140010d59:     	movq	%rsi, %rcx
140010d5c:     	callq	0x14000f760 <.text+0xe760>
140010d61:     	jmp	0x140010e95 <.text+0xfe95>
140010d66:     	movq	0x20(%rsi), %r8
140010d6a:     	testq	%r8, %r8
140010d6d:     	je	0x140010d8b <.text+0xfd8b>
140010d6f:     	leaq	0xc664(%rip), %rcx      # 0x14001d3da
140010d76:     	movl	$0x1, %edx
140010d7b:     	callq	0x140015b40 <.text+0x14b40>
140010d80:     	movb	$0x1, %dil
140010d83:     	testb	%al, %al
140010d85:     	jne	0x140010ea7 <.text+0xfea7>
140010d8b:     	movq	%rsi, %rcx
140010d8e:     	callq	0x140010070 <.text+0xf070>
140010d93:     	movb	$0x1, %dil
140010d96:     	testq	%rax, %rax
140010d99:     	jne	0x140010ea7 <.text+0xfea7>
140010d9f:     	cmpq	$0x1, %rdx
140010da3:     	jne	0x140010dcb <.text+0xfdcb>
140010da5:     	movq	0x20(%rsi), %r8
140010da9:     	testq	%r8, %r8
140010dac:     	je	0x140010e9c <.text+0xfe9c>
140010db2:     	leaq	0xc61f(%rip), %rcx      # 0x14001d3d8
140010db9:     	movl	$0x1, %edx
140010dbe:     	callq	0x140015b40 <.text+0x14b40>
140010dc3:     	testb	%al, %al
140010dc5:     	jne	0x140010ea7 <.text+0xfea7>
140010dcb:     	movq	0x20(%rsi), %r8
140010dcf:     	testq	%r8, %r8
140010dd2:     	je	0x140010e9c <.text+0xfe9c>
140010dd8:     	leaq	0xc5fa(%rip), %rcx      # 0x14001d3d9
140010ddf:     	movl	$0x1, %edx
140010de4:     	callq	0x140015b40 <.text+0x14b40>
140010de9:     	jmp	0x140010e98 <.text+0xfe98>
140010dee:     	leaq	0xc99d(%rip), %rcx      # 0x14001d792
140010df5:     	movl	$0x4, %edx
140010dfa:     	movq	%rbx, %r8
140010dfd:     	callq	0x140015b40 <.text+0x14b40>
140010e02:     	jmp	0x140010e89 <.text+0xfe89>
140010e07:     	movq	0x20(%rsi), %r8
140010e0b:     	testq	%r8, %r8
140010e0e:     	je	0x140010b42 <.text+0xfb42>
140010e14:     	leaq	0xc92d(%rip), %rcx      # 0x14001d748
140010e1b:     	movl	$0x10, %edx
140010e20:     	callq	0x140015b40 <.text+0x14b40>
140010e25:     	testb	%al, %al
140010e27:     	je	0x140010b42 <.text+0xfb42>
140010e2d:     	jmp	0x140010ea7 <.text+0xfea7>
140010e2f:     	movq	0x28(%rsp), %rdx
140010e34:     	testq	%rdx, %rdx
140010e37:     	je	0x140010e66 <.text+0xfe66>
140010e39:     	movq	%rsi, %rcx
140010e3c:     	callq	0x14000f670 <.text+0xe670>
140010e41:     	movb	$0x1, %dil
140010e44:     	testb	%al, %al
140010e46:     	jne	0x140010ea7 <.text+0xfea7>
140010e48:     	movq	0x20(%rsi), %r8
140010e4c:     	testq	%r8, %r8
140010e4f:     	je	0x140010e66 <.text+0xfe66>
140010e51:     	leaq	0xc939(%rip), %rcx      # 0x14001d791
140010e58:     	movl	$0x1, %edx
140010e5d:     	callq	0x140015b40 <.text+0x14b40>
140010e62:     	testb	%al, %al
140010e64:     	jne	0x140010ea7 <.text+0xfea7>
140010e66:     	cmpb	$0x52, %r14b
140010e6a:     	je	0x140010e8d <.text+0xfe8d>
140010e6c:     	movq	0x20(%rsi), %r8
140010e70:     	testq	%r8, %r8
140010e73:     	je	0x140010e8d <.text+0xfe8d>
140010e75:     	leaq	0xc916(%rip), %rcx      # 0x14001d792
140010e7c:     	movl	$0x4, %edx
140010e81:     	callq	0x140015b40 <.text+0x14b40>
140010e86:     	movb	$0x1, %dil
140010e89:     	testb	%al, %al
140010e8b:     	jne	0x140010ea7 <.text+0xfea7>
140010e8d:     	movq	%rsi, %rcx
140010e90:     	callq	0x1400109d0 <.text+0xf9d0>
140010e95:     	movb	$0x1, %dil
140010e98:     	testb	%al, %al
140010e9a:     	jne	0x140010ea7 <.text+0xfea7>
140010e9c:     	cmpq	$0x0, (%rsi)
140010ea0:     	je	0x140010ea5 <.text+0xfea5>
140010ea2:     	decl	0x18(%rsi)
140010ea5:     	xorl	%edi, %edi
140010ea7:     	movl	%edi, %eax
140010ea9:     	addq	$0x30, %rsp
140010ead:     	popq	%rbx
140010eae:     	popq	%rdi
140010eaf:     	popq	%rsi
140010eb0:     	popq	%r12
140010eb2:     	popq	%r13
140010eb4:     	popq	%r14
140010eb6:     	popq	%r15
140010eb8:     	retq
140010eb9:     	testq	%r8, %r8
140010ebc:     	je	0x140010ed6 <.text+0xfed6>
140010ebe:     	leaq	0xc883(%rip), %rcx      # 0x14001d748
140010ec5:     	movl	$0x10, %edx
140010eca:     	callq	0x140015b40 <.text+0x14b40>
140010ecf:     	movb	$0x1, %dil
140010ed2:     	testb	%al, %al
140010ed4:     	jne	0x140010ea7 <.text+0xfea7>
140010ed6:     	movq	$0x0, (%rsi)
140010edd:     	movb	%bl, 0x8(%rsi)
140010ee0:     	jmp	0x140010ea5 <.text+0xfea5>
140010ee2:     	int3
140010ee3:     	int3
140010ee4:     	int3
140010ee5:     	int3
140010ee6:     	int3
140010ee7:     	int3
140010ee8:     	int3
140010ee9:     	int3
140010eea:     	int3
140010eeb:     	int3
140010eec:     	int3
140010eed:     	int3
140010eee:     	int3
140010eef:     	int3
140010ef0:     	pushq	%r15
140010ef2:     	pushq	%r14
140010ef4:     	pushq	%r13
140010ef6:     	pushq	%r12
140010ef8:     	pushq	%rsi
140010ef9:     	pushq	%rdi
140010efa:     	pushq	%rbp
140010efb:     	pushq	%rbx
140010efc:     	subq	$0xc8, %rsp
140010f03:     	movq	%rcx, %rsi
140010f06:     	movq	(%rcx), %rcx
140010f09:     	testq	%rcx, %rcx
140010f0c:     	je	0x14001117f <.text+0x1017f>
140010f12:     	movq	0x8(%rsi), %rdx
140010f16:     	movq	0x10(%rsi), %rax
140010f1a:     	cmpq	%rdx, %rax
140010f1d:     	jae	0x140010f36 <.text+0xff36>
140010f1f:     	cmpb	$0x55, (%rcx,%rax)
140010f23:     	jne	0x140010f36 <.text+0xff36>
140010f25:     	incq	%rax
140010f28:     	movq	%rax, 0x10(%rsi)
140010f2c:     	movb	$0x1, %dil
140010f2f:     	cmpq	%rdx, %rax
140010f32:     	jb	0x140010f3d <.text+0xff3d>
140010f34:     	jmp	0x140010f6e <.text+0xff6e>
140010f36:     	xorl	%edi, %edi
140010f38:     	cmpq	%rdx, %rax
140010f3b:     	jae	0x140010f6e <.text+0xff6e>
140010f3d:     	cmpb	$0x4b, (%rcx,%rax)
140010f41:     	jne	0x140010f6e <.text+0xff6e>
140010f43:     	leaq	0x1(%rax), %r8
140010f47:     	movq	%r8, 0x10(%rsi)
140010f4b:     	cmpq	%rdx, %r8
140010f4e:     	jae	0x140010fa9 <.text+0xffa9>
140010f50:     	cmpb	$0x43, (%rcx,%r8)
140010f55:     	jne	0x140010fa9 <.text+0xffa9>
140010f57:     	addq	$0x2, %rax
140010f5b:     	movq	%rax, 0x10(%rsi)
140010f5f:     	movl	$0x1, %r14d
140010f65:     	leaq	0xc44c(%rip), %rbx      # 0x14001d3b8
140010f6c:     	jmp	0x140010fde <.text+0xffde>
140010f6e:     	testb	%dil, %dil
140010f71:     	je	0x14001117f <.text+0x1017f>
140010f77:     	xorl	%ebx, %ebx
140010f79:     	movq	0x20(%rsi), %r8
140010f7d:     	testq	%r8, %r8
140010f80:     	je	0x140010f9f <.text+0xff9f>
140010f82:     	leaq	0xc81c(%rip), %rcx      # 0x14001d7a5
140010f89:     	movl	$0x7, %edx
140010f8e:     	callq	0x140015b40 <.text+0x14b40>
140010f93:     	movl	%eax, %ecx
140010f95:     	movb	$0x1, %al
140010f97:     	testb	%cl, %cl
140010f99:     	jne	0x1400113ef <.text+0x103ef>
140010f9f:     	testq	%rbx, %rbx
140010fa2:     	jne	0x140010fe3 <.text+0xffe3>
140010fa4:     	jmp	0x14001117f <.text+0x1017f>
140010fa9:     	leaq	0x20(%rsp), %rcx
140010fae:     	movq	%rsi, %rdx
140010fb1:     	callq	0x14000edf0 <.text+0xddf0>
140010fb6:     	movq	0x20(%rsp), %rbx
140010fbb:     	testq	%rbx, %rbx
140010fbe:     	je	0x14001109b <.text+0x1009b>
140010fc4:     	movq	0x28(%rsp), %r14
140010fc9:     	testq	%r14, %r14
140010fcc:     	je	0x1400112ac <.text+0x102ac>
140010fd2:     	cmpq	$0x0, 0x38(%rsp)
140010fd8:     	jne	0x1400112ac <.text+0x102ac>
140010fde:     	testb	%dil, %dil
140010fe1:     	jne	0x140010f79 <.text+0xff79>
140010fe3:     	movq	0x20(%rsi), %rdi
140010fe7:     	testq	%rdi, %rdi
140010fea:     	je	0x14001100c <.text+0x1000c>
140010fec:     	leaq	0xc7b9(%rip), %rcx      # 0x14001d7ac
140010ff3:     	movl	$0x8, %edx
140010ff8:     	movq	%rdi, %r8
140010ffb:     	callq	0x140015b40 <.text+0x14b40>
140011000:     	movl	%eax, %ecx
140011002:     	movb	$0x1, %al
140011004:     	testb	%cl, %cl
140011006:     	jne	0x1400113ef <.text+0x103ef>
14001100c:     	movq	$0x0, 0x68(%rsp)
140011015:     	movq	%r14, 0x70(%rsp)
14001101a:     	leaq	0x78(%rsp), %rdx
14001101f:     	movq	%rbx, 0x78(%rsp)
140011024:     	movq	%r14, 0x80(%rsp)
14001102c:     	movq	$0x0, 0x88(%rsp)
140011038:     	movq	%r14, 0x90(%rsp)
140011040:     	movq	$0x1, 0x98(%rsp)
14001104c:     	movabsq	$0x5f0000005f, %rax     # imm = 0x5F0000005F
140011056:     	movq	%rax, 0xa0(%rsp)
14001105e:     	movw	$0x1, 0xa8(%rsp)
140011068:     	leaq	0x20(%rsp), %rcx
14001106d:     	callq	0x14000d4a0 <.text+0xc4a0>
140011072:     	cmpq	$0x0, 0x20(%rsp)
140011078:     	je	0x1400110c6 <.text+0x100c6>
14001107a:     	movq	0x28(%rsp), %rdx
14001107f:     	movq	0x30(%rsp), %rax
140011084:     	movq	0x68(%rsp), %rcx
140011089:     	addq	%rcx, %rbx
14001108c:     	subq	%rcx, %rdx
14001108f:     	movq	%rax, 0x68(%rsp)
140011094:     	testq	%rdi, %rdi
140011097:     	jne	0x140011106 <.text+0x10106>
140011099:     	jmp	0x140011115 <.text+0x10115>
14001109b:     	movzbl	0x28(%rsp), %ebx
1400110a0:     	movq	0x20(%rsi), %r8
1400110a4:     	testb	%bl, %bl
1400110a6:     	je	0x1400113c5 <.text+0x103c5>
1400110ac:     	testq	%r8, %r8
1400110af:     	je	0x1400113e3 <.text+0x103e3>
1400110b5:     	leaq	0xc69c(%rip), %rcx      # 0x14001d758
1400110bc:     	movl	$0x19, %edx
1400110c1:     	jmp	0x1400113d6 <.text+0x103d6>
1400110c6:     	cmpb	$0x0, 0xa9(%rsp)
1400110ce:     	jne	0x140011403 <.text+0x10403>
1400110d4:     	movb	$0x1, 0xa9(%rsp)
1400110dc:     	cmpb	$0x0, 0xa8(%rsp)
1400110e4:     	movq	0x68(%rsp), %rbx
1400110e9:     	movq	0x70(%rsp), %rdx
1400110ee:     	jne	0x1400110f9 <.text+0x100f9>
1400110f0:     	cmpq	%rbx, %rdx
1400110f3:     	je	0x140011403 <.text+0x10403>
1400110f9:     	subq	%rbx, %rdx
1400110fc:     	addq	0x78(%rsp), %rbx
140011101:     	testq	%rdi, %rdi
140011104:     	je	0x140011115 <.text+0x10115>
140011106:     	movq	%rbx, %rcx
140011109:     	movq	%rdi, %r8
14001110c:     	callq	0x140015b40 <.text+0x14b40>
140011111:     	testb	%al, %al
140011113:     	jne	0x140011178 <.text+0x10178>
140011115:     	movq	0xa8(%rsp), %rax
14001111d:     	movq	%rax, 0x60(%rsp)
140011122:     	movups	0x68(%rsp), %xmm0
140011127:     	movups	0x78(%rsp), %xmm1
14001112c:     	movups	0x88(%rsp), %xmm2
140011134:     	movups	0x98(%rsp), %xmm3
14001113c:     	movaps	%xmm3, 0x50(%rsp)
140011141:     	movaps	%xmm2, 0x40(%rsp)
140011146:     	movaps	%xmm1, 0x30(%rsp)
14001114b:     	movaps	%xmm0, 0x20(%rsp)
140011150:     	cmpb	$0x0, 0x61(%rsp)
140011155:     	je	0x1400112e2 <.text+0x102e2>
14001115b:     	testq	%rdi, %rdi
14001115e:     	je	0x14001117f <.text+0x1017f>
140011160:     	leaq	0xc669(%rip), %rcx      # 0x14001d7d0
140011167:     	movl	$0x2, %edx
14001116c:     	movq	%rdi, %r8
14001116f:     	callq	0x140015b40 <.text+0x14b40>
140011174:     	testb	%al, %al
140011176:     	je	0x14001117f <.text+0x1017f>
140011178:     	movb	$0x1, %al
14001117a:     	jmp	0x1400113ef <.text+0x103ef>
14001117f:     	movq	0x20(%rsi), %r8
140011183:     	testq	%r8, %r8
140011186:     	je	0x1400111a5 <.text+0x101a5>
140011188:     	leaq	0xc643(%rip), %rcx      # 0x14001d7d2
14001118f:     	movl	$0x3, %edx
140011194:     	callq	0x140015b40 <.text+0x14b40>
140011199:     	movl	%eax, %ecx
14001119b:     	movb	$0x1, %al
14001119d:     	testb	%cl, %cl
14001119f:     	jne	0x1400113ef <.text+0x103ef>
1400111a5:     	movq	(%rsi), %rax
1400111a8:     	testq	%rax, %rax
1400111ab:     	je	0x140011208 <.text+0x10208>
1400111ad:     	leaq	0xc5c5(%rip), %rdi      # 0x14001d779
1400111b4:     	xorl	%ebx, %ebx
1400111b6:     	nopw	%cs:(%rax,%rax)
1400111c0:     	movq	0x10(%rsi), %rcx
1400111c4:     	cmpq	0x8(%rsi), %rcx
1400111c8:     	jae	0x1400111d0 <.text+0x101d0>
1400111ca:     	cmpb	$0x45, (%rax,%rcx)
1400111ce:     	je	0x14001123a <.text+0x1023a>
1400111d0:     	subq	$0x1, %rbx
1400111d4:     	jb	0x1400111f0 <.text+0x101f0>
1400111d6:     	movq	0x20(%rsi), %r8
1400111da:     	testq	%r8, %r8
1400111dd:     	je	0x1400111f0 <.text+0x101f0>
1400111df:     	movl	$0x2, %edx
1400111e4:     	movq	%rdi, %rcx
1400111e7:     	callq	0x140015b40 <.text+0x14b40>
1400111ec:     	testb	%al, %al
1400111ee:     	jne	0x140011178 <.text+0x10178>
1400111f0:     	movq	%rsi, %rcx
1400111f3:     	callq	0x1400109d0 <.text+0xf9d0>
1400111f8:     	testb	%al, %al
1400111fa:     	jne	0x140011178 <.text+0x10178>
140011200:     	movq	(%rsi), %rax
140011203:     	testq	%rax, %rax
140011206:     	jne	0x1400111c0 <.text+0x101c0>
140011208:     	xorl	%eax, %eax
14001120a:     	movq	0x20(%rsi), %r8
14001120e:     	testq	%r8, %r8
140011211:     	je	0x14001124a <.text+0x1024a>
140011213:     	leaq	0xc1bf(%rip), %rcx      # 0x14001d3d9
14001121a:     	movl	$0x1, %edx
14001121f:     	callq	0x140015b40 <.text+0x14b40>
140011224:     	movl	%eax, %ecx
140011226:     	movb	$0x1, %al
140011228:     	testb	%cl, %cl
14001122a:     	jne	0x1400113ef <.text+0x103ef>
140011230:     	movq	(%rsi), %rax
140011233:     	testq	%rax, %rax
140011236:     	jne	0x14001124f <.text+0x1024f>
140011238:     	jmp	0x14001126b <.text+0x1026b>
14001123a:     	incq	%rcx
14001123d:     	movq	%rcx, 0x10(%rsi)
140011241:     	movq	0x20(%rsi), %r8
140011245:     	testq	%r8, %r8
140011248:     	jne	0x140011213 <.text+0x10213>
14001124a:     	testq	%rax, %rax
14001124d:     	je	0x14001126b <.text+0x1026b>
14001124f:     	movq	0x10(%rsi), %rcx
140011253:     	cmpq	0x8(%rsi), %rcx
140011257:     	jae	0x14001126b <.text+0x1026b>
140011259:     	cmpb	$0x75, (%rax,%rcx)
14001125d:     	jne	0x14001126b <.text+0x1026b>
14001125f:     	incq	%rcx
140011262:     	movq	%rcx, 0x10(%rsi)
140011266:     	jmp	0x1400113ed <.text+0x103ed>
14001126b:     	movq	0x20(%rsi), %r8
14001126f:     	testq	%r8, %r8
140011272:     	je	0x140011291 <.text+0x10291>
140011274:     	leaq	0xc55a(%rip), %rcx      # 0x14001d7d5
14001127b:     	movl	$0x4, %edx
140011280:     	callq	0x140015b40 <.text+0x14b40>
140011285:     	movl	%eax, %ecx
140011287:     	movb	$0x1, %al
140011289:     	testb	%cl, %cl
14001128b:     	jne	0x1400113ef <.text+0x103ef>
140011291:     	movq	%rsi, %rcx
140011294:     	addq	$0xc8, %rsp
14001129b:     	popq	%rbx
14001129c:     	popq	%rbp
14001129d:     	popq	%rdi
14001129e:     	popq	%rsi
14001129f:     	popq	%r12
1400112a1:     	popq	%r13
1400112a3:     	popq	%r14
1400112a5:     	popq	%r15
1400112a7:     	jmp	0x1400109d0 <.text+0xf9d0>
1400112ac:     	movq	0x20(%rsi), %r8
1400112b0:     	testq	%r8, %r8
1400112b3:     	je	0x1400112d2 <.text+0x102d2>
1400112b5:     	leaq	0xc48c(%rip), %rcx      # 0x14001d748
1400112bc:     	movl	$0x10, %edx
1400112c1:     	callq	0x140015b40 <.text+0x14b40>
1400112c6:     	movl	%eax, %ecx
1400112c8:     	movb	$0x1, %al
1400112ca:     	testb	%cl, %cl
1400112cc:     	jne	0x1400113ef <.text+0x103ef>
1400112d2:     	movq	$0x0, (%rsi)
1400112d9:     	movb	$0x0, 0x8(%rsi)
1400112dd:     	jmp	0x1400113ed <.text+0x103ed>
1400112e2:     	leaq	0x30(%rsp), %rbx
1400112e7:     	leaq	0xb0(%rsp), %r14
1400112ef:     	leaq	0xc243(%rip), %r15      # 0x14001d539
1400112f6:     	movq	%rdi, %r12
1400112f9:     	jmp	0x140011309 <.text+0x10309>
1400112fb:     	xorl	%r12d, %r12d
1400112fe:     	cmpb	$0x0, 0x61(%rsp)
140011303:     	jne	0x14001115b <.text+0x1015b>
140011309:     	movq	0x30(%rsp), %r13
14001130e:     	movq	%r14, %rcx
140011311:     	movq	%rbx, %rdx
140011314:     	callq	0x14000d4a0 <.text+0xc4a0>
140011319:     	cmpq	$0x0, 0xb0(%rsp)
140011322:     	je	0x14001134b <.text+0x1034b>
140011324:     	movq	0xb8(%rsp), %rbp
14001132c:     	movq	0xc0(%rsp), %rax
140011334:     	movq	0x20(%rsp), %rcx
140011339:     	addq	%rcx, %r13
14001133c:     	subq	%rcx, %rbp
14001133f:     	movq	%rax, 0x20(%rsp)
140011344:     	testq	%r12, %r12
140011347:     	jne	0x140011386 <.text+0x10386>
140011349:     	jmp	0x1400112fb <.text+0x102fb>
14001134b:     	cmpb	$0x0, 0x61(%rsp)
140011350:     	jne	0x14001115b <.text+0x1015b>
140011356:     	movb	$0x1, 0x61(%rsp)
14001135b:     	cmpb	$0x0, 0x60(%rsp)
140011360:     	movq	0x20(%rsp), %r13
140011365:     	movq	0x28(%rsp), %rbp
14001136a:     	jne	0x140011375 <.text+0x10375>
14001136c:     	cmpq	%r13, %rbp
14001136f:     	je	0x14001115b <.text+0x1015b>
140011375:     	subq	%r13, %rbp
140011378:     	addq	0x30(%rsp), %r13
14001137d:     	testq	%r12, %r12
140011380:     	je	0x1400112fb <.text+0x102fb>
140011386:     	movl	$0x1, %edx
14001138b:     	movq	%r15, %rcx
14001138e:     	movq	%r12, %r8
140011391:     	callq	0x140015b40 <.text+0x14b40>
140011396:     	testb	%al, %al
140011398:     	jne	0x140011178 <.text+0x10178>
14001139e:     	testq	%rdi, %rdi
1400113a1:     	je	0x1400112fb <.text+0x102fb>
1400113a7:     	movq	%r13, %rcx
1400113aa:     	movq	%rbp, %rdx
1400113ad:     	movq	%rdi, %r8
1400113b0:     	callq	0x140015b40 <.text+0x14b40>
1400113b5:     	movq	%rdi, %r12
1400113b8:     	testb	%al, %al
1400113ba:     	je	0x1400112fe <.text+0x102fe>
1400113c0:     	jmp	0x140011178 <.text+0x10178>
1400113c5:     	testq	%r8, %r8
1400113c8:     	je	0x1400113e3 <.text+0x103e3>
1400113ca:     	leaq	0xc377(%rip), %rcx      # 0x14001d748
1400113d1:     	movl	$0x10, %edx
1400113d6:     	callq	0x140015b40 <.text+0x14b40>
1400113db:     	movl	%eax, %ecx
1400113dd:     	movb	$0x1, %al
1400113df:     	testb	%cl, %cl
1400113e1:     	jne	0x1400113ef <.text+0x103ef>
1400113e3:     	movq	$0x0, (%rsi)
1400113ea:     	movb	%bl, 0x8(%rsi)
1400113ed:     	xorl	%eax, %eax
1400113ef:     	addq	$0xc8, %rsp
1400113f6:     	popq	%rbx
1400113f7:     	popq	%rbp
1400113f8:     	popq	%rdi
1400113f9:     	popq	%rsi
1400113fa:     	popq	%r12
1400113fc:     	popq	%r13
1400113fe:     	popq	%r14
140011400:     	popq	%r15
140011402:     	retq
140011403:     	leaq	0xbe56(%rip), %rcx      # 0x14001d260
14001140a:     	leaq	0xc3a7(%rip), %r8       # 0x14001d7b8
140011411:     	movl	$0x2b, %edx
140011416:     	callq	0x140019880 <.text+0x18880>
14001141b:     	ud2
14001141d:     	int3
14001141e:     	int3
14001141f:     	int3
140011420:     	pushq	%r14
140011422:     	pushq	%rsi
140011423:     	pushq	%rdi
140011424:     	pushq	%rbx
140011425:     	subq	$0x48, %rsp
140011429:     	movq	%rcx, %rsi
14001142c:     	movq	(%rcx), %r8
14001142f:     	testq	%r8, %r8
140011432:     	je	0x140011528 <.text+0x10528>
140011438:     	movq	0x8(%rsi), %r9
14001143c:     	movq	0x10(%rsi), %rcx
140011440:     	cmpq	%r9, %rcx
140011443:     	jae	0x140011528 <.text+0x10528>
140011449:     	cmpb	$0x42, (%r8,%rcx)
14001144e:     	jne	0x14001147b <.text+0x1047b>
140011450:     	leaq	0x1(%rcx), %r10
140011454:     	movq	%r10, 0x10(%rsi)
140011458:     	cmpq	%r9, %r10
14001145b:     	jae	0x140011543 <.text+0x10543>
140011461:     	cmpb	$0x5f, (%r8,%r10)
140011466:     	jne	0x140011543 <.text+0x10543>
14001146c:     	leaq	0x2(%rcx), %rax
140011470:     	movq	%rax, 0x10(%rsi)
140011474:     	xorl	%eax, %eax
140011476:     	jmp	0x1400115b1 <.text+0x105b1>
14001147b:     	cmpb	$0x49, (%r8,%rcx)
140011480:     	jne	0x140011528 <.text+0x10528>
140011486:     	incq	%rcx
140011489:     	movq	%rcx, 0x10(%rsi)
14001148d:     	movq	%rsi, %rcx
140011490:     	xorl	%edx, %edx
140011492:     	callq	0x140010190 <.text+0xf190>
140011497:     	testb	%al, %al
140011499:     	jne	0x14001161e <.text+0x1061e>
14001149f:     	movq	0x20(%rsi), %r8
1400114a3:     	testq	%r8, %r8
1400114a6:     	je	0x1400114c1 <.text+0x104c1>
1400114a8:     	leaq	0xbf2d(%rip), %rcx      # 0x14001d3dc
1400114af:     	movl	$0x1, %edx
1400114b4:     	callq	0x140015b40 <.text+0x14b40>
1400114b9:     	testb	%al, %al
1400114bb:     	jne	0x14001161e <.text+0x1061e>
1400114c1:     	movq	(%rsi), %rax
1400114c4:     	movb	$0x1, %dil
1400114c7:     	testq	%rax, %rax
1400114ca:     	je	0x140011537 <.text+0x10537>
1400114cc:     	xorl	%r14d, %r14d
1400114cf:     	leaq	0xc2a3(%rip), %rbx      # 0x14001d779
1400114d6:     	movq	0x10(%rsi), %rcx
1400114da:     	cmpq	0x8(%rsi), %rcx
1400114de:     	jae	0x1400114ea <.text+0x104ea>
1400114e0:     	cmpb	$0x45, (%rax,%rcx)
1400114e4:     	je	0x14001165d <.text+0x1065d>
1400114ea:     	subq	$0x1, %r14
1400114ee:     	jb	0x14001150e <.text+0x1050e>
1400114f0:     	movq	0x20(%rsi), %r8
1400114f4:     	testq	%r8, %r8
1400114f7:     	je	0x14001150e <.text+0x1050e>
1400114f9:     	movl	$0x2, %edx
1400114fe:     	movq	%rbx, %rcx
140011501:     	callq	0x140015b40 <.text+0x14b40>
140011506:     	testb	%al, %al
140011508:     	jne	0x14001161e <.text+0x1061e>
14001150e:     	movq	%rsi, %rcx
140011511:     	callq	0x1400108a0 <.text+0xf8a0>
140011516:     	testb	%al, %al
140011518:     	jne	0x14001161e <.text+0x1061e>
14001151e:     	movq	(%rsi), %rax
140011521:     	testq	%rax, %rax
140011524:     	jne	0x1400114d6 <.text+0x104d6>
140011526:     	jmp	0x140011537 <.text+0x10537>
140011528:     	movq	%rsi, %rcx
14001152b:     	xorl	%edx, %edx
14001152d:     	callq	0x140010190 <.text+0xf190>
140011532:     	movl	%eax, %edi
140011534:     	addb	%dil, %dil
140011537:     	movl	%edi, %eax
140011539:     	addq	$0x48, %rsp
14001153d:     	popq	%rbx
14001153e:     	popq	%rdi
14001153f:     	popq	%rsi
140011540:     	popq	%r14
140011542:     	retq
140011543:     	xorl	%eax, %eax
140011545:     	movl	$0x3e, %r11d
14001154b:     	nopl	(%rax,%rax)
140011550:     	cmpq	%r9, %r10
140011553:     	jae	0x140011600 <.text+0x10600>
140011559:     	movzbl	(%r8,%r10), %edx
14001155e:     	cmpb	$0x5f, %dl
140011561:     	je	0x1400115a5 <.text+0x105a5>
140011563:     	leal	-0x30(%rdx), %edi
140011566:     	cmpb	$0xa, %dil
14001156a:     	jb	0x14001158e <.text+0x1058e>
14001156c:     	leal	-0x61(%rdx), %edi
14001156f:     	cmpb	$0x1a, %dil
140011573:     	jae	0x140011580 <.text+0x10580>
140011575:     	addb	$-0x57, %dl
140011578:     	jmp	0x14001158c <.text+0x1058c>
14001157a:     	nopw	(%rax,%rax)
140011580:     	leal	-0x41(%rdx), %edi
140011583:     	cmpb	$0x1a, %dil
140011587:     	jae	0x140011600 <.text+0x10600>
140011589:     	addb	$-0x1d, %dl
14001158c:     	movl	%edx, %edi
14001158e:     	incq	%r10
140011591:     	movq	%r10, 0x10(%rsi)
140011595:     	mulq	%r11
140011598:     	jo	0x140011600 <.text+0x10600>
14001159a:     	movzbl	%dil, %edx
14001159e:     	addq	%rdx, %rax
1400115a1:     	jae	0x140011550 <.text+0x10550>
1400115a3:     	jmp	0x140011600 <.text+0x10600>
1400115a5:     	incq	%r10
1400115a8:     	movq	%r10, 0x10(%rsi)
1400115ac:     	incq	%rax
1400115af:     	je	0x140011600 <.text+0x10600>
1400115b1:     	cmpq	%rcx, %rax
1400115b4:     	jae	0x140011600 <.text+0x10600>
1400115b6:     	movl	0x18(%rsi), %ecx
1400115b9:     	incl	%ecx
1400115bb:     	cmpl	$0x1f4, %ecx            # imm = 0x1F4
1400115c1:     	ja	0x14001163a <.text+0x1063a>
1400115c3:     	cmpq	$0x0, 0x20(%rsi)
1400115c8:     	je	0x140011633 <.text+0x10633>
1400115ca:     	movups	(%rsi), %xmm0
1400115cd:     	movups	0x10(%rsi), %xmm1
1400115d1:     	movaps	%xmm1, 0x30(%rsp)
1400115d6:     	movaps	%xmm0, 0x20(%rsp)
1400115db:     	movq	%rax, 0x10(%rsi)
1400115df:     	movl	%ecx, 0x18(%rsi)
1400115e2:     	movq	%rsi, %rcx
1400115e5:     	callq	0x140011420 <.text+0x10420>
1400115ea:     	movaps	0x20(%rsp), %xmm0
1400115ef:     	movaps	0x30(%rsp), %xmm1
1400115f4:     	movups	%xmm0, (%rsi)
1400115f7:     	movups	%xmm1, 0x10(%rsi)
1400115fb:     	jmp	0x140011539 <.text+0x10539>
140011600:     	movq	0x20(%rsi), %r8
140011604:     	testq	%r8, %r8
140011607:     	je	0x140011626 <.text+0x10626>
140011609:     	leaq	0xc138(%rip), %rcx      # 0x14001d748
140011610:     	movl	$0x10, %edx
140011615:     	callq	0x140015b40 <.text+0x14b40>
14001161a:     	testb	%al, %al
14001161c:     	je	0x140011626 <.text+0x10626>
14001161e:     	movb	$0x2, %dil
140011621:     	jmp	0x140011537 <.text+0x10537>
140011626:     	xorl	%edi, %edi
140011628:     	movq	$0x0, (%rsi)
14001162f:     	movb	%dil, 0x8(%rsi)
140011633:     	xorl	%edi, %edi
140011635:     	jmp	0x140011537 <.text+0x10537>
14001163a:     	movq	0x20(%rsi), %r8
14001163e:     	movb	$0x1, %dil
140011641:     	testq	%r8, %r8
140011644:     	je	0x140011628 <.text+0x10628>
140011646:     	leaq	0xc10b(%rip), %rcx      # 0x14001d758
14001164d:     	movl	$0x19, %edx
140011652:     	callq	0x140015b40 <.text+0x14b40>
140011657:     	testb	%al, %al
140011659:     	jne	0x14001161e <.text+0x1061e>
14001165b:     	jmp	0x140011628 <.text+0x10628>
14001165d:     	incq	%rcx
140011660:     	movq	%rcx, 0x10(%rsi)
140011664:     	jmp	0x140011537 <.text+0x10537>
140011669:     	int3
14001166a:     	int3
14001166b:     	int3
14001166c:     	int3
14001166d:     	int3
14001166e:     	int3
14001166f:     	int3
140011670:     	pushq	%r15
140011672:     	pushq	%r14
140011674:     	pushq	%r13
140011676:     	pushq	%r12
140011678:     	pushq	%rsi
140011679:     	pushq	%rdi
14001167a:     	pushq	%rbp
14001167b:     	pushq	%rbx
14001167c:     	subq	$0x68, %rsp
140011680:     	movq	%rcx, %rdi
140011683:     	callq	0x140011420 <.text+0x10420>
140011688:     	movb	$0x1, %sil
14001168b:     	cmpb	$0x2, %al
14001168d:     	je	0x140011850 <.text+0x10850>
140011693:     	movl	%eax, %ebp
140011695:     	leaq	0xbd40(%rip), %rbx      # 0x14001d3dc
14001169c:     	leaq	0x20(%rsp), %r14
1400116a1:     	leaq	0x40(%rsp), %r15
1400116a6:     	leaq	0xc12c(%rip), %r12      # 0x14001d7d9
1400116ad:     	leaq	0xc0c5(%rip), %r13      # 0x14001d779
1400116b4:     	jmp	0x1400116d0 <.text+0x106d0>
1400116b6:     	nopw	%cs:(%rax,%rax)
1400116c0:     	movq	%rdi, %rcx
1400116c3:     	callq	0x1400109d0 <.text+0xf9d0>
1400116c8:     	testb	%al, %al
1400116ca:     	jne	0x140011850 <.text+0x10850>
1400116d0:     	movq	(%rdi), %rcx
1400116d3:     	testq	%rcx, %rcx
1400116d6:     	je	0x1400117e1 <.text+0x107e1>
1400116dc:     	movq	0x10(%rdi), %rax
1400116e0:     	cmpq	0x8(%rdi), %rax
1400116e4:     	jae	0x1400117e1 <.text+0x107e1>
1400116ea:     	cmpb	$0x70, (%rcx,%rax)
1400116ee:     	jne	0x1400117e1 <.text+0x107e1>
1400116f4:     	incq	%rax
1400116f7:     	movq	%rax, 0x10(%rdi)
1400116fb:     	movq	0x20(%rdi), %r8
1400116ff:     	testb	$0x1, %bpl
140011703:     	je	0x140011720 <.text+0x10720>
140011705:     	testq	%r8, %r8
140011708:     	je	0x140011741 <.text+0x10741>
14001170a:     	movl	$0x2, %edx
14001170f:     	movq	%r13, %rcx
140011712:     	callq	0x140015b40 <.text+0x14b40>
140011717:     	testb	%al, %al
140011719:     	je	0x140011741 <.text+0x10741>
14001171b:     	jmp	0x140011850 <.text+0x10850>
140011720:     	testq	%r8, %r8
140011723:     	je	0x1400117b6 <.text+0x107b6>
140011729:     	movl	$0x1, %edx
14001172e:     	movq	%rbx, %rcx
140011731:     	callq	0x140015b40 <.text+0x14b40>
140011736:     	movb	$0x1, %bpl
140011739:     	testb	%al, %al
14001173b:     	jne	0x140011863 <.text+0x10863>
140011741:     	cmpq	$0x0, (%rdi)
140011745:     	je	0x1400117bf <.text+0x107bf>
140011747:     	movq	%r14, %rcx
14001174a:     	movq	%rdi, %rdx
14001174d:     	callq	0x14000edf0 <.text+0xddf0>
140011752:     	cmpq	$0x0, 0x20(%rsp)
140011758:     	je	0x140011807 <.text+0x10807>
14001175e:     	movups	0x20(%rsp), %xmm0
140011763:     	movups	0x30(%rsp), %xmm1
140011768:     	movaps	%xmm1, 0x50(%rsp)
14001176d:     	movaps	%xmm0, 0x40(%rsp)
140011772:     	movq	0x20(%rdi), %rdx
140011776:     	testq	%rdx, %rdx
140011779:     	je	0x1400116c0 <.text+0x106c0>
14001177f:     	movq	%r15, %rcx
140011782:     	callq	0x14000e310 <.text+0xd310>
140011787:     	testb	%al, %al
140011789:     	jne	0x140011850 <.text+0x10850>
14001178f:     	movq	0x20(%rdi), %r8
140011793:     	testq	%r8, %r8
140011796:     	je	0x1400116c0 <.text+0x106c0>
14001179c:     	movl	$0x3, %edx
1400117a1:     	movq	%r12, %rcx
1400117a4:     	callq	0x140015b40 <.text+0x14b40>
1400117a9:     	testb	%al, %al
1400117ab:     	je	0x1400116c0 <.text+0x106c0>
1400117b1:     	jmp	0x140011850 <.text+0x10850>
1400117b6:     	movb	$0x1, %bpl
1400117b9:     	cmpq	$0x0, (%rdi)
1400117bd:     	jne	0x140011747 <.text+0x10747>
1400117bf:     	movq	0x20(%rdi), %r8
1400117c3:     	testq	%r8, %r8
1400117c6:     	je	0x14001184e <.text+0x1084e>
1400117cc:     	leaq	0xbf9e(%rip), %rcx      # 0x14001d771
1400117d3:     	movl	$0x1, %edx
1400117d8:     	callq	0x140015b40 <.text+0x14b40>
1400117dd:     	movl	%eax, %esi
1400117df:     	jmp	0x140011850 <.text+0x10850>
1400117e1:     	testb	$0x1, %bpl
1400117e5:     	je	0x14001184e <.text+0x1084e>
1400117e7:     	movq	0x20(%rdi), %r8
1400117eb:     	testq	%r8, %r8
1400117ee:     	je	0x14001184e <.text+0x1084e>
1400117f0:     	leaq	0xbbe4(%rip), %rcx      # 0x14001d3db
1400117f7:     	movl	$0x1, %edx
1400117fc:     	callq	0x140015b40 <.text+0x14b40>
140011801:     	testb	%al, %al
140011803:     	je	0x14001184e <.text+0x1084e>
140011805:     	jmp	0x140011850 <.text+0x10850>
140011807:     	movzbl	0x28(%rsp), %ebx
14001180c:     	movq	0x20(%rdi), %r8
140011810:     	testb	%bl, %bl
140011812:     	je	0x140011827 <.text+0x10827>
140011814:     	testq	%r8, %r8
140011817:     	je	0x140011844 <.text+0x10844>
140011819:     	leaq	0xbf38(%rip), %rcx      # 0x14001d758
140011820:     	movl	$0x19, %edx
140011825:     	jmp	0x140011838 <.text+0x10838>
140011827:     	testq	%r8, %r8
14001182a:     	je	0x140011844 <.text+0x10844>
14001182c:     	leaq	0xbf15(%rip), %rcx      # 0x14001d748
140011833:     	movl	$0x10, %edx
140011838:     	callq	0x140015b40 <.text+0x14b40>
14001183d:     	movb	$0x1, %sil
140011840:     	testb	%al, %al
140011842:     	jne	0x140011850 <.text+0x10850>
140011844:     	movq	$0x0, (%rdi)
14001184b:     	movb	%bl, 0x8(%rdi)
14001184e:     	xorl	%esi, %esi
140011850:     	movl	%esi, %eax
140011852:     	addq	$0x68, %rsp
140011856:     	popq	%rbx
140011857:     	popq	%rbp
140011858:     	popq	%rdi
140011859:     	popq	%rsi
14001185a:     	popq	%r12
14001185c:     	popq	%r13
14001185e:     	popq	%r14
140011860:     	popq	%r15
140011862:     	retq
140011863:     	movb	$0x1, %sil
140011866:     	jmp	0x140011850 <.text+0x10850>
140011868:     	int3
140011869:     	int3
14001186a:     	int3
14001186b:     	int3
14001186c:     	int3
14001186d:     	int3
14001186e:     	int3
14001186f:     	int3
140011870:     	pushq	%rsi
140011871:     	pushq	%rdi
140011872:     	pushq	%rbp
140011873:     	pushq	%rbx
140011874:     	subq	$0x38, %rsp
140011878:     	movq	%rcx, %rsi
14001187b:     	movq	(%rcx), %rcx
14001187e:     	testq	%rcx, %rcx
140011881:     	je	0x140011e05 <.text+0x10e05>
140011887:     	movq	0x8(%rsi), %r9
14001188b:     	movq	0x10(%rsi), %rax
14001188f:     	cmpq	%r9, %rax
140011892:     	jae	0x140011a93 <.text+0x10a93>
140011898:     	movzbl	(%rcx,%rax), %ebx
14001189c:     	leaq	0x1(%rax), %r8
1400118a0:     	movq	%r8, 0x10(%rsi)
1400118a4:     	movl	0x18(%rsi), %r10d
1400118a8:     	incl	%r10d
1400118ab:     	movl	%r10d, 0x18(%rsi)
1400118af:     	cmpl	$0x1f4, %r10d           # imm = 0x1F4
1400118b6:     	ja	0x14001193f <.text+0x1093f>
1400118bc:     	movzbl	%bl, %r10d
1400118c0:     	addl	$-0x41, %r10d
1400118c4:     	cmpl	$0x38, %r10d
1400118c8:     	ja	0x140011a93 <.text+0x10a93>
1400118ce:     	leaq	0xc35b(%rip), %r11      # 0x14001dc30
1400118d5:     	movslq	(%r11,%r10,4), %r10
1400118d9:     	addq	%r11, %r10
1400118dc:     	jmpq	*%r10
1400118df:     	cmpq	%r9, %r8
1400118e2:     	jae	0x140011918 <.text+0x10918>
1400118e4:     	cmpb	$0x6e, (%rcx,%r8)
1400118e9:     	jne	0x140011918 <.text+0x10918>
1400118eb:     	addq	$0x2, %rax
1400118ef:     	movq	%rax, 0x10(%rsi)
1400118f3:     	movq	0x20(%rsi), %r8
1400118f7:     	testq	%r8, %r8
1400118fa:     	je	0x140011918 <.text+0x10918>
1400118fc:     	leaq	0xbc36(%rip), %rcx      # 0x14001d539
140011903:     	movl	$0x1, %edx
140011908:     	callq	0x140015b40 <.text+0x14b40>
14001190d:     	movb	$0x1, %dil
140011910:     	testb	%al, %al
140011912:     	jne	0x140011e29 <.text+0x10e29>
140011918:     	movq	%rsi, %rcx
14001191b:     	movl	%ebx, %edx
14001191d:     	callq	0x140011f30 <.text+0x10f30>
140011922:     	movb	$0x1, %dil
140011925:     	testb	%al, %al
140011927:     	jne	0x140011e29 <.text+0x10e29>
14001192d:     	cmpq	$0x0, (%rsi)
140011931:     	je	0x140011e27 <.text+0x10e27>
140011937:     	decl	0x18(%rsi)
14001193a:     	jmp	0x140011e27 <.text+0x10e27>
14001193f:     	movq	0x20(%rsi), %r8
140011943:     	testq	%r8, %r8
140011946:     	je	0x140011964 <.text+0x10964>
140011948:     	leaq	0xbe09(%rip), %rcx      # 0x14001d758
14001194f:     	movl	$0x19, %edx
140011954:     	callq	0x140015b40 <.text+0x14b40>
140011959:     	movb	$0x1, %dil
14001195c:     	testb	%al, %al
14001195e:     	jne	0x140011e29 <.text+0x10e29>
140011964:     	movq	$0x0, (%rsi)
14001196b:     	movb	$0x1, 0x8(%rsi)
14001196f:     	jmp	0x140011e27 <.text+0x10e27>
140011974:     	testb	%dl, %dl
140011976:     	je	0x140011b4c <.text+0x10b4c>
14001197c:     	xorl	%ebp, %ebp
14001197e:     	jmp	0x140011ca7 <.text+0x10ca7>
140011983:     	movq	%rsi, %rcx
140011986:     	callq	0x14000f080 <.text+0xe080>
14001198b:     	jmp	0x140011922 <.text+0x10922>
14001198d:     	cmpq	%r9, %r8
140011990:     	jae	0x1400119ae <.text+0x109ae>
140011992:     	cmpb	$0x65, (%rcx,%r8)
140011997:     	jne	0x1400119ae <.text+0x109ae>
140011999:     	addq	$0x2, %rax
14001199d:     	movq	%rax, 0x10(%rsi)
1400119a1:     	movq	%rsi, %rcx
1400119a4:     	callq	0x140012110 <.text+0x11110>
1400119a9:     	jmp	0x140011922 <.text+0x10922>
1400119ae:     	testb	%dl, %dl
1400119b0:     	je	0x140011af0 <.text+0x10af0>
1400119b6:     	xorl	%ebp, %ebp
1400119b8:     	jmp	0x140011c13 <.text+0x10c13>
1400119bd:     	testb	%dl, %dl
1400119bf:     	je	0x140011b7d <.text+0x10b7d>
1400119c5:     	xorl	%ebp, %ebp
1400119c7:     	jmp	0x140011cf9 <.text+0x10cf9>
1400119cc:     	testb	%dl, %dl
1400119ce:     	je	0x140011bae <.text+0x10bae>
1400119d4:     	xorl	%ebp, %ebp
1400119d6:     	jmp	0x140011d84 <.text+0x10d84>
1400119db:     	leaq	0x28(%rsp), %rcx
1400119e0:     	movq	%rsi, %rdx
1400119e3:     	callq	0x14000eb20 <.text+0xdb20>
1400119e8:     	movq	0x28(%rsp), %rcx
1400119ed:     	testq	%rcx, %rcx
1400119f0:     	je	0x140011b21 <.text+0x10b21>
1400119f6:     	movq	0x30(%rsp), %rdx
1400119fb:     	callq	0x14000e960 <.text+0xd960>
140011a00:     	cmpq	$0x1, %rax
140011a04:     	jne	0x140011a93 <.text+0x10a93>
140011a0a:     	cmpq	$0x1, %rdx
140011a0e:     	je	0x140011ebe <.text+0x10ebe>
140011a14:     	testq	%rdx, %rdx
140011a17:     	jne	0x140011a93 <.text+0x10a93>
140011a19:     	movq	0x20(%rsi), %r8
140011a1d:     	testq	%r8, %r8
140011a20:     	je	0x14001192d <.text+0x1092d>
140011a26:     	leaq	0xbdaf(%rip), %rcx      # 0x14001d7dc
140011a2d:     	movl	$0x5, %edx
140011a32:     	jmp	0x140011e89 <.text+0x10e89>
140011a37:     	leaq	0x28(%rsp), %rcx
140011a3c:     	movq	%rsi, %rdx
140011a3f:     	callq	0x14000eb20 <.text+0xdb20>
140011a44:     	movq	0x28(%rsp), %rcx
140011a49:     	testq	%rcx, %rcx
140011a4c:     	je	0x140011b21 <.text+0x10b21>
140011a52:     	movq	0x30(%rsp), %rdx
140011a57:     	callq	0x14000e960 <.text+0xd960>
140011a5c:     	testq	%rax, %rax
140011a5f:     	je	0x140011a93 <.text+0x10a93>
140011a61:     	movq	%rdx, %rax
140011a64:     	shrq	$0x20, %rax
140011a68:     	jne	0x140011a93 <.text+0x10a93>
140011a6a:     	movl	%edx, %eax
140011a6c:     	xorl	$0xd800, %eax           # imm = 0xD800
140011a71:     	addl	$0xffef0000, %eax       # imm = 0xFFEF0000
140011a76:     	cmpl	$0xffef0800, %eax       # imm = 0xFFEF0800
140011a7b:     	jb	0x140011a93 <.text+0x10a93>
140011a7d:     	cmpl	$0x110000, %edx         # imm = 0x110000
140011a83:     	je	0x140011a93 <.text+0x10a93>
140011a85:     	movq	0x20(%rsi), %rcx
140011a89:     	callq	0x14000f550 <.text+0xe550>
140011a8e:     	jmp	0x140011922 <.text+0x10922>
140011a93:     	movq	0x20(%rsi), %r8
140011a97:     	testq	%r8, %r8
140011a9a:     	je	0x140011ab8 <.text+0x10ab8>
140011a9c:     	leaq	0xbca5(%rip), %rcx      # 0x14001d748
140011aa3:     	movl	$0x10, %edx
140011aa8:     	callq	0x140015b40 <.text+0x14b40>
140011aad:     	movb	$0x1, %dil
140011ab0:     	testb	%al, %al
140011ab2:     	jne	0x140011e29 <.text+0x10e29>
140011ab8:     	movq	$0x0, (%rsi)
140011abf:     	movb	$0x0, 0x8(%rsi)
140011ac3:     	jmp	0x140011e27 <.text+0x10e27>
140011ac8:     	testb	%dl, %dl
140011aca:     	je	0x140011bdf <.text+0x10bdf>
140011ad0:     	xorl	%ebp, %ebp
140011ad2:     	jmp	0x140011e37 <.text+0x10e37>
140011ad7:     	movq	0x20(%rsi), %r8
140011adb:     	testq	%r8, %r8
140011ade:     	je	0x14001192d <.text+0x1092d>
140011ae4:     	leaq	0xbbdf(%rip), %rcx      # 0x14001d6ca
140011aeb:     	jmp	0x140011e84 <.text+0x10e84>
140011af0:     	movq	0x20(%rsi), %r8
140011af4:     	testq	%r8, %r8
140011af7:     	je	0x140011c10 <.text+0x10c10>
140011afd:     	leaq	0xbce1(%rip), %rcx      # 0x14001d7e5
140011b04:     	movl	$0x1, %edx
140011b09:     	callq	0x140015b40 <.text+0x14b40>
140011b0e:     	movb	$0x1, %bpl
140011b11:     	movb	$0x1, %dil
140011b14:     	testb	%al, %al
140011b16:     	je	0x140011c13 <.text+0x10c13>
140011b1c:     	jmp	0x140011e29 <.text+0x10e29>
140011b21:     	movzbl	0x30(%rsp), %ebx
140011b26:     	movq	0x20(%rsi), %r8
140011b2a:     	testb	%bl, %bl
140011b2c:     	je	0x140011c74 <.text+0x10c74>
140011b32:     	testq	%r8, %r8
140011b35:     	je	0x140011c95 <.text+0x10c95>
140011b3b:     	leaq	0xbc16(%rip), %rcx      # 0x14001d758
140011b42:     	movl	$0x19, %edx
140011b47:     	jmp	0x140011c85 <.text+0x10c85>
140011b4c:     	movq	0x20(%rsi), %r8
140011b50:     	testq	%r8, %r8
140011b53:     	je	0x140011ca4 <.text+0x10ca4>
140011b59:     	leaq	0xbc85(%rip), %rcx      # 0x14001d7e5
140011b60:     	movl	$0x1, %edx
140011b65:     	callq	0x140015b40 <.text+0x14b40>
140011b6a:     	movb	$0x1, %bpl
140011b6d:     	movb	$0x1, %dil
140011b70:     	testb	%al, %al
140011b72:     	je	0x140011ca7 <.text+0x10ca7>
140011b78:     	jmp	0x140011e29 <.text+0x10e29>
140011b7d:     	movq	0x20(%rsi), %r8
140011b81:     	testq	%r8, %r8
140011b84:     	je	0x140011cf6 <.text+0x10cf6>
140011b8a:     	leaq	0xbc54(%rip), %rcx      # 0x14001d7e5
140011b91:     	movl	$0x1, %edx
140011b96:     	callq	0x140015b40 <.text+0x14b40>
140011b9b:     	movb	$0x1, %bpl
140011b9e:     	movb	$0x1, %dil
140011ba1:     	testb	%al, %al
140011ba3:     	je	0x140011cf9 <.text+0x10cf9>
140011ba9:     	jmp	0x140011e29 <.text+0x10e29>
140011bae:     	movq	0x20(%rsi), %r8
140011bb2:     	testq	%r8, %r8
140011bb5:     	je	0x140011d81 <.text+0x10d81>
140011bbb:     	leaq	0xbc23(%rip), %rcx      # 0x14001d7e5
140011bc2:     	movl	$0x1, %edx
140011bc7:     	callq	0x140015b40 <.text+0x14b40>
140011bcc:     	movb	$0x1, %bpl
140011bcf:     	movb	$0x1, %dil
140011bd2:     	testb	%al, %al
140011bd4:     	je	0x140011d84 <.text+0x10d84>
140011bda:     	jmp	0x140011e29 <.text+0x10e29>
140011bdf:     	movq	0x20(%rsi), %r8
140011be3:     	testq	%r8, %r8
140011be6:     	je	0x140011e34 <.text+0x10e34>
140011bec:     	leaq	0xbbf2(%rip), %rcx      # 0x14001d7e5
140011bf3:     	movl	$0x1, %edx
140011bf8:     	callq	0x140015b40 <.text+0x14b40>
140011bfd:     	movb	$0x1, %bpl
140011c00:     	movb	$0x1, %dil
140011c03:     	testb	%al, %al
140011c05:     	jne	0x140011e29 <.text+0x10e29>
140011c0b:     	jmp	0x140011e37 <.text+0x10e37>
140011c10:     	movb	$0x1, %bpl
140011c13:     	movq	0x20(%rsi), %r8
140011c17:     	testq	%r8, %r8
140011c1a:     	je	0x140011c38 <.text+0x10c38>
140011c1c:     	leaq	0xb7ba(%rip), %rcx      # 0x14001d3dd
140011c23:     	movl	$0x1, %edx
140011c28:     	callq	0x140015b40 <.text+0x14b40>
140011c2d:     	movb	$0x1, %dil
140011c30:     	testb	%al, %al
140011c32:     	jne	0x140011e29 <.text+0x10e29>
140011c38:     	cmpb	$0x52, %bl
140011c3b:     	je	0x140011c62 <.text+0x10c62>
140011c3d:     	movq	0x20(%rsi), %r8
140011c41:     	testq	%r8, %r8
140011c44:     	je	0x140011c62 <.text+0x10c62>
140011c46:     	leaq	0xbb45(%rip), %rcx      # 0x14001d792
140011c4d:     	movl	$0x4, %edx
140011c52:     	callq	0x140015b40 <.text+0x14b40>
140011c57:     	movb	$0x1, %dil
140011c5a:     	testb	%al, %al
140011c5c:     	jne	0x140011e29 <.text+0x10e29>
140011c62:     	movb	$0x1, %dil
140011c65:     	movq	%rsi, %rcx
140011c68:     	movb	$0x1, %dl
140011c6a:     	callq	0x140011870 <.text+0x10870>
140011c6f:     	jmp	0x140011e63 <.text+0x10e63>
140011c74:     	testq	%r8, %r8
140011c77:     	je	0x140011c95 <.text+0x10c95>
140011c79:     	leaq	0xbac8(%rip), %rcx      # 0x14001d748
140011c80:     	movl	$0x10, %edx
140011c85:     	callq	0x140015b40 <.text+0x14b40>
140011c8a:     	movb	$0x1, %dil
140011c8d:     	testb	%al, %al
140011c8f:     	jne	0x140011e29 <.text+0x10e29>
140011c95:     	movq	$0x0, (%rsi)
140011c9c:     	movb	%bl, 0x8(%rsi)
140011c9f:     	jmp	0x140011e27 <.text+0x10e27>
140011ca4:     	movb	$0x1, %bpl
140011ca7:     	movq	0x20(%rsi), %r8
140011cab:     	testq	%r8, %r8
140011cae:     	je	0x140011ccc <.text+0x10ccc>
140011cb0:     	leaq	0xbac4(%rip), %rcx      # 0x14001d77b
140011cb7:     	movl	$0x1, %edx
140011cbc:     	callq	0x140015b40 <.text+0x14b40>
140011cc1:     	movb	$0x1, %dil
140011cc4:     	testb	%al, %al
140011cc6:     	jne	0x140011e29 <.text+0x10e29>
140011ccc:     	movq	%rsi, %rcx
140011ccf:     	callq	0x14000ffe0 <.text+0xefe0>
140011cd4:     	movb	$0x1, %dil
140011cd7:     	testq	%rax, %rax
140011cda:     	jne	0x140011e29 <.text+0x10e29>
140011ce0:     	movq	0x20(%rsi), %r8
140011ce4:     	testq	%r8, %r8
140011ce7:     	je	0x140011e67 <.text+0x10e67>
140011ced:     	leaq	0xba88(%rip), %rcx      # 0x14001d77c
140011cf4:     	jmp	0x140011d72 <.text+0x10d72>
140011cf6:     	movb	$0x1, %bpl
140011cf9:     	movq	0x20(%rsi), %r8
140011cfd:     	testq	%r8, %r8
140011d00:     	je	0x140011d1e <.text+0x10d1e>
140011d02:     	leaq	0xb6d1(%rip), %rcx      # 0x14001d3da
140011d09:     	movl	$0x1, %edx
140011d0e:     	callq	0x140015b40 <.text+0x14b40>
140011d13:     	movb	$0x1, %dil
140011d16:     	testb	%al, %al
140011d18:     	jne	0x140011e29 <.text+0x10e29>
140011d1e:     	movq	%rsi, %rcx
140011d21:     	callq	0x14000ff50 <.text+0xef50>
140011d26:     	movb	$0x1, %dil
140011d29:     	testq	%rax, %rax
140011d2c:     	jne	0x140011e29 <.text+0x10e29>
140011d32:     	cmpq	$0x1, %rdx
140011d36:     	jne	0x140011d5e <.text+0x10d5e>
140011d38:     	movq	0x20(%rsi), %r8
140011d3c:     	testq	%r8, %r8
140011d3f:     	je	0x140011e67 <.text+0x10e67>
140011d45:     	leaq	0xb68c(%rip), %rcx      # 0x14001d3d8
140011d4c:     	movl	$0x1, %edx
140011d51:     	callq	0x140015b40 <.text+0x14b40>
140011d56:     	testb	%al, %al
140011d58:     	jne	0x140011e29 <.text+0x10e29>
140011d5e:     	movq	0x20(%rsi), %r8
140011d62:     	testq	%r8, %r8
140011d65:     	je	0x140011e67 <.text+0x10e67>
140011d6b:     	leaq	0xb667(%rip), %rcx      # 0x14001d3d9
140011d72:     	movl	$0x1, %edx
140011d77:     	callq	0x140015b40 <.text+0x14b40>
140011d7c:     	jmp	0x140011e63 <.text+0x10e63>
140011d81:     	movb	$0x1, %bpl
140011d84:     	movb	$0x1, %dil
140011d87:     	movq	%rsi, %rcx
140011d8a:     	movb	$0x1, %dl
140011d8c:     	callq	0x140010190 <.text+0xf190>
140011d91:     	testb	%al, %al
140011d93:     	jne	0x140011e29 <.text+0x10e29>
140011d99:     	movq	(%rsi), %rax
140011d9c:     	testq	%rax, %rax
140011d9f:     	je	0x140011e05 <.text+0x10e05>
140011da1:     	movq	0x10(%rsi), %rcx
140011da5:     	cmpq	0x8(%rsi), %rcx
140011da9:     	jae	0x140011e93 <.text+0x10e93>
140011daf:     	movzbl	(%rax,%rcx), %eax
140011db3:     	incq	%rcx
140011db6:     	movq	%rcx, 0x10(%rsi)
140011dba:     	cmpl	$0x53, %eax
140011dbd:     	je	0x140011ed9 <.text+0x10ed9>
140011dc3:     	cmpl	$0x55, %eax
140011dc6:     	je	0x140011e67 <.text+0x10e67>
140011dcc:     	cmpl	$0x54, %eax
140011dcf:     	jne	0x140011e93 <.text+0x10e93>
140011dd5:     	movq	0x20(%rsi), %r8
140011dd9:     	testq	%r8, %r8
140011ddc:     	je	0x140011df3 <.text+0x10df3>
140011dde:     	leaq	0xb5f5(%rip), %rcx      # 0x14001d3da
140011de5:     	movl	$0x1, %edx
140011dea:     	callq	0x140015b40 <.text+0x14b40>
140011def:     	testb	%al, %al
140011df1:     	jne	0x140011e29 <.text+0x10e29>
140011df3:     	movq	%rsi, %rcx
140011df6:     	callq	0x14000ffe0 <.text+0xefe0>
140011dfb:     	testq	%rax, %rax
140011dfe:     	jne	0x140011e29 <.text+0x10e29>
140011e00:     	jmp	0x140011d5e <.text+0x10d5e>
140011e05:     	movq	0x20(%rsi), %r8
140011e09:     	testq	%r8, %r8
140011e0c:     	je	0x140011e27 <.text+0x10e27>
140011e0e:     	leaq	0xb95c(%rip), %rcx      # 0x14001d771
140011e15:     	movl	$0x1, %edx
140011e1a:     	addq	$0x38, %rsp
140011e1e:     	popq	%rbx
140011e1f:     	popq	%rbp
140011e20:     	popq	%rdi
140011e21:     	popq	%rsi
140011e22:     	jmp	0x140015b40 <.text+0x14b40>
140011e27:     	xorl	%edi, %edi
140011e29:     	movl	%edi, %eax
140011e2b:     	addq	$0x38, %rsp
140011e2f:     	popq	%rbx
140011e30:     	popq	%rbp
140011e31:     	popq	%rdi
140011e32:     	popq	%rsi
140011e33:     	retq
140011e34:     	movb	$0x1, %bpl
140011e37:     	movq	0x20(%rsi), %r8
140011e3b:     	testq	%r8, %r8
140011e3e:     	je	0x140011e58 <.text+0x10e58>
140011e40:     	leaq	0xb597(%rip), %rcx      # 0x14001d3de
140011e47:     	movl	$0x1, %edx
140011e4c:     	callq	0x140015b40 <.text+0x14b40>
140011e51:     	movb	$0x1, %dil
140011e54:     	testb	%al, %al
140011e56:     	jne	0x140011e29 <.text+0x10e29>
140011e58:     	movq	%rsi, %rcx
140011e5b:     	callq	0x140012110 <.text+0x11110>
140011e60:     	movb	$0x1, %dil
140011e63:     	testb	%al, %al
140011e65:     	jne	0x140011e29 <.text+0x10e29>
140011e67:     	testb	%bpl, %bpl
140011e6a:     	je	0x14001192d <.text+0x1092d>
140011e70:     	movq	0x20(%rsi), %r8
140011e74:     	testq	%r8, %r8
140011e77:     	je	0x14001192d <.text+0x1092d>
140011e7d:     	leaq	0xb6b6(%rip), %rcx      # 0x14001d53a
140011e84:     	movl	$0x1, %edx
140011e89:     	callq	0x140015b40 <.text+0x14b40>
140011e8e:     	jmp	0x140011922 <.text+0x10922>
140011e93:     	movq	0x20(%rsi), %r8
140011e97:     	testq	%r8, %r8
140011e9a:     	je	0x140011ab8 <.text+0x10ab8>
140011ea0:     	leaq	0xb8a1(%rip), %rcx      # 0x14001d748
140011ea7:     	movl	$0x10, %edx
140011eac:     	callq	0x140015b40 <.text+0x14b40>
140011eb1:     	testb	%al, %al
140011eb3:     	je	0x140011ab8 <.text+0x10ab8>
140011eb9:     	jmp	0x140011e29 <.text+0x10e29>
140011ebe:     	movq	0x20(%rsi), %r8
140011ec2:     	testq	%r8, %r8
140011ec5:     	je	0x14001192d <.text+0x1092d>
140011ecb:     	leaq	0xb90f(%rip), %rcx      # 0x14001d7e1
140011ed2:     	movl	$0x4, %edx
140011ed7:     	jmp	0x140011e89 <.text+0x10e89>
140011ed9:     	movq	0x20(%rsi), %r8
140011edd:     	testq	%r8, %r8
140011ee0:     	je	0x140011efb <.text+0x10efb>
140011ee2:     	leaq	0xb8fd(%rip), %rcx      # 0x14001d7e6
140011ee9:     	movl	$0x3, %edx
140011eee:     	callq	0x140015b40 <.text+0x14b40>
140011ef3:     	testb	%al, %al
140011ef5:     	jne	0x140011e29 <.text+0x10e29>
140011efb:     	movq	%rsi, %rcx
140011efe:     	callq	0x14000fc90 <.text+0xec90>
140011f03:     	testq	%rax, %rax
140011f06:     	jne	0x140011e29 <.text+0x10e29>
140011f0c:     	movq	0x20(%rsi), %r8
140011f10:     	testq	%r8, %r8
140011f13:     	je	0x140011e67 <.text+0x10e67>
140011f19:     	leaq	0xb8c9(%rip), %rcx      # 0x14001d7e9
140011f20:     	movl	$0x2, %edx
140011f25:     	jmp	0x140011d77 <.text+0x10d77>
140011f2a:     	int3
140011f2b:     	int3
140011f2c:     	int3
140011f2d:     	int3
140011f2e:     	int3
140011f2f:     	int3
140011f30:     	pushq	%r14
140011f32:     	pushq	%rsi
140011f33:     	pushq	%rdi
140011f34:     	pushq	%rbp
140011f35:     	pushq	%rbx
140011f36:     	subq	$0x30, %rsp
140011f3a:     	movq	%rcx, %rsi
140011f3d:     	movq	(%rcx), %rcx
140011f40:     	testq	%rcx, %rcx
140011f43:     	je	0x140012031 <.text+0x11031>
140011f49:     	movl	%edx, %ebx
140011f4b:     	movq	0x8(%rsi), %rdx
140011f4f:     	movq	0x10(%rsi), %r8
140011f53:     	leaq	0x1(%r8), %rax
140011f57:     	leaq	(%rcx,%r8), %rdi
140011f5b:     	xorl	%r9d, %r9d
140011f5e:     	nop
140011f60:     	movq	%r9, %r14
140011f63:     	addq	%r8, %r9
140011f66:     	cmpq	%rdx, %r9
140011f69:     	jae	0x140011ffc <.text+0x10ffc>
140011f6f:     	movzbl	(%rdi,%r14), %r10d
140011f74:     	leaq	(%rax,%r14), %r9
140011f78:     	movq	%r9, 0x10(%rsi)
140011f7c:     	leal	-0x30(%r10), %r11d
140011f80:     	leaq	0x1(%r14), %r9
140011f84:     	cmpb	$0xa, %r11b
140011f88:     	jb	0x140011f60 <.text+0x10f60>
140011f8a:     	leal	-0x61(%r10), %r11d
140011f8e:     	cmpb	$0x6, %r11b
140011f92:     	jb	0x140011f60 <.text+0x10f60>
140011f94:     	cmpb	$0x5f, %r10b
140011f98:     	jne	0x140011ffc <.text+0x10ffc>
140011f9a:     	addq	%r8, %r9
140011f9d:     	decq	%r9
140011fa0:     	cmpq	%r9, %r8
140011fa3:     	ja	0x1400120dc <.text+0x110dc>
140011fa9:     	testq	%r8, %r8
140011fac:     	je	0x140011fb9 <.text+0x10fb9>
140011fae:     	cmpb	$-0x41, (%rcx,%r8)
140011fb3:     	jle	0x1400120dc <.text+0x110dc>
140011fb9:     	movq	%rdi, %rcx
140011fbc:     	movq	%r14, %rdx
140011fbf:     	callq	0x14000e960 <.text+0xd960>
140011fc4:     	testq	%rax, %rax
140011fc7:     	je	0x140012053 <.text+0x11053>
140011fcd:     	movq	0x20(%rsi), %rsi
140011fd1:     	movq	%rdx, 0x28(%rsp)
140011fd6:     	testq	%rsi, %rsi
140011fd9:     	je	0x1400120cd <.text+0x110cd>
140011fdf:     	leaq	0x28(%rsp), %rcx
140011fe4:     	movq	%rsi, %rdx
140011fe7:     	callq	0x140017e10 <.text+0x16e10>
140011fec:     	movb	$0x1, %bpl
140011fef:     	testb	%al, %al
140011ff1:     	je	0x140012089 <.text+0x11089>
140011ff7:     	jmp	0x1400120cf <.text+0x110cf>
140011ffc:     	movq	0x20(%rsi), %r8
140012000:     	testq	%r8, %r8
140012003:     	je	0x140012021 <.text+0x11021>
140012005:     	leaq	0xb73c(%rip), %rcx      # 0x14001d748
14001200c:     	movl	$0x10, %edx
140012011:     	callq	0x140015b40 <.text+0x14b40>
140012016:     	movb	$0x1, %bpl
140012019:     	testb	%al, %al
14001201b:     	jne	0x1400120cf <.text+0x110cf>
140012021:     	movq	$0x0, (%rsi)
140012028:     	movb	$0x0, 0x8(%rsi)
14001202c:     	jmp	0x1400120cd <.text+0x110cd>
140012031:     	movq	0x20(%rsi), %r8
140012035:     	testq	%r8, %r8
140012038:     	je	0x1400120cd <.text+0x110cd>
14001203e:     	leaq	0xb72c(%rip), %rcx      # 0x14001d771
140012045:     	movl	$0x1, %edx
14001204a:     	callq	0x140015b40 <.text+0x14b40>
14001204f:     	movl	%eax, %ebp
140012051:     	jmp	0x1400120cf <.text+0x110cf>
140012053:     	movq	0x20(%rsi), %rsi
140012057:     	testq	%rsi, %rsi
14001205a:     	je	0x1400120cd <.text+0x110cd>
14001205c:     	leaq	0xb78a(%rip), %rcx      # 0x14001d7ed
140012063:     	movl	$0x2, %edx
140012068:     	movq	%rsi, %r8
14001206b:     	callq	0x140015b40 <.text+0x14b40>
140012070:     	movb	$0x1, %bpl
140012073:     	testb	%al, %al
140012075:     	jne	0x1400120cf <.text+0x110cf>
140012077:     	movq	%rdi, %rcx
14001207a:     	movq	%r14, %rdx
14001207d:     	movq	%rsi, %r8
140012080:     	callq	0x140015b40 <.text+0x14b40>
140012085:     	testb	%al, %al
140012087:     	jne	0x1400120cf <.text+0x110cf>
140012089:     	testb	$0x4, 0x34(%rsi)
14001208d:     	jne	0x1400120cd <.text+0x110cd>
14001208f:     	addb	$-0x61, %bl
140012092:     	cmpb	$0x1a, %bl
140012095:     	jae	0x1400120ef <.text+0x110ef>
140012097:     	movzbl	%bl, %eax
14001209a:     	movl	$0x3bcfbbf, %ecx        # imm = 0x3BCFBBF
14001209f:     	btl	%eax, %ecx
1400120a2:     	jae	0x1400120ef <.text+0x110ef>
1400120a4:     	movsbq	%bl, %rax
1400120a8:     	leaq	0xb891(%rip), %rcx      # 0x14001d940
1400120af:     	movq	(%rcx,%rax,8), %rdx
1400120b3:     	leaq	0xb956(%rip), %rcx      # 0x14001da10
1400120ba:     	movq	(%rcx,%rax,8), %rcx
1400120be:     	movq	%rsi, %r8
1400120c1:     	callq	0x140015b40 <.text+0x14b40>
1400120c6:     	movb	$0x1, %bpl
1400120c9:     	testb	%al, %al
1400120cb:     	jne	0x1400120cf <.text+0x110cf>
1400120cd:     	xorl	%ebp, %ebp
1400120cf:     	movl	%ebp, %eax
1400120d1:     	addq	$0x30, %rsp
1400120d5:     	popq	%rbx
1400120d6:     	popq	%rbp
1400120d7:     	popq	%rdi
1400120d8:     	popq	%rsi
1400120d9:     	popq	%r14
1400120db:     	retq
1400120dc:     	leaq	0xb5ed(%rip), %rax      # 0x14001d6d0
1400120e3:     	movq	%rax, 0x20(%rsp)
1400120e8:     	callq	0x140019e10 <.text+0x18e10>
1400120ed:     	ud2
1400120ef:     	leaq	0xb16a(%rip), %rcx      # 0x14001d260
1400120f6:     	leaq	0xb6f3(%rip), %r8       # 0x14001d7f0
1400120fd:     	movl	$0x2b, %edx
140012102:     	callq	0x140019880 <.text+0x18880>
140012107:     	ud2
140012109:     	int3
14001210a:     	int3
14001210b:     	int3
14001210c:     	int3
14001210d:     	int3
14001210e:     	int3
14001210f:     	int3
140012110:     	pushq	%r15
140012112:     	pushq	%r14
140012114:     	pushq	%rsi
140012115:     	pushq	%rdi
140012116:     	pushq	%rbp
140012117:     	pushq	%rbx
140012118:     	subq	$0x78, %rsp
14001211c:     	movq	%rcx, %rdi
14001211f:     	movq	(%rcx), %rcx
140012122:     	testq	%rcx, %rcx
140012125:     	je	0x14001228c <.text+0x1128c>
14001212b:     	movq	0x8(%rdi), %rdx
14001212f:     	movq	0x10(%rdi), %r8
140012133:     	leaq	0x1(%r8), %rax
140012137:     	leaq	(%rcx,%r8), %rbx
14001213b:     	xorl	%r9d, %r9d
14001213e:     	nop
140012140:     	movq	%r9, %r14
140012143:     	addq	%r8, %r9
140012146:     	cmpq	%rdx, %r9
140012149:     	jae	0x14001225e <.text+0x1125e>
14001214f:     	movzbl	(%rbx,%r14), %r10d
140012154:     	leaq	(%rax,%r14), %r9
140012158:     	movq	%r9, 0x10(%rdi)
14001215c:     	leal	-0x30(%r10), %r11d
140012160:     	leaq	0x1(%r14), %r9
140012164:     	cmpb	$0xa, %r11b
140012168:     	jb	0x140012140 <.text+0x11140>
14001216a:     	leal	-0x61(%r10), %r11d
14001216e:     	cmpb	$0x6, %r11b
140012172:     	jb	0x140012140 <.text+0x11140>
140012174:     	cmpb	$0x5f, %r10b
140012178:     	jne	0x14001225e <.text+0x1125e>
14001217e:     	addq	%r8, %r9
140012181:     	decq	%r9
140012184:     	cmpq	%r9, %r8
140012187:     	ja	0x14001237d <.text+0x1137d>
14001218d:     	testq	%r8, %r8
140012190:     	je	0x14001219d <.text+0x1119d>
140012192:     	cmpb	$-0x41, (%rcx,%r8)
140012197:     	jle	0x14001237d <.text+0x1137d>
14001219d:     	testb	$0x1, %r14b
1400121a1:     	jne	0x14001225e <.text+0x1125e>
1400121a7:     	andq	$-0x2, %r14
1400121ab:     	leaq	(%rbx,%r14), %r15
1400121af:     	movq	%rbx, 0x40(%rsp)
1400121b4:     	movq	%r14, 0x48(%rsp)
1400121b9:     	movq	%r15, 0x50(%rsp)
1400121be:     	movq	$0x0, 0x58(%rsp)
1400121c7:     	movq	$0x2, 0x60(%rsp)
1400121d0:     	leaq	0x40(%rsp), %rsi
1400121d5:     	nopw	%cs:(%rax,%rax)
1400121e0:     	movq	%rsi, %rcx
1400121e3:     	callq	0x14000c470 <.text+0xb470>
1400121e8:     	cmpl	$0x110000, %eax         # imm = 0x110000
1400121ed:     	jb	0x1400121e0 <.text+0x111e0>
1400121ef:     	cmpl	$0x110001, %eax         # imm = 0x110001
1400121f4:     	jne	0x14001225e <.text+0x1125e>
1400121f6:     	movq	0x20(%rdi), %rdi
1400121fa:     	testq	%rdi, %rdi
1400121fd:     	je	0x1400122b2 <.text+0x112b2>
140012203:     	movq	%rdi, %rcx
140012206:     	movl	$0x22, %edx
14001220b:     	callq	0x140015770 <.text+0x14770>
140012210:     	movb	$0x1, %sil
140012213:     	testb	%al, %al
140012215:     	jne	0x1400122b4 <.text+0x112b4>
14001221b:     	movq	%rbx, 0x40(%rsp)
140012220:     	movq	%r14, 0x48(%rsp)
140012225:     	movq	%r15, 0x50(%rsp)
14001222a:     	movq	$0x0, 0x58(%rsp)
140012233:     	movq	$0x2, 0x60(%rsp)
14001223c:     	leaq	0x40(%rsp), %rcx
140012241:     	callq	0x14000c470 <.text+0xb470>
140012246:     	cmpl	$0x110001, %eax         # imm = 0x110001
14001224b:     	jne	0x1400122c3 <.text+0x112c3>
14001224d:     	movq	%rdi, %rcx
140012250:     	movl	$0x22, %edx
140012255:     	callq	0x140015770 <.text+0x14770>
14001225a:     	movl	%eax, %esi
14001225c:     	jmp	0x1400122b4 <.text+0x112b4>
14001225e:     	movq	0x20(%rdi), %r8
140012262:     	testq	%r8, %r8
140012265:     	je	0x14001227f <.text+0x1127f>
140012267:     	leaq	0xb4da(%rip), %rcx      # 0x14001d748
14001226e:     	movl	$0x10, %edx
140012273:     	callq	0x140015b40 <.text+0x14b40>
140012278:     	movb	$0x1, %sil
14001227b:     	testb	%al, %al
14001227d:     	jne	0x1400122b4 <.text+0x112b4>
14001227f:     	movq	$0x0, (%rdi)
140012286:     	movb	$0x0, 0x8(%rdi)
14001228a:     	jmp	0x1400122b2 <.text+0x112b2>
14001228c:     	movq	0x20(%rdi), %r8
140012290:     	testq	%r8, %r8
140012293:     	je	0x1400122b2 <.text+0x112b2>
140012295:     	leaq	0xb4d5(%rip), %rcx      # 0x14001d771
14001229c:     	movl	$0x1, %edx
1400122a1:     	addq	$0x78, %rsp
1400122a5:     	popq	%rbx
1400122a6:     	popq	%rbp
1400122a7:     	popq	%rdi
1400122a8:     	popq	%rsi
1400122a9:     	popq	%r14
1400122ab:     	popq	%r15
1400122ad:     	jmp	0x140015b40 <.text+0x14b40>
1400122b2:     	xorl	%esi, %esi
1400122b4:     	movl	%esi, %eax
1400122b6:     	addq	$0x78, %rsp
1400122ba:     	popq	%rbx
1400122bb:     	popq	%rbp
1400122bc:     	popq	%rdi
1400122bd:     	popq	%rsi
1400122be:     	popq	%r14
1400122c0:     	popq	%r15
1400122c2:     	retq
1400122c3:     	leaq	0x40(%rsp), %rbx
1400122c8:     	leaq	0x6c(%rsp), %r14
1400122cd:     	leaq	0x30(%rsp), %r15
1400122d2:     	cmpl	$0x110000, %eax         # imm = 0x110000
1400122d7:     	je	0x140012390 <.text+0x11390>
1400122dd:     	cmpl	$0x27, %eax
1400122e0:     	jne	0x140012307 <.text+0x11307>
1400122e2:     	movq	%rdi, %rcx
1400122e5:     	movl	$0x27, %edx
1400122ea:     	callq	0x140015770 <.text+0x14770>
1400122ef:     	testb	%al, %al
1400122f1:     	jne	0x1400122b4 <.text+0x112b4>
1400122f3:     	movq	%rbx, %rcx
1400122f6:     	callq	0x14000c470 <.text+0xb470>
1400122fb:     	cmpl	$0x110001, %eax         # imm = 0x110001
140012300:     	jne	0x1400122d2 <.text+0x112d2>
140012302:     	jmp	0x14001224d <.text+0x1124d>
140012307:     	movq	%r14, %rcx
14001230a:     	movl	%eax, %edx
14001230c:     	callq	0x14000ce50 <.text+0xbe50>
140012311:     	movl	0x74(%rsp), %eax
140012315:     	movl	%eax, 0x38(%rsp)
140012319:     	movq	0x6c(%rsp), %rax
14001231e:     	movq	%rax, 0x30(%rsp)
140012323:     	jmp	0x140012343 <.text+0x11343>
140012325:     	movl	0x34(%rsp), %ebp
140012329:     	movq	%r15, %rcx
14001232c:     	callq	0x140014070 <.text+0x13070>
140012331:     	movq	%rdi, %rcx
140012334:     	movl	%ebp, %edx
140012336:     	callq	0x140015770 <.text+0x14770>
14001233b:     	testb	%al, %al
14001233d:     	jne	0x1400122b4 <.text+0x112b4>
140012343:     	cmpb	$-0x80, 0x30(%rsp)
140012348:     	je	0x140012325 <.text+0x11325>
14001234a:     	movzbl	0x3a(%rsp), %eax
14001234f:     	cmpb	0x3b(%rsp), %al
140012353:     	jae	0x1400122f3 <.text+0x112f3>
140012355:     	movzbl	%al, %ecx
140012358:     	leal	0x1(%rax), %edx
14001235b:     	movb	%dl, 0x3a(%rsp)
14001235f:     	cmpb	$0xa, %al
140012361:     	jae	0x14001236a <.text+0x1136a>
140012363:     	movzbl	0x30(%rsp,%rcx), %ebp
140012368:     	jmp	0x140012331 <.text+0x11331>
14001236a:     	leaq	0xaccf(%rip), %r8       # 0x14001d040
140012371:     	movl	$0xa, %edx
140012376:     	callq	0x140019920 <.text+0x18920>
14001237b:     	ud2
14001237d:     	leaq	0xb34c(%rip), %rax      # 0x14001d6d0
140012384:     	movq	%rax, 0x20(%rsp)
140012389:     	callq	0x140019e10 <.text+0x18e10>
14001238e:     	ud2
140012390:     	leaq	0xaba9(%rip), %rax      # 0x14001cf40
140012397:     	movq	%rax, 0x20(%rsp)
14001239c:     	leaq	0xacf5(%rip), %rcx      # 0x14001d098
1400123a3:     	leaq	0xad1e(%rip), %r9       # 0x14001d0c8
1400123aa:     	leaq	0x30(%rsp), %r8
1400123af:     	movl	$0x2b, %edx
1400123b4:     	callq	0x140019bb0 <.text+0x18bb0>
1400123b9:     	ud2
1400123bb:     	int3
1400123bc:     	int3
1400123bd:     	int3
1400123be:     	int3
1400123bf:     	int3
1400123c0:     	pushq	%r15
1400123c2:     	pushq	%r14
1400123c4:     	pushq	%r13
1400123c6:     	pushq	%r12
1400123c8:     	pushq	%rsi
1400123c9:     	pushq	%rdi
1400123ca:     	pushq	%rbp
1400123cb:     	pushq	%rbx
1400123cc:     	subq	$0xb8, %rsp
1400123d3:     	movq	%r8, %rbx
1400123d6:     	movq	%rdx, %rsi
1400123d9:     	movq	%rcx, %rdi
1400123dc:     	movq	$0x6, 0x20(%rsp)
1400123e5:     	leaq	0xb41c(%rip), %r9       # 0x14001d808
1400123ec:     	leaq	0x38(%rsp), %rcx
1400123f1:     	callq	0x140016860 <.text+0x15860>
1400123f6:     	cmpq	$0x0, 0x38(%rsp)
1400123fc:     	je	0x140012453 <.text+0x11453>
1400123fe:     	leaq	0x40(%rsp), %rdx
140012403:     	movq	0x80(%rsp), %r8
14001240b:     	movq	0x88(%rsp), %r9
140012413:     	movups	0x90(%rsp), %xmm0
14001241b:     	cmpq	$-0x1, 0x70(%rsp)
140012421:     	sete	0x30(%rsp)
140012426:     	movups	%xmm0, 0x20(%rsp)
14001242b:     	leaq	0xa0(%rsp), %rcx
140012433:     	callq	0x14000cb90 <.text+0xbb90>
140012438:     	movq	0xa0(%rsp), %rax
140012440:     	movq	0xa8(%rsp), %r9
140012448:     	cmpq	$0x1, %rax
14001244c:     	je	0x1400124a2 <.text+0x114a2>
14001244e:     	jmp	0x1400125c4 <.text+0x115c4>
140012453:     	leaq	0xa0(%rsp), %r14
14001245b:     	leaq	0x38(%rsp), %r15
140012460:     	movq	%r14, %rcx
140012463:     	movq	%r15, %rdx
140012466:     	callq	0x14000cff0 <.text+0xbff0>
14001246b:     	movq	0xa0(%rsp), %rax
140012473:     	cmpq	$0x1, %rax
140012477:     	je	0x140012460 <.text+0x11460>
140012479:     	testq	%rax, %rax
14001247c:     	jne	0x140012496 <.text+0x11496>
14001247e:     	movl	$0x1, %eax
140012483:     	movq	0xa8(%rsp), %r9
14001248b:     	cmpq	$0x1, %rax
14001248f:     	je	0x1400124a2 <.text+0x114a2>
140012491:     	jmp	0x1400125c4 <.text+0x115c4>
140012496:     	xorl	%eax, %eax
140012498:     	cmpq	$0x1, %rax
14001249c:     	jne	0x1400125c4 <.text+0x115c4>
1400124a2:     	movq	%r9, %r8
1400124a5:     	movq	%rbx, %rax
1400124a8:     	addq	$0x6, %r8
1400124ac:     	je	0x1400124cb <.text+0x114cb>
1400124ae:     	movq	%rbx, %rax
1400124b1:     	subq	%r8, %rax
1400124b4:     	jbe	0x1400124c9 <.text+0x114c9>
1400124b6:     	cmpb	$-0x41, (%rsi,%r8)
1400124bb:     	jg	0x1400124cb <.text+0x114cb>
1400124bd:     	leaq	0xb37c(%rip), %rax      # 0x14001d840
1400124c4:     	jmp	0x140012d5d <.text+0x11d5d>
1400124c9:     	jne	0x1400124bd <.text+0x114bd>
1400124cb:     	addq	%rsi, %r8
1400124ce:     	addq	%r8, %rax
1400124d1:     	jmp	0x1400124fc <.text+0x114fc>
1400124d3:     	addq	$0x2, %r8
1400124d7:     	shll	$0x6, %edx
1400124da:     	orl	%ebp, %edx
1400124dc:     	movl	%edx, %ecx
1400124de:     	leal	-0x40(%rcx), %edx
1400124e1:     	cmpl	$0x7, %edx
1400124e4:     	jb	0x1400124fc <.text+0x114fc>
1400124e6:     	nopw	%cs:(%rax,%rax)
1400124f0:     	addl	$-0x30, %ecx
1400124f3:     	cmpl	$0xa, %ecx
1400124f6:     	jae	0x1400125c4 <.text+0x115c4>
1400124fc:     	cmpq	%rax, %r8
1400124ff:     	je	0x140012596 <.text+0x11596>
140012505:     	movzbl	(%r8), %r11d
140012509:     	movzbl	%r11b, %ecx
14001250d:     	testb	%cl, %cl
14001250f:     	js	0x140012520 <.text+0x11520>
140012511:     	incq	%r8
140012514:     	leal	-0x40(%rcx), %edx
140012517:     	cmpl	$0x7, %edx
14001251a:     	jae	0x1400124f0 <.text+0x114f0>
14001251c:     	jmp	0x1400124fc <.text+0x114fc>
14001251e:     	nop
140012520:     	movl	%ecx, %edx
140012522:     	andl	$0x1f, %edx
140012525:     	movzbl	0x1(%r8), %ebp
14001252a:     	andl	$0x3f, %ebp
14001252d:     	cmpb	$-0x21, %cl
140012530:     	jbe	0x1400124d3 <.text+0x114d3>
140012532:     	movzbl	0x2(%r8), %r10d
140012537:     	shll	$0x6, %ebp
14001253a:     	andl	$0x3f, %r10d
14001253e:     	orl	%ebp, %r10d
140012541:     	cmpb	$-0x10, %r11b
140012545:     	jb	0x140012578 <.text+0x11578>
140012547:     	movzbl	0x3(%r8), %ecx
14001254c:     	andl	$0x7, %edx
14001254f:     	shll	$0x12, %edx
140012552:     	shll	$0x6, %r10d
140012556:     	andl	$0x3f, %ecx
140012559:     	orl	%r10d, %ecx
14001255c:     	orl	%edx, %ecx
14001255e:     	cmpl	$0x110000, %ecx         # imm = 0x110000
140012564:     	je	0x140012596 <.text+0x11596>
140012566:     	addq	$0x4, %r8
14001256a:     	leal	-0x40(%rcx), %edx
14001256d:     	cmpl	$0x7, %edx
140012570:     	jae	0x1400124f0 <.text+0x114f0>
140012576:     	jmp	0x1400124fc <.text+0x114fc>
140012578:     	addq	$0x3, %r8
14001257c:     	shll	$0xc, %edx
14001257f:     	orl	%edx, %r10d
140012582:     	movl	%r10d, %ecx
140012585:     	leal	-0x40(%rcx), %edx
140012588:     	cmpl	$0x7, %edx
14001258b:     	jae	0x1400124f0 <.text+0x114f0>
140012591:     	jmp	0x1400124fc <.text+0x114fc>
140012596:     	testq	%r9, %r9
140012599:     	je	0x1400125b0 <.text+0x115b0>
14001259b:     	cmpq	%rbx, %r9
14001259e:     	jae	0x1400125be <.text+0x115be>
1400125a0:     	cmpb	$-0x41, (%rsi,%r9)
1400125a5:     	jle	0x140012cd9 <.text+0x11cd9>
1400125ab:     	movq	%r9, %rbx
1400125ae:     	jmp	0x1400125c4 <.text+0x115c4>
1400125b0:     	leaq	0xa939(%rip), %r12      # 0x14001cef0
1400125b7:     	xorl	%ebx, %ebx
1400125b9:     	jmp	0x14001278d <.text+0x1178d>
1400125be:     	jne	0x140012cd9 <.text+0x11cd9>
1400125c4:     	cmpq	$0x3, %rbx
1400125c8:     	jae	0x1400125ef <.text+0x115ef>
1400125ca:     	cmpq	$0x2, %rbx
1400125ce:     	jne	0x140012786 <.text+0x11786>
1400125d4:     	movzwl	(%rsi), %eax
1400125d7:     	cmpl	$0x4e5a, %eax           # imm = 0x4E5A
1400125dc:     	jne	0x140012763 <.text+0x11763>
1400125e2:     	movl	$0x2, %ebx
1400125e7:     	xorl	%r14d, %r14d
1400125ea:     	jmp	0x140012672 <.text+0x11672>
1400125ef:     	movzwl	(%rsi), %eax
1400125f2:     	xorl	$0x5a5f, %eax           # imm = 0x5A5F
1400125f7:     	movzbl	0x2(%rsi), %ecx
1400125fb:     	xorl	$0x4e, %ecx
1400125fe:     	orw	%ax, %cx
140012601:     	je	0x140012648 <.text+0x11648>
140012603:     	movzwl	(%rsi), %eax
140012606:     	cmpl	$0x4e5a, %eax           # imm = 0x4E5A
14001260b:     	je	0x140012664 <.text+0x11664>
14001260d:     	movl	$0x3, %edx
140012612:     	cmpq	$0x4, %rbx
140012616:     	jb	0x140012745 <.text+0x11745>
14001261c:     	cmpl	$0x4e5a5f5f, (%rsi)     # imm = 0x4E5A5F5F
140012622:     	jne	0x140012742 <.text+0x11742>
140012628:     	movl	$0x4, %r8d
14001262e:     	cmpq	$0x5, %rbx
140012632:     	jb	0x140012711 <.text+0x11711>
140012638:     	cmpb	$-0x41, 0x4(%rsi)
14001263c:     	jle	0x140012da7 <.text+0x11da7>
140012642:     	leaq	-0x4(%rbx), %r14
140012646:     	jmp	0x140012682 <.text+0x11682>
140012648:     	movl	$0x3, %r8d
14001264e:     	cmpq	$0x4, %rbx
140012652:     	jb	0x14001267a <.text+0x1167a>
140012654:     	cmpb	$-0x41, 0x3(%rsi)
140012658:     	jle	0x140012d56 <.text+0x11d56>
14001265e:     	leaq	-0x3(%rbx), %r14
140012662:     	jmp	0x140012682 <.text+0x11682>
140012664:     	cmpb	$-0x41, 0x2(%rsi)
140012668:     	jle	0x140012d14 <.text+0x11d14>
14001266e:     	leaq	-0x2(%rbx), %r14
140012672:     	movl	$0x2, %r8d
140012678:     	jmp	0x140012682 <.text+0x11682>
14001267a:     	xorl	%r14d, %r14d
14001267d:     	movl	$0x3, %ebx
140012682:     	addq	%rsi, %r8
140012685:     	leaq	(%r8,%r14), %r9
140012689:     	xorl	%eax, %eax
14001268b:     	nopl	(%rax,%rax)
140012690:     	cmpq	%rax, %r14
140012693:     	je	0x1400126a5 <.text+0x116a5>
140012695:     	cmpb	$0x0, (%r8,%rax)
14001269a:     	leaq	0x1(%rax), %rax
14001269e:     	jns	0x140012690 <.text+0x11690>
1400126a0:     	jmp	0x14001273c <.text+0x1173c>
1400126a5:     	testq	%r14, %r14
1400126a8:     	je	0x14001273c <.text+0x1173c>
1400126ae:     	movzbl	(%r8), %ecx
1400126b2:     	movzbl	%cl, %edx
1400126b5:     	testb	%dl, %dl
1400126b7:     	js	0x1400126bf <.text+0x116bf>
1400126b9:     	leaq	0x1(%r8), %r12
1400126bd:     	jmp	0x140012727 <.text+0x11727>
1400126bf:     	movl	%edx, %eax
1400126c1:     	andl	$0x1f, %eax
1400126c4:     	movzbl	0x1(%r8), %r10d
1400126c9:     	andl	$0x3f, %r10d
1400126cd:     	cmpb	$-0x21, %dl
1400126d0:     	jbe	0x140012703 <.text+0x11703>
1400126d2:     	movzbl	0x2(%r8), %edx
1400126d7:     	shll	$0x6, %r10d
1400126db:     	andl	$0x3f, %edx
1400126de:     	orl	%r10d, %edx
1400126e1:     	cmpb	$-0x10, %cl
1400126e4:     	jb	0x14001271e <.text+0x1171e>
1400126e6:     	leaq	0x4(%r8), %r12
1400126ea:     	movzbl	0x3(%r8), %ecx
1400126ef:     	andl	$0x7, %eax
1400126f2:     	shll	$0x12, %eax
1400126f5:     	shll	$0x6, %edx
1400126f8:     	andl	$0x3f, %ecx
1400126fb:     	orl	%edx, %ecx
1400126fd:     	orl	%eax, %ecx
1400126ff:     	movl	%ecx, %edx
140012701:     	jmp	0x140012727 <.text+0x11727>
140012703:     	leaq	0x2(%r8), %r12
140012707:     	shll	$0x6, %eax
14001270a:     	orl	%r10d, %eax
14001270d:     	movl	%eax, %edx
14001270f:     	jmp	0x140012727 <.text+0x11727>
140012711:     	xorl	%r14d, %r14d
140012714:     	movl	$0x4, %ebx
140012719:     	jmp	0x140012682 <.text+0x11682>
14001271e:     	leaq	0x3(%r8), %r12
140012722:     	shll	$0xc, %eax
140012725:     	orl	%eax, %edx
140012727:     	cmpl	$0x45, %edx
14001272a:     	je	0x140012997 <.text+0x11997>
140012730:     	cmpl	$0x110000, %edx         # imm = 0x110000
140012736:     	jne	0x1400129b3 <.text+0x119b3>
14001273c:     	cmpq	$0x3, %rbx
140012740:     	jb	0x14001275d <.text+0x1175d>
140012742:     	movq	%rbx, %rdx
140012745:     	movzwl	(%rsi), %eax
140012748:     	cmpl	$0x525f, %eax           # imm = 0x525F
14001274d:     	je	0x140012798 <.text+0x11798>
14001274f:     	cmpb	$0x52, (%rsi)
140012752:     	jne	0x140012825 <.text+0x11825>
140012758:     	movq	%rdx, %rbx
14001275b:     	jmp	0x14001276d <.text+0x1176d>
14001275d:     	cmpq	$0x2, %rbx
140012761:     	jne	0x140012786 <.text+0x11786>
140012763:     	movl	$0x2, %ebx
140012768:     	cmpb	$0x52, (%rsi)
14001276b:     	jne	0x140012786 <.text+0x11786>
14001276d:     	movzbl	0x1(%rsi), %eax
140012771:     	cmpb	$-0x41, %al
140012773:     	jle	0x140012cc2 <.text+0x11cc2>
140012779:     	leaq	0x1(%rsi), %r14
14001277d:     	movq	$-0x1, %r15
140012784:     	jmp	0x1400127b2 <.text+0x117b2>
140012786:     	leaq	0xa763(%rip), %r12      # 0x14001cef0
14001278d:     	xorl	%r15d, %r15d
140012790:     	xorl	%r14d, %r14d
140012793:     	xorl	%r8d, %r8d
140012796:     	jmp	0x1400127ea <.text+0x117ea>
140012798:     	movzbl	0x2(%rsi), %eax
14001279c:     	cmpb	$-0x41, %al
14001279e:     	jle	0x140012cf5 <.text+0x11cf5>
1400127a4:     	leaq	0x2(%rsi), %r14
1400127a8:     	movq	$-0x2, %r15
1400127af:     	movq	%rdx, %rbx
1400127b2:     	addb	$-0x41, %al
1400127b4:     	leaq	0xa735(%rip), %r12      # 0x14001cef0
1400127bb:     	xorl	%r8d, %r8d
1400127be:     	cmpb	$0x19, %al
1400127c0:     	ja	0x1400127e4 <.text+0x117e4>
1400127c2:     	addq	%rbx, %r15
1400127c5:     	xorl	%r8d, %r8d
1400127c8:     	xorl	%eax, %eax
1400127ca:     	nopw	(%rax,%rax)
1400127d0:     	cmpq	%rax, %r15
1400127d3:     	je	0x140012859 <.text+0x11859>
1400127d9:     	cmpb	$0x0, (%r14,%rax)
1400127de:     	leaq	0x1(%rax), %rax
1400127e2:     	jns	0x1400127d0 <.text+0x117d0>
1400127e4:     	xorl	%r15d, %r15d
1400127e7:     	xorl	%r14d, %r14d
1400127ea:     	xorl	%r9d, %r9d
1400127ed:     	xorl	%eax, %eax
1400127ef:     	movq	%rax, (%rdi)
1400127f2:     	movq	%r8, 0x8(%rdi)
1400127f6:     	movq	%r14, 0x10(%rdi)
1400127fa:     	movq	%r15, 0x18(%rdi)
1400127fe:     	movq	%rsi, 0x20(%rdi)
140012802:     	movq	%rbx, 0x28(%rdi)
140012806:     	movq	%r12, 0x30(%rdi)
14001280a:     	movq	%r9, 0x38(%rdi)
14001280e:     	movq	%rdi, %rax
140012811:     	addq	$0xb8, %rsp
140012818:     	popq	%rbx
140012819:     	popq	%rbp
14001281a:     	popq	%rdi
14001281b:     	popq	%rsi
14001281c:     	popq	%r12
14001281e:     	popq	%r13
140012820:     	popq	%r14
140012822:     	popq	%r15
140012824:     	retq
140012825:     	leaq	0xa6c4(%rip), %r12      # 0x14001cef0
14001282c:     	cmpq	$0x3, %rdx
140012830:     	jbe	0x14001298d <.text+0x1198d>
140012836:     	movzwl	(%rsi), %eax
140012839:     	xorl	$0x5f5f, %eax           # imm = 0x5F5F
14001283e:     	movzbl	0x2(%rsi), %ecx
140012842:     	xorl	$0x52, %ecx
140012845:     	xorl	%r15d, %r15d
140012848:     	orw	%ax, %cx
14001284b:     	je	0x140012b5d <.text+0x11b5d>
140012851:     	movq	%rdx, %rbx
140012854:     	jmp	0x140012790 <.text+0x11790>
140012859:     	movq	%r14, 0x38(%rsp)
14001285e:     	movq	%r15, 0x40(%rsp)
140012863:     	movq	$0x0, 0x48(%rsp)
14001286c:     	movl	$0x0, 0x50(%rsp)
140012874:     	movq	$0x0, 0x58(%rsp)
14001287d:     	movl	$0x0, 0x60(%rsp)
140012885:     	leaq	0x38(%rsp), %rcx
14001288a:     	xorl	%edx, %edx
14001288c:     	callq	0x140010190 <.text+0xf190>
140012891:     	testb	%al, %al
140012893:     	jne	0x140012d28 <.text+0x11d28>
140012899:     	movq	0x38(%rsp), %rcx
14001289e:     	movzbl	0x40(%rsp), %eax
1400128a3:     	testq	%rcx, %rcx
1400128a6:     	je	0x140012b4d <.text+0x11b4d>
1400128ac:     	movzbl	%al, %eax
1400128af:     	movzbl	0x47(%rsp), %edx
1400128b4:     	shll	$0x10, %edx
1400128b7:     	movzwl	0x45(%rsp), %r8d
1400128bd:     	orl	%edx, %r8d
1400128c0:     	shlq	$0x20, %r8
1400128c4:     	movl	0x41(%rsp), %edx
1400128c8:     	orq	%r8, %rdx
1400128cb:     	movq	0x48(%rsp), %r8
1400128d0:     	shlq	$0x8, %rdx
1400128d4:     	orq	%rax, %rdx
1400128d7:     	cmpq	%rdx, %r8
1400128da:     	jae	0x140012968 <.text+0x11968>
1400128e0:     	movzbl	(%rcx,%r8), %eax
1400128e5:     	addb	$-0x41, %al
1400128e7:     	cmpb	$0x1a, %al
1400128e9:     	jae	0x140012968 <.text+0x11968>
1400128eb:     	movsd	0x50(%rsp), %xmm0       # xmm0 = mem[0],zero
1400128f1:     	movq	%rcx, 0x38(%rsp)
1400128f6:     	movq	%rdx, 0x40(%rsp)
1400128fb:     	movq	%r8, 0x48(%rsp)
140012900:     	movlps	%xmm0, 0x50(%rsp)
140012905:     	movq	$0x0, 0x58(%rsp)
14001290e:     	movl	$0x0, 0x60(%rsp)
140012916:     	leaq	0x38(%rsp), %rcx
14001291b:     	xorl	%edx, %edx
14001291d:     	callq	0x140010190 <.text+0xf190>
140012922:     	testb	%al, %al
140012924:     	jne	0x140012d28 <.text+0x11d28>
14001292a:     	movq	0x38(%rsp), %rcx
14001292f:     	movzbl	0x40(%rsp), %eax
140012934:     	testq	%rcx, %rcx
140012937:     	je	0x140012b4d <.text+0x11b4d>
14001293d:     	movzbl	%al, %eax
140012940:     	movzbl	0x47(%rsp), %edx
140012945:     	shll	$0x10, %edx
140012948:     	movzwl	0x45(%rsp), %r8d
14001294e:     	orl	%edx, %r8d
140012951:     	shlq	$0x20, %r8
140012955:     	movl	0x41(%rsp), %edx
140012959:     	orq	%r8, %rdx
14001295c:     	movq	0x48(%rsp), %r8
140012961:     	shlq	$0x8, %rdx
140012965:     	orq	%rax, %rdx
140012968:     	testq	%r8, %r8
14001296b:     	je	0x140012b58 <.text+0x11b58>
140012971:     	movq	%rdx, %r9
140012974:     	subq	%r8, %r9
140012977:     	jbe	0x140012b79 <.text+0x11b79>
14001297d:     	cmpb	$-0x41, (%rcx,%r8)
140012982:     	jg	0x140012b7f <.text+0x11b7f>
140012988:     	jmp	0x140012d72 <.text+0x11d72>
14001298d:     	movl	$0x3, %ebx
140012992:     	jmp	0x14001278d <.text+0x1178d>
140012997:     	xorl	%r15d, %r15d
14001299a:     	subq	%r12, %r9
14001299d:     	movl	$0x1, %eax
1400129a2:     	testq	%r9, %r9
1400129a5:     	jne	0x140012b96 <.text+0x11b96>
1400129ab:     	xorl	%r9d, %r9d
1400129ae:     	jmp	0x1400127ef <.text+0x117ef>
1400129b3:     	xorl	%r15d, %r15d
1400129b6:     	leal	-0x30(%rdx), %eax
1400129b9:     	cmpl	$0x9, %eax
1400129bc:     	ja	0x14001273c <.text+0x1173c>
1400129c2:     	movq	%r11, %rcx
1400129c5:     	xorl	%eax, %eax
1400129c7:     	jmp	0x1400129df <.text+0x119df>
1400129c9:     	nopl	(%rax)
1400129d0:     	incq	%r12
1400129d3:     	cmpl	$0x110000, %edx         # imm = 0x110000
1400129d9:     	je	0x14001273c <.text+0x1173c>
1400129df:     	movq	%rcx, %r11
1400129e2:     	leal	-0x30(%rdx), %r10d
1400129e6:     	cmpl	$0xa, %r10d
1400129ea:     	jae	0x140012aa9 <.text+0x11aa9>
1400129f0:     	movl	$0xa, %ecx
1400129f5:     	mulq	%rcx
1400129f8:     	movq	%rax, %rcx
1400129fb:     	seto	%bpl
1400129ff:     	cmovoq	%r11, %rcx
140012a03:     	movl	%r10d, %eax
140012a06:     	addq	%rcx, %rax
140012a09:     	setb	%dl
140012a0c:     	testb	%bpl, %bpl
140012a0f:     	jne	0x14001273c <.text+0x1173c>
140012a15:     	testb	%dl, %dl
140012a17:     	jne	0x14001273c <.text+0x1173c>
140012a1d:     	cmpq	%r9, %r12
140012a20:     	je	0x14001273c <.text+0x1173c>
140012a26:     	movzbl	(%r12), %ebp
140012a2b:     	movzbl	%bpl, %edx
140012a2f:     	testb	%dl, %dl
140012a31:     	jns	0x1400129d0 <.text+0x119d0>
140012a33:     	movl	%edx, %r11d
140012a36:     	andl	$0x1f, %r11d
140012a3a:     	movzbl	0x1(%r12), %r13d
140012a40:     	andl	$0x3f, %r13d
140012a44:     	cmpb	$-0x21, %dl
140012a47:     	jbe	0x140012a86 <.text+0x11a86>
140012a49:     	movzbl	0x2(%r12), %edx
140012a4f:     	shll	$0x6, %r13d
140012a53:     	andl	$0x3f, %edx
140012a56:     	orl	%r13d, %edx
140012a59:     	cmpb	$-0x10, %bpl
140012a5d:     	jb	0x140012a99 <.text+0x11a99>
140012a5f:     	movzbl	0x3(%r12), %r10d
140012a65:     	addq	$0x4, %r12
140012a69:     	andl	$0x7, %r11d
140012a6d:     	shll	$0x12, %r11d
140012a71:     	shll	$0x6, %edx
140012a74:     	andl	$0x3f, %r10d
140012a78:     	orl	%edx, %r10d
140012a7b:     	orl	%r11d, %r10d
140012a7e:     	movl	%r10d, %edx
140012a81:     	jmp	0x1400129d3 <.text+0x119d3>
140012a86:     	addq	$0x2, %r12
140012a8a:     	shll	$0x6, %r11d
140012a8e:     	orl	%r13d, %r11d
140012a91:     	movl	%r11d, %edx
140012a94:     	jmp	0x1400129d3 <.text+0x119d3>
140012a99:     	addq	$0x3, %r12
140012a9d:     	shll	$0xc, %r11d
140012aa1:     	orl	%r11d, %edx
140012aa4:     	jmp	0x1400129d3 <.text+0x119d3>
140012aa9:     	testq	%rax, %rax
140012aac:     	jne	0x140012ac7 <.text+0x11ac7>
140012aae:     	incq	%r15
140012ab1:     	cmpl	$0x45, %edx
140012ab4:     	jne	0x1400129b6 <.text+0x119b6>
140012aba:     	jmp	0x14001299a <.text+0x1199a>
140012abf:     	incq	%r12
140012ac2:     	decq	%rax
140012ac5:     	je	0x140012aae <.text+0x11aae>
140012ac7:     	cmpq	%r9, %r12
140012aca:     	je	0x14001273c <.text+0x1173c>
140012ad0:     	movzbl	(%r12), %r13d
140012ad5:     	movzbl	%r13b, %edx
140012ad9:     	testb	%dl, %dl
140012adb:     	jns	0x140012abf <.text+0x11abf>
140012add:     	movl	%edx, %ecx
140012adf:     	andl	$0x1f, %ecx
140012ae2:     	movzbl	0x1(%r12), %r10d
140012ae8:     	andl	$0x3f, %r10d
140012aec:     	cmpb	$-0x21, %dl
140012aef:     	jbe	0x140012b2f <.text+0x11b2f>
140012af1:     	movzbl	0x2(%r12), %ebp
140012af7:     	shll	$0x6, %r10d
140012afb:     	andl	$0x3f, %ebp
140012afe:     	orl	%r10d, %ebp
140012b01:     	cmpb	$-0x10, %r13b
140012b05:     	jb	0x140012b3d <.text+0x11b3d>
140012b07:     	movzbl	0x3(%r12), %edx
140012b0d:     	andl	$0x7, %ecx
140012b10:     	shll	$0x12, %ecx
140012b13:     	shll	$0x6, %ebp
140012b16:     	andl	$0x3f, %edx
140012b19:     	orl	%ebp, %edx
140012b1b:     	orl	%ecx, %edx
140012b1d:     	cmpl	$0x110000, %edx         # imm = 0x110000
140012b23:     	je	0x14001273c <.text+0x1173c>
140012b29:     	addq	$0x4, %r12
140012b2d:     	jmp	0x140012ac2 <.text+0x11ac2>
140012b2f:     	addq	$0x2, %r12
140012b33:     	shll	$0x6, %ecx
140012b36:     	orl	%r10d, %ecx
140012b39:     	movl	%ecx, %edx
140012b3b:     	jmp	0x140012ac2 <.text+0x11ac2>
140012b3d:     	addq	$0x3, %r12
140012b41:     	shll	$0xc, %ecx
140012b44:     	orl	%ecx, %ebp
140012b46:     	movl	%ebp, %edx
140012b48:     	jmp	0x140012ac2 <.text+0x11ac2>
140012b4d:     	andb	$0x1, %al
140012b4f:     	movzbl	%al, %r15d
140012b53:     	jmp	0x140012790 <.text+0x11790>
140012b58:     	movq	%rdx, %r9
140012b5b:     	jmp	0x140012b7f <.text+0x11b7f>
140012b5d:     	movzbl	0x3(%rsi), %eax
140012b61:     	cmpb	$-0x41, %al
140012b63:     	jle	0x140012d88 <.text+0x11d88>
140012b69:     	leaq	0x3(%rsi), %r14
140012b6d:     	movq	$-0x3, %r15
140012b74:     	jmp	0x1400127af <.text+0x117af>
140012b79:     	jne	0x140012d72 <.text+0x11d72>
140012b7f:     	addq	%r8, %rcx
140012b82:     	xorl	%r8d, %r8d
140012b85:     	movq	%rcx, %r12
140012b88:     	movl	$0x1, %eax
140012b8d:     	testq	%r9, %r9
140012b90:     	je	0x1400129ab <.text+0x119ab>
140012b96:     	leaq	0xa353(%rip), %rcx      # 0x14001cef0
140012b9d:     	cmpb	$0x2e, (%r12)
140012ba2:     	jne	0x140012cb7 <.text+0x11cb7>
140012ba8:     	leaq	(%r12,%r9), %rdx
140012bac:     	movb	$0x2e, %r13b
140012baf:     	movq	%r12, %r11
140012bb2:     	testb	%r13b, %r13b
140012bb5:     	jns	0x140012c50 <.text+0x11c50>
140012bbb:     	nopl	(%rax,%rax)
140012bc0:     	movl	%r13d, %ecx
140012bc3:     	andb	$0x1f, %cl
140012bc6:     	movzbl	%cl, %ebp
140012bc9:     	movzbl	0x1(%r11), %r10d
140012bce:     	andl	$0x3f, %r10d
140012bd2:     	cmpb	$-0x21, %r13b
140012bd6:     	jbe	0x140012c21 <.text+0x11c21>
140012bd8:     	movzbl	0x2(%r11), %ecx
140012bdd:     	shll	$0x6, %r10d
140012be1:     	andl	$0x3f, %ecx
140012be4:     	orl	%r10d, %ecx
140012be7:     	cmpb	$-0x10, %r13b
140012beb:     	jb	0x140012c39 <.text+0x11c39>
140012bed:     	movzbl	0x3(%r11), %r13d
140012bf2:     	andl	$0x7, %ebp
140012bf5:     	shll	$0x12, %ebp
140012bf8:     	shll	$0x6, %ecx
140012bfb:     	andl	$0x3f, %r13d
140012bff:     	orl	%ecx, %r13d
140012c02:     	orl	%ebp, %r13d
140012c05:     	cmpl	$0x110000, %r13d        # imm = 0x110000
140012c0c:     	je	0x1400127ef <.text+0x117ef>
140012c12:     	addq	$0x4, %r11
140012c16:     	leal	-0x21(%r13), %ecx
140012c1a:     	cmpl	$0x19, %ecx
140012c1d:     	jae	0x140012c60 <.text+0x11c60>
140012c1f:     	jmp	0x140012c87 <.text+0x11c87>
140012c21:     	addq	$0x2, %r11
140012c25:     	shll	$0x6, %ebp
140012c28:     	orl	%r10d, %ebp
140012c2b:     	movl	%ebp, %r13d
140012c2e:     	leal	-0x21(%r13), %ecx
140012c32:     	cmpl	$0x19, %ecx
140012c35:     	jae	0x140012c60 <.text+0x11c60>
140012c37:     	jmp	0x140012c87 <.text+0x11c87>
140012c39:     	addq	$0x3, %r11
140012c3d:     	shll	$0xc, %ebp
140012c40:     	orl	%ebp, %ecx
140012c42:     	movl	%ecx, %r13d
140012c45:     	leal	-0x21(%r13), %ecx
140012c49:     	cmpl	$0x19, %ecx
140012c4c:     	jae	0x140012c60 <.text+0x11c60>
140012c4e:     	jmp	0x140012c87 <.text+0x11c87>
140012c50:     	incq	%r11
140012c53:     	movzbl	%r13b, %r13d
140012c57:     	leal	-0x21(%r13), %ecx
140012c5b:     	cmpl	$0x19, %ecx
140012c5e:     	jb	0x140012c87 <.text+0x11c87>
140012c60:     	movl	%r13d, %ecx
140012c63:     	andl	$-0x21, %ecx
140012c66:     	addl	$-0x41, %ecx
140012c69:     	cmpl	$0x1a, %ecx
140012c6c:     	jb	0x140012c87 <.text+0x11c87>
140012c6e:     	leal	-0x3a(%r13), %ecx
140012c72:     	cmpl	$0x26, %ecx
140012c75:     	ja	0x140012c9e <.text+0x11c9e>
140012c77:     	movabsq	$0x7e0000007f, %r10     # imm = 0x7E0000007F
140012c81:     	btq	%rcx, %r10
140012c85:     	jae	0x140012c9e <.text+0x11c9e>
140012c87:     	cmpq	%rdx, %r11
140012c8a:     	je	0x1400127ef <.text+0x117ef>
140012c90:     	movzbl	(%r11), %r13d
140012c94:     	testb	%r13b, %r13b
140012c97:     	jns	0x140012c50 <.text+0x11c50>
140012c99:     	jmp	0x140012bc0 <.text+0x11bc0>
140012c9e:     	addl	$-0x7f, %r13d
140012ca2:     	cmpl	$-0x4, %r13d
140012ca6:     	jae	0x140012c87 <.text+0x11c87>
140012ca8:     	xorl	%r9d, %r9d
140012cab:     	leaq	0xa23e(%rip), %r12      # 0x14001cef0
140012cb2:     	jmp	0x1400127ed <.text+0x117ed>
140012cb7:     	xorl	%r9d, %r9d
140012cba:     	movq	%rcx, %r12
140012cbd:     	jmp	0x1400127ed <.text+0x117ed>
140012cc2:     	leaq	0xa7af(%rip), %rax      # 0x14001d478
140012cc9:     	movq	%rax, 0x20(%rsp)
140012cce:     	movl	$0x1, %r8d
140012cd4:     	jmp	0x140012d62 <.text+0x11d62>
140012cd9:     	leaq	0xab78(%rip), %rax      # 0x14001d858
140012ce0:     	movq	%rax, 0x20(%rsp)
140012ce5:     	movq	%rsi, %rcx
140012ce8:     	movq	%rbx, %rdx
140012ceb:     	xorl	%r8d, %r8d
140012cee:     	callq	0x140019e10 <.text+0x18e10>
140012cf3:     	ud2
140012cf5:     	leaq	0xa794(%rip), %rax      # 0x14001d490
140012cfc:     	movq	%rax, 0x20(%rsp)
140012d01:     	movl	$0x2, %r8d
140012d07:     	movq	%rsi, %rcx
140012d0a:     	movq	%rdx, %r9
140012d0d:     	callq	0x140019e10 <.text+0x18e10>
140012d12:     	ud2
140012d14:     	leaq	0xa4fd(%rip), %rax      # 0x14001d218
140012d1b:     	movq	%rax, 0x20(%rsp)
140012d20:     	movl	$0x2, %r8d
140012d26:     	jmp	0x140012d62 <.text+0x11d62>
140012d28:     	leaq	0xa7b9(%rip), %rax      # 0x14001d4e8
140012d2f:     	movq	%rax, 0x20(%rsp)
140012d34:     	leaq	0xa76d(%rip), %rcx      # 0x14001d4a8
140012d3b:     	leaq	0xa316(%rip), %r9       # 0x14001d058
140012d42:     	leaq	0xa0(%rsp), %r8
140012d4a:     	movl	$0x3d, %edx
140012d4f:     	callq	0x140019bb0 <.text+0x18bb0>
140012d54:     	ud2
140012d56:     	leaq	0xa4d3(%rip), %rax      # 0x14001d230
140012d5d:     	movq	%rax, 0x20(%rsp)
140012d62:     	movq	%rsi, %rcx
140012d65:     	movq	%rbx, %rdx
140012d68:     	movq	%rbx, %r9
140012d6b:     	callq	0x140019e10 <.text+0x18e10>
140012d70:     	ud2
140012d72:     	leaq	0xa787(%rip), %rax      # 0x14001d500
140012d79:     	movq	%rax, 0x20(%rsp)
140012d7e:     	movq	%rdx, %r9
140012d81:     	callq	0x140019e10 <.text+0x18e10>
140012d86:     	ud2
140012d88:     	leaq	0xa6d1(%rip), %rax      # 0x14001d460
140012d8f:     	movq	%rax, 0x20(%rsp)
140012d94:     	movl	$0x3, %r8d
140012d9a:     	movq	%rsi, %rcx
140012d9d:     	movq	%rdx, %r9
140012da0:     	callq	0x140019e10 <.text+0x18e10>
140012da5:     	ud2
140012da7:     	leaq	0xa452(%rip), %rax      # 0x14001d200
140012dae:     	jmp	0x140012d5d <.text+0x11d5d>
140012db0:     	pushq	%rsi
140012db1:     	subq	$0x60, %rsp
140012db5:     	movq	%rcx, %rsi
140012db8:     	leaq	0x20(%rsp), %rcx
140012dbd:     	callq	0x1400123c0 <.text+0x113c0>
140012dc2:     	cmpq	$0x0, 0x20(%rsp)
140012dc8:     	je	0x140012def <.text+0x11def>
140012dca:     	movups	0x20(%rsp), %xmm0
140012dcf:     	movups	0x30(%rsp), %xmm1
140012dd4:     	movups	0x40(%rsp), %xmm2
140012dd9:     	movups	0x50(%rsp), %xmm3
140012dde:     	movups	%xmm3, 0x30(%rsi)
140012de2:     	movups	%xmm2, 0x20(%rsi)
140012de6:     	movups	%xmm1, 0x10(%rsi)
140012dea:     	movups	%xmm0, (%rsi)
140012ded:     	jmp	0x140012df6 <.text+0x11df6>
140012def:     	movq	$0x2, (%rsi)
140012df6:     	movq	%rsi, %rax
140012df9:     	addq	$0x60, %rsp
140012dfd:     	popq	%rsi
140012dfe:     	retq
140012dff:     	int3
140012e00:     	cmpq	$0x0, (%rcx)
140012e04:     	je	0x140012e10 <.text+0x11e10>
140012e06:     	movq	$0x1, (%rcx)
140012e0d:     	movb	$0x1, %al
140012e0f:     	retq
140012e10:     	xorl	%eax, %eax
140012e12:     	subq	%r8, 0x8(%rcx)
140012e16:     	setb	%al
140012e19:     	movq	%rax, (%rcx)
140012e1c:     	jae	0x140012e21 <.text+0x11e21>
140012e1e:     	movb	$0x1, %al
140012e20:     	retq
140012e21:     	movq	0x10(%rcx), %rcx
140012e25:     	jmp	0x140015330 <.text+0x14330>
140012e2a:     	int3
140012e2b:     	int3
140012e2c:     	int3
140012e2d:     	int3
140012e2e:     	int3
140012e2f:     	int3
140012e30:     	pushq	%rsi
140012e31:     	pushq	%rdi
140012e32:     	subq	$0xc8, %rsp
140012e39:     	movq	%rdx, %rsi
140012e3c:     	movq	%rcx, %rdi
140012e3f:     	cmpq	$0x0, (%rcx)
140012e43:     	je	0x140012eeb <.text+0x11eeb>
140012e49:     	leaq	0x8(%rdi), %rax
140012e4d:     	testb	$0x4, 0x34(%rsi)
140012e51:     	movq	%rax, 0x30(%rsp)
140012e56:     	movq	$0x0, 0x38(%rsp)
140012e5f:     	movq	$0xf4240, 0x40(%rsp)    # imm = 0xF4240
140012e68:     	movq	%rsi, 0x48(%rsp)
140012e6d:     	leaq	0x30(%rsp), %rax
140012e72:     	jne	0x140012f0c <.text+0x11f0c>
140012e78:     	movq	%rax, 0x88(%rsp)
140012e80:     	leaq	-0x6477(%rip), %rax     # 0x14000ca10 <.text+0xba10>
140012e87:     	movq	%rax, 0x90(%rsp)
140012e8f:     	leaq	0xa9da(%rip), %rax      # 0x14001d870
140012e96:     	movq	%rax, 0x50(%rsp)
140012e9b:     	movq	$0x1, 0x58(%rsp)
140012ea4:     	movq	$0x0, 0x70(%rsp)
140012ead:     	leaq	0x88(%rsp), %rax
140012eb5:     	movq	%rax, 0x60(%rsp)
140012eba:     	movq	$0x1, 0x68(%rsp)
140012ec3:     	leaq	0xa2a6(%rip), %rdx      # 0x14001d170
140012eca:     	leaq	0x38(%rsp), %rcx
140012ecf:     	leaq	0x50(%rsp), %r8
140012ed4:     	callq	0x140014a60 <.text+0x13a60>
140012ed9:     	movq	0x38(%rsp), %rcx
140012ede:     	testb	%al, %al
140012ee0:     	jne	0x140012fc7 <.text+0x11fc7>
140012ee6:     	jmp	0x140012fe7 <.text+0x11fe7>
140012eeb:     	movq	0x20(%rdi), %rdx
140012eef:     	movq	0x28(%rdi), %r8
140012ef3:     	movq	%rsi, %rcx
140012ef6:     	callq	0x140015330 <.text+0x14330>
140012efb:     	movl	%eax, %ecx
140012efd:     	movb	$0x1, %al
140012eff:     	testb	%cl, %cl
140012f01:     	je	0x140012ff4 <.text+0x11ff4>
140012f07:     	jmp	0x140013004 <.text+0x12004>
140012f0c:     	movq	%rax, 0xb8(%rsp)
140012f14:     	leaq	-0x650b(%rip), %rax     # 0x14000ca10 <.text+0xba10>
140012f1b:     	movq	%rax, 0xc0(%rsp)
140012f23:     	movq	$0x2, 0x50(%rsp)
140012f2c:     	movq	$0x2, 0x60(%rsp)
140012f35:     	movq	$0x0, 0x70(%rsp)
140012f3e:     	movabsq	$0x400000020, %rax      # imm = 0x400000020
140012f48:     	movq	%rax, 0x78(%rsp)
140012f4d:     	movb	$0x3, 0x80(%rsp)
140012f55:     	leaq	0xa914(%rip), %rax      # 0x14001d870
140012f5c:     	movq	%rax, 0x88(%rsp)
140012f64:     	movq	$0x1, 0x90(%rsp)
140012f70:     	leaq	0x50(%rsp), %rax
140012f75:     	movq	%rax, 0xa8(%rsp)
140012f7d:     	movq	$0x1, 0xb0(%rsp)
140012f89:     	leaq	0xb8(%rsp), %rax
140012f91:     	movq	%rax, 0x98(%rsp)
140012f99:     	movq	$0x1, 0xa0(%rsp)
140012fa5:     	leaq	0xa1c4(%rip), %rdx      # 0x14001d170
140012fac:     	leaq	0x38(%rsp), %rcx
140012fb1:     	leaq	0x88(%rsp), %r8
140012fb9:     	callq	0x140014a60 <.text+0x13a60>
140012fbe:     	movq	0x38(%rsp), %rcx
140012fc3:     	testb	%al, %al
140012fc5:     	je	0x140012fe7 <.text+0x11fe7>
140012fc7:     	testq	%rcx, %rcx
140012fca:     	je	0x140012fe7 <.text+0x11fe7>
140012fcc:     	leaq	0xa8ad(%rip), %rdx      # 0x14001d880
140012fd3:     	movl	$0x14, %r8d
140012fd9:     	movq	%rsi, %rcx
140012fdc:     	callq	0x140015330 <.text+0x14330>
140012fe1:     	testb	%al, %al
140012fe3:     	jne	0x140012feb <.text+0x11feb>
140012fe5:     	jmp	0x140012ff4 <.text+0x11ff4>
140012fe7:     	testb	%al, %al
140012fe9:     	je	0x140012fef <.text+0x11fef>
140012feb:     	movb	$0x1, %al
140012fed:     	jmp	0x140013004 <.text+0x12004>
140012fef:     	testq	%rcx, %rcx
140012ff2:     	jne	0x14001300f <.text+0x1200f>
140012ff4:     	movq	0x30(%rdi), %rdx
140012ff8:     	movq	0x38(%rdi), %r8
140012ffc:     	movq	%rsi, %rcx
140012fff:     	callq	0x140015330 <.text+0x14330>
140013004:     	nop
140013005:     	addq	$0xc8, %rsp
14001300c:     	popq	%rdi
14001300d:     	popq	%rsi
14001300e:     	retq
14001300f:     	leaq	0xa8ba(%rip), %rax      # 0x14001d8d0
140013016:     	movq	%rax, 0x20(%rsp)
14001301b:     	leaq	0xa872(%rip), %rcx      # 0x14001d894
140013022:     	leaq	0xa04f(%rip), %r9       # 0x14001d078
140013029:     	leaq	0x50(%rsp), %r8
14001302e:     	movl	$0x37, %edx
140013033:     	callq	0x140019bb0 <.text+0x18bb0>
140013038:     	ud2
14001303a:     	int3
14001303b:     	int3
14001303c:     	int3
14001303d:     	int3
14001303e:     	int3
14001303f:     	int3
140013040:     	movq	%rdx, %rcx
140013043:     	leaq	0xa89e(%rip), %rdx      # 0x14001d8e8
14001304a:     	movl	$0x12, %r8d
140013050:     	jmp	0x140015330 <.text+0x14330>
140013055:     	int3
140013056:     	int3
140013057:     	int3
140013058:     	int3
140013059:     	int3
14001305a:     	int3
14001305b:     	int3
14001305c:     	int3
14001305d:     	int3
14001305e:     	int3
14001305f:     	int3
140013060:     	movq	%rdx, %r8
140013063:     	leaq	0xad2e(%rip), %rdx      # 0x14001dd98
14001306a:     	jmp	0x140014a60 <.text+0x13a60>
14001306f:     	int3
140013070:     	movq	%rdx, %rcx
140013073:     	leaq	0xad0e(%rip), %rdx      # 0x14001dd88
14001307a:     	movl	$0x5, %r8d
140013080:     	jmp	0x140015330 <.text+0x14330>
140013085:     	int3
140013086:     	int3
140013087:     	int3
140013088:     	int3
140013089:     	int3
14001308a:     	int3
14001308b:     	int3
14001308c:     	int3
14001308d:     	int3
14001308e:     	int3
14001308f:     	int3
140013090:     	movq	%rdx, %rcx
140013093:     	leaq	0xacf3(%rip), %rdx      # 0x14001dd8d
14001309a:     	movl	$0xb, %r8d
1400130a0:     	jmp	0x140015330 <.text+0x14330>
1400130a5:     	int3
1400130a6:     	int3
1400130a7:     	int3
1400130a8:     	int3
1400130a9:     	int3
1400130aa:     	int3
1400130ab:     	int3
1400130ac:     	int3
1400130ad:     	int3
1400130ae:     	int3
1400130af:     	int3
1400130b0:     	pushq	%rsi
1400130b1:     	pushq	%rdi
1400130b2:     	subq	$0x58, %rsp
1400130b6:     	incq	%rdx
1400130b9:     	je	0x140013141 <.text+0x12141>
1400130bf:     	movq	%rcx, %rsi
1400130c2:     	movq	0x8(%rcx), %rax
1400130c6:     	leaq	(%rax,%rax), %rcx
1400130ca:     	cmpq	%rdx, %rcx
1400130cd:     	cmovaq	%rcx, %rdx
1400130d1:     	cmpq	$0x9, %rdx
1400130d5:     	movl	$0x8, %edi
1400130da:     	cmovaeq	%rdx, %rdi
1400130de:     	movq	%rdi, %rdx
1400130e1:     	notq	%rdx
1400130e4:     	shrq	$0x3f, %rdx
1400130e8:     	testq	%rax, %rax
1400130eb:     	je	0x140013105 <.text+0x12105>
1400130ed:     	movq	(%rsi), %rcx
1400130f0:     	movq	%rcx, 0x28(%rsp)
1400130f5:     	movq	$0x1, 0x30(%rsp)
1400130fe:     	movq	%rax, 0x38(%rsp)
140013103:     	jmp	0x14001310e <.text+0x1210e>
140013105:     	movq	$0x0, 0x30(%rsp)
14001310e:     	leaq	0x40(%rsp), %rcx
140013113:     	leaq	0x28(%rsp), %r9
140013118:     	movq	%rdi, %r8
14001311b:     	callq	0x140013170 <.text+0x12170>
140013120:     	cmpq	$0x0, 0x40(%rsp)
140013126:     	movq	0x48(%rsp), %rcx
14001312b:     	je	0x140013148 <.text+0x12148>
14001312d:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140013137:     	cmpq	%rax, %rcx
14001313a:     	je	0x14001314f <.text+0x1214f>
14001313c:     	testq	%rcx, %rcx
14001313f:     	jne	0x140013156 <.text+0x12156>
140013141:     	callq	0x140013200 <.text+0x12200>
140013146:     	ud2
140013148:     	movq	%rcx, (%rsi)
14001314b:     	movq	%rdi, 0x8(%rsi)
14001314f:     	addq	$0x58, %rsp
140013153:     	popq	%rdi
140013154:     	popq	%rsi
140013155:     	retq
140013156:     	movq	0x50(%rsp), %rdx
14001315b:     	callq	0x1400196e0 <.text+0x186e0>
140013160:     	ud2
140013162:     	int3
140013163:     	int3
140013164:     	int3
140013165:     	int3
140013166:     	int3
140013167:     	int3
140013168:     	int3
140013169:     	int3
14001316a:     	int3
14001316b:     	int3
14001316c:     	int3
14001316d:     	int3
14001316e:     	int3
14001316f:     	int3
140013170:     	pushq	%rsi
140013171:     	pushq	%rdi
140013172:     	subq	$0x28, %rsp
140013176:     	movq	%r8, %rsi
140013179:     	movq	%rcx, %rdi
14001317c:     	testq	%rdx, %rdx
14001317f:     	je	0x1400131d1 <.text+0x121d1>
140013181:     	cmpq	$0x0, 0x8(%r9)
140013186:     	je	0x1400131a9 <.text+0x121a9>
140013188:     	movq	0x10(%r9), %rdx
14001318c:     	testq	%rdx, %rdx
14001318f:     	je	0x1400131a9 <.text+0x121a9>
140013191:     	movq	(%r9), %rcx
140013194:     	movl	$0x1, %r8d
14001319a:     	movq	%rsi, %r9
14001319d:     	callq	0x140001360 <.text+0x360>
1400131a2:     	testq	%rax, %rax
1400131a5:     	jne	0x1400131e5 <.text+0x121e5>
1400131a7:     	jmp	0x1400131c7 <.text+0x121c7>
1400131a9:     	testq	%rsi, %rsi
1400131ac:     	je	0x1400131e0 <.text+0x121e0>
1400131ae:     	movzbl	0x1004c(%rip), %eax     # 0x140023201
1400131b5:     	movl	$0x1, %edx
1400131ba:     	movq	%rsi, %rcx
1400131bd:     	callq	0x140001340 <.text+0x340>
1400131c2:     	testq	%rax, %rax
1400131c5:     	jne	0x1400131e5 <.text+0x121e5>
1400131c7:     	movq	$0x1, 0x8(%rdi)
1400131cf:     	jmp	0x1400131d9 <.text+0x121d9>
1400131d1:     	movq	$0x0, 0x8(%rdi)
1400131d9:     	movl	$0x1, %eax
1400131de:     	jmp	0x1400131eb <.text+0x121eb>
1400131e0:     	movl	$0x1, %eax
1400131e5:     	movq	%rax, 0x8(%rdi)
1400131e9:     	xorl	%eax, %eax
1400131eb:     	movq	%rsi, 0x10(%rdi)
1400131ef:     	movq	%rax, (%rdi)
1400131f2:     	addq	$0x28, %rsp
1400131f6:     	popq	%rdi
1400131f7:     	popq	%rsi
1400131f8:     	retq
1400131f9:     	int3
1400131fa:     	int3
1400131fb:     	int3
1400131fc:     	int3
1400131fd:     	int3
1400131fe:     	int3
1400131ff:     	int3
140013200:     	subq	$0x58, %rsp
140013204:     	leaq	0xabed(%rip), %rax      # 0x14001ddf8
14001320b:     	movq	%rax, 0x28(%rsp)
140013210:     	movq	$0x1, 0x30(%rsp)
140013219:     	leaq	0xaaf8(%rip), %rax      # 0x14001dd18
140013220:     	movq	%rax, 0x38(%rsp)
140013225:     	xorps	%xmm0, %xmm0
140013228:     	movups	%xmm0, 0x40(%rsp)
14001322d:     	leaq	0xabd4(%rip), %rdx      # 0x14001de08
140013234:     	leaq	0x28(%rsp), %rcx
140013239:     	callq	0x1400197d0 <.text+0x187d0>
14001323e:     	ud2
140013240:     	pushq	%rbp
140013241:     	pushq	%r15
140013243:     	pushq	%r14
140013245:     	pushq	%rsi
140013246:     	pushq	%rdi
140013247:     	pushq	%rbx
140013248:     	subq	$0x58, %rsp
14001324c:     	leaq	0x50(%rsp), %rbp
140013251:     	movq	$-0x2, (%rbp)
140013259:     	movq	%r8, %r14
14001325c:     	incq	%r14
14001325f:     	je	0x140013364 <.text+0x12364>
140013265:     	js	0x14001337e <.text+0x1237e>
14001326b:     	movq	%r8, %rdi
14001326e:     	movq	%rdx, %rbx
140013271:     	movq	%rcx, %rsi
140013274:     	movzbl	0xff86(%rip), %eax      # 0x140023201
14001327b:     	movl	$0x1, %edx
140013280:     	movq	%r14, %rcx
140013283:     	callq	0x140001340 <.text+0x340>
140013288:     	testq	%rax, %rax
14001328b:     	je	0x140013385 <.text+0x12385>
140013291:     	movq	%rax, %r15
140013294:     	movq	%rax, %rcx
140013297:     	movq	%rbx, %rdx
14001329a:     	movq	%rdi, %r8
14001329d:     	callq	0x140018beb <.text+0x17beb>
1400132a2:     	cmpq	$0x10, %rdi
1400132a6:     	jae	0x1400132d8 <.text+0x122d8>
1400132a8:     	testq	%rdi, %rdi
1400132ab:     	je	0x140013300 <.text+0x12300>
1400132ad:     	xorl	%eax, %eax
1400132af:     	xorl	%edx, %edx
1400132b1:     	nopw	%cs:(%rax,%rax)
1400132c0:     	cmpb	$0x0, (%rbx,%rdx)
1400132c4:     	je	0x14001331a <.text+0x1231a>
1400132c6:     	incq	%rdx
1400132c9:     	cmpq	%rdx, %rdi
1400132cc:     	jne	0x1400132c0 <.text+0x122c0>
1400132ce:     	movq	%rdi, %rdx
1400132d1:     	testq	%rax, %rax
1400132d4:     	jne	0x140013309 <.text+0x12309>
1400132d6:     	jmp	0x140013324 <.text+0x12324>
1400132d8:     	movq	%r15, -0x10(%rbp)
1400132dc:     	movq	%r14, -0x18(%rbp)
1400132e0:     	movb	$0x1, -0x1(%rbp)
1400132e4:     	xorl	%ecx, %ecx
1400132e6:     	movq	%rbx, %rdx
1400132e9:     	movq	%rdi, %r8
1400132ec:     	callq	0x140015e60 <.text+0x14e60>
1400132f1:     	movq	-0x18(%rbp), %r14
1400132f5:     	movq	-0x10(%rbp), %r15
1400132f9:     	testq	%rax, %rax
1400132fc:     	jne	0x140013309 <.text+0x12309>
1400132fe:     	jmp	0x140013324 <.text+0x12324>
140013300:     	xorl	%edx, %edx
140013302:     	xorl	%eax, %eax
140013304:     	testq	%rax, %rax
140013307:     	je	0x140013324 <.text+0x12324>
140013309:     	movq	%r15, (%rsi)
14001330c:     	movq	%r14, 0x8(%rsi)
140013310:     	movq	%rdi, 0x10(%rsi)
140013314:     	movq	%rdx, 0x18(%rsi)
140013318:     	jmp	0x140013354 <.text+0x12354>
14001331a:     	movl	$0x1, %eax
14001331f:     	testq	%rax, %rax
140013322:     	jne	0x140013309 <.text+0x12309>
140013324:     	movq	%r15, -0x10(%rbp)
140013328:     	movq	%r15, -0x30(%rbp)
14001332c:     	movq	%r14, -0x18(%rbp)
140013330:     	movq	%r14, -0x28(%rbp)
140013334:     	movq	%rdi, -0x20(%rbp)
140013338:     	movb	$0x0, -0x1(%rbp)
14001333c:     	leaq	-0x30(%rbp), %rcx
140013340:     	callq	0x1400133e0 <.text+0x123e0>
140013345:     	movq	%rax, 0x8(%rsi)
140013349:     	movq	%rdx, 0x10(%rsi)
14001334d:     	movq	$0x0, (%rsi)
140013354:     	movq	%rsi, %rax
140013357:     	addq	$0x58, %rsp
14001335b:     	popq	%rbx
14001335c:     	popq	%rdi
14001335d:     	popq	%rsi
14001335e:     	popq	%r14
140013360:     	popq	%r15
140013362:     	popq	%rbp
140013363:     	retq
140013364:     	leaq	0xaad3(%rip), %rcx      # 0x14001de3e
14001336b:     	leaq	0xaafe(%rip), %r8       # 0x14001de70
140013372:     	movl	$0x2b, %edx
140013377:     	callq	0x140019880 <.text+0x18880>
14001337c:     	ud2
14001337e:     	callq	0x140013200 <.text+0x12200>
140013383:     	ud2
140013385:     	movl	$0x1, %ecx
14001338a:     	movq	%r14, %rdx
14001338d:     	callq	0x1400196e0 <.text+0x186e0>
140013392:     	ud2
140013394:     	nopw	%cs:(%rax,%rax)
1400133a0:     	movq	%rdx, 0x10(%rsp)
1400133a5:     	pushq	%rbp
1400133a6:     	pushq	%r15
1400133a8:     	pushq	%r14
1400133aa:     	pushq	%rsi
1400133ab:     	pushq	%rdi
1400133ac:     	pushq	%rbx
1400133ad:     	subq	$0x28, %rsp
1400133b1:     	leaq	0x50(%rdx), %rbp
1400133b5:     	cmpb	$0x0, -0x1(%rbp)
1400133b9:     	je	0x1400133ce <.text+0x123ce>
1400133bb:     	movl	$0x1, %r8d
1400133c1:     	movq	-0x10(%rbp), %rcx
1400133c5:     	movq	-0x18(%rbp), %rdx
1400133c9:     	callq	0x140001350 <.text+0x350>
1400133ce:     	nop
1400133cf:     	addq	$0x28, %rsp
1400133d3:     	popq	%rbx
1400133d4:     	popq	%rdi
1400133d5:     	popq	%rsi
1400133d6:     	popq	%r14
1400133d8:     	popq	%r15
1400133da:     	popq	%rbp
1400133db:     	retq
1400133dc:     	int3
1400133dd:     	int3
1400133de:     	int3
1400133df:     	int3
1400133e0:     	pushq	%rbp
1400133e1:     	pushq	%r15
1400133e3:     	pushq	%r14
1400133e5:     	pushq	%rsi
1400133e6:     	pushq	%rdi
1400133e7:     	pushq	%rbx
1400133e8:     	subq	$0x78, %rsp
1400133ec:     	leaq	0x70(%rsp), %rbp
1400133f1:     	movq	$-0x2, (%rbp)
1400133f9:     	movq	%rcx, %rbx
1400133fc:     	movq	0x8(%rcx), %r14
140013400:     	movq	0x10(%rcx), %rsi
140013404:     	cmpq	%rsi, %r14
140013407:     	jne	0x140013473 <.text+0x12473>
140013409:     	movq	%rsi, %rdi
14001340c:     	incq	%rdi
14001340f:     	je	0x140013532 <.text+0x12532>
140013415:     	movq	%rdi, %rdx
140013418:     	notq	%rdx
14001341b:     	shrq	$0x3f, %rdx
14001341f:     	testq	%r14, %r14
140013422:     	je	0x140013439 <.text+0x12439>
140013424:     	movq	(%rbx), %rax
140013427:     	movq	%rax, -0x38(%rbp)
14001342b:     	movq	$0x1, -0x30(%rbp)
140013433:     	movq	%r14, -0x28(%rbp)
140013437:     	jmp	0x140013441 <.text+0x12441>
140013439:     	movq	$0x0, -0x30(%rbp)
140013441:     	leaq	-0x50(%rbp), %rcx
140013445:     	leaq	-0x38(%rbp), %r9
140013449:     	movq	%rdi, %r8
14001344c:     	callq	0x140013170 <.text+0x12170>
140013451:     	cmpq	$0x0, -0x50(%rbp)
140013456:     	movq	-0x48(%rbp), %rcx
14001345a:     	je	0x140013515 <.text+0x12515>
140013460:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
14001346a:     	cmpq	%rax, %rcx
14001346d:     	jne	0x14001352d <.text+0x1252d>
140013473:     	cmpq	%r14, %rsi
140013476:     	jne	0x140013497 <.text+0x12497>
140013478:     	movb	$0x1, -0x1(%rbp)
14001347c:     	movq	%rbx, %rcx
14001347f:     	movq	%rsi, %rdx
140013482:     	movq	%rbx, -0x10(%rbp)
140013486:     	callq	0x1400130b0 <.text+0x120b0>
14001348b:     	movq	-0x10(%rbp), %rbx
14001348f:     	movq	0x8(%rbx), %r14
140013493:     	movq	0x10(%rbx), %rsi
140013497:     	movq	(%rbx), %r15
14001349a:     	movb	$0x0, (%r15,%rsi)
14001349f:     	incq	%rsi
1400134a2:     	movq	%rsi, 0x10(%rbx)
1400134a6:     	cmpq	%rsi, %r14
1400134a9:     	jbe	0x1400134e7 <.text+0x124e7>
1400134ab:     	testq	%rsi, %rsi
1400134ae:     	je	0x1400134ec <.text+0x124ec>
1400134b0:     	movl	$0x1, %r8d
1400134b6:     	movq	%r15, %rcx
1400134b9:     	movq	%r14, %rdx
1400134bc:     	movq	%rsi, %r9
1400134bf:     	callq	0x140001360 <.text+0x360>
1400134c4:     	movq	%rax, %rdi
1400134c7:     	testq	%rax, %rax
1400134ca:     	jne	0x140013502 <.text+0x12502>
1400134cc:     	movq	%r15, -0x18(%rbp)
1400134d0:     	movq	%r14, -0x20(%rbp)
1400134d4:     	movq	%rbx, -0x10(%rbp)
1400134d8:     	movl	$0x1, %ecx
1400134dd:     	movq	%rsi, %rdx
1400134e0:     	callq	0x1400196e0 <.text+0x186e0>
1400134e5:     	jmp	0x140013552 <.text+0x12552>
1400134e7:     	movq	%r15, %rdi
1400134ea:     	jmp	0x140013502 <.text+0x12502>
1400134ec:     	movl	$0x1, %edi
1400134f1:     	movl	$0x1, %r8d
1400134f7:     	movq	%r15, %rcx
1400134fa:     	movq	%r14, %rdx
1400134fd:     	callq	0x140001350 <.text+0x350>
140013502:     	movq	%rdi, %rax
140013505:     	movq	%rsi, %rdx
140013508:     	addq	$0x78, %rsp
14001350c:     	popq	%rbx
14001350d:     	popq	%rdi
14001350e:     	popq	%rsi
14001350f:     	popq	%r14
140013511:     	popq	%r15
140013513:     	popq	%rbp
140013514:     	retq
140013515:     	movq	%rcx, (%rbx)
140013518:     	movq	%rdi, 0x8(%rbx)
14001351c:     	movq	%rdi, %r14
14001351f:     	cmpq	%r14, %rsi
140013522:     	je	0x140013478 <.text+0x12478>
140013528:     	jmp	0x140013497 <.text+0x12497>
14001352d:     	testq	%rcx, %rcx
140013530:     	jne	0x140013541 <.text+0x12541>
140013532:     	movb	$0x1, -0x1(%rbp)
140013536:     	movq	%rbx, -0x10(%rbp)
14001353a:     	callq	0x140013200 <.text+0x12200>
14001353f:     	jmp	0x140013552 <.text+0x12552>
140013541:     	movq	-0x40(%rbp), %rdx
140013545:     	movb	$0x1, -0x1(%rbp)
140013549:     	movq	%rbx, -0x10(%rbp)
14001354d:     	callq	0x1400196e0 <.text+0x186e0>
140013552:     	ud2
140013554:     	nopw	%cs:(%rax,%rax)
140013560:     	movq	%rdx, 0x10(%rsp)
140013565:     	pushq	%rbp
140013566:     	pushq	%r15
140013568:     	pushq	%r14
14001356a:     	pushq	%rsi
14001356b:     	pushq	%rdi
14001356c:     	pushq	%rbx
14001356d:     	subq	$0x28, %rsp
140013571:     	leaq	0x70(%rdx), %rbp
140013575:     	movl	$0x1, %r8d
14001357b:     	movq	-0x18(%rbp), %rcx
14001357f:     	movq	-0x20(%rbp), %rdx
140013583:     	callq	0x140001350 <.text+0x350>
140013588:     	movb	$0x0, -0x1(%rbp)
14001358c:     	addq	$0x28, %rsp
140013590:     	popq	%rbx
140013591:     	popq	%rdi
140013592:     	popq	%rsi
140013593:     	popq	%r14
140013595:     	popq	%r15
140013597:     	popq	%rbp
140013598:     	retq
140013599:     	nopl	(%rax)
1400135a0:     	movq	%rdx, 0x10(%rsp)
1400135a5:     	pushq	%rbp
1400135a6:     	pushq	%r15
1400135a8:     	pushq	%r14
1400135aa:     	pushq	%rsi
1400135ab:     	pushq	%rdi
1400135ac:     	pushq	%rbx
1400135ad:     	subq	$0x28, %rsp
1400135b1:     	leaq	0x70(%rdx), %rbp
1400135b5:     	movq	-0x10(%rbp), %rax
1400135b9:     	cmpb	$0x0, -0x1(%rbp)
1400135bd:     	je	0x1400135d6 <.text+0x125d6>
1400135bf:     	movq	0x8(%rax), %rdx
1400135c3:     	testq	%rdx, %rdx
1400135c6:     	je	0x1400135d6 <.text+0x125d6>
1400135c8:     	movq	(%rax), %rcx
1400135cb:     	movl	$0x1, %r8d
1400135d1:     	callq	0x140001350 <.text+0x350>
1400135d6:     	nop
1400135d7:     	addq	$0x28, %rsp
1400135db:     	popq	%rbx
1400135dc:     	popq	%rdi
1400135dd:     	popq	%rsi
1400135de:     	popq	%r14
1400135e0:     	popq	%r15
1400135e2:     	popq	%rbp
1400135e3:     	retq
1400135e4:     	int3
1400135e5:     	int3
1400135e6:     	int3
1400135e7:     	int3
1400135e8:     	int3
1400135e9:     	int3
1400135ea:     	int3
1400135eb:     	int3
1400135ec:     	int3
1400135ed:     	int3
1400135ee:     	int3
1400135ef:     	int3
1400135f0:     	pushq	%rbp
1400135f1:     	pushq	%rsi
1400135f2:     	pushq	%rdi
1400135f3:     	pushq	%rbx
1400135f4:     	subq	$0x58, %rsp
1400135f8:     	leaq	0x50(%rsp), %rbp
1400135fd:     	movq	$-0x2, (%rbp)
140013605:     	movq	%rdx, %rdi
140013608:     	movq	%rcx, %rsi
14001360b:     	movq	0x8(%rdx), %rdx
14001360f:     	testq	%rdx, %rdx
140013612:     	je	0x1400136e2 <.text+0x126e2>
140013618:     	movq	(%rdi), %rax
14001361b:     	movl	%edx, %ecx
14001361d:     	andl	$0x3, %ecx
140013620:     	cmpq	$0x4, %rdx
140013624:     	jae	0x14001362d <.text+0x1262d>
140013626:     	xorl	%ebx, %ebx
140013628:     	xorl	%r8d, %r8d
14001362b:     	jmp	0x14001365c <.text+0x1265c>
14001362d:     	andq	$-0x4, %rdx
140013631:     	leaq	0x38(%rax), %r9
140013635:     	xorl	%ebx, %ebx
140013637:     	xorl	%r8d, %r8d
14001363a:     	nopw	(%rax,%rax)
140013640:     	addq	-0x30(%r9), %rbx
140013644:     	addq	-0x20(%r9), %rbx
140013648:     	addq	-0x10(%r9), %rbx
14001364c:     	addq	(%r9), %rbx
14001364f:     	addq	$0x4, %r8
140013653:     	addq	$0x40, %r9
140013657:     	cmpq	%r8, %rdx
14001365a:     	jne	0x140013640 <.text+0x12640>
14001365c:     	testq	%rcx, %rcx
14001365f:     	je	0x14001368d <.text+0x1268d>
140013661:     	shlq	$0x4, %r8
140013665:     	leaq	(%r8,%rax), %rdx
140013669:     	addq	$0x8, %rdx
14001366d:     	shlq	$0x4, %rcx
140013671:     	xorl	%r8d, %r8d
140013674:     	nopw	%cs:(%rax,%rax)
140013680:     	addq	(%rdx,%r8), %rbx
140013684:     	addq	$0x10, %r8
140013688:     	cmpq	%r8, %rcx
14001368b:     	jne	0x140013680 <.text+0x12680>
14001368d:     	cmpq	$0x0, 0x18(%rdi)
140013692:     	je	0x1400136af <.text+0x126af>
140013694:     	cmpq	$0x0, 0x8(%rax)
140013699:     	sete	%al
14001369c:     	cmpq	$0x10, %rbx
1400136a0:     	setb	%cl
1400136a3:     	testq	%rbx, %rbx
1400136a6:     	js	0x1400136e2 <.text+0x126e2>
1400136a8:     	andb	%al, %cl
1400136aa:     	jne	0x1400136e2 <.text+0x126e2>
1400136ac:     	addq	%rbx, %rbx
1400136af:     	testq	%rbx, %rbx
1400136b2:     	je	0x1400136e2 <.text+0x126e2>
1400136b4:     	js	0x140013755 <.text+0x12755>
1400136ba:     	movzbl	0xfb40(%rip), %eax      # 0x140023201
1400136c1:     	movl	$0x1, %edx
1400136c6:     	movq	%rbx, %rcx
1400136c9:     	callq	0x140001340 <.text+0x340>
1400136ce:     	testq	%rax, %rax
1400136d1:     	jne	0x1400136e9 <.text+0x126e9>
1400136d3:     	movl	$0x1, %ecx
1400136d8:     	movq	%rbx, %rdx
1400136db:     	callq	0x1400196e0 <.text+0x186e0>
1400136e0:     	ud2
1400136e2:     	movl	$0x1, %eax
1400136e7:     	xorl	%ebx, %ebx
1400136e9:     	movq	%rax, -0x20(%rbp)
1400136ed:     	movq	%rbx, -0x18(%rbp)
1400136f1:     	movq	$0x0, -0x10(%rbp)
1400136f9:     	leaq	0xa698(%rip), %rdx      # 0x14001dd98
140013700:     	leaq	-0x20(%rbp), %rcx
140013704:     	movq	%rdi, %r8
140013707:     	callq	0x140014a60 <.text+0x13a60>
14001370c:     	testb	%al, %al
14001370e:     	jne	0x14001372b <.text+0x1272b>
140013710:     	movq	-0x10(%rbp), %rax
140013714:     	movq	%rax, 0x10(%rsi)
140013718:     	movups	-0x20(%rbp), %xmm0
14001371c:     	movups	%xmm0, (%rsi)
14001371f:     	movq	%rsi, %rax
140013722:     	addq	$0x58, %rsp
140013726:     	popq	%rbx
140013727:     	popq	%rdi
140013728:     	popq	%rsi
140013729:     	popq	%rbp
14001372a:     	retq
14001372b:     	leaq	0xa7a6(%rip), %rax      # 0x14001ded8
140013732:     	movq	%rax, 0x20(%rsp)
140013737:     	leaq	0xa74a(%rip), %rcx      # 0x14001de88
14001373e:     	leaq	0xa5d3(%rip), %r9       # 0x14001dd18
140013745:     	leaq	-0x1(%rbp), %r8
140013749:     	movl	$0x33, %edx
14001374e:     	callq	0x140019bb0 <.text+0x18bb0>
140013753:     	ud2
140013755:     	callq	0x140013200 <.text+0x12200>
14001375a:     	ud2
14001375c:     	nopl	(%rax)
140013760:     	movq	%rdx, 0x10(%rsp)
140013765:     	pushq	%rbp
140013766:     	pushq	%rsi
140013767:     	pushq	%rdi
140013768:     	pushq	%rbx
140013769:     	subq	$0x28, %rsp
14001376d:     	leaq	0x50(%rdx), %rbp
140013771:     	movq	-0x18(%rbp), %rdx
140013775:     	testq	%rdx, %rdx
140013778:     	je	0x140013789 <.text+0x12789>
14001377a:     	movq	-0x20(%rbp), %rcx
14001377e:     	movl	$0x1, %r8d
140013784:     	callq	0x140001350 <.text+0x350>
140013789:     	nop
14001378a:     	addq	$0x28, %rsp
14001378e:     	popq	%rbx
14001378f:     	popq	%rdi
140013790:     	popq	%rsi
140013791:     	popq	%rbp
140013792:     	retq
140013793:     	int3
140013794:     	int3
140013795:     	int3
140013796:     	int3
140013797:     	int3
140013798:     	int3
140013799:     	int3
14001379a:     	int3
14001379b:     	int3
14001379c:     	int3
14001379d:     	int3
14001379e:     	int3
14001379f:     	int3
1400137a0:     	pushq	%rbp
1400137a1:     	pushq	%r15
1400137a3:     	pushq	%r14
1400137a5:     	pushq	%rsi
1400137a6:     	pushq	%rdi
1400137a7:     	pushq	%rbx
1400137a8:     	subq	$0x48, %rsp
1400137ac:     	leaq	0x40(%rsp), %rbp
1400137b1:     	movq	$-0x2, (%rbp)
1400137b9:     	movq	%r8, %rbx
1400137bc:     	movq	%rdx, %rdi
1400137bf:     	movq	%rcx, %rsi
1400137c2:     	testq	%r8, %r8
1400137c5:     	je	0x1400137f5 <.text+0x127f5>
1400137c7:     	js	0x1400138d3 <.text+0x128d3>
1400137cd:     	movzbl	0xfa2d(%rip), %eax      # 0x140023201
1400137d4:     	movl	$0x1, %edx
1400137d9:     	movq	%rbx, %rcx
1400137dc:     	callq	0x140001340 <.text+0x340>
1400137e1:     	testq	%rax, %rax
1400137e4:     	jne	0x1400137fa <.text+0x127fa>
1400137e6:     	movl	$0x1, %ecx
1400137eb:     	movq	%rbx, %rdx
1400137ee:     	callq	0x1400196e0 <.text+0x186e0>
1400137f3:     	ud2
1400137f5:     	movl	$0x1, %eax
1400137fa:     	movq	%rax, -0x18(%rbp)
1400137fe:     	movq	%rbx, -0x10(%rbp)
140013802:     	movq	$0x0, -0x8(%rbp)
14001380a:     	leaq	(%rdi,%rbx,2), %r14
14001380e:     	movabsq	$0x100000000, %r15      # imm = 0x100000000
140013818:     	leaq	-0x18(%rbp), %rbx
14001381c:     	jmp	0x140013833 <.text+0x12833>
14001381e:     	nop
140013820:     	shlq	$0x10, %rdx
140013824:     	movq	%rax, %rdi
140013827:     	shrq	$0x10, %rdx
14001382b:     	movq	%rbx, %rcx
14001382e:     	callq	0x140013920 <.text+0x12920>
140013833:     	cmpq	%r14, %rdi
140013836:     	je	0x140013893 <.text+0x12893>
140013838:     	leaq	0x2(%rdi), %rax
14001383c:     	movzwl	(%rdi), %ecx
14001383f:     	movzwl	%cx, %edx
140013842:     	andl	$0xf800, %ecx           # imm = 0xF800
140013848:     	cmpl	$0xd800, %ecx           # imm = 0xD800
14001384e:     	jne	0x140013820 <.text+0x12820>
140013850:     	cmpl	$0xdbff, %edx           # imm = 0xDBFF
140013856:     	ja	0x1400138a4 <.text+0x128a4>
140013858:     	cmpq	%r14, %rax
14001385b:     	je	0x1400138a4 <.text+0x128a4>
14001385d:     	movzwl	(%rax), %eax
140013860:     	leal	0x2000(%rax), %ecx
140013866:     	movzwl	%cx, %ecx
140013869:     	cmpl	$0xfc00, %ecx           # imm = 0xFC00
14001386f:     	jb	0x1400138a4 <.text+0x128a4>
140013871:     	addq	$0x4, %rdi
140013875:     	andl	$0x3ff, %edx            # imm = 0x3FF
14001387b:     	andl	$0x3ff, %eax            # imm = 0x3FF
140013880:     	shlq	$0x1a, %rdx
140013884:     	shlq	$0x10, %rax
140013888:     	orq	%rdx, %rax
14001388b:     	addq	%r15, %rax
14001388e:     	movq	%rax, %rdx
140013891:     	jmp	0x140013827 <.text+0x12827>
140013893:     	movq	-0x8(%rbp), %rax
140013897:     	movq	%rax, 0x10(%rsi)
14001389b:     	movups	-0x18(%rbp), %xmm0
14001389f:     	movups	%xmm0, (%rsi)
1400138a2:     	jmp	0x1400138c3 <.text+0x128c3>
1400138a4:     	movq	$0x0, (%rsi)
1400138ab:     	movq	-0x10(%rbp), %rdx
1400138af:     	testq	%rdx, %rdx
1400138b2:     	je	0x1400138c3 <.text+0x128c3>
1400138b4:     	movq	-0x18(%rbp), %rcx
1400138b8:     	movl	$0x1, %r8d
1400138be:     	callq	0x140001350 <.text+0x350>
1400138c3:     	movq	%rsi, %rax
1400138c6:     	addq	$0x48, %rsp
1400138ca:     	popq	%rbx
1400138cb:     	popq	%rdi
1400138cc:     	popq	%rsi
1400138cd:     	popq	%r14
1400138cf:     	popq	%r15
1400138d1:     	popq	%rbp
1400138d2:     	retq
1400138d3:     	callq	0x140013200 <.text+0x12200>
1400138d8:     	ud2
1400138da:     	nopw	(%rax,%rax)
1400138e0:     	movq	%rdx, 0x10(%rsp)
1400138e5:     	pushq	%rbp
1400138e6:     	pushq	%r15
1400138e8:     	pushq	%r14
1400138ea:     	pushq	%rsi
1400138eb:     	pushq	%rdi
1400138ec:     	pushq	%rbx
1400138ed:     	subq	$0x28, %rsp
1400138f1:     	leaq	0x40(%rdx), %rbp
1400138f5:     	movq	-0x10(%rbp), %rdx
1400138f9:     	testq	%rdx, %rdx
1400138fc:     	je	0x14001390d <.text+0x1290d>
1400138fe:     	movq	-0x18(%rbp), %rcx
140013902:     	movl	$0x1, %r8d
140013908:     	callq	0x140001350 <.text+0x350>
14001390d:     	nop
14001390e:     	addq	$0x28, %rsp
140013912:     	popq	%rbx
140013913:     	popq	%rdi
140013914:     	popq	%rsi
140013915:     	popq	%r14
140013917:     	popq	%r15
140013919:     	popq	%rbp
14001391a:     	retq
14001391b:     	int3
14001391c:     	int3
14001391d:     	int3
14001391e:     	int3
14001391f:     	int3
140013920:     	pushq	%rsi
140013921:     	pushq	%rdi
140013922:     	pushq	%rbx
140013923:     	subq	$0x30, %rsp
140013927:     	movl	%edx, %edi
140013929:     	movq	%rcx, %rsi
14001392c:     	cmpl	$0x80, %edx
140013932:     	jae	0x14001395d <.text+0x1295d>
140013934:     	movq	0x10(%rsi), %rdx
140013938:     	cmpq	0x8(%rsi), %rdx
14001393c:     	jne	0x14001394a <.text+0x1294a>
14001393e:     	movq	%rsi, %rcx
140013941:     	callq	0x1400130b0 <.text+0x120b0>
140013946:     	movq	0x10(%rsi), %rdx
14001394a:     	movq	(%rsi), %rax
14001394d:     	movb	%dil, (%rax,%rdx)
140013951:     	incq	%rdx
140013954:     	movq	%rdx, 0x10(%rsi)
140013958:     	jmp	0x140013a1f <.text+0x12a1f>
14001395d:     	movl	$0x0, 0x2c(%rsp)
140013965:     	movl	%edi, %eax
140013967:     	cmpl	$0x800, %edi            # imm = 0x800
14001396d:     	jae	0x14001398c <.text+0x1298c>
14001396f:     	shrl	$0x6, %eax
140013972:     	orb	$-0x40, %al
140013974:     	movb	%al, 0x2c(%rsp)
140013978:     	andb	$0x3f, %dil
14001397c:     	orb	$-0x80, %dil
140013980:     	movb	%dil, 0x2d(%rsp)
140013985:     	movl	$0x2, %edi
14001398a:     	jmp	0x1400139f5 <.text+0x129f5>
14001398c:     	cmpl	$0x10000, %edi          # imm = 0x10000
140013992:     	jae	0x1400139be <.text+0x129be>
140013994:     	shrl	$0xc, %eax
140013997:     	orb	$-0x20, %al
140013999:     	movb	%al, 0x2c(%rsp)
14001399d:     	movl	%edi, %eax
14001399f:     	shrl	$0x6, %eax
1400139a2:     	andb	$0x3f, %al
1400139a4:     	orb	$-0x80, %al
1400139a6:     	movb	%al, 0x2d(%rsp)
1400139aa:     	andb	$0x3f, %dil
1400139ae:     	orb	$-0x80, %dil
1400139b2:     	movb	%dil, 0x2e(%rsp)
1400139b7:     	movl	$0x3, %edi
1400139bc:     	jmp	0x1400139f5 <.text+0x129f5>
1400139be:     	shrl	$0x12, %eax
1400139c1:     	andb	$0x7, %al
1400139c3:     	orb	$-0x10, %al
1400139c5:     	movb	%al, 0x2c(%rsp)
1400139c9:     	movl	%edi, %eax
1400139cb:     	shrl	$0xc, %eax
1400139ce:     	andb	$0x3f, %al
1400139d0:     	orb	$-0x80, %al
1400139d2:     	movb	%al, 0x2d(%rsp)
1400139d6:     	movl	%edi, %eax
1400139d8:     	shrl	$0x6, %eax
1400139db:     	andb	$0x3f, %al
1400139dd:     	orb	$-0x80, %al
1400139df:     	movb	%al, 0x2e(%rsp)
1400139e3:     	andb	$0x3f, %dil
1400139e7:     	orb	$-0x80, %dil
1400139eb:     	movb	%dil, 0x2f(%rsp)
1400139f0:     	movl	$0x4, %edi
1400139f5:     	movq	0x8(%rsi), %rax
1400139f9:     	movq	0x10(%rsi), %rbx
1400139fd:     	subq	%rbx, %rax
140013a00:     	cmpq	%rdi, %rax
140013a03:     	jb	0x140013a27 <.text+0x12a27>
140013a05:     	movq	(%rsi), %rcx
140013a08:     	addq	%rbx, %rcx
140013a0b:     	leaq	0x2c(%rsp), %rdx
140013a10:     	movq	%rdi, %r8
140013a13:     	callq	0x140018beb <.text+0x17beb>
140013a18:     	addq	%rdi, %rbx
140013a1b:     	movq	%rbx, 0x10(%rsi)
140013a1f:     	addq	$0x30, %rsp
140013a23:     	popq	%rbx
140013a24:     	popq	%rdi
140013a25:     	popq	%rsi
140013a26:     	retq
140013a27:     	movq	%rsi, %rcx
140013a2a:     	movq	%rbx, %rdx
140013a2d:     	movq	%rdi, %r8
140013a30:     	callq	0x140019620 <.text+0x18620>
140013a35:     	movq	0x10(%rsi), %rbx
140013a39:     	jmp	0x140013a05 <.text+0x12a05>
140013a3b:     	int3
140013a3c:     	int3
140013a3d:     	int3
140013a3e:     	int3
140013a3f:     	int3
140013a40:     	pushq	%r14
140013a42:     	pushq	%rsi
140013a43:     	pushq	%rdi
140013a44:     	pushq	%rbx
140013a45:     	subq	$0x28, %rsp
140013a49:     	movq	%r8, %rsi
140013a4c:     	movq	%rdx, %rbx
140013a4f:     	movq	%rcx, %rdi
140013a52:     	movq	0x8(%rcx), %rax
140013a56:     	movq	0x10(%rcx), %r14
140013a5a:     	subq	%r14, %rax
140013a5d:     	cmpq	%r8, %rax
140013a60:     	jb	0x140013a86 <.text+0x12a86>
140013a62:     	movq	(%rdi), %rcx
140013a65:     	addq	%r14, %rcx
140013a68:     	movq	%rbx, %rdx
140013a6b:     	movq	%rsi, %r8
140013a6e:     	callq	0x140018beb <.text+0x17beb>
140013a73:     	addq	%rsi, %r14
140013a76:     	movq	%r14, 0x10(%rdi)
140013a7a:     	xorl	%eax, %eax
140013a7c:     	addq	$0x28, %rsp
140013a80:     	popq	%rbx
140013a81:     	popq	%rdi
140013a82:     	popq	%rsi
140013a83:     	popq	%r14
140013a85:     	retq
140013a86:     	movq	%rdi, %rcx
140013a89:     	movq	%r14, %rdx
140013a8c:     	movq	%rsi, %r8
140013a8f:     	callq	0x140019620 <.text+0x18620>
140013a94:     	movq	0x10(%rdi), %r14
140013a98:     	jmp	0x140013a62 <.text+0x12a62>
140013a9a:     	int3
140013a9b:     	int3
140013a9c:     	int3
140013a9d:     	int3
140013a9e:     	int3
140013a9f:     	int3
140013aa0:     	subq	$0x28, %rsp
140013aa4:     	callq	0x140013920 <.text+0x12920>
140013aa9:     	xorl	%eax, %eax
140013aab:     	addq	$0x28, %rsp
140013aaf:     	retq
140013ab0:     	subq	$0x38, %rsp
140013ab4:     	cmpq	$0x9, %rcx
140013ab8:     	movl	$0x8, %eax
140013abd:     	cmovaeq	%rcx, %rax
140013ac1:     	leaq	0xf(%rcx), %r8
140013ac5:     	negq	%rcx
140013ac8:     	andq	%r8, %rcx
140013acb:     	addq	$-0x10, %rcx
140013acf:     	addq	$0x10, %rcx
140013ad3:     	jb	0x140013b00 <.text+0x12b00>
140013ad5:     	addq	%rdx, %rcx
140013ad8:     	jb	0x140013b00 <.text+0x12b00>
140013ada:     	movabsq	$-0x8000000000000000, %rdx # imm = 0x8000000000000000
140013ae4:     	subq	%rax, %rdx
140013ae7:     	cmpq	%rdx, %rcx
140013aea:     	ja	0x140013b00 <.text+0x12b00>
140013aec:     	addq	%rax, %rcx
140013aef:     	decq	%rcx
140013af2:     	movq	%rax, %rdx
140013af5:     	negq	%rdx
140013af8:     	andq	%rcx, %rdx
140013afb:     	addq	$0x38, %rsp
140013aff:     	retq
140013b00:     	leaq	0xa409(%rip), %rax      # 0x14001df10
140013b07:     	movq	%rax, 0x20(%rsp)
140013b0c:     	leaq	0xa225(%rip), %rcx      # 0x14001dd38
140013b13:     	leaq	0xa24e(%rip), %r9       # 0x14001dd68
140013b1a:     	leaq	0x37(%rsp), %r8
140013b1f:     	movl	$0x2b, %edx
140013b24:     	callq	0x140019bb0 <.text+0x18bb0>
140013b29:     	ud2
140013b2b:     	int3
140013b2c:     	int3
140013b2d:     	int3
140013b2e:     	int3
140013b2f:     	int3
140013b30:     	movq	(%rcx), %rax
140013b33:     	nopw	%cs:(%rax,%rax)
140013b40:     	jmp	0x140013b40 <.text+0x12b40>
140013b42:     	int3
140013b43:     	int3
140013b44:     	int3
140013b45:     	int3
140013b46:     	int3
140013b47:     	int3
140013b48:     	int3
140013b49:     	int3
140013b4a:     	int3
140013b4b:     	int3
140013b4c:     	int3
140013b4d:     	int3
140013b4e:     	int3
140013b4f:     	int3
140013b50:     	pushq	%rsi
140013b51:     	pushq	%rdi
140013b52:     	pushq	%rbp
140013b53:     	pushq	%rbx
140013b54:     	subq	$0x68, %rsp
140013b58:     	movl	%r8d, 0x24(%rsp)
140013b5d:     	leal	-0x2(%r8), %eax
140013b61:     	cmpl	$0x23, %eax
140013b64:     	jae	0x140013cdf <.text+0x12cdf>
140013b6a:     	movq	%rdx, %r9
140013b6d:     	movl	$0x1, %r10d
140013b73:     	testq	%rdx, %rdx
140013b76:     	je	0x140013b9c <.text+0x12b9c>
140013b78:     	movzbl	(%rcx), %eax
140013b7b:     	cmpl	$0x2b, %eax
140013b7e:     	je	0x140013ba3 <.text+0x12ba3>
140013b80:     	cmpl	$0x2d, %eax
140013b83:     	jne	0x140013b94 <.text+0x12b94>
140013b85:     	movl	$0x100, %edx            # imm = 0x100
140013b8a:     	cmpq	$0x1, %r9
140013b8e:     	je	0x140013c87 <.text+0x12c87>
140013b94:     	cmpl	$0x10, %r8d
140013b98:     	jbe	0x140013bb1 <.text+0x12bb1>
140013b9a:     	jmp	0x140013c0c <.text+0x12c0c>
140013b9c:     	xorl	%edx, %edx
140013b9e:     	jmp	0x140013c87 <.text+0x12c87>
140013ba3:     	decq	%r9
140013ba6:     	je	0x140013c02 <.text+0x12c02>
140013ba8:     	incq	%rcx
140013bab:     	cmpl	$0x10, %r8d
140013baf:     	ja	0x140013c0c <.text+0x12c0c>
140013bb1:     	cmpq	$0x9, %r9
140013bb5:     	jae	0x140013c0c <.text+0x12c0c>
140013bb7:     	xorl	%edx, %edx
140013bb9:     	cmpl	$0xa, %r8d
140013bbd:     	jbe	0x140013c5d <.text+0x12c5d>
140013bc3:     	movl	$0xffffffff, %r11d      # imm = 0xFFFFFFFF
140013bc9:     	xorl	%eax, %eax
140013bcb:     	jmp	0x140013be2 <.text+0x12be2>
140013bcd:     	nopl	(%rax)
140013bd0:     	imull	%r8d, %eax
140013bd4:     	addl	%edi, %eax
140013bd6:     	incq	%rdx
140013bd9:     	cmpq	%rdx, %r9
140013bdc:     	je	0x140013c7d <.text+0x12c7d>
140013be2:     	movzbl	(%rcx,%rdx), %esi
140013be6:     	leal	-0x30(%rsi), %edi
140013be9:     	cmpl	$0xa, %edi
140013bec:     	jb	0x140013bd0 <.text+0x12bd0>
140013bee:     	orl	$0x20, %esi
140013bf1:     	addl	$-0x61, %esi
140013bf4:     	addl	$0xa, %esi
140013bf7:     	cmovbl	%r11d, %esi
140013bfb:     	movl	%esi, %edi
140013bfd:     	cmpl	%r8d, %esi
140013c00:     	jb	0x140013bd0 <.text+0x12bd0>
140013c02:     	movl	$0x100, %edx            # imm = 0x100
140013c07:     	jmp	0x140013c87 <.text+0x12c87>
140013c0c:     	xorl	%r11d, %r11d
140013c0f:     	cmpl	$0xa, %r8d
140013c13:     	jbe	0x140013c96 <.text+0x12c96>
140013c19:     	movl	$0xffffffff, %esi       # imm = 0xFFFFFFFF
140013c1e:     	xorl	%eax, %eax
140013c20:     	cmpq	%r11, %r9
140013c23:     	je	0x140013c7d <.text+0x12c7d>
140013c25:     	movzbl	(%rcx,%r11), %edi
140013c2a:     	mull	%r8d
140013c2d:     	seto	%bl
140013c30:     	leal	-0x30(%rdi), %ebp
140013c33:     	cmpl	$0xa, %ebp
140013c36:     	jb	0x140013c4b <.text+0x12c4b>
140013c38:     	orl	$0x20, %edi
140013c3b:     	addl	$-0x61, %edi
140013c3e:     	addl	$0xa, %edi
140013c41:     	cmovbl	%esi, %edi
140013c44:     	movl	%edi, %ebp
140013c46:     	cmpl	%r8d, %edi
140013c49:     	jae	0x140013c02 <.text+0x12c02>
140013c4b:     	movl	$0x200, %edx            # imm = 0x200
140013c50:     	testb	%bl, %bl
140013c52:     	jne	0x140013c87 <.text+0x12c87>
140013c54:     	incq	%r11
140013c57:     	addl	%ebp, %eax
140013c59:     	jae	0x140013c20 <.text+0x12c20>
140013c5b:     	jmp	0x140013c87 <.text+0x12c87>
140013c5d:     	xorl	%eax, %eax
140013c5f:     	nop
140013c60:     	movzbl	(%rcx,%rdx), %r11d
140013c65:     	addl	$-0x30, %r11d
140013c69:     	cmpl	%r8d, %r11d
140013c6c:     	jae	0x140013c02 <.text+0x12c02>
140013c6e:     	imull	%r8d, %eax
140013c72:     	addl	%r11d, %eax
140013c75:     	incq	%rdx
140013c78:     	cmpq	%rdx, %r9
140013c7b:     	jne	0x140013c60 <.text+0x12c60>
140013c7d:     	shlq	$0x20, %rax
140013c81:     	xorl	%r10d, %r10d
140013c84:     	movq	%rax, %rdx
140013c87:     	orq	%rdx, %r10
140013c8a:     	movq	%r10, %rax
140013c8d:     	addq	$0x68, %rsp
140013c91:     	popq	%rbx
140013c92:     	popq	%rbp
140013c93:     	popq	%rdi
140013c94:     	popq	%rsi
140013c95:     	retq
140013c96:     	xorl	%eax, %eax
140013c98:     	nopl	(%rax,%rax)
140013ca0:     	cmpq	%r11, %r9
140013ca3:     	je	0x140013c7d <.text+0x12c7d>
140013ca5:     	movzbl	(%rcx,%r11), %esi
140013caa:     	mull	%r8d
140013cad:     	seto	%dl
140013cb0:     	addl	$-0x30, %esi
140013cb3:     	cmpl	%r8d, %esi
140013cb6:     	jae	0x140013cca <.text+0x12cca>
140013cb8:     	testb	%dl, %dl
140013cba:     	jne	0x140013cca <.text+0x12cca>
140013cbc:     	incq	%r11
140013cbf:     	addl	%esi, %eax
140013cc1:     	jae	0x140013ca0 <.text+0x12ca0>
140013cc3:     	movl	$0x200, %edx            # imm = 0x200
140013cc8:     	jmp	0x140013c87 <.text+0x12c87>
140013cca:     	xorl	%edx, %edx
140013ccc:     	cmpl	%r8d, %esi
140013ccf:     	setb	%dl
140013cd2:     	shlq	$0x8, %rdx
140013cd6:     	addq	$0x100, %rdx            # imm = 0x100
140013cdd:     	jmp	0x140013c87 <.text+0x12c87>
140013cdf:     	leaq	0x24(%rsp), %rax
140013ce4:     	movq	%rax, 0x28(%rsp)
140013ce9:     	leaq	0x4000(%rip), %rax      # 0x140017cf0 <.text+0x16cf0>
140013cf0:     	movq	%rax, 0x30(%rsp)
140013cf5:     	leaq	0xa31c(%rip), %rax      # 0x14001e018
140013cfc:     	movq	%rax, 0x38(%rsp)
140013d01:     	movq	$0x1, 0x40(%rsp)
140013d0a:     	movq	$0x0, 0x58(%rsp)
140013d13:     	leaq	0x28(%rsp), %rax
140013d18:     	movq	%rax, 0x48(%rsp)
140013d1d:     	movq	$0x1, 0x50(%rsp)
140013d26:     	leaq	0xa31b(%rip), %rdx      # 0x14001e048
140013d2d:     	leaq	0x38(%rsp), %rcx
140013d32:     	callq	0x1400197d0 <.text+0x187d0>
140013d37:     	ud2
140013d39:     	int3
140013d3a:     	int3
140013d3b:     	int3
140013d3c:     	int3
140013d3d:     	int3
140013d3e:     	int3
140013d3f:     	int3
140013d40:     	pushq	%rsi
140013d41:     	pushq	%rdi
140013d42:     	subq	$0x58, %rsp
140013d46:     	movq	%rdx, %rsi
140013d49:     	movq	%rcx, %rdi
140013d4c:     	callq	0x1400178e0 <.text+0x168e0>
140013d51:     	testb	%al, %al
140013d53:     	jne	0x140013d94 <.text+0x12d94>
140013d55:     	leaq	0xa324(%rip), %rax      # 0x14001e080
140013d5c:     	movq	%rax, 0x28(%rsp)
140013d61:     	movq	$0x1, 0x30(%rsp)
140013d6a:     	leaq	0xa23f(%rip), %rax      # 0x14001dfb0
140013d71:     	movq	%rax, 0x38(%rsp)
140013d76:     	xorps	%xmm0, %xmm0
140013d79:     	movups	%xmm0, 0x40(%rsp)
140013d7e:     	movq	0x20(%rsi), %rcx
140013d82:     	movq	0x28(%rsi), %rdx
140013d86:     	leaq	0x28(%rsp), %r8
140013d8b:     	callq	0x140014a60 <.text+0x13a60>
140013d90:     	testb	%al, %al
140013d92:     	je	0x140013d9d <.text+0x12d9d>
140013d94:     	movb	$0x1, %al
140013d96:     	addq	$0x58, %rsp
140013d9a:     	popq	%rdi
140013d9b:     	popq	%rsi
140013d9c:     	retq
140013d9d:     	addq	$0x8, %rdi
140013da1:     	movq	%rdi, %rcx
140013da4:     	movq	%rsi, %rdx
140013da7:     	addq	$0x58, %rsp
140013dab:     	popq	%rdi
140013dac:     	popq	%rsi
140013dad:     	jmp	0x1400178e0 <.text+0x168e0>
140013db2:     	int3
140013db3:     	int3
140013db4:     	int3
140013db5:     	int3
140013db6:     	int3
140013db7:     	int3
140013db8:     	int3
140013db9:     	int3
140013dba:     	int3
140013dbb:     	int3
140013dbc:     	int3
140013dbd:     	int3
140013dbe:     	int3
140013dbf:     	int3
140013dc0:     	movq	0x20(%rdx), %rcx
140013dc4:     	movq	0x28(%rdx), %rax
140013dc8:     	movq	0x18(%rax), %rax
140013dcc:     	leaq	0xa2cd(%rip), %rdx      # 0x14001e0a0
140013dd3:     	movl	$0xe, %r8d
140013dd9:     	jmpq	*%rax
140013ddc:     	int3
140013ddd:     	int3
140013dde:     	int3
140013ddf:     	int3
140013de0:     	pushq	%rsi
140013de1:     	pushq	%rdi
140013de2:     	subq	$0x38, %rsp
140013de6:     	movl	%edx, %edi
140013de8:     	movq	%rcx, %rsi
140013deb:     	cmpl	$0x27, %edx
140013dee:     	ja	0x140013e0c <.text+0x12e0c>
140013df0:     	movl	%edi, %eax
140013df2:     	leaq	0xb5db(%rip), %rcx      # 0x14001f3d4
140013df9:     	movslq	(%rcx,%rax,4), %rax
140013dfd:     	addq	%rcx, %rax
140013e00:     	jmpq	*%rax
140013e02:     	movw	$0x305c, (%rsi)         # imm = 0x305C
140013e07:     	jmp	0x140013f36 <.text+0x12f36>
140013e0c:     	cmpl	$0x5c, %edi
140013e0f:     	jne	0x140013e59 <.text+0x12e59>
140013e11:     	movw	$0x5c5c, (%rsi)         # imm = 0x5C5C
140013e16:     	jmp	0x140013f36 <.text+0x12f36>
140013e1b:     	movw	$0x745c, (%rsi)         # imm = 0x745C
140013e20:     	jmp	0x140013f36 <.text+0x12f36>
140013e25:     	movw	$0x6e5c, (%rsi)         # imm = 0x6E5C
140013e2a:     	jmp	0x140013f36 <.text+0x12f36>
140013e2f:     	movw	$0x725c, (%rsi)         # imm = 0x725C
140013e34:     	jmp	0x140013f36 <.text+0x12f36>
140013e39:     	testl	$0x10000, %r8d          # imm = 0x10000
140013e40:     	je	0x140013e59 <.text+0x12e59>
140013e42:     	movw	$0x225c, (%rsi)         # imm = 0x225C
140013e47:     	jmp	0x140013f36 <.text+0x12f36>
140013e4c:     	testl	$0x100, %r8d            # imm = 0x100
140013e53:     	jne	0x140013f31 <.text+0x12f31>
140013e59:     	testb	$0x1, %r8b
140013e5d:     	je	0x140013e6a <.text+0x12e6a>
140013e5f:     	movl	%edi, %ecx
140013e61:     	callq	0x140017fb0 <.text+0x16fb0>
140013e66:     	testb	%al, %al
140013e68:     	jne	0x140013e80 <.text+0x12e80>
140013e6a:     	movl	%edi, %ecx
140013e6c:     	callq	0x1400173c0 <.text+0x163c0>
140013e71:     	testb	%al, %al
140013e73:     	je	0x140013e80 <.text+0x12e80>
140013e75:     	movb	$-0x80, (%rsi)
140013e78:     	movl	%edi, 0x4(%rsi)
140013e7b:     	jmp	0x140013f44 <.text+0x12f44>
140013e80:     	movb	$0x0, 0x30(%rsp)
140013e85:     	movw	$0x0, 0x2e(%rsp)
140013e8c:     	movb	$0x7d, 0x37(%rsp)
140013e91:     	movl	%edi, %ecx
140013e93:     	shrl	$0x14, %ecx
140013e96:     	andl	$0xf, %ecx
140013e99:     	leaq	0xa1f0(%rip), %rax      # 0x14001e090
140013ea0:     	movzbl	(%rcx,%rax), %ecx
140013ea4:     	movb	%cl, 0x31(%rsp)
140013ea8:     	movl	%edi, %ecx
140013eaa:     	shrl	$0x10, %ecx
140013ead:     	andl	$0xf, %ecx
140013eb0:     	movzbl	(%rcx,%rax), %ecx
140013eb4:     	movb	%cl, 0x32(%rsp)
140013eb8:     	movl	%edi, %ecx
140013eba:     	shrl	$0xc, %ecx
140013ebd:     	andl	$0xf, %ecx
140013ec0:     	movzbl	(%rcx,%rax), %ecx
140013ec4:     	movb	%cl, 0x33(%rsp)
140013ec8:     	movl	%edi, %ecx
140013eca:     	shrl	$0x8, %ecx
140013ecd:     	andl	$0xf, %ecx
140013ed0:     	movzbl	(%rcx,%rax), %ecx
140013ed4:     	movb	%cl, 0x34(%rsp)
140013ed8:     	movl	%edi, %ecx
140013eda:     	shrl	$0x4, %ecx
140013edd:     	andl	$0xf, %ecx
140013ee0:     	movzbl	(%rcx,%rax), %ecx
140013ee4:     	movb	%cl, 0x35(%rsp)
140013ee8:     	movl	%edi, %ecx
140013eea:     	andl	$0xf, %ecx
140013eed:     	movzbl	(%rcx,%rax), %eax
140013ef1:     	movb	%al, 0x36(%rsp)
140013ef5:     	orl	$0x1, %edi
140013ef8:     	bsrl	%edi, %ecx
140013efb:     	xorl	$0x1c, %ecx
140013efe:     	shrl	$0x2, %ecx
140013f01:     	addq	$-0x2, %rcx
140013f05:     	cmpq	$0xb, %rcx
140013f09:     	jae	0x140013f4b <.text+0x12f4b>
140013f0b:     	movb	$0x7b, 0x30(%rsp,%rcx)
140013f10:     	movw	$0x755c, 0x2e(%rsp,%rcx) # imm = 0x755C
140013f17:     	movzwl	0x36(%rsp), %eax
140013f1c:     	movw	%ax, 0x8(%rsi)
140013f20:     	movq	0x2e(%rsp), %rax
140013f25:     	movq	%rax, (%rsi)
140013f28:     	movb	%cl, 0xa(%rsi)
140013f2b:     	movb	$0xa, 0xb(%rsi)
140013f2f:     	jmp	0x140013f44 <.text+0x12f44>
140013f31:     	movw	$0x275c, (%rsi)         # imm = 0x275C
140013f36:     	movq	$0x0, 0x2(%rsi)
140013f3e:     	movw	$0x200, 0xa(%rsi)       # imm = 0x200
140013f44:     	addq	$0x38, %rsp
140013f48:     	popq	%rdi
140013f49:     	popq	%rsi
140013f4a:     	retq
140013f4b:     	leaq	0xaff6(%rip), %r8       # 0x14001ef48
140013f52:     	movl	$0xa, %edx
140013f57:     	callq	0x140019c50 <.text+0x18c50>
140013f5c:     	ud2
140013f5e:     	int3
140013f5f:     	int3
140013f60:     	subq	$0x38, %rsp
140013f64:     	movb	$0x0, 0x30(%rsp)
140013f69:     	movw	$0x0, 0x2e(%rsp)
140013f70:     	movb	$0x7d, 0x37(%rsp)
140013f75:     	movl	%edx, %r8d
140013f78:     	shrl	$0x14, %r8d
140013f7c:     	andl	$0xf, %r8d
140013f80:     	leaq	0xa109(%rip), %rax      # 0x14001e090
140013f87:     	movzbl	(%r8,%rax), %r8d
140013f8c:     	movb	%r8b, 0x31(%rsp)
140013f91:     	movl	%edx, %r8d
140013f94:     	shrl	$0x10, %r8d
140013f98:     	andl	$0xf, %r8d
140013f9c:     	movzbl	(%r8,%rax), %r8d
140013fa1:     	movb	%r8b, 0x32(%rsp)
140013fa6:     	movl	%edx, %r8d
140013fa9:     	shrl	$0xc, %r8d
140013fad:     	andl	$0xf, %r8d
140013fb1:     	movzbl	(%r8,%rax), %r8d
140013fb6:     	movb	%r8b, 0x33(%rsp)
140013fbb:     	movl	%edx, %r8d
140013fbe:     	shrl	$0x8, %r8d
140013fc2:     	andl	$0xf, %r8d
140013fc6:     	movzbl	(%r8,%rax), %r8d
140013fcb:     	movb	%r8b, 0x34(%rsp)
140013fd0:     	movl	%edx, %r8d
140013fd3:     	shrl	$0x4, %r8d
140013fd7:     	andl	$0xf, %r8d
140013fdb:     	movzbl	(%r8,%rax), %r8d
140013fe0:     	movb	%r8b, 0x35(%rsp)
140013fe5:     	movl	%edx, %r8d
140013fe8:     	andl	$0xf, %r8d
140013fec:     	movzbl	(%r8,%rax), %eax
140013ff1:     	movb	%al, 0x36(%rsp)
140013ff5:     	orl	$0x1, %edx
140013ff8:     	bsrl	%edx, %eax
140013ffb:     	xorl	$0x1c, %eax
140013ffe:     	shrl	$0x2, %eax
140014001:     	addq	$-0x2, %rax
140014005:     	cmpq	$0xb, %rax
140014009:     	jae	0x140014037 <.text+0x13037>
14001400b:     	movb	$0x7b, 0x30(%rsp,%rax)
140014010:     	movw	$0x755c, 0x2e(%rsp,%rax) # imm = 0x755C
140014017:     	movzwl	0x36(%rsp), %edx
14001401c:     	movw	%dx, 0x8(%rcx)
140014020:     	movq	0x2e(%rsp), %rdx
140014025:     	movq	%rdx, (%rcx)
140014028:     	movb	%al, 0xa(%rcx)
14001402b:     	movb	$0xa, 0xb(%rcx)
14001402f:     	movq	%rcx, %rax
140014032:     	addq	$0x38, %rsp
140014036:     	retq
140014037:     	leaq	0xaf0a(%rip), %r8       # 0x14001ef48
14001403e:     	movl	$0xa, %edx
140014043:     	movq	%rax, %rcx
140014046:     	callq	0x140019c50 <.text+0x18c50>
14001404b:     	ud2
14001404d:     	int3
14001404e:     	int3
14001404f:     	int3
140014050:     	movq	%rcx, %rax
140014053:     	movzbl	%dl, %ecx
140014056:     	shll	$0x8, %ecx
140014059:     	orl	$0x5c, %ecx
14001405c:     	movw	%cx, (%rax)
14001405f:     	movq	$0x0, 0x2(%rax)
140014067:     	movw	$0x200, 0xa(%rax)       # imm = 0x200
14001406d:     	retq
14001406e:     	int3
14001406f:     	int3
140014070:     	movl	$0x0, 0x8(%rcx)
140014077:     	movq	$0x0, (%rcx)
14001407e:     	retq
14001407f:     	int3
140014080:     	pushq	%rsi
140014081:     	subq	$0x20, %rsp
140014085:     	movq	%rcx, %rsi
140014088:     	decq	%r8
14001408b:     	callq	0x140016080 <.text+0x15080>
140014090:     	movq	%rsi, %rax
140014093:     	addq	$0x20, %rsp
140014097:     	popq	%rsi
140014098:     	retq
140014099:     	int3
14001409a:     	int3
14001409b:     	int3
14001409c:     	int3
14001409d:     	int3
14001409e:     	int3
14001409f:     	int3
1400140a0:     	subq	$0x88, %rsp
1400140a7:     	leaq	0x10(%rcx), %rax
1400140ab:     	movq	%rcx, 0x28(%rsp)
1400140b0:     	addq	$0x14, %rcx
1400140b4:     	leaq	0x3e95(%rip), %r8       # 0x140017f50 <.text+0x16f50>
1400140bb:     	movq	%r8, 0x30(%rsp)
1400140c0:     	movq	%rax, 0x38(%rsp)
1400140c5:     	leaq	0x3c24(%rip), %rax      # 0x140017cf0 <.text+0x16cf0>
1400140cc:     	movq	%rax, 0x40(%rsp)
1400140d1:     	movq	%rcx, 0x48(%rsp)
1400140d6:     	movq	%rax, 0x50(%rsp)
1400140db:     	leaq	0xa006(%rip), %rax      # 0x14001e0e8
1400140e2:     	movq	%rax, 0x58(%rsp)
1400140e7:     	movq	$0x3, 0x60(%rsp)
1400140f0:     	movq	$0x0, 0x78(%rsp)
1400140f9:     	leaq	0x28(%rsp), %rax
1400140fe:     	movq	%rax, 0x68(%rsp)
140014103:     	movq	$0x3, 0x70(%rsp)
14001410c:     	movq	0x20(%rdx), %rcx
140014110:     	movq	0x28(%rdx), %rdx
140014114:     	leaq	0x58(%rsp), %r8
140014119:     	callq	0x140014a60 <.text+0x13a60>
14001411e:     	nop
14001411f:     	addq	$0x88, %rsp
140014126:     	retq
140014127:     	int3
140014128:     	int3
140014129:     	int3
14001412a:     	int3
14001412b:     	int3
14001412c:     	int3
14001412d:     	int3
14001412e:     	int3
14001412f:     	int3
140014130:     	pushq	%r15
140014132:     	pushq	%r14
140014134:     	pushq	%r12
140014136:     	pushq	%rsi
140014137:     	pushq	%rdi
140014138:     	pushq	%rbx
140014139:     	subq	$0x88, %rsp
140014140:     	movq	%rcx, %r14
140014143:     	movq	0x20(%rdx), %rdi
140014147:     	movq	0x28(%rdx), %rbx
14001414b:     	movq	0x18(%rbx), %r15
14001414f:     	leaq	0x9fc2(%rip), %rdx      # 0x14001e118
140014156:     	movl	$0xc, %r8d
14001415c:     	movq	%rdi, %rcx
14001415f:     	callq	*%r15
140014162:     	movb	$0x1, %sil
140014165:     	testb	%al, %al
140014167:     	jne	0x14001429e <.text+0x1329e>
14001416d:     	movq	0x18(%r14), %rax
140014171:     	leaq	0x10(%rax), %rcx
140014175:     	movq	%rax, 0x20(%rsp)
14001417a:     	addq	$0x14, %rax
14001417e:     	leaq	0x3dcb(%rip), %rdx      # 0x140017f50 <.text+0x16f50>
140014185:     	movq	%rdx, 0x28(%rsp)
14001418a:     	movq	%rcx, 0x30(%rsp)
14001418f:     	leaq	0x3b5a(%rip), %rcx      # 0x140017cf0 <.text+0x16cf0>
140014196:     	movq	%rcx, 0x38(%rsp)
14001419b:     	movq	%rax, 0x40(%rsp)
1400141a0:     	movq	%rcx, 0x48(%rsp)
1400141a5:     	leaq	0x9f3c(%rip), %rax      # 0x14001e0e8
1400141ac:     	movq	%rax, 0x58(%rsp)
1400141b1:     	movq	$0x3, 0x60(%rsp)
1400141ba:     	movq	$0x0, 0x78(%rsp)
1400141c3:     	leaq	0x20(%rsp), %rax
1400141c8:     	movq	%rax, 0x68(%rsp)
1400141cd:     	movq	$0x3, 0x70(%rsp)
1400141d6:     	leaq	0x58(%rsp), %r8
1400141db:     	movq	%rdi, %rcx
1400141de:     	movq	%rbx, %rdx
1400141e1:     	callq	0x140014a60 <.text+0x13a60>
1400141e6:     	testb	%al, %al
1400141e8:     	jne	0x14001429e <.text+0x1329e>
1400141ee:     	movq	0x10(%r14), %r12
1400141f2:     	testq	%r12, %r12
1400141f5:     	je	0x140014248 <.text+0x13248>
1400141f7:     	leaq	0x9f26(%rip), %rdx      # 0x14001e124
1400141fe:     	movl	$0x2, %r8d
140014204:     	movq	%rdi, %rcx
140014207:     	callq	*%r15
14001420a:     	testb	%al, %al
14001420c:     	jne	0x14001429e <.text+0x1329e>
140014212:     	movups	(%r12), %xmm0
140014217:     	movups	0x10(%r12), %xmm1
14001421d:     	movups	0x20(%r12), %xmm2
140014223:     	movaps	%xmm2, 0x40(%rsp)
140014228:     	movaps	%xmm1, 0x30(%rsp)
14001422d:     	movaps	%xmm0, 0x20(%rsp)
140014232:     	leaq	0x20(%rsp), %r8
140014237:     	movq	%rdi, %rcx
14001423a:     	movq	%rbx, %rdx
14001423d:     	callq	0x140014a60 <.text+0x13a60>
140014242:     	testb	%al, %al
140014244:     	je	0x14001429c <.text+0x1329c>
140014246:     	jmp	0x14001429e <.text+0x1329e>
140014248:     	movq	(%r14), %rbx
14001424b:     	movq	0x8(%r14), %rax
14001424f:     	movq	%rbx, %rcx
140014252:     	callq	*0x18(%rax)
140014255:     	movabsq	$-0x243e97eff4e109c, %rcx # imm = 0xFDBC168100B1EF64
14001425f:     	xorq	%rdx, %rcx
140014262:     	movabsq	$-0x3e5d376332e1843f, %rdx # imm = 0xC1A2C89CCD1E7BC1
14001426c:     	xorq	%rax, %rdx
14001426f:     	orq	%rcx, %rdx
140014272:     	jne	0x14001429c <.text+0x1329c>
140014274:     	leaq	0x9ea9(%rip), %rdx      # 0x14001e124
14001427b:     	movl	$0x2, %r8d
140014281:     	movq	%rdi, %rcx
140014284:     	callq	*%r15
140014287:     	testb	%al, %al
140014289:     	jne	0x14001429e <.text+0x1329e>
14001428b:     	movq	(%rbx), %rdx
14001428e:     	movq	0x8(%rbx), %r8
140014292:     	movq	%rdi, %rcx
140014295:     	callq	*%r15
140014298:     	testb	%al, %al
14001429a:     	jne	0x14001429e <.text+0x1329e>
14001429c:     	xorl	%esi, %esi
14001429e:     	movl	%esi, %eax
1400142a0:     	addq	$0x88, %rsp
1400142a7:     	popq	%rbx
1400142a8:     	popq	%rdi
1400142a9:     	popq	%rsi
1400142aa:     	popq	%r12
1400142ac:     	popq	%r14
1400142ae:     	popq	%r15
1400142b0:     	retq
1400142b1:     	int3
1400142b2:     	int3
1400142b3:     	int3
1400142b4:     	int3
1400142b5:     	int3
1400142b6:     	int3
1400142b7:     	int3
1400142b8:     	int3
1400142b9:     	int3
1400142ba:     	int3
1400142bb:     	int3
1400142bc:     	int3
1400142bd:     	int3
1400142be:     	int3
1400142bf:     	int3
1400142c0:     	pushq	%r15
1400142c2:     	pushq	%r14
1400142c4:     	pushq	%r13
1400142c6:     	pushq	%r12
1400142c8:     	pushq	%rsi
1400142c9:     	pushq	%rdi
1400142ca:     	pushq	%rbp
1400142cb:     	pushq	%rbx
1400142cc:     	subq	$0x68, %rsp
1400142d0:     	movaps	%xmm7, 0x50(%rsp)
1400142d5:     	movaps	%xmm6, 0x40(%rsp)
1400142da:     	movq	%r8, %r15
1400142dd:     	movq	%rdx, %rdi
1400142e0:     	movq	0x10(%rcx), %rax
1400142e4:     	movq	%rax, 0x38(%rsp)
1400142e9:     	movq	(%rcx), %rax
1400142ec:     	movq	%rax, 0x30(%rsp)
1400142f1:     	movq	0x8(%rcx), %rax
1400142f5:     	movq	%rax, 0x28(%rsp)
1400142fa:     	xorl	%ebp, %ebp
1400142fc:     	movdqa	0x9c3c(%rip), %xmm6     # 0x14001df40
140014304:     	movdqa	0x9c24(%rip), %xmm7     # 0x14001df30
14001430c:     	movabsq	$-0x7f7f7f7f7f7f7f80, %r13 # imm = 0x8080808080808080
140014316:     	xorl	%r12d, %r12d
140014319:     	xorl	%ebx, %ebx
14001431b:     	jmp	0x140014348 <.text+0x13348>
14001431d:     	nopl	(%rax)
140014320:     	cmpb	$0xa, -0x1(%r8,%rdx)
140014326:     	sete	%al
140014329:     	movq	0x38(%rsp), %rcx
14001432e:     	movb	%al, (%rcx)
140014330:     	movq	0x30(%rsp), %rcx
140014335:     	movq	0x28(%rsp), %rax
14001433a:     	callq	*0x18(%rax)
14001433d:     	movq	%r14, %r12
140014340:     	testb	%al, %al
140014342:     	jne	0x1400144e9 <.text+0x134e9>
140014348:     	testb	%bl, %bl
14001434a:     	jne	0x1400144e5 <.text+0x134e5>
140014350:     	cmpq	%r15, %rbp
140014353:     	jbe	0x14001436c <.text+0x1336c>
140014355:     	movq	%rbp, %r14
140014358:     	jmp	0x140014493 <.text+0x13493>
14001435d:     	nopl	(%rax)
140014360:     	movq	%r14, %rbp
140014363:     	cmpq	%r15, %r14
140014366:     	ja	0x140014493 <.text+0x13493>
14001436c:     	movq	%r15, %rax
14001436f:     	subq	%rbp, %rax
140014372:     	leaq	(%rdi,%rbp), %rcx
140014376:     	cmpq	$0x10, %rax
14001437a:     	jae	0x1400143b0 <.text+0x133b0>
14001437c:     	cmpq	%rbp, %r15
14001437f:     	je	0x140014490 <.text+0x13490>
140014385:     	xorl	%r8d, %r8d
140014388:     	nopl	(%rax,%rax)
140014390:     	cmpb	$0xa, (%rcx,%r8)
140014395:     	je	0x140014463 <.text+0x13463>
14001439b:     	incq	%r8
14001439e:     	cmpq	%r8, %rax
1400143a1:     	jne	0x140014390 <.text+0x13390>
1400143a3:     	jmp	0x140014490 <.text+0x13490>
1400143a8:     	nopl	(%rax,%rax)
1400143b0:     	leaq	0x7(%rcx), %rdx
1400143b4:     	andq	$-0x8, %rdx
1400143b8:     	subq	%rcx, %rdx
1400143bb:     	je	0x1400143f0 <.text+0x133f0>
1400143bd:     	je	0x1400143f0 <.text+0x133f0>
1400143bf:     	xorl	%r8d, %r8d
1400143c2:     	nopw	%cs:(%rax,%rax)
1400143d0:     	cmpb	$0xa, (%rcx,%r8)
1400143d5:     	je	0x140014463 <.text+0x13463>
1400143db:     	incq	%r8
1400143de:     	cmpq	%r8, %rdx
1400143e1:     	jne	0x1400143d0 <.text+0x133d0>
1400143e3:     	leaq	-0x10(%rax), %r8
1400143e7:     	jmp	0x140014400 <.text+0x13400>
1400143e9:     	nopl	(%rax)
1400143f0:     	leaq	-0x10(%rax), %r8
1400143f4:     	xorl	%edx, %edx
1400143f6:     	jmp	0x140014405 <.text+0x13405>
1400143f8:     	nopl	(%rax,%rax)
140014400:     	cmpq	%r8, %rdx
140014403:     	ja	0x140014440 <.text+0x13440>
140014405:     	movdqu	(%rcx,%rdx), %xmm0
14001440a:     	movdqa	%xmm0, %xmm1
14001440e:     	pxor	%xmm6, %xmm1
140014412:     	paddq	%xmm7, %xmm1
140014416:     	pandn	%xmm1, %xmm0
14001441a:     	pshufd	$0xee, %xmm0, %xmm1     # xmm1 = xmm0[2,3,2,3]
14001441f:     	por	%xmm0, %xmm1
140014423:     	movq	%xmm1, %r9
140014428:     	testq	%r13, %r9
14001442b:     	jne	0x140014440 <.text+0x13440>
14001442d:     	addq	$0x10, %rdx
140014431:     	jmp	0x140014400 <.text+0x13400>
140014433:     	nopw	%cs:(%rax,%rax)
140014440:     	cmpq	%rax, %rdx
140014443:     	je	0x140014490 <.text+0x13490>
140014445:     	nopw	%cs:(%rax,%rax)
140014450:     	cmpb	$0xa, (%rcx,%rdx)
140014454:     	je	0x140014460 <.text+0x13460>
140014456:     	incq	%rdx
140014459:     	cmpq	%rdx, %rax
14001445c:     	jne	0x140014450 <.text+0x13450>
14001445e:     	jmp	0x140014490 <.text+0x13490>
140014460:     	movq	%rdx, %r8
140014463:     	leaq	(%r8,%rbp), %r14
140014467:     	incq	%r14
14001446a:     	addq	%r8, %rbp
14001446d:     	cmpq	%r15, %rbp
140014470:     	jae	0x140014360 <.text+0x13360>
140014476:     	cmpb	$0xa, (%rdi,%rbp)
14001447a:     	jne	0x140014360 <.text+0x13360>
140014480:     	xorl	%ebx, %ebx
140014482:     	movq	%r14, %rbp
140014485:     	movq	%r14, %rsi
140014488:     	jmp	0x1400144a3 <.text+0x134a3>
14001448a:     	nopw	(%rax,%rax)
140014490:     	movq	%r15, %r14
140014493:     	movb	$0x1, %bl
140014495:     	movq	%r14, %rbp
140014498:     	movq	%r12, %r14
14001449b:     	movq	%r15, %rsi
14001449e:     	cmpq	%r15, %r12
1400144a1:     	je	0x1400144e5 <.text+0x134e5>
1400144a3:     	movq	0x38(%rsp), %rax
1400144a8:     	cmpb	$0x0, (%rax)
1400144ab:     	je	0x1400144cb <.text+0x134cb>
1400144ad:     	movl	$0x4, %r8d
1400144b3:     	movq	0x30(%rsp), %rcx
1400144b8:     	leaq	0x9e69(%rip), %rdx      # 0x14001e328
1400144bf:     	movq	0x28(%rsp), %rax
1400144c4:     	callq	*0x18(%rax)
1400144c7:     	testb	%al, %al
1400144c9:     	jne	0x1400144e9 <.text+0x134e9>
1400144cb:     	movq	%rsi, %r8
1400144ce:     	subq	%r12, %r8
1400144d1:     	leaq	(%rdi,%r12), %rdx
1400144d5:     	cmpq	%r12, %rsi
1400144d8:     	jne	0x140014320 <.text+0x13320>
1400144de:     	xorl	%eax, %eax
1400144e0:     	jmp	0x140014329 <.text+0x13329>
1400144e5:     	xorl	%eax, %eax
1400144e7:     	jmp	0x1400144eb <.text+0x134eb>
1400144e9:     	movb	$0x1, %al
1400144eb:     	movaps	0x40(%rsp), %xmm6
1400144f0:     	movaps	0x50(%rsp), %xmm7
1400144f5:     	addq	$0x68, %rsp
1400144f9:     	popq	%rbx
1400144fa:     	popq	%rbp
1400144fb:     	popq	%rdi
1400144fc:     	popq	%rsi
1400144fd:     	popq	%r12
1400144ff:     	popq	%r13
140014501:     	popq	%r14
140014503:     	popq	%r15
140014505:     	retq
140014506:     	int3
140014507:     	int3
140014508:     	int3
140014509:     	int3
14001450a:     	int3
14001450b:     	int3
14001450c:     	int3
14001450d:     	int3
14001450e:     	int3
14001450f:     	int3
140014510:     	pushq	%r14
140014512:     	pushq	%rsi
140014513:     	pushq	%rdi
140014514:     	pushq	%rbx
140014515:     	subq	$0x28, %rsp
140014519:     	movl	%edx, %esi
14001451b:     	movq	0x10(%rcx), %rbx
14001451f:     	cmpb	$0x0, (%rbx)
140014522:     	movq	(%rcx), %rdi
140014525:     	movq	0x8(%rcx), %r14
140014529:     	je	0x14001454f <.text+0x1354f>
14001452b:     	leaq	0x9df6(%rip), %rdx      # 0x14001e328
140014532:     	movl	$0x4, %r8d
140014538:     	movq	%rdi, %rcx
14001453b:     	callq	*0x18(%r14)
14001453f:     	testb	%al, %al
140014541:     	je	0x14001454f <.text+0x1354f>
140014543:     	movb	$0x1, %al
140014545:     	addq	$0x28, %rsp
140014549:     	popq	%rbx
14001454a:     	popq	%rdi
14001454b:     	popq	%rsi
14001454c:     	popq	%r14
14001454e:     	retq
14001454f:     	cmpl	$0xa, %esi
140014552:     	sete	(%rbx)
140014555:     	movq	0x20(%r14), %rax
140014559:     	movq	%rdi, %rcx
14001455c:     	movl	%esi, %edx
14001455e:     	addq	$0x28, %rsp
140014562:     	popq	%rbx
140014563:     	popq	%rdi
140014564:     	popq	%rsi
140014565:     	popq	%r14
140014567:     	jmpq	*%rax
14001456a:     	int3
14001456b:     	int3
14001456c:     	int3
14001456d:     	int3
14001456e:     	int3
14001456f:     	int3
140014570:     	pushq	%r15
140014572:     	pushq	%r14
140014574:     	pushq	%r12
140014576:     	pushq	%rsi
140014577:     	pushq	%rdi
140014578:     	pushq	%rbp
140014579:     	pushq	%rbx
14001457a:     	subq	$0x90, %rsp
140014581:     	movq	%rcx, %rsi
140014584:     	movb	$0x1, %bpl
140014587:     	cmpb	$0x0, 0x8(%rcx)
14001458b:     	je	0x1400145aa <.text+0x135aa>
14001458d:     	movb	%bpl, 0x8(%rsi)
140014591:     	movb	$0x1, 0x9(%rsi)
140014595:     	movq	%rsi, %rax
140014598:     	addq	$0x90, %rsp
14001459f:     	popq	%rbx
1400145a0:     	popq	%rbp
1400145a1:     	popq	%rdi
1400145a2:     	popq	%rsi
1400145a3:     	popq	%r12
1400145a5:     	popq	%r14
1400145a7:     	popq	%r15
1400145a9:     	retq
1400145aa:     	movq	%r9, %rdi
1400145ad:     	movq	%r8, %r14
1400145b0:     	movq	%rdx, %r15
1400145b3:     	movq	0xf0(%rsp), %r12
1400145bb:     	movq	(%rsi), %rbx
1400145be:     	movl	0x34(%rbx), %eax
1400145c1:     	movzbl	0x9(%rsi), %ecx
1400145c5:     	testb	$0x4, %al
1400145c7:     	jne	0x140014645 <.text+0x13645>
1400145c9:     	xorl	%r8d, %r8d
1400145cc:     	testb	%cl, %cl
1400145ce:     	leaq	0x9d57(%rip), %rax      # 0x14001e32c
1400145d5:     	leaq	0x9d53(%rip), %rdx      # 0x14001e32f
1400145dc:     	cmoveq	%rax, %rdx
1400145e0:     	sete	%r8b
1400145e4:     	orq	$0x2, %r8
1400145e8:     	movq	0x20(%rbx), %rcx
1400145ec:     	movq	0x28(%rbx), %rax
1400145f0:     	callq	*0x18(%rax)
1400145f3:     	movb	$0x1, %bpl
1400145f6:     	testb	%al, %al
1400145f8:     	jne	0x14001458d <.text+0x1358d>
1400145fa:     	movq	0x20(%rbx), %rcx
1400145fe:     	movq	0x28(%rbx), %rax
140014602:     	movq	%r15, %rdx
140014605:     	movq	%r14, %r8
140014608:     	callq	*0x18(%rax)
14001460b:     	testb	%al, %al
14001460d:     	jne	0x14001458d <.text+0x1358d>
140014613:     	movq	0x20(%rbx), %rcx
140014617:     	movq	0x28(%rbx), %rax
14001461b:     	leaq	0x9cae(%rip), %rdx      # 0x14001e2d0
140014622:     	movl	$0x2, %r8d
140014628:     	callq	*0x18(%rax)
14001462b:     	testb	%al, %al
14001462d:     	jne	0x14001458d <.text+0x1358d>
140014633:     	movq	%rdi, %rcx
140014636:     	movq	%rbx, %rdx
140014639:     	callq	*0x18(%r12)
14001463e:     	movl	%eax, %ebp
140014640:     	jmp	0x14001458d <.text+0x1358d>
140014645:     	testb	%cl, %cl
140014647:     	jne	0x14001466f <.text+0x1366f>
140014649:     	movq	0x20(%rbx), %rcx
14001464d:     	movq	0x28(%rbx), %rax
140014651:     	leaq	0x9cd9(%rip), %rdx      # 0x14001e331
140014658:     	movl	$0x3, %r8d
14001465e:     	callq	*0x18(%rax)
140014661:     	movb	$0x1, %bpl
140014664:     	testb	%al, %al
140014666:     	jne	0x14001458d <.text+0x1358d>
14001466c:     	movl	0x34(%rbx), %eax
14001466f:     	movb	$0x1, 0x2f(%rsp)
140014674:     	movups	0x20(%rbx), %xmm0
140014678:     	movaps	%xmm0, 0x30(%rsp)
14001467d:     	leaq	0x2f(%rsp), %rcx
140014682:     	movq	%rcx, 0x40(%rsp)
140014687:     	movl	0x30(%rbx), %ecx
14001468a:     	movzbl	0x38(%rbx), %edx
14001468e:     	movl	%eax, 0x84(%rsp)
140014695:     	movl	%ecx, 0x80(%rsp)
14001469c:     	movb	%dl, 0x88(%rsp)
1400146a3:     	movups	(%rbx), %xmm0
1400146a6:     	movaps	%xmm0, 0x50(%rsp)
1400146ab:     	movups	0x10(%rbx), %xmm0
1400146af:     	movaps	%xmm0, 0x60(%rsp)
1400146b4:     	leaq	0x30(%rsp), %rcx
1400146b9:     	movq	%rcx, 0x70(%rsp)
1400146be:     	leaq	0x9c33(%rip), %rax      # 0x14001e2f8
1400146c5:     	movq	%rax, 0x78(%rsp)
1400146ca:     	movq	%r15, %rdx
1400146cd:     	movq	%r14, %r8
1400146d0:     	callq	0x1400142c0 <.text+0x132c0>
1400146d5:     	testb	%al, %al
1400146d7:     	jne	0x140014705 <.text+0x13705>
1400146d9:     	leaq	0x9bf0(%rip), %rdx      # 0x14001e2d0
1400146e0:     	leaq	0x30(%rsp), %rcx
1400146e5:     	movl	$0x2, %r8d
1400146eb:     	callq	0x1400142c0 <.text+0x132c0>
1400146f0:     	testb	%al, %al
1400146f2:     	jne	0x140014705 <.text+0x13705>
1400146f4:     	leaq	0x50(%rsp), %rdx
1400146f9:     	movq	%rdi, %rcx
1400146fc:     	callq	*0x18(%r12)
140014701:     	testb	%al, %al
140014703:     	je	0x14001470d <.text+0x1370d>
140014705:     	movb	$0x1, %bpl
140014708:     	jmp	0x14001458d <.text+0x1358d>
14001470d:     	movq	0x70(%rsp), %rcx
140014712:     	movq	0x78(%rsp), %rax
140014717:     	leaq	0x9c16(%rip), %rdx      # 0x14001e334
14001471e:     	movl	$0x2, %r8d
140014724:     	callq	*0x18(%rax)
140014727:     	movl	%eax, %ebp
140014729:     	jmp	0x14001458d <.text+0x1358d>
14001472e:     	int3
14001472f:     	int3
140014730:     	pushq	%rsi
140014731:     	subq	$0x20, %rsp
140014735:     	movq	%rcx, %rsi
140014738:     	cmpb	$0x0, 0x9(%rcx)
14001473c:     	movzbl	0x8(%rcx), %ecx
140014740:     	je	0x140014785 <.text+0x13785>
140014742:     	movb	$0x1, %al
140014744:     	testb	%cl, %cl
140014746:     	jne	0x140014780 <.text+0x13780>
140014748:     	movq	(%rsi), %rax
14001474b:     	testb	$0x4, 0x34(%rax)
14001474f:     	jne	0x140014768 <.text+0x13768>
140014751:     	movq	0x20(%rax), %rcx
140014755:     	movq	0x28(%rax), %rax
140014759:     	leaq	0x9bd7(%rip), %rdx      # 0x14001e337
140014760:     	movl	$0x2, %r8d
140014766:     	jmp	0x14001477d <.text+0x1377d>
140014768:     	movq	0x20(%rax), %rcx
14001476c:     	movq	0x28(%rax), %rax
140014770:     	leaq	0x9bbf(%rip), %rdx      # 0x14001e336
140014777:     	movl	$0x1, %r8d
14001477d:     	callq	*0x18(%rax)
140014780:     	movb	%al, 0x8(%rsi)
140014783:     	movl	%eax, %ecx
140014785:     	testb	%cl, %cl
140014787:     	setne	%al
14001478a:     	addq	$0x20, %rsp
14001478e:     	popq	%rsi
14001478f:     	retq
140014790:     	pushq	%r15
140014792:     	pushq	%r14
140014794:     	pushq	%rsi
140014795:     	pushq	%rdi
140014796:     	pushq	%rbx
140014797:     	subq	$0x90, %rsp
14001479e:     	movq	%rcx, %rsi
1400147a1:     	cmpb	$0x0, 0x10(%rcx)
1400147a5:     	movq	(%rcx), %r15
1400147a8:     	movb	$0x1, %al
1400147aa:     	je	0x1400147c7 <.text+0x137c7>
1400147ac:     	movb	%al, 0x10(%rsi)
1400147af:     	incq	%r15
1400147b2:     	movq	%r15, (%rsi)
1400147b5:     	movq	%rsi, %rax
1400147b8:     	addq	$0x90, %rsp
1400147bf:     	popq	%rbx
1400147c0:     	popq	%rdi
1400147c1:     	popq	%rsi
1400147c2:     	popq	%r14
1400147c4:     	popq	%r15
1400147c6:     	retq
1400147c7:     	movq	%r8, %rdi
1400147ca:     	movq	%rdx, %rbx
1400147cd:     	movq	0x8(%rsi), %r14
1400147d1:     	movl	0x34(%r14), %eax
1400147d5:     	testb	$0x4, %al
1400147d7:     	jne	0x140014816 <.text+0x13816>
1400147d9:     	xorl	%r8d, %r8d
1400147dc:     	testq	%r15, %r15
1400147df:     	leaq	0x9b53(%rip), %rax      # 0x14001e339
1400147e6:     	leaq	0x9b42(%rip), %rdx      # 0x14001e32f
1400147ed:     	cmoveq	%rax, %rdx
1400147f1:     	setne	%r8b
1400147f5:     	incq	%r8
1400147f8:     	movq	0x20(%r14), %rcx
1400147fc:     	movq	0x28(%r14), %rax
140014800:     	callq	*0x18(%rax)
140014803:     	movl	%eax, %ecx
140014805:     	movb	$0x1, %al
140014807:     	testb	%cl, %cl
140014809:     	jne	0x1400147ac <.text+0x137ac>
14001480b:     	movq	%rbx, %rcx
14001480e:     	movq	%r14, %rdx
140014811:     	callq	*0x18(%rdi)
140014814:     	jmp	0x1400147ac <.text+0x137ac>
140014816:     	testq	%r15, %r15
140014819:     	jne	0x140014843 <.text+0x13843>
14001481b:     	movq	0x20(%r14), %rcx
14001481f:     	movq	0x28(%r14), %rax
140014823:     	leaq	0x9b10(%rip), %rdx      # 0x14001e33a
14001482a:     	movl	$0x2, %r8d
140014830:     	callq	*0x18(%rax)
140014833:     	movl	%eax, %ecx
140014835:     	movb	$0x1, %al
140014837:     	testb	%cl, %cl
140014839:     	jne	0x1400147ac <.text+0x137ac>
14001483f:     	movl	0x34(%r14), %eax
140014843:     	movb	$0x1, 0x2f(%rsp)
140014848:     	movups	0x20(%r14), %xmm0
14001484d:     	movaps	%xmm0, 0x70(%rsp)
140014852:     	leaq	0x2f(%rsp), %rcx
140014857:     	movq	%rcx, 0x80(%rsp)
14001485f:     	movl	0x30(%r14), %ecx
140014863:     	movzbl	0x38(%r14), %edx
140014868:     	movl	%eax, 0x64(%rsp)
14001486c:     	movl	%ecx, 0x60(%rsp)
140014870:     	movb	%dl, 0x68(%rsp)
140014874:     	movups	(%r14), %xmm0
140014878:     	movaps	%xmm0, 0x30(%rsp)
14001487d:     	movups	0x10(%r14), %xmm0
140014882:     	movaps	%xmm0, 0x40(%rsp)
140014887:     	leaq	0x70(%rsp), %rax
14001488c:     	movq	%rax, 0x50(%rsp)
140014891:     	leaq	0x9a60(%rip), %rax      # 0x14001e2f8
140014898:     	movq	%rax, 0x58(%rsp)
14001489d:     	leaq	0x30(%rsp), %rdx
1400148a2:     	movq	%rbx, %rcx
1400148a5:     	callq	*0x18(%rdi)
1400148a8:     	testb	%al, %al
1400148aa:     	je	0x1400148b3 <.text+0x138b3>
1400148ac:     	movb	$0x1, %al
1400148ae:     	jmp	0x1400147ac <.text+0x137ac>
1400148b3:     	movq	0x50(%rsp), %rcx
1400148b8:     	movq	0x58(%rsp), %rax
1400148bd:     	leaq	0x9a70(%rip), %rdx      # 0x14001e334
1400148c4:     	movl	$0x2, %r8d
1400148ca:     	callq	*0x18(%rax)
1400148cd:     	jmp	0x1400147ac <.text+0x137ac>
1400148d2:     	int3
1400148d3:     	int3
1400148d4:     	int3
1400148d5:     	int3
1400148d6:     	int3
1400148d7:     	int3
1400148d8:     	int3
1400148d9:     	int3
1400148da:     	int3
1400148db:     	int3
1400148dc:     	int3
1400148dd:     	int3
1400148de:     	int3
1400148df:     	int3
1400148e0:     	pushq	%r14
1400148e2:     	pushq	%rsi
1400148e3:     	pushq	%rdi
1400148e4:     	pushq	%rbx
1400148e5:     	subq	$0x88, %rsp
1400148ec:     	movq	%rcx, %rsi
1400148ef:     	movb	$0x1, %al
1400148f1:     	cmpb	$0x0, 0x8(%rcx)
1400148f5:     	je	0x14001490e <.text+0x1390e>
1400148f7:     	movb	%al, 0x8(%rsi)
1400148fa:     	movb	$0x1, 0x9(%rsi)
1400148fe:     	movq	%rsi, %rax
140014901:     	addq	$0x88, %rsp
140014908:     	popq	%rbx
140014909:     	popq	%rdi
14001490a:     	popq	%rsi
14001490b:     	popq	%r14
14001490d:     	retq
14001490e:     	movq	%r8, %rdi
140014911:     	movq	%rdx, %rbx
140014914:     	movq	(%rsi), %r14
140014917:     	movl	0x34(%r14), %eax
14001491b:     	movzbl	0x9(%rsi), %ecx
14001491f:     	testb	$0x4, %al
140014921:     	jne	0x140014952 <.text+0x13952>
140014923:     	testb	%cl, %cl
140014925:     	je	0x140014947 <.text+0x13947>
140014927:     	movq	0x20(%r14), %rcx
14001492b:     	movq	0x28(%r14), %rax
14001492f:     	leaq	0x99f9(%rip), %rdx      # 0x14001e32f
140014936:     	movl	$0x2, %r8d
14001493c:     	callq	*0x18(%rax)
14001493f:     	movl	%eax, %ecx
140014941:     	movb	$0x1, %al
140014943:     	testb	%cl, %cl
140014945:     	jne	0x1400148f7 <.text+0x138f7>
140014947:     	movq	%rbx, %rcx
14001494a:     	movq	%r14, %rdx
14001494d:     	callq	*0x18(%rdi)
140014950:     	jmp	0x1400148f7 <.text+0x138f7>
140014952:     	testb	%cl, %cl
140014954:     	jne	0x14001497a <.text+0x1397a>
140014956:     	movq	0x20(%r14), %rcx
14001495a:     	movq	0x28(%r14), %rax
14001495e:     	leaq	0x99d8(%rip), %rdx      # 0x14001e33d
140014965:     	movl	$0x1, %r8d
14001496b:     	callq	*0x18(%rax)
14001496e:     	movl	%eax, %ecx
140014970:     	movb	$0x1, %al
140014972:     	testb	%cl, %cl
140014974:     	jne	0x1400148f7 <.text+0x138f7>
140014976:     	movl	0x34(%r14), %eax
14001497a:     	movb	$0x1, 0x2f(%rsp)
14001497f:     	movups	0x20(%r14), %xmm0
140014984:     	movaps	%xmm0, 0x70(%rsp)
140014989:     	leaq	0x2f(%rsp), %rcx
14001498e:     	movq	%rcx, 0x80(%rsp)
140014996:     	movl	0x30(%r14), %ecx
14001499a:     	movzbl	0x38(%r14), %edx
14001499f:     	movl	%eax, 0x64(%rsp)
1400149a3:     	movl	%ecx, 0x60(%rsp)
1400149a7:     	movb	%dl, 0x68(%rsp)
1400149ab:     	movups	(%r14), %xmm0
1400149af:     	movaps	%xmm0, 0x30(%rsp)
1400149b4:     	movups	0x10(%r14), %xmm0
1400149b9:     	movaps	%xmm0, 0x40(%rsp)
1400149be:     	leaq	0x70(%rsp), %rax
1400149c3:     	movq	%rax, 0x50(%rsp)
1400149c8:     	leaq	0x9929(%rip), %rax      # 0x14001e2f8
1400149cf:     	movq	%rax, 0x58(%rsp)
1400149d4:     	leaq	0x30(%rsp), %rdx
1400149d9:     	movq	%rbx, %rcx
1400149dc:     	callq	*0x18(%rdi)
1400149df:     	testb	%al, %al
1400149e1:     	je	0x1400149ea <.text+0x139ea>
1400149e3:     	movb	$0x1, %al
1400149e5:     	jmp	0x1400148f7 <.text+0x138f7>
1400149ea:     	movq	0x50(%rsp), %rcx
1400149ef:     	movq	0x58(%rsp), %rax
1400149f4:     	leaq	0x9939(%rip), %rdx      # 0x14001e334
1400149fb:     	movl	$0x2, %r8d
140014a01:     	callq	*0x18(%rax)
140014a04:     	jmp	0x1400148f7 <.text+0x138f7>
140014a09:     	int3
140014a0a:     	int3
140014a0b:     	int3
140014a0c:     	int3
140014a0d:     	int3
140014a0e:     	int3
140014a0f:     	int3
140014a10:     	cmpb	$0x0, 0x8(%rcx)
140014a14:     	je	0x140014a19 <.text+0x13a19>
140014a16:     	movb	$0x1, %al
140014a18:     	retq
140014a19:     	movq	(%rcx), %rax
140014a1c:     	movq	0x20(%rax), %rcx
140014a20:     	movq	0x28(%rax), %rax
140014a24:     	movq	0x18(%rax), %rax
140014a28:     	leaq	0x990f(%rip), %rdx      # 0x14001e33e
140014a2f:     	movl	$0x1, %r8d
140014a35:     	jmpq	*%rax
140014a38:     	int3
140014a39:     	int3
140014a3a:     	int3
140014a3b:     	int3
140014a3c:     	int3
140014a3d:     	int3
140014a3e:     	int3
140014a3f:     	int3
140014a40:     	movq	%rdx, %r8
140014a43:     	leaq	0x98ae(%rip), %rdx      # 0x14001e2f8
140014a4a:     	jmp	0x140014a60 <.text+0x13a60>
140014a4f:     	int3
140014a50:     	movq	%rcx, %r8
140014a53:     	movq	0x20(%rdx), %rcx
140014a57:     	movq	0x28(%rdx), %rdx
140014a5b:     	jmp	0x140014a60 <.text+0x13a60>
140014a60:     	pushq	%r15
140014a62:     	pushq	%r14
140014a64:     	pushq	%r13
140014a66:     	pushq	%r12
140014a68:     	pushq	%rsi
140014a69:     	pushq	%rdi
140014a6a:     	pushq	%rbp
140014a6b:     	pushq	%rbx
140014a6c:     	subq	$0x68, %rsp
140014a70:     	movq	%r8, %rsi
140014a73:     	movq	$0x20, 0x58(%rsp)
140014a7c:     	movb	$0x3, 0x60(%rsp)
140014a81:     	movq	$0x0, 0x28(%rsp)
140014a8a:     	movq	$0x0, 0x38(%rsp)
140014a93:     	movq	%rcx, 0x48(%rsp)
140014a98:     	movq	%rdx, 0x50(%rsp)
140014a9d:     	movq	0x20(%r8), %r14
140014aa1:     	testq	%r14, %r14
140014aa4:     	je	0x140014bb7 <.text+0x13bb7>
140014aaa:     	movq	0x28(%rsi), %rax
140014aae:     	testq	%rax, %rax
140014ab1:     	je	0x140014c23 <.text+0x13c23>
140014ab7:     	movq	(%rsi), %r15
140014aba:     	movq	0x10(%rsi), %r12
140014abe:     	addq	$0x8, %r15
140014ac2:     	imulq	$0x38, %rax, %r13
140014ac6:     	xorl	%ebp, %ebp
140014ac8:     	leaq	0x28(%rsp), %rdi
140014acd:     	xorl	%ebx, %ebx
140014acf:     	nop
140014ad0:     	movq	(%r15), %r8
140014ad3:     	testq	%r8, %r8
140014ad6:     	je	0x140014af1 <.text+0x13af1>
140014ad8:     	movq	0x48(%rsp), %rcx
140014add:     	movq	0x50(%rsp), %rax
140014ae2:     	movq	-0x8(%r15), %rdx
140014ae6:     	callq	*0x18(%rax)
140014ae9:     	testb	%al, %al
140014aeb:     	jne	0x140014c57 <.text+0x13c57>
140014af1:     	movzbl	0x30(%r14,%rbp), %eax
140014af7:     	movb	%al, 0x60(%rsp)
140014afb:     	movq	0x28(%r14,%rbp), %rax
140014b00:     	movq	%rax, 0x58(%rsp)
140014b05:     	movq	0x10(%r14,%rbp), %rcx
140014b0a:     	movq	0x18(%r14,%rbp), %rax
140014b0f:     	testq	%rcx, %rcx
140014b12:     	je	0x140014b36 <.text+0x13b36>
140014b14:     	cmpl	$0x1, %ecx
140014b17:     	jne	0x140014b2b <.text+0x13b2b>
140014b19:     	shlq	$0x4, %rax
140014b1d:     	leaq	-0xff4(%rip), %rcx      # 0x140013b30 <.text+0x12b30>
140014b24:     	cmpq	%rcx, 0x8(%r12,%rax)
140014b29:     	je	0x140014b2f <.text+0x13b2f>
140014b2b:     	xorl	%ecx, %ecx
140014b2d:     	jmp	0x140014b3b <.text+0x13b3b>
140014b2f:     	movq	(%r12,%rax), %rax
140014b33:     	movq	(%rax), %rax
140014b36:     	movl	$0x1, %ecx
140014b3b:     	movq	%rcx, 0x28(%rsp)
140014b40:     	movq	%rax, 0x30(%rsp)
140014b45:     	movq	(%r14,%rbp), %rcx
140014b49:     	movq	0x8(%r14,%rbp), %rax
140014b4e:     	testq	%rcx, %rcx
140014b51:     	je	0x140014b75 <.text+0x13b75>
140014b53:     	cmpl	$0x1, %ecx
140014b56:     	jne	0x140014b6a <.text+0x13b6a>
140014b58:     	shlq	$0x4, %rax
140014b5c:     	leaq	-0x1033(%rip), %rcx     # 0x140013b30 <.text+0x12b30>
140014b63:     	cmpq	%rcx, 0x8(%r12,%rax)
140014b68:     	je	0x140014b6e <.text+0x13b6e>
140014b6a:     	xorl	%ecx, %ecx
140014b6c:     	jmp	0x140014b7a <.text+0x13b7a>
140014b6e:     	movq	(%r12,%rax), %rax
140014b72:     	movq	(%rax), %rax
140014b75:     	movl	$0x1, %ecx
140014b7a:     	movq	%rcx, 0x38(%rsp)
140014b7f:     	movq	%rax, 0x40(%rsp)
140014b84:     	movq	0x20(%r14,%rbp), %rax
140014b89:     	shlq	$0x4, %rax
140014b8d:     	movq	(%r12,%rax), %rcx
140014b91:     	movq	%rdi, %rdx
140014b94:     	callq	*0x8(%r12,%rax)
140014b99:     	testb	%al, %al
140014b9b:     	jne	0x140014c57 <.text+0x13c57>
140014ba1:     	addq	$0x10, %r15
140014ba5:     	addq	$0x38, %rbp
140014ba9:     	incq	%rbx
140014bac:     	cmpq	%rbp, %r13
140014baf:     	jne	0x140014ad0 <.text+0x13ad0>
140014bb5:     	jmp	0x140014c25 <.text+0x13c25>
140014bb7:     	movq	0x18(%rsi), %r14
140014bbb:     	testq	%r14, %r14
140014bbe:     	je	0x140014c2d <.text+0x13c2d>
140014bc0:     	movq	0x10(%rsi), %r15
140014bc4:     	shlq	$0x4, %r14
140014bc8:     	addq	%r15, %r14
140014bcb:     	movq	(%rsi), %r12
140014bce:     	xorl	%r13d, %r13d
140014bd1:     	leaq	0x28(%rsp), %rdi
140014bd6:     	xorl	%ebx, %ebx
140014bd8:     	nopl	(%rax,%rax)
140014be0:     	movq	0x8(%r12,%r13), %r8
140014be5:     	testq	%r8, %r8
140014be8:     	je	0x140014bff <.text+0x13bff>
140014bea:     	movq	0x48(%rsp), %rcx
140014bef:     	movq	0x50(%rsp), %rax
140014bf4:     	movq	(%r12,%r13), %rdx
140014bf8:     	callq	*0x18(%rax)
140014bfb:     	testb	%al, %al
140014bfd:     	jne	0x140014c57 <.text+0x13c57>
140014bff:     	leaq	(%r15,%r13), %rbp
140014c03:     	movq	(%rbp), %rcx
140014c07:     	movq	%rdi, %rdx
140014c0a:     	callq	*0x8(%rbp)
140014c0d:     	testb	%al, %al
140014c0f:     	jne	0x140014c57 <.text+0x13c57>
140014c11:     	addq	$0x10, %r13
140014c15:     	addq	$0x10, %rbp
140014c19:     	incq	%rbx
140014c1c:     	cmpq	%r14, %rbp
140014c1f:     	jne	0x140014be0 <.text+0x13be0>
140014c21:     	jmp	0x140014c25 <.text+0x13c25>
140014c23:     	xorl	%ebx, %ebx
140014c25:     	cmpq	0x8(%rsi), %rbx
140014c29:     	jb	0x140014c35 <.text+0x13c35>
140014c2b:     	jmp	0x140014c5b <.text+0x13c5b>
140014c2d:     	xorl	%ebx, %ebx
140014c2f:     	cmpq	0x8(%rsi), %rbx
140014c33:     	jae	0x140014c5b <.text+0x13c5b>
140014c35:     	movq	(%rsi), %rax
140014c38:     	shlq	$0x4, %rbx
140014c3c:     	movq	0x48(%rsp), %rcx
140014c41:     	movq	0x50(%rsp), %r9
140014c46:     	movq	(%rax,%rbx), %rdx
140014c4a:     	movq	0x8(%rax,%rbx), %r8
140014c4f:     	callq	*0x18(%r9)
140014c53:     	testb	%al, %al
140014c55:     	je	0x140014c5b <.text+0x13c5b>
140014c57:     	movb	$0x1, %al
140014c59:     	jmp	0x140014c5d <.text+0x13c5d>
140014c5b:     	xorl	%eax, %eax
140014c5d:     	addq	$0x68, %rsp
140014c61:     	popq	%rbx
140014c62:     	popq	%rbp
140014c63:     	popq	%rdi
140014c64:     	popq	%rsi
140014c65:     	popq	%r12
140014c67:     	popq	%r13
140014c69:     	popq	%r14
140014c6b:     	popq	%r15
140014c6d:     	retq
140014c6e:     	int3
140014c6f:     	int3
140014c70:     	pushq	%r15
140014c72:     	pushq	%r14
140014c74:     	pushq	%r13
140014c76:     	pushq	%r12
140014c78:     	pushq	%rsi
140014c79:     	pushq	%rdi
140014c7a:     	pushq	%rbp
140014c7b:     	pushq	%rbx
140014c7c:     	subq	$0x48, %rsp
140014c80:     	movq	%r9, %r15
140014c83:     	movq	%r8, %r14
140014c86:     	movq	%rcx, %rbx
140014c89:     	movq	0xb8(%rsp), %rdi
140014c91:     	testb	%dl, %dl
140014c93:     	je	0x140014ce7 <.text+0x13ce7>
140014c95:     	movl	0x34(%rbx), %r12d
140014c99:     	movl	%r12d, %r13d
140014c9c:     	andl	$0x1, %r13d
140014ca0:     	movl	$0x110000, %eax         # imm = 0x110000
140014ca5:     	movl	$0x2b, %ebp
140014caa:     	cmovel	%eax, %ebp
140014cad:     	addq	%rdi, %r13
140014cb0:     	movq	0xb0(%rsp), %rsi
140014cb8:     	testb	$0x4, %r12b
140014cbc:     	je	0x140014d02 <.text+0x13d02>
140014cbe:     	cmpq	$0x20, %r15
140014cc2:     	jae	0x140014d80 <.text+0x13d80>
140014cc8:     	movq	%r15, %rax
140014ccb:     	testq	%r15, %r15
140014cce:     	je	0x140014e75 <.text+0x13e75>
140014cd4:     	cmpq	$0x1, %r15
140014cd8:     	jne	0x140014dff <.text+0x13dff>
140014cde:     	xorl	%eax, %eax
140014ce0:     	xorl	%ecx, %ecx
140014ce2:     	jmp	0x140014e60 <.text+0x13e60>
140014ce7:     	leaq	0x1(%rdi), %r13
140014ceb:     	movl	0x34(%rbx), %r12d
140014cef:     	movl	$0x2d, %ebp
140014cf4:     	movq	0xb0(%rsp), %rsi
140014cfc:     	testb	$0x4, %r12b
140014d00:     	jne	0x140014cbe <.text+0x13cbe>
140014d02:     	xorl	%r14d, %r14d
140014d05:     	cmpq	$0x0, (%rbx)
140014d09:     	je	0x140014e82 <.text+0x13e82>
140014d0f:     	movq	%rsi, 0x40(%rsp)
140014d14:     	movq	0x8(%rbx), %rsi
140014d18:     	subq	%r13, %rsi
140014d1b:     	jbe	0x140014d46 <.text+0x13d46>
140014d1d:     	testb	$0x8, %r12b
140014d21:     	jne	0x140014d90 <.text+0x13d90>
140014d23:     	movq	%rdi, 0x38(%rsp)
140014d28:     	movzbl	0x38(%rbx), %edi
140014d2c:     	leaq	0xa741(%rip), %rax      # 0x14001f474
140014d33:     	movslq	(%rax,%rdi,4), %rcx
140014d37:     	addq	%rax, %rcx
140014d3a:     	jmpq	*%rcx
140014d3c:     	movq	%rsi, %rdi
140014d3f:     	xorl	%esi, %esi
140014d41:     	jmp	0x140014ed7 <.text+0x13ed7>
140014d46:     	movq	0x20(%rbx), %r12
140014d4a:     	movq	0x28(%rbx), %rbx
140014d4e:     	movq	%r15, 0x20(%rsp)
140014d53:     	movq	%r12, %rcx
140014d56:     	movq	%rbx, %rdx
140014d59:     	movl	%ebp, %r8d
140014d5c:     	movq	%r14, %r9
140014d5f:     	callq	0x140014fb0 <.text+0x13fb0>
140014d64:     	movb	$0x1, %bpl
140014d67:     	testb	%al, %al
140014d69:     	movq	0x40(%rsp), %rdx
140014d6e:     	jne	0x140014f9d <.text+0x13f9d>
140014d74:     	movq	0x18(%rbx), %rax
140014d78:     	movq	%r12, %rcx
140014d7b:     	jmp	0x140014eb5 <.text+0x13eb5>
140014d80:     	movq	%r14, %rcx
140014d83:     	movq	%r15, %rdx
140014d86:     	callq	0x140016280 <.text+0x15280>
140014d8b:     	jmp	0x140014e75 <.text+0x13e75>
140014d90:     	movl	0x30(%rbx), %eax
140014d93:     	movl	%eax, 0x38(%rsp)
140014d97:     	movl	$0x30, 0x30(%rbx)
140014d9e:     	movzbl	0x38(%rbx), %eax
140014da2:     	movb	%al, 0x37(%rsp)
140014da6:     	movb	$0x1, 0x38(%rbx)
140014daa:     	movq	0x20(%rbx), %r13
140014dae:     	movq	0x28(%rbx), %r12
140014db2:     	movq	%r15, 0x20(%rsp)
140014db7:     	movq	%r13, %rcx
140014dba:     	movq	%r12, %rdx
140014dbd:     	movl	%ebp, %r8d
140014dc0:     	movq	%r14, %r9
140014dc3:     	callq	0x140014fb0 <.text+0x13fb0>
140014dc8:     	movb	$0x1, %bpl
140014dcb:     	testb	%al, %al
140014dcd:     	jne	0x140014f9d <.text+0x13f9d>
140014dd3:     	incq	%rsi
140014dd6:     	nopw	%cs:(%rax,%rax)
140014de0:     	decq	%rsi
140014de3:     	je	0x140014f6c <.text+0x13f6c>
140014de9:     	movq	%r13, %rcx
140014dec:     	movl	$0x30, %edx
140014df1:     	callq	*0x20(%r12)
140014df6:     	testb	%al, %al
140014df8:     	je	0x140014de0 <.text+0x13de0>
140014dfa:     	jmp	0x140014f9d <.text+0x13f9d>
140014dff:     	movq	%r15, %rcx
140014e02:     	andq	$-0x2, %rcx
140014e06:     	pxor	%xmm0, %xmm0
140014e0a:     	xorl	%eax, %eax
140014e0c:     	movdqa	0x913c(%rip), %xmm1     # 0x14001df50
140014e14:     	movdqa	0x9144(%rip), %xmm2     # 0x14001df60
140014e1c:     	nopl	(%rax)
140014e20:     	movzwl	(%r14,%rax), %edx
140014e25:     	movd	%edx, %xmm3
140014e29:     	pcmpgtb	%xmm1, %xmm3
140014e2d:     	punpcklbw	%xmm3, %xmm3    # xmm3 = xmm3[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140014e31:     	pshuflw	$0xd4, %xmm3, %xmm3     # xmm3 = xmm3[0,1,1,3,4,5,6,7]
140014e36:     	pshufd	$0xd4, %xmm3, %xmm3     # xmm3 = xmm3[0,1,1,3]
140014e3b:     	pand	%xmm2, %xmm3
140014e3f:     	paddq	%xmm3, %xmm0
140014e43:     	addq	$0x2, %rax
140014e47:     	cmpq	%rax, %rcx
140014e4a:     	jne	0x140014e20 <.text+0x13e20>
140014e4c:     	pshufd	$0xee, %xmm0, %xmm1     # xmm1 = xmm0[2,3,2,3]
140014e51:     	paddq	%xmm0, %xmm1
140014e55:     	movq	%xmm1, %rax
140014e5a:     	cmpq	%r15, %rcx
140014e5d:     	je	0x140014e75 <.text+0x13e75>
140014e5f:     	nop
140014e60:     	xorl	%edx, %edx
140014e62:     	cmpb	$-0x40, (%r14,%rcx)
140014e67:     	setge	%dl
140014e6a:     	addq	%rdx, %rax
140014e6d:     	incq	%rcx
140014e70:     	cmpq	%rcx, %r15
140014e73:     	jne	0x140014e60 <.text+0x13e60>
140014e75:     	addq	%rax, %r13
140014e78:     	cmpq	$0x0, (%rbx)
140014e7c:     	jne	0x140014d0f <.text+0x13d0f>
140014e82:     	movq	0x20(%rbx), %r12
140014e86:     	movq	0x28(%rbx), %rbx
140014e8a:     	movq	%r15, 0x20(%rsp)
140014e8f:     	movq	%r12, %rcx
140014e92:     	movq	%rbx, %rdx
140014e95:     	movl	%ebp, %r8d
140014e98:     	movq	%r14, %r9
140014e9b:     	callq	0x140014fb0 <.text+0x13fb0>
140014ea0:     	movb	$0x1, %bpl
140014ea3:     	testb	%al, %al
140014ea5:     	jne	0x140014f9d <.text+0x13f9d>
140014eab:     	movq	0x18(%rbx), %rax
140014eaf:     	movq	%r12, %rcx
140014eb2:     	movq	%rsi, %rdx
140014eb5:     	movq	%rdi, %r8
140014eb8:     	addq	$0x48, %rsp
140014ebc:     	popq	%rbx
140014ebd:     	popq	%rbp
140014ebe:     	popq	%rdi
140014ebf:     	popq	%rsi
140014ec0:     	popq	%r12
140014ec2:     	popq	%r13
140014ec4:     	popq	%r14
140014ec6:     	popq	%r15
140014ec8:     	jmpq	*%rax
140014ecb:     	movq	%rsi, %rdi
140014ece:     	shrq	%rdi
140014ed1:     	incq	%rsi
140014ed4:     	shrq	%rsi
140014ed7:     	movq	0x20(%rbx), %r12
140014edb:     	movq	0x28(%rbx), %r13
140014edf:     	movl	0x30(%rbx), %ebx
140014ee2:     	incq	%rdi
140014ee5:     	nopw	%cs:(%rax,%rax)
140014ef0:     	decq	%rdi
140014ef3:     	je	0x140014f0a <.text+0x13f0a>
140014ef5:     	movq	%r12, %rcx
140014ef8:     	movl	%ebx, %edx
140014efa:     	callq	*0x20(%r13)
140014efe:     	testb	%al, %al
140014f00:     	je	0x140014ef0 <.text+0x13ef0>
140014f02:     	movb	$0x1, %bpl
140014f05:     	jmp	0x140014f9d <.text+0x13f9d>
140014f0a:     	movq	%r15, 0x20(%rsp)
140014f0f:     	movq	%r12, %rcx
140014f12:     	movq	%r13, %rdx
140014f15:     	movl	%ebp, %r8d
140014f18:     	movq	%r14, %r9
140014f1b:     	callq	0x140014fb0 <.text+0x13fb0>
140014f20:     	movb	$0x1, %bpl
140014f23:     	testb	%al, %al
140014f25:     	jne	0x140014f9d <.text+0x13f9d>
140014f27:     	movq	%r12, %rcx
140014f2a:     	movq	0x40(%rsp), %rdx
140014f2f:     	movq	0x38(%rsp), %r8
140014f34:     	callq	*0x18(%r13)
140014f38:     	testb	%al, %al
140014f3a:     	jne	0x140014f9d <.text+0x13f9d>
140014f3c:     	movq	%rsi, %r14
140014f3f:     	negq	%r14
140014f42:     	movq	$-0x1, %rdi
140014f49:     	nopl	(%rax)
140014f50:     	leaq	(%r14,%rdi), %rax
140014f54:     	cmpq	$-0x1, %rax
140014f58:     	je	0x140014f93 <.text+0x13f93>
140014f5a:     	movq	%r12, %rcx
140014f5d:     	movl	%ebx, %edx
140014f5f:     	callq	*0x20(%r13)
140014f63:     	incq	%rdi
140014f66:     	testb	%al, %al
140014f68:     	je	0x140014f50 <.text+0x13f50>
140014f6a:     	jmp	0x140014f96 <.text+0x13f96>
140014f6c:     	movq	%r13, %rcx
140014f6f:     	movq	0x40(%rsp), %rdx
140014f74:     	movq	%rdi, %r8
140014f77:     	callq	*0x18(%r12)
140014f7c:     	testb	%al, %al
140014f7e:     	jne	0x140014f9d <.text+0x13f9d>
140014f80:     	movl	0x38(%rsp), %eax
140014f84:     	movl	%eax, 0x30(%rbx)
140014f87:     	movzbl	0x37(%rsp), %eax
140014f8c:     	movb	%al, 0x38(%rbx)
140014f8f:     	xorl	%ebp, %ebp
140014f91:     	jmp	0x140014f9d <.text+0x13f9d>
140014f93:     	movq	%rsi, %rdi
140014f96:     	cmpq	%rsi, %rdi
140014f99:     	setb	%bpl
140014f9d:     	movl	%ebp, %eax
140014f9f:     	addq	$0x48, %rsp
140014fa3:     	popq	%rbx
140014fa4:     	popq	%rbp
140014fa5:     	popq	%rdi
140014fa6:     	popq	%rsi
140014fa7:     	popq	%r12
140014fa9:     	popq	%r13
140014fab:     	popq	%r14
140014fad:     	popq	%r15
140014faf:     	retq
140014fb0:     	pushq	%r14
140014fb2:     	pushq	%rsi
140014fb3:     	pushq	%rdi
140014fb4:     	pushq	%rbx
140014fb5:     	subq	$0x28, %rsp
140014fb9:     	movq	%r9, %rsi
140014fbc:     	movq	%rdx, %r14
140014fbf:     	movq	%rcx, %rbx
140014fc2:     	movq	0x70(%rsp), %rdi
140014fc7:     	cmpl	$0x110000, %r8d         # imm = 0x110000
140014fce:     	je	0x140014fe2 <.text+0x13fe2>
140014fd0:     	movq	%rbx, %rcx
140014fd3:     	movl	%r8d, %edx
140014fd6:     	callq	*0x20(%r14)
140014fda:     	movl	%eax, %ecx
140014fdc:     	movb	$0x1, %al
140014fde:     	testb	%cl, %cl
140014fe0:     	jne	0x140015002 <.text+0x14002>
140014fe2:     	testq	%rsi, %rsi
140014fe5:     	je	0x140015000 <.text+0x14000>
140014fe7:     	movq	0x18(%r14), %rax
140014feb:     	movq	%rbx, %rcx
140014fee:     	movq	%rsi, %rdx
140014ff1:     	movq	%rdi, %r8
140014ff4:     	addq	$0x28, %rsp
140014ff8:     	popq	%rbx
140014ff9:     	popq	%rdi
140014ffa:     	popq	%rsi
140014ffb:     	popq	%r14
140014ffd:     	jmpq	*%rax
140015000:     	xorl	%eax, %eax
140015002:     	addq	$0x28, %rsp
140015006:     	popq	%rbx
140015007:     	popq	%rdi
140015008:     	popq	%rsi
140015009:     	popq	%r14
14001500b:     	retq
14001500c:     	int3
14001500d:     	int3
14001500e:     	int3
14001500f:     	int3
140015010:     	pushq	%r15
140015012:     	pushq	%r14
140015014:     	pushq	%r13
140015016:     	pushq	%r12
140015018:     	pushq	%rsi
140015019:     	pushq	%rdi
14001501a:     	pushq	%rbp
14001501b:     	pushq	%rbx
14001501c:     	subq	$0x28, %rsp
140015020:     	movq	%r8, %rsi
140015023:     	movq	%rdx, %rdi
140015026:     	movq	%rcx, %rbx
140015029:     	movq	(%rcx), %rax
14001502c:     	movq	0x10(%rcx), %rcx
140015030:     	movq	%rax, %rdx
140015033:     	orq	%rcx, %rdx
140015036:     	je	0x14001525d <.text+0x1425d>
14001503c:     	testq	%rcx, %rcx
14001503f:     	je	0x140015195 <.text+0x14195>
140015045:     	movq	0x18(%rbx), %r9
140015049:     	leaq	(%rdi,%rsi), %r8
14001504d:     	incq	%r9
140015050:     	xorl	%ecx, %ecx
140015052:     	movq	%rdi, %rdx
140015055:     	jmp	0x14001507a <.text+0x1407a>
140015057:     	nopw	(%rax,%rax)
140015060:     	leaq	0x1(%rdx), %r14
140015064:     	subq	%rdx, %rcx
140015067:     	addq	%r14, %rcx
14001506a:     	movq	%r14, %rdx
14001506d:     	cmpl	$0x110000, %r10d        # imm = 0x110000
140015074:     	je	0x140015195 <.text+0x14195>
14001507a:     	decq	%r9
14001507d:     	je	0x140015119 <.text+0x14119>
140015083:     	cmpq	%r8, %rdx
140015086:     	je	0x140015195 <.text+0x14195>
14001508c:     	movzbl	(%rdx), %r14d
140015090:     	movzbl	%r14b, %r10d
140015094:     	testb	%r10b, %r10b
140015097:     	jns	0x140015060 <.text+0x14060>
140015099:     	movl	%r10d, %r11d
14001509c:     	andl	$0x1f, %r11d
1400150a0:     	movzbl	0x1(%rdx), %r15d
1400150a5:     	andl	$0x3f, %r15d
1400150a9:     	cmpb	$-0x21, %r10b
1400150ad:     	jbe	0x1400150f3 <.text+0x140f3>
1400150af:     	movzbl	0x2(%rdx), %ebp
1400150b3:     	shll	$0x6, %r15d
1400150b7:     	andl	$0x3f, %ebp
1400150ba:     	orl	%r15d, %ebp
1400150bd:     	cmpb	$-0x10, %r14b
1400150c1:     	jb	0x140015106 <.text+0x14106>
1400150c3:     	movzbl	0x3(%rdx), %r10d
1400150c8:     	andl	$0x7, %r11d
1400150cc:     	shll	$0x12, %r11d
1400150d0:     	shll	$0x6, %ebp
1400150d3:     	andl	$0x3f, %r10d
1400150d7:     	orl	%ebp, %r10d
1400150da:     	orl	%r11d, %r10d
1400150dd:     	cmpl	$0x110000, %r10d        # imm = 0x110000
1400150e4:     	je	0x140015195 <.text+0x14195>
1400150ea:     	leaq	0x4(%rdx), %r14
1400150ee:     	jmp	0x140015064 <.text+0x14064>
1400150f3:     	leaq	0x2(%rdx), %r14
1400150f7:     	shll	$0x6, %r11d
1400150fb:     	orl	%r15d, %r11d
1400150fe:     	movl	%r11d, %r10d
140015101:     	jmp	0x140015064 <.text+0x14064>
140015106:     	leaq	0x3(%rdx), %r14
14001510a:     	shll	$0xc, %r11d
14001510e:     	orl	%r11d, %ebp
140015111:     	movl	%ebp, %r10d
140015114:     	jmp	0x140015064 <.text+0x14064>
140015119:     	cmpq	%r8, %rdx
14001511c:     	je	0x140015195 <.text+0x14195>
14001511e:     	movzbl	(%rdx), %r8d
140015122:     	testb	%r8b, %r8b
140015125:     	jns	0x140015171 <.text+0x14171>
140015127:     	cmpb	$-0x20, %r8b
14001512b:     	jb	0x140015171 <.text+0x14171>
14001512d:     	cmpb	$-0x10, %r8b
140015131:     	jb	0x140015171 <.text+0x14171>
140015133:     	movzbl	%r8b, %r8d
140015137:     	movzbl	0x1(%rdx), %r9d
14001513c:     	andl	$0x3f, %r9d
140015140:     	movzbl	0x2(%rdx), %r10d
140015145:     	andl	$0x3f, %r10d
140015149:     	movzbl	0x3(%rdx), %edx
14001514d:     	andl	$0x7, %r8d
140015151:     	shll	$0x12, %r8d
140015155:     	shll	$0xc, %r9d
140015159:     	shll	$0x6, %r10d
14001515d:     	orl	%r9d, %r10d
140015160:     	andl	$0x3f, %edx
140015163:     	orl	%r10d, %edx
140015166:     	orl	%r8d, %edx
140015169:     	cmpl	$0x110000, %edx         # imm = 0x110000
14001516f:     	je	0x140015195 <.text+0x14195>
140015171:     	testq	%rcx, %rcx
140015174:     	je	0x140015187 <.text+0x14187>
140015176:     	cmpq	%rsi, %rcx
140015179:     	jae	0x140015185 <.text+0x14185>
14001517b:     	cmpb	$-0x40, (%rdi,%rcx)
14001517f:     	jge	0x140015187 <.text+0x14187>
140015181:     	xorl	%edx, %edx
140015183:     	jmp	0x14001518a <.text+0x1418a>
140015185:     	jne	0x140015181 <.text+0x14181>
140015187:     	movq	%rdi, %rdx
14001518a:     	testq	%rdx, %rdx
14001518d:     	cmovneq	%rcx, %rsi
140015191:     	cmovneq	%rdx, %rdi
140015195:     	testq	%rax, %rax
140015198:     	je	0x14001525d <.text+0x1425d>
14001519e:     	movq	0x8(%rbx), %r15
1400151a2:     	cmpq	$0x20, %rsi
1400151a6:     	jae	0x1400151c0 <.text+0x141c0>
1400151a8:     	movq	%rsi, %rax
1400151ab:     	testq	%rsi, %rsi
1400151ae:     	je	0x14001523f <.text+0x1423f>
1400151b4:     	cmpq	$0x1, %rsi
1400151b8:     	jne	0x1400151cd <.text+0x141cd>
1400151ba:     	xorl	%eax, %eax
1400151bc:     	xorl	%ecx, %ecx
1400151be:     	jmp	0x14001522b <.text+0x1422b>
1400151c0:     	movq	%rdi, %rcx
1400151c3:     	movq	%rsi, %rdx
1400151c6:     	callq	0x140016280 <.text+0x15280>
1400151cb:     	jmp	0x14001523f <.text+0x1423f>
1400151cd:     	movq	%rsi, %rcx
1400151d0:     	andq	$-0x2, %rcx
1400151d4:     	pxor	%xmm0, %xmm0
1400151d8:     	xorl	%eax, %eax
1400151da:     	movdqa	0x8d6e(%rip), %xmm1     # 0x14001df50
1400151e2:     	movdqa	0x8d76(%rip), %xmm2     # 0x14001df60
1400151ea:     	nopw	(%rax,%rax)
1400151f0:     	movzwl	(%rdi,%rax), %edx
1400151f4:     	movd	%edx, %xmm3
1400151f8:     	pcmpgtb	%xmm1, %xmm3
1400151fc:     	punpcklbw	%xmm3, %xmm3    # xmm3 = xmm3[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140015200:     	pshuflw	$0xd4, %xmm3, %xmm3     # xmm3 = xmm3[0,1,1,3,4,5,6,7]
140015205:     	pshufd	$0xd4, %xmm3, %xmm3     # xmm3 = xmm3[0,1,1,3]
14001520a:     	pand	%xmm2, %xmm3
14001520e:     	paddq	%xmm3, %xmm0
140015212:     	addq	$0x2, %rax
140015216:     	cmpq	%rax, %rcx
140015219:     	jne	0x1400151f0 <.text+0x141f0>
14001521b:     	pshufd	$0xee, %xmm0, %xmm1     # xmm1 = xmm0[2,3,2,3]
140015220:     	paddq	%xmm0, %xmm1
140015224:     	movq	%xmm1, %rax
140015229:     	jmp	0x14001523a <.text+0x1423a>
14001522b:     	xorl	%edx, %edx
14001522d:     	cmpb	$-0x40, (%rdi,%rcx)
140015231:     	setge	%dl
140015234:     	addq	%rdx, %rax
140015237:     	incq	%rcx
14001523a:     	cmpq	%rcx, %rsi
14001523d:     	jne	0x14001522b <.text+0x1422b>
14001523f:     	subq	%rax, %r15
140015242:     	jbe	0x14001525d <.text+0x1425d>
140015244:     	movzbl	0x38(%rbx), %eax
140015248:     	leaq	0xa235(%rip), %rcx      # 0x14001f484
14001524f:     	movslq	(%rcx,%rax,4), %rax
140015253:     	addq	%rcx, %rax
140015256:     	jmpq	*%rax
140015258:     	xorl	%r13d, %r13d
14001525b:     	jmp	0x140015296 <.text+0x14296>
14001525d:     	movq	0x20(%rbx), %rcx
140015261:     	movq	0x28(%rbx), %rax
140015265:     	movq	0x18(%rax), %rax
140015269:     	movq	%rdi, %rdx
14001526c:     	movq	%rsi, %r8
14001526f:     	addq	$0x28, %rsp
140015273:     	popq	%rbx
140015274:     	popq	%rbp
140015275:     	popq	%rdi
140015276:     	popq	%rsi
140015277:     	popq	%r12
140015279:     	popq	%r13
14001527b:     	popq	%r14
14001527d:     	popq	%r15
14001527f:     	jmpq	*%rax
140015282:     	movq	%r15, %r13
140015285:     	xorl	%r15d, %r15d
140015288:     	jmp	0x140015296 <.text+0x14296>
14001528a:     	movq	%r15, %r13
14001528d:     	shrq	%r13
140015290:     	incq	%r15
140015293:     	shrq	%r15
140015296:     	movq	0x20(%rbx), %r14
14001529a:     	movq	0x28(%rbx), %r12
14001529e:     	movl	0x30(%rbx), %ebx
1400152a1:     	incq	%r13
1400152a4:     	nopw	%cs:(%rax,%rax)
1400152b0:     	movq	%r14, %rcx
1400152b3:     	decq	%r13
1400152b6:     	je	0x1400152c7 <.text+0x142c7>
1400152b8:     	movl	%ebx, %edx
1400152ba:     	callq	*0x20(%r12)
1400152bf:     	testb	%al, %al
1400152c1:     	je	0x1400152b0 <.text+0x142b0>
1400152c3:     	movb	$0x1, %al
1400152c5:     	jmp	0x140015316 <.text+0x14316>
1400152c7:     	movq	%rdi, %rdx
1400152ca:     	movq	%rsi, %r8
1400152cd:     	callq	*0x18(%r12)
1400152d2:     	movl	%eax, %ecx
1400152d4:     	movb	$0x1, %al
1400152d6:     	testb	%cl, %cl
1400152d8:     	jne	0x140015316 <.text+0x14316>
1400152da:     	movq	%r15, %rdi
1400152dd:     	negq	%rdi
1400152e0:     	movq	$-0x1, %rsi
1400152e7:     	nopw	(%rax,%rax)
1400152f0:     	leaq	(%rdi,%rsi), %rax
1400152f4:     	cmpq	$-0x1, %rax
1400152f8:     	je	0x14001530d <.text+0x1430d>
1400152fa:     	movq	%r14, %rcx
1400152fd:     	movl	%ebx, %edx
1400152ff:     	callq	*0x20(%r12)
140015304:     	incq	%rsi
140015307:     	testb	%al, %al
140015309:     	je	0x1400152f0 <.text+0x142f0>
14001530b:     	jmp	0x140015310 <.text+0x14310>
14001530d:     	movq	%r15, %rsi
140015310:     	cmpq	%r15, %rsi
140015313:     	setb	%al
140015316:     	addq	$0x28, %rsp
14001531a:     	popq	%rbx
14001531b:     	popq	%rbp
14001531c:     	popq	%rdi
14001531d:     	popq	%rsi
14001531e:     	popq	%r12
140015320:     	popq	%r13
140015322:     	popq	%r14
140015324:     	popq	%r15
140015326:     	retq
140015327:     	int3
140015328:     	int3
140015329:     	int3
14001532a:     	int3
14001532b:     	int3
14001532c:     	int3
14001532d:     	int3
14001532e:     	int3
14001532f:     	int3
140015330:     	movq	0x20(%rcx), %rax
140015334:     	movq	0x28(%rcx), %rcx
140015338:     	movq	0x18(%rcx), %r9
14001533c:     	movq	%rax, %rcx
14001533f:     	jmpq	*%r9
140015342:     	int3
140015343:     	int3
140015344:     	int3
140015345:     	int3
140015346:     	int3
140015347:     	int3
140015348:     	int3
140015349:     	int3
14001534a:     	int3
14001534b:     	int3
14001534c:     	int3
14001534d:     	int3
14001534e:     	int3
14001534f:     	int3
140015350:     	movq	%rdx, %r8
140015353:     	movq	0x20(%rcx), %rax
140015357:     	movq	0x28(%rcx), %rdx
14001535b:     	movq	%rax, %rcx
14001535e:     	jmp	0x140014a60 <.text+0x13a60>
140015363:     	int3
140015364:     	int3
140015365:     	int3
140015366:     	int3
140015367:     	int3
140015368:     	int3
140015369:     	int3
14001536a:     	int3
14001536b:     	int3
14001536c:     	int3
14001536d:     	int3
14001536e:     	int3
14001536f:     	int3
140015370:     	pushq	%rsi
140015371:     	pushq	%rdi
140015372:     	subq	$0x28, %rsp
140015376:     	movq	%rdx, %rsi
140015379:     	movq	%rcx, %rdi
14001537c:     	movq	0x20(%rdx), %rcx
140015380:     	movq	0x28(%rdx), %rax
140015384:     	movq	%r8, %rdx
140015387:     	movq	%r9, %r8
14001538a:     	callq	*0x18(%rax)
14001538d:     	movq	%rsi, (%rdi)
140015390:     	movb	%al, 0x8(%rdi)
140015393:     	movb	$0x0, 0x9(%rdi)
140015397:     	movq	%rdi, %rax
14001539a:     	addq	$0x28, %rsp
14001539e:     	popq	%rdi
14001539f:     	popq	%rsi
1400153a0:     	retq
1400153a1:     	int3
1400153a2:     	int3
1400153a3:     	int3
1400153a4:     	int3
1400153a5:     	int3
1400153a6:     	int3
1400153a7:     	int3
1400153a8:     	int3
1400153a9:     	int3
1400153aa:     	int3
1400153ab:     	int3
1400153ac:     	int3
1400153ad:     	int3
1400153ae:     	int3
1400153af:     	int3
1400153b0:     	pushq	%r15
1400153b2:     	pushq	%r14
1400153b4:     	pushq	%rsi
1400153b5:     	pushq	%rdi
1400153b6:     	pushq	%rbx
1400153b7:     	subq	$0x40, %rsp
1400153bb:     	movq	%r9, %rsi
1400153be:     	movq	%rcx, %rdi
1400153c1:     	movq	0x90(%rsp), %rbx
1400153c9:     	movq	0x98(%rsp), %r14
1400153d1:     	movq	0xa0(%rsp), %r15
1400153d9:     	movq	0x20(%rcx), %rcx
1400153dd:     	movq	0x28(%rdi), %rax
1400153e1:     	callq	*0x18(%rax)
1400153e4:     	movq	%rdi, 0x30(%rsp)
1400153e9:     	movb	%al, 0x38(%rsp)
1400153ed:     	movb	$0x0, 0x39(%rsp)
1400153f2:     	movq	%r15, 0x20(%rsp)
1400153f7:     	leaq	0x30(%rsp), %rcx
1400153fc:     	movq	%rsi, %rdx
1400153ff:     	movq	%rbx, %r8
140015402:     	movq	%r14, %r9
140015405:     	callq	0x140014570 <.text+0x13570>
14001540a:     	cmpb	$0x0, 0x39(%rsp)
14001540f:     	movzbl	0x38(%rsp), %eax
140015414:     	je	0x140015456 <.text+0x14456>
140015416:     	testb	%al, %al
140015418:     	movb	$0x1, %al
14001541a:     	jne	0x140015456 <.text+0x14456>
14001541c:     	movq	0x30(%rsp), %rax
140015421:     	testb	$0x4, 0x34(%rax)
140015425:     	jne	0x14001543e <.text+0x1443e>
140015427:     	movq	0x20(%rax), %rcx
14001542b:     	movq	0x28(%rax), %rax
14001542f:     	leaq	0x8f01(%rip), %rdx      # 0x14001e337
140015436:     	movl	$0x2, %r8d
14001543c:     	jmp	0x140015453 <.text+0x14453>
14001543e:     	movq	0x20(%rax), %rcx
140015442:     	movq	0x28(%rax), %rax
140015446:     	leaq	0x8ee9(%rip), %rdx      # 0x14001e336
14001544d:     	movl	$0x1, %r8d
140015453:     	callq	*0x18(%rax)
140015456:     	testb	%al, %al
140015458:     	setne	%al
14001545b:     	addq	$0x40, %rsp
14001545f:     	popq	%rbx
140015460:     	popq	%rdi
140015461:     	popq	%rsi
140015462:     	popq	%r14
140015464:     	popq	%r15
140015466:     	retq
140015467:     	int3
140015468:     	int3
140015469:     	int3
14001546a:     	int3
14001546b:     	int3
14001546c:     	int3
14001546d:     	int3
14001546e:     	int3
14001546f:     	int3
140015470:     	pushq	%r15
140015472:     	pushq	%r14
140015474:     	pushq	%r13
140015476:     	pushq	%r12
140015478:     	pushq	%rsi
140015479:     	pushq	%rdi
14001547a:     	pushq	%rbp
14001547b:     	pushq	%rbx
14001547c:     	subq	$0x38, %rsp
140015480:     	movq	%r9, %r14
140015483:     	movq	%rcx, %r15
140015486:     	movq	0xc0(%rsp), %rdi
14001548e:     	movq	0xc8(%rsp), %rbx
140015496:     	movq	0xd0(%rsp), %rbp
14001549e:     	movq	0xa0(%rsp), %r12
1400154a6:     	movq	0xa8(%rsp), %r13
1400154ae:     	movq	0xb0(%rsp), %rsi
1400154b6:     	movq	0x20(%rcx), %rcx
1400154ba:     	movq	0x28(%r15), %rax
1400154be:     	callq	*0x18(%rax)
1400154c1:     	movq	%r15, 0x28(%rsp)
1400154c6:     	movb	%al, 0x30(%rsp)
1400154ca:     	movb	$0x0, 0x31(%rsp)
1400154cf:     	movq	%rsi, 0x20(%rsp)
1400154d4:     	leaq	0x28(%rsp), %r15
1400154d9:     	movq	%r15, %rcx
1400154dc:     	movq	%r14, %rdx
1400154df:     	movq	%r12, %r8
1400154e2:     	movq	%r13, %r9
1400154e5:     	callq	0x140014570 <.text+0x13570>
1400154ea:     	movq	%rbp, 0x20(%rsp)
1400154ef:     	movq	%r15, %rcx
1400154f2:     	movq	0xb8(%rsp), %rdx
1400154fa:     	movq	%rdi, %r8
1400154fd:     	movq	%rbx, %r9
140015500:     	callq	0x140014570 <.text+0x13570>
140015505:     	cmpb	$0x0, 0x31(%rsp)
14001550a:     	movzbl	0x30(%rsp), %eax
14001550f:     	je	0x140015551 <.text+0x14551>
140015511:     	testb	%al, %al
140015513:     	movb	$0x1, %al
140015515:     	jne	0x140015551 <.text+0x14551>
140015517:     	movq	0x28(%rsp), %rax
14001551c:     	testb	$0x4, 0x34(%rax)
140015520:     	jne	0x140015539 <.text+0x14539>
140015522:     	movq	0x20(%rax), %rcx
140015526:     	movq	0x28(%rax), %rax
14001552a:     	leaq	0x8e06(%rip), %rdx      # 0x14001e337
140015531:     	movl	$0x2, %r8d
140015537:     	jmp	0x14001554e <.text+0x1454e>
140015539:     	movq	0x20(%rax), %rcx
14001553d:     	movq	0x28(%rax), %rax
140015541:     	leaq	0x8dee(%rip), %rdx      # 0x14001e336
140015548:     	movl	$0x1, %r8d
14001554e:     	callq	*0x18(%rax)
140015551:     	testb	%al, %al
140015553:     	setne	%al
140015556:     	addq	$0x38, %rsp
14001555a:     	popq	%rbx
14001555b:     	popq	%rbp
14001555c:     	popq	%rdi
14001555d:     	popq	%rsi
14001555e:     	popq	%r12
140015560:     	popq	%r13
140015562:     	popq	%r14
140015564:     	popq	%r15
140015566:     	retq
140015567:     	int3
140015568:     	int3
140015569:     	int3
14001556a:     	int3
14001556b:     	int3
14001556c:     	int3
14001556d:     	int3
14001556e:     	int3
14001556f:     	int3
140015570:     	pushq	%r14
140015572:     	pushq	%rsi
140015573:     	pushq	%rdi
140015574:     	pushq	%rbx
140015575:     	subq	$0x38, %rsp
140015579:     	movq	%r9, %rsi
14001557c:     	movq	%r8, %rdi
14001557f:     	movq	%rcx, %rbx
140015582:     	movq	0x80(%rsp), %r14
14001558a:     	movq	0x20(%rcx), %rcx
14001558e:     	movq	0x28(%rbx), %rax
140015592:     	callq	*0x18(%rax)
140015595:     	testq	%rdi, %rdi
140015598:     	movq	%rbx, 0x28(%rsp)
14001559d:     	movb	%al, 0x30(%rsp)
1400155a1:     	movq	$0x0, 0x20(%rsp)
1400155aa:     	sete	0x31(%rsp)
1400155af:     	leaq	0x20(%rsp), %rcx
1400155b4:     	movq	%rsi, %rdx
1400155b7:     	movq	%r14, %r8
1400155ba:     	callq	0x140014790 <.text+0x13790>
1400155bf:     	movq	0x20(%rsp), %rax
1400155c4:     	movzbl	0x30(%rsp), %ecx
1400155c9:     	testq	%rax, %rax
1400155cc:     	je	0x140015624 <.text+0x14624>
1400155ce:     	movb	$0x1, %bl
1400155d0:     	testb	%cl, %cl
1400155d2:     	jne	0x140015626 <.text+0x14626>
1400155d4:     	movq	0x28(%rsp), %rsi
1400155d9:     	cmpq	$0x1, %rax
1400155dd:     	jne	0x140015608 <.text+0x14608>
1400155df:     	cmpb	$0x0, 0x31(%rsp)
1400155e4:     	je	0x140015608 <.text+0x14608>
1400155e6:     	testb	$0x4, 0x34(%rsi)
1400155ea:     	jne	0x140015608 <.text+0x14608>
1400155ec:     	movq	0x20(%rsi), %rcx
1400155f0:     	movq	0x28(%rsi), %rax
1400155f4:     	leaq	0x8d41(%rip), %rdx      # 0x14001e33c
1400155fb:     	movl	$0x1, %r8d
140015601:     	callq	*0x18(%rax)
140015604:     	testb	%al, %al
140015606:     	jne	0x140015626 <.text+0x14626>
140015608:     	movq	0x20(%rsi), %rcx
14001560c:     	movq	0x28(%rsi), %rax
140015610:     	leaq	0x8a49(%rip), %rdx      # 0x14001e060
140015617:     	movl	$0x1, %r8d
14001561d:     	callq	*0x18(%rax)
140015620:     	movl	%eax, %ebx
140015622:     	jmp	0x140015626 <.text+0x14626>
140015624:     	movl	%ecx, %ebx
140015626:     	testb	%bl, %bl
140015628:     	setne	%al
14001562b:     	addq	$0x38, %rsp
14001562f:     	popq	%rbx
140015630:     	popq	%rdi
140015631:     	popq	%rsi
140015632:     	popq	%r14
140015634:     	retq
140015635:     	int3
140015636:     	int3
140015637:     	int3
140015638:     	int3
140015639:     	int3
14001563a:     	int3
14001563b:     	int3
14001563c:     	int3
14001563d:     	int3
14001563e:     	int3
14001563f:     	int3
140015640:     	pushq	%r15
140015642:     	pushq	%r14
140015644:     	pushq	%r12
140015646:     	pushq	%rsi
140015647:     	pushq	%rdi
140015648:     	pushq	%rbx
140015649:     	subq	$0x38, %rsp
14001564d:     	movq	%r9, %rsi
140015650:     	movq	%r8, %rdi
140015653:     	movq	%rcx, %rbx
140015656:     	movq	0x98(%rsp), %r14
14001565e:     	movq	0xa0(%rsp), %r15
140015666:     	movq	0x90(%rsp), %r12
14001566e:     	movq	0x20(%rcx), %rcx
140015672:     	movq	0x28(%rbx), %rax
140015676:     	callq	*0x18(%rax)
140015679:     	testq	%rdi, %rdi
14001567c:     	movq	%rbx, 0x28(%rsp)
140015681:     	movb	%al, 0x30(%rsp)
140015685:     	movq	$0x0, 0x20(%rsp)
14001568e:     	sete	0x31(%rsp)
140015693:     	leaq	0x20(%rsp), %rdi
140015698:     	movq	%rdi, %rcx
14001569b:     	movq	%rsi, %rdx
14001569e:     	movq	%r12, %r8
1400156a1:     	callq	0x140014790 <.text+0x13790>
1400156a6:     	movq	%rdi, %rcx
1400156a9:     	movq	%r14, %rdx
1400156ac:     	movq	%r15, %r8
1400156af:     	callq	0x140014790 <.text+0x13790>
1400156b4:     	movq	0x20(%rsp), %rax
1400156b9:     	movzbl	0x30(%rsp), %ecx
1400156be:     	testq	%rax, %rax
1400156c1:     	je	0x140015719 <.text+0x14719>
1400156c3:     	movb	$0x1, %bl
1400156c5:     	testb	%cl, %cl
1400156c7:     	jne	0x14001571b <.text+0x1471b>
1400156c9:     	movq	0x28(%rsp), %rsi
1400156ce:     	cmpq	$0x1, %rax
1400156d2:     	jne	0x1400156fd <.text+0x146fd>
1400156d4:     	cmpb	$0x0, 0x31(%rsp)
1400156d9:     	je	0x1400156fd <.text+0x146fd>
1400156db:     	testb	$0x4, 0x34(%rsi)
1400156df:     	jne	0x1400156fd <.text+0x146fd>
1400156e1:     	movq	0x20(%rsi), %rcx
1400156e5:     	movq	0x28(%rsi), %rax
1400156e9:     	leaq	0x8c4c(%rip), %rdx      # 0x14001e33c
1400156f0:     	movl	$0x1, %r8d
1400156f6:     	callq	*0x18(%rax)
1400156f9:     	testb	%al, %al
1400156fb:     	jne	0x14001571b <.text+0x1471b>
1400156fd:     	movq	0x20(%rsi), %rcx
140015701:     	movq	0x28(%rsi), %rax
140015705:     	leaq	0x8954(%rip), %rdx      # 0x14001e060
14001570c:     	movl	$0x1, %r8d
140015712:     	callq	*0x18(%rax)
140015715:     	movl	%eax, %ebx
140015717:     	jmp	0x14001571b <.text+0x1471b>
140015719:     	movl	%ecx, %ebx
14001571b:     	testb	%bl, %bl
14001571d:     	setne	%al
140015720:     	addq	$0x38, %rsp
140015724:     	popq	%rbx
140015725:     	popq	%rdi
140015726:     	popq	%rsi
140015727:     	popq	%r12
140015729:     	popq	%r14
14001572b:     	popq	%r15
14001572d:     	retq
14001572e:     	int3
14001572f:     	int3
140015730:     	pushq	%rsi
140015731:     	pushq	%rdi
140015732:     	subq	$0x28, %rsp
140015736:     	movq	%rdx, %rsi
140015739:     	movq	%rcx, %rdi
14001573c:     	movq	0x20(%rdx), %rcx
140015740:     	movq	0x28(%rdx), %rax
140015744:     	leaq	0x8996(%rip), %rdx      # 0x14001e0e1
14001574b:     	movl	$0x1, %r8d
140015751:     	callq	*0x18(%rax)
140015754:     	movq	%rsi, (%rdi)
140015757:     	movb	%al, 0x8(%rdi)
14001575a:     	movb	$0x0, 0x9(%rdi)
14001575e:     	movq	%rdi, %rax
140015761:     	addq	$0x28, %rsp
140015765:     	popq	%rdi
140015766:     	popq	%rsi
140015767:     	retq
140015768:     	int3
140015769:     	int3
14001576a:     	int3
14001576b:     	int3
14001576c:     	int3
14001576d:     	int3
14001576e:     	int3
14001576f:     	int3
140015770:     	movq	0x20(%rcx), %rax
140015774:     	movq	0x28(%rcx), %rcx
140015778:     	movq	0x20(%rcx), %r8
14001577c:     	movq	%rax, %rcx
14001577f:     	jmpq	*%r8
140015782:     	int3
140015783:     	int3
140015784:     	int3
140015785:     	int3
140015786:     	int3
140015787:     	int3
140015788:     	int3
140015789:     	int3
14001578a:     	int3
14001578b:     	int3
14001578c:     	int3
14001578d:     	int3
14001578e:     	int3
14001578f:     	int3
140015790:     	movq	%rdx, %rax
140015793:     	cmpb	$0x0, (%rcx)
140015796:     	je	0x1400157ad <.text+0x147ad>
140015798:     	leaq	0x8cae(%rip), %rdx      # 0x14001e44d
14001579f:     	movl	$0x4, %r8d
1400157a5:     	movq	%rax, %rcx
1400157a8:     	jmp	0x140015010 <.text+0x14010>
1400157ad:     	leaq	0x8c94(%rip), %rdx      # 0x14001e448
1400157b4:     	movl	$0x5, %r8d
1400157ba:     	movq	%rax, %rcx
1400157bd:     	jmp	0x140015010 <.text+0x14010>
1400157c2:     	int3
1400157c3:     	int3
1400157c4:     	int3
1400157c5:     	int3
1400157c6:     	int3
1400157c7:     	int3
1400157c8:     	int3
1400157c9:     	int3
1400157ca:     	int3
1400157cb:     	int3
1400157cc:     	int3
1400157cd:     	int3
1400157ce:     	int3
1400157cf:     	int3
1400157d0:     	pushq	%r15
1400157d2:     	pushq	%r14
1400157d4:     	pushq	%r13
1400157d6:     	pushq	%r12
1400157d8:     	pushq	%rsi
1400157d9:     	pushq	%rdi
1400157da:     	pushq	%rbp
1400157db:     	pushq	%rbx
1400157dc:     	subq	$0x68, %rsp
1400157e0:     	movq	%rdx, %rsi
1400157e3:     	movq	%rcx, %rbx
1400157e6:     	movq	0x20(%r8), %rdi
1400157ea:     	movq	0x28(%r8), %r14
1400157ee:     	movq	0x20(%r14), %rax
1400157f2:     	movq	%rdi, %rcx
1400157f5:     	movl	$0x22, %edx
1400157fa:     	movq	%rax, %r13
1400157fd:     	callq	*%rax
1400157ff:     	testb	%al, %al
140015801:     	je	0x140015816 <.text+0x14816>
140015803:     	movb	$0x1, %al
140015805:     	addq	$0x68, %rsp
140015809:     	popq	%rbx
14001580a:     	popq	%rbp
14001580b:     	popq	%rdi
14001580c:     	popq	%rsi
14001580d:     	popq	%r12
14001580f:     	popq	%r13
140015811:     	popq	%r14
140015813:     	popq	%r15
140015815:     	retq
140015816:     	testq	%rsi, %rsi
140015819:     	je	0x140015a79 <.text+0x14a79>
14001581f:     	movq	%r14, 0x40(%rsp)
140015824:     	movq	%rsi, 0x38(%rsp)
140015829:     	leaq	(%rbx,%rsi), %rax
14001582d:     	movq	%rax, 0x60(%rsp)
140015832:     	xorl	%r12d, %r12d
140015835:     	movq	%rbx, %rsi
140015838:     	xorl	%r14d, %r14d
14001583b:     	movq	%rbx, 0x58(%rsp)
140015840:     	jmp	0x140015869 <.text+0x14869>
140015842:     	nopw	%cs:(%rax,%rax)
140015850:     	addq	%r14, %r12
140015853:     	movq	0x58(%rsp), %rbx
140015858:     	subq	%r15, %r14
14001585b:     	addq	%rsi, %r14
14001585e:     	cmpq	0x60(%rsp), %rsi
140015863:     	je	0x140015ab2 <.text+0x14ab2>
140015869:     	movq	%rsi, %r15
14001586c:     	movzbl	(%rsi), %ebp
14001586f:     	testb	%bpl, %bpl
140015872:     	js	0x140015880 <.text+0x14880>
140015874:     	leaq	0x1(%r15), %rsi
140015878:     	jmp	0x1400158f0 <.text+0x148f0>
14001587a:     	nopw	(%rax,%rax)
140015880:     	movl	%ebp, %eax
140015882:     	andl	$0x1f, %eax
140015885:     	movzbl	0x1(%r15), %edx
14001588a:     	andl	$0x3f, %edx
14001588d:     	cmpb	$-0x21, %bpl
140015891:     	jbe	0x1400158cf <.text+0x148cf>
140015893:     	leaq	0x3(%r15), %rsi
140015897:     	movzbl	0x2(%r15), %ecx
14001589c:     	shll	$0x6, %edx
14001589f:     	andl	$0x3f, %ecx
1400158a2:     	orl	%edx, %ecx
1400158a4:     	cmpb	$-0x10, %bpl
1400158a8:     	jb	0x1400158dc <.text+0x148dc>
1400158aa:     	movzbl	(%rsi), %ebp
1400158ad:     	andl	$0x7, %eax
1400158b0:     	shll	$0x12, %eax
1400158b3:     	shll	$0x6, %ecx
1400158b6:     	andl	$0x3f, %ebp
1400158b9:     	orl	%ecx, %ebp
1400158bb:     	orl	%eax, %ebp
1400158bd:     	cmpl	$0x110000, %ebp         # imm = 0x110000
1400158c3:     	je	0x140015ab2 <.text+0x14ab2>
1400158c9:     	leaq	0x4(%r15), %rsi
1400158cd:     	jmp	0x1400158f0 <.text+0x148f0>
1400158cf:     	leaq	0x2(%r15), %rsi
1400158d3:     	shll	$0x6, %eax
1400158d6:     	orl	%edx, %eax
1400158d8:     	movl	%eax, %ebp
1400158da:     	jmp	0x1400158f0 <.text+0x148f0>
1400158dc:     	shll	$0xc, %eax
1400158df:     	orl	%eax, %ecx
1400158e1:     	movl	%ecx, %ebp
1400158e3:     	nopw	%cs:(%rax,%rax)
1400158f0:     	leaq	0x4c(%rsp), %rcx
1400158f5:     	movl	%ebp, %edx
1400158f7:     	movl	$0x10001, %r8d          # imm = 0x10001
1400158fd:     	callq	0x140013de0 <.text+0x12de0>
140015902:     	cmpb	$-0x80, 0x4c(%rsp)
140015907:     	je	0x140015858 <.text+0x14858>
14001590d:     	movzbl	0x57(%rsp), %eax
140015912:     	subb	0x56(%rsp), %al
140015916:     	cmpb	$0x1, %al
140015918:     	je	0x140015858 <.text+0x14858>
14001591e:     	movq	%r14, %r8
140015921:     	subq	%r12, %r8
140015924:     	jb	0x140015b1b <.text+0x14b1b>
14001592a:     	testq	%r12, %r12
14001592d:     	je	0x140015948 <.text+0x14948>
14001592f:     	cmpq	0x38(%rsp), %r12
140015934:     	jae	0x140015942 <.text+0x14942>
140015936:     	cmpb	$-0x40, (%rbx,%r12)
14001593b:     	jge	0x140015948 <.text+0x14948>
14001593d:     	jmp	0x140015b1b <.text+0x14b1b>
140015942:     	jne	0x140015b1b <.text+0x14b1b>
140015948:     	testq	%r14, %r14
14001594b:     	je	0x140015966 <.text+0x14966>
14001594d:     	cmpq	0x38(%rsp), %r14
140015952:     	jae	0x140015960 <.text+0x14960>
140015954:     	cmpb	$-0x41, (%rbx,%r14)
140015959:     	jg	0x140015966 <.text+0x14966>
14001595b:     	jmp	0x140015b1b <.text+0x14b1b>
140015960:     	jne	0x140015b1b <.text+0x14b1b>
140015966:     	addq	%rbx, %r12
140015969:     	movq	%rdi, %rcx
14001596c:     	movq	%r12, %rdx
14001596f:     	movq	0x40(%rsp), %rax
140015974:     	callq	*0x18(%rax)
140015977:     	testb	%al, %al
140015979:     	jne	0x140015803 <.text+0x14803>
14001597f:     	movl	0x54(%rsp), %eax
140015983:     	movl	%eax, 0x30(%rsp)
140015987:     	movq	0x4c(%rsp), %rax
14001598c:     	movq	%rax, 0x28(%rsp)
140015991:     	cmpb	$-0x80, %al
140015993:     	jne	0x140015a00 <.text+0x14a00>
140015995:     	movb	$-0x80, %bl
140015997:     	jmp	0x1400159c5 <.text+0x149c5>
140015999:     	nopl	(%rax)
1400159a0:     	movl	0x2c(%rsp), %edx
1400159a4:     	movl	$0x0, 0x30(%rsp)
1400159ac:     	movq	$0x0, 0x28(%rsp)
1400159b5:     	xorl	%ebx, %ebx
1400159b7:     	movq	%rdi, %rcx
1400159ba:     	callq	*%r13
1400159bd:     	testb	%al, %al
1400159bf:     	jne	0x140015803 <.text+0x14803>
1400159c5:     	cmpb	$-0x80, %bl
1400159c8:     	je	0x1400159a0 <.text+0x149a0>
1400159ca:     	movzbl	0x32(%rsp), %r12d
1400159d0:     	cmpb	0x33(%rsp), %r12b
1400159d5:     	jae	0x140015a40 <.text+0x14a40>
1400159d7:     	leal	0x1(%r12), %eax
1400159dc:     	movb	%al, 0x32(%rsp)
1400159e0:     	cmpb	$0xa, %r12b
1400159e4:     	jae	0x140015b05 <.text+0x14b05>
1400159ea:     	movzbl	0x28(%rsp,%r12), %edx
1400159f0:     	movq	%rdi, %rcx
1400159f3:     	callq	*%r13
1400159f6:     	testb	%al, %al
1400159f8:     	je	0x1400159c5 <.text+0x149c5>
1400159fa:     	jmp	0x140015803 <.text+0x14803>
1400159ff:     	nop
140015a00:     	movzbl	0x33(%rsp), %ebx
140015a05:     	movzbl	0x32(%rsp), %r12d
140015a0b:     	nopl	(%rax,%rax)
140015a10:     	cmpq	%rbx, %r12
140015a13:     	jae	0x140015a40 <.text+0x14a40>
140015a15:     	leal	0x1(%r12), %eax
140015a1a:     	movb	%al, 0x32(%rsp)
140015a1e:     	cmpq	$0x9, %r12
140015a22:     	ja	0x140015b05 <.text+0x14b05>
140015a28:     	movzbl	0x28(%rsp,%r12), %edx
140015a2e:     	movq	%rdi, %rcx
140015a31:     	callq	*%r13
140015a34:     	incq	%r12
140015a37:     	testb	%al, %al
140015a39:     	je	0x140015a10 <.text+0x14a10>
140015a3b:     	jmp	0x140015803 <.text+0x14803>
140015a40:     	movl	$0x1, %r12d
140015a46:     	cmpl	$0x80, %ebp
140015a4c:     	jb	0x140015850 <.text+0x14850>
140015a52:     	movl	$0x2, %r12d
140015a58:     	cmpl	$0x800, %ebp            # imm = 0x800
140015a5e:     	jb	0x140015850 <.text+0x14850>
140015a64:     	cmpl	$0x10000, %ebp          # imm = 0x10000
140015a6a:     	movl	$0x4, %r12d
140015a70:     	sbbq	$0x0, %r12
140015a74:     	jmp	0x140015850 <.text+0x14850>
140015a79:     	xorl	%r12d, %r12d
140015a7c:     	xorl	%r8d, %r8d
140015a7f:     	addq	%r12, %rbx
140015a82:     	movq	%rdi, %rcx
140015a85:     	movq	%rbx, %rdx
140015a88:     	callq	*0x18(%r14)
140015a8c:     	testb	%al, %al
140015a8e:     	jne	0x140015803 <.text+0x14803>
140015a94:     	movq	%rdi, %rcx
140015a97:     	movl	$0x22, %edx
140015a9c:     	movq	%r13, %rax
140015a9f:     	addq	$0x68, %rsp
140015aa3:     	popq	%rbx
140015aa4:     	popq	%rbp
140015aa5:     	popq	%rdi
140015aa6:     	popq	%rsi
140015aa7:     	popq	%r12
140015aa9:     	popq	%r13
140015aab:     	popq	%r14
140015aad:     	popq	%r15
140015aaf:     	jmpq	*%rax
140015ab2:     	testq	%r12, %r12
140015ab5:     	je	0x140015aec <.text+0x14aec>
140015ab7:     	movq	0x38(%rsp), %rdx
140015abc:     	movq	%rdx, %rax
140015abf:     	subq	%r12, %rax
140015ac2:     	movq	0x40(%rsp), %r14
140015ac7:     	jbe	0x140015afb <.text+0x14afb>
140015ac9:     	cmpb	$-0x41, (%rbx,%r12)
140015ace:     	jg	0x140015afd <.text+0x14afd>
140015ad0:     	leaq	0x8981(%rip), %rax      # 0x14001e458
140015ad7:     	movq	%rax, 0x20(%rsp)
140015adc:     	movq	%rbx, %rcx
140015adf:     	movq	%r12, %r8
140015ae2:     	movq	%rdx, %r9
140015ae5:     	callq	0x140019e10 <.text+0x18e10>
140015aea:     	ud2
140015aec:     	xorl	%r12d, %r12d
140015aef:     	movq	0x38(%rsp), %r8
140015af4:     	movq	0x40(%rsp), %r14
140015af9:     	jmp	0x140015a7f <.text+0x14a7f>
140015afb:     	jne	0x140015ad0 <.text+0x14ad0>
140015afd:     	movq	%rax, %r8
140015b00:     	jmp	0x140015a7f <.text+0x14a7f>
140015b05:     	leaq	0x9454(%rip), %r8       # 0x14001ef60
140015b0c:     	movl	$0xa, %edx
140015b11:     	movq	%r12, %rcx
140015b14:     	callq	0x140019920 <.text+0x18920>
140015b19:     	ud2
140015b1b:     	leaq	0x894e(%rip), %rax      # 0x14001e470
140015b22:     	movq	%rax, 0x20(%rsp)
140015b27:     	movq	%rbx, %rcx
140015b2a:     	movq	0x38(%rsp), %rdx
140015b2f:     	movq	%r12, %r8
140015b32:     	movq	%r14, %r9
140015b35:     	callq	0x140019e10 <.text+0x18e10>
140015b3a:     	ud2
140015b3c:     	int3
140015b3d:     	int3
140015b3e:     	int3
140015b3f:     	int3
140015b40:     	movq	%rdx, %rax
140015b43:     	movq	%rcx, %rdx
140015b46:     	movq	%r8, %rcx
140015b49:     	movq	%rax, %r8
140015b4c:     	jmp	0x140015010 <.text+0x14010>
140015b51:     	int3
140015b52:     	int3
140015b53:     	int3
140015b54:     	int3
140015b55:     	int3
140015b56:     	int3
140015b57:     	int3
140015b58:     	int3
140015b59:     	int3
140015b5a:     	int3
140015b5b:     	int3
140015b5c:     	int3
140015b5d:     	int3
140015b5e:     	int3
140015b5f:     	int3
140015b60:     	pushq	%r14
140015b62:     	pushq	%rsi
140015b63:     	pushq	%rdi
140015b64:     	pushq	%rbx
140015b65:     	subq	$0x38, %rsp
140015b69:     	movq	%rcx, %rdi
140015b6c:     	movq	0x20(%rdx), %rsi
140015b70:     	movq	0x28(%rdx), %rax
140015b74:     	movq	0x20(%rax), %rax
140015b78:     	movq	%rsi, %rcx
140015b7b:     	movl	$0x27, %edx
140015b80:     	movq	%rax, %r14
140015b83:     	callq	*%rax
140015b85:     	testb	%al, %al
140015b87:     	je	0x140015b95 <.text+0x14b95>
140015b89:     	movb	$0x1, %al
140015b8b:     	addq	$0x38, %rsp
140015b8f:     	popq	%rbx
140015b90:     	popq	%rdi
140015b91:     	popq	%rsi
140015b92:     	popq	%r14
140015b94:     	retq
140015b95:     	movl	(%rdi), %edx
140015b97:     	leaq	0x28(%rsp), %rcx
140015b9c:     	movl	$0x101, %r8d            # imm = 0x101
140015ba2:     	callq	0x140013de0 <.text+0x12de0>
140015ba7:     	cmpb	$-0x80, 0x28(%rsp)
140015bac:     	jne	0x140015c13 <.text+0x14c13>
140015bae:     	movb	$-0x80, %bl
140015bb0:     	jmp	0x140015be1 <.text+0x14be1>
140015bb2:     	nopw	%cs:(%rax,%rax)
140015bc0:     	movl	0x2c(%rsp), %edx
140015bc4:     	movl	$0x0, 0x30(%rsp)
140015bcc:     	movq	$0x0, 0x28(%rsp)
140015bd5:     	xorl	%ebx, %ebx
140015bd7:     	movq	%rsi, %rcx
140015bda:     	callq	*%r14
140015bdd:     	testb	%al, %al
140015bdf:     	jne	0x140015b89 <.text+0x14b89>
140015be1:     	cmpb	$-0x80, %bl
140015be4:     	je	0x140015bc0 <.text+0x14bc0>
140015be6:     	movzbl	0x32(%rsp), %edi
140015beb:     	cmpb	0x33(%rsp), %dil
140015bf0:     	jae	0x140015c49 <.text+0x14c49>
140015bf2:     	leal	0x1(%rdi), %eax
140015bf5:     	movb	%al, 0x32(%rsp)
140015bf9:     	cmpb	$0xa, %dil
140015bfd:     	jae	0x140015c60 <.text+0x14c60>
140015bff:     	movzbl	0x28(%rsp,%rdi), %edx
140015c04:     	movq	%rsi, %rcx
140015c07:     	callq	*%r14
140015c0a:     	testb	%al, %al
140015c0c:     	je	0x140015be1 <.text+0x14be1>
140015c0e:     	jmp	0x140015b89 <.text+0x14b89>
140015c13:     	movzbl	0x33(%rsp), %ebx
140015c18:     	movzbl	0x32(%rsp), %edi
140015c1d:     	nopl	(%rax)
140015c20:     	cmpq	%rbx, %rdi
140015c23:     	jae	0x140015c49 <.text+0x14c49>
140015c25:     	leal	0x1(%rdi), %eax
140015c28:     	movb	%al, 0x32(%rsp)
140015c2c:     	cmpq	$0x9, %rdi
140015c30:     	ja	0x140015c60 <.text+0x14c60>
140015c32:     	movzbl	0x28(%rsp,%rdi), %edx
140015c37:     	movq	%rsi, %rcx
140015c3a:     	callq	*%r14
140015c3d:     	incq	%rdi
140015c40:     	testb	%al, %al
140015c42:     	je	0x140015c20 <.text+0x14c20>
140015c44:     	jmp	0x140015b89 <.text+0x14b89>
140015c49:     	movq	%rsi, %rcx
140015c4c:     	movl	$0x27, %edx
140015c51:     	movq	%r14, %rax
140015c54:     	addq	$0x38, %rsp
140015c58:     	popq	%rbx
140015c59:     	popq	%rdi
140015c5a:     	popq	%rsi
140015c5b:     	popq	%r14
140015c5d:     	jmpq	*%rax
140015c60:     	leaq	0x92f9(%rip), %r8       # 0x14001ef60
140015c67:     	movl	$0xa, %edx
140015c6c:     	movq	%rdi, %rcx
140015c6f:     	callq	0x140019920 <.text+0x18920>
140015c74:     	ud2
140015c76:     	int3
140015c77:     	int3
140015c78:     	int3
140015c79:     	int3
140015c7a:     	int3
140015c7b:     	int3
140015c7c:     	int3
140015c7d:     	int3
140015c7e:     	int3
140015c7f:     	int3
140015c80:     	subq	$0x28, %rsp
140015c84:     	movq	(%rdx), %rax
140015c87:     	orq	0x10(%rdx), %rax
140015c8b:     	movl	(%rcx), %eax
140015c8d:     	jne	0x140015ca4 <.text+0x14ca4>
140015c8f:     	movq	0x20(%rdx), %rcx
140015c93:     	movq	0x28(%rdx), %rdx
140015c97:     	movq	0x20(%rdx), %r8
140015c9b:     	movl	%eax, %edx
140015c9d:     	addq	$0x28, %rsp
140015ca1:     	jmpq	*%r8
140015ca4:     	movl	$0x0, 0x24(%rsp)
140015cac:     	cmpl	$0x80, %eax
140015cb1:     	jae	0x140015cc2 <.text+0x14cc2>
140015cb3:     	movb	%al, 0x24(%rsp)
140015cb7:     	movl	$0x1, %r8d
140015cbd:     	jmp	0x140015d4b <.text+0x14d4b>
140015cc2:     	movl	%eax, %ecx
140015cc4:     	cmpl	$0x800, %eax            # imm = 0x800
140015cc9:     	jae	0x140015ce5 <.text+0x14ce5>
140015ccb:     	shrl	$0x6, %ecx
140015cce:     	orb	$-0x40, %cl
140015cd1:     	movb	%cl, 0x24(%rsp)
140015cd5:     	andb	$0x3f, %al
140015cd7:     	orb	$-0x80, %al
140015cd9:     	movb	%al, 0x25(%rsp)
140015cdd:     	movl	$0x2, %r8d
140015ce3:     	jmp	0x140015d4b <.text+0x14d4b>
140015ce5:     	cmpl	$0x10000, %eax          # imm = 0x10000
140015cea:     	jae	0x140015d15 <.text+0x14d15>
140015cec:     	shrl	$0xc, %ecx
140015cef:     	orb	$-0x20, %cl
140015cf2:     	movb	%cl, 0x24(%rsp)
140015cf6:     	movl	%eax, %ecx
140015cf8:     	shrl	$0x6, %ecx
140015cfb:     	andb	$0x3f, %cl
140015cfe:     	orb	$-0x80, %cl
140015d01:     	movb	%cl, 0x25(%rsp)
140015d05:     	andb	$0x3f, %al
140015d07:     	orb	$-0x80, %al
140015d09:     	movb	%al, 0x26(%rsp)
140015d0d:     	movl	$0x3, %r8d
140015d13:     	jmp	0x140015d4b <.text+0x14d4b>
140015d15:     	shrl	$0x12, %ecx
140015d18:     	orb	$-0x10, %cl
140015d1b:     	movb	%cl, 0x24(%rsp)
140015d1f:     	movl	%eax, %ecx
140015d21:     	shrl	$0xc, %ecx
140015d24:     	andb	$0x3f, %cl
140015d27:     	orb	$-0x80, %cl
140015d2a:     	movb	%cl, 0x25(%rsp)
140015d2e:     	movl	%eax, %ecx
140015d30:     	shrl	$0x6, %ecx
140015d33:     	andb	$0x3f, %cl
140015d36:     	orb	$-0x80, %cl
140015d39:     	movb	%cl, 0x26(%rsp)
140015d3d:     	andb	$0x3f, %al
140015d3f:     	orb	$-0x80, %al
140015d41:     	movb	%al, 0x27(%rsp)
140015d45:     	movl	$0x4, %r8d
140015d4b:     	leaq	0x24(%rsp), %rax
140015d50:     	movq	%rdx, %rcx
140015d53:     	movq	%rax, %rdx
140015d56:     	callq	0x140015010 <.text+0x14010>
140015d5b:     	nop
140015d5c:     	addq	$0x28, %rsp
140015d60:     	retq
140015d61:     	int3
140015d62:     	int3
140015d63:     	int3
140015d64:     	int3
140015d65:     	int3
140015d66:     	int3
140015d67:     	int3
140015d68:     	int3
140015d69:     	int3
140015d6a:     	int3
140015d6b:     	int3
140015d6c:     	int3
140015d6d:     	int3
140015d6e:     	int3
140015d6f:     	int3
140015d70:     	pushq	%rsi
140015d71:     	pushq	%rdi
140015d72:     	subq	$0xc8, %rsp
140015d79:     	movaps	%xmm6, 0xb0(%rsp)
140015d81:     	movq	%rdx, %rsi
140015d84:     	movdqu	(%rdx), %xmm6
140015d88:     	movl	0x34(%rdx), %edi
140015d8b:     	movl	%edi, %eax
140015d8d:     	testb	$0x4, %dil
140015d91:     	je	0x140015db1 <.text+0x14db1>
140015d93:     	movl	%edi, %eax
140015d95:     	orl	$0x8, %eax
140015d98:     	movq	%xmm6, %rdx
140015d9d:     	testq	%rdx, %rdx
140015da0:     	jne	0x140015db1 <.text+0x14db1>
140015da2:     	movq	$0x1, (%rsi)
140015da9:     	movq	$0x12, 0x8(%rsi)
140015db1:     	orl	$0x4, %eax
140015db4:     	movl	%eax, 0x34(%rsi)
140015db7:     	leaq	0xb0(%rsp), %r8
140015dbf:     	xorl	%eax, %eax
140015dc1:     	movl	$0x30, %edx
140015dc6:     	movq	%rcx, %r9
140015dc9:     	nopl	(%rax)
140015dd0:     	shrq	$0x4, %r9
140015dd4:     	movl	%ecx, %r10d
140015dd7:     	andb	$0xf, %r10b
140015ddb:     	cmpb	$0xa, %r10b
140015ddf:     	movl	$0x57, %r11d
140015de5:     	cmovbl	%edx, %r11d
140015de9:     	addb	%r10b, %r11b
140015dec:     	movb	%r11b, -0x1(%r8)
140015df0:     	decq	%r8
140015df3:     	incq	%rax
140015df6:     	cmpq	$0x10, %rcx
140015dfa:     	movq	%r9, %rcx
140015dfd:     	jae	0x140015dd0 <.text+0x14dd0>
140015dff:     	movl	$0x80, %ecx
140015e04:     	subq	%rax, %rcx
140015e07:     	cmpq	$0x80, %rcx
140015e0e:     	ja	0x140015e4a <.text+0x14e4a>
140015e10:     	movq	%rax, 0x28(%rsp)
140015e15:     	movq	%r8, 0x20(%rsp)
140015e1a:     	leaq	0x851e(%rip), %r8       # 0x14001e33f
140015e21:     	movl	$0x2, %r9d
140015e27:     	movq	%rsi, %rcx
140015e2a:     	movb	$0x1, %dl
140015e2c:     	callq	0x140014c70 <.text+0x13c70>
140015e31:     	movdqu	%xmm6, (%rsi)
140015e35:     	movl	%edi, 0x34(%rsi)
140015e38:     	movaps	0xb0(%rsp), %xmm6
140015e40:     	addq	$0xc8, %rsp
140015e47:     	popq	%rdi
140015e48:     	popq	%rsi
140015e49:     	retq
140015e4a:     	leaq	0x850f(%rip), %r8       # 0x14001e360
140015e51:     	movl	$0x80, %edx
140015e56:     	callq	0x140019c50 <.text+0x18c50>
140015e5b:     	ud2
140015e5d:     	int3
140015e5e:     	int3
140015e5f:     	int3
140015e60:     	pushq	%r14
140015e62:     	pushq	%rsi
140015e63:     	pushq	%rdi
140015e64:     	pushq	%rbx
140015e65:     	leaq	0x7(%rdx), %r10
140015e69:     	andq	$-0x8, %r10
140015e6d:     	subq	%rdx, %r10
140015e70:     	je	0x140015ead <.text+0x14ead>
140015e72:     	cmpq	%r8, %r10
140015e75:     	cmovaeq	%r8, %r10
140015e79:     	testq	%r10, %r10
140015e7c:     	je	0x140015ead <.text+0x14ead>
140015e7e:     	xorl	%r9d, %r9d
140015e81:     	nopw	%cs:(%rax,%rax)
140015e90:     	cmpb	%cl, (%rdx,%r9)
140015e94:     	je	0x140015f3d <.text+0x14f3d>
140015e9a:     	incq	%r9
140015e9d:     	cmpq	%r9, %r10
140015ea0:     	jne	0x140015e90 <.text+0x14e90>
140015ea2:     	leaq	-0x10(%r8), %rax
140015ea6:     	cmpq	%rax, %r10
140015ea9:     	jbe	0x140015eb4 <.text+0x14eb4>
140015eab:     	jmp	0x140015f14 <.text+0x14f14>
140015ead:     	leaq	-0x10(%r8), %rax
140015eb1:     	xorl	%r10d, %r10d
140015eb4:     	movabsq	$-0x101010101010101, %r9 # imm = 0xFEFEFEFEFEFEFEFF
140015ebe:     	movzbl	%cl, %esi
140015ec1:     	movabsq	$0x101010101010101, %r11 # imm = 0x101010101010101
140015ecb:     	imulq	%rsi, %r11
140015ecf:     	movabsq	$-0x7f7f7f7f7f7f7f80, %rsi # imm = 0x8080808080808080
140015ed9:     	nopl	(%rax)
140015ee0:     	movq	(%rdx,%r10), %rdi
140015ee4:     	xorq	%r11, %rdi
140015ee7:     	leaq	(%rdi,%r9), %rbx
140015eeb:     	notq	%rdi
140015eee:     	andq	%rbx, %rdi
140015ef1:     	movq	0x8(%rdx,%r10), %rbx
140015ef6:     	xorq	%r11, %rbx
140015ef9:     	leaq	(%rbx,%r9), %r14
140015efd:     	notq	%rbx
140015f00:     	andq	%r14, %rbx
140015f03:     	orq	%rdi, %rbx
140015f06:     	testq	%rsi, %rbx
140015f09:     	jne	0x140015f14 <.text+0x14f14>
140015f0b:     	addq	$0x10, %r10
140015f0f:     	cmpq	%rax, %r10
140015f12:     	jbe	0x140015ee0 <.text+0x14ee0>
140015f14:     	xorl	%eax, %eax
140015f16:     	cmpq	%r8, %r10
140015f19:     	je	0x140015f2e <.text+0x14f2e>
140015f1b:     	nopl	(%rax,%rax)
140015f20:     	cmpb	%cl, (%rdx,%r10)
140015f24:     	je	0x140015f33 <.text+0x14f33>
140015f26:     	incq	%r10
140015f29:     	cmpq	%r10, %r8
140015f2c:     	jne	0x140015f20 <.text+0x14f20>
140015f2e:     	movq	%r8, %r9
140015f31:     	jmp	0x140015f42 <.text+0x14f42>
140015f33:     	movl	$0x1, %eax
140015f38:     	movq	%r10, %r9
140015f3b:     	jmp	0x140015f42 <.text+0x14f42>
140015f3d:     	movl	$0x1, %eax
140015f42:     	movq	%r9, %rdx
140015f45:     	popq	%rbx
140015f46:     	popq	%rdi
140015f47:     	popq	%rsi
140015f48:     	popq	%r14
140015f4a:     	retq
140015f4b:     	int3
140015f4c:     	int3
140015f4d:     	int3
140015f4e:     	int3
140015f4f:     	int3
140015f50:     	pushq	%r15
140015f52:     	pushq	%r14
140015f54:     	pushq	%rsi
140015f55:     	pushq	%rdi
140015f56:     	pushq	%rbx
140015f57:     	subq	$0x20, %rsp
140015f5b:     	leaq	0x7(%rdx), %r9
140015f5f:     	andq	$-0x8, %r9
140015f63:     	subq	%rdx, %r9
140015f66:     	movq	%r8, %rax
140015f69:     	movq	%r8, %r11
140015f6c:     	cmpq	%r9, %r8
140015f6f:     	jb	0x140015f8a <.text+0x14f8a>
140015f71:     	movl	%r8d, %r10d
140015f74:     	subl	%r9d, %r10d
140015f77:     	andl	$0xf, %r10d
140015f7b:     	movq	%r8, %rax
140015f7e:     	subq	%r10, %rax
140015f81:     	jb	0x140016049 <.text+0x15049>
140015f87:     	movq	%r9, %r11
140015f8a:     	movq	%rax, %r9
140015f8d:     	negq	%r9
140015f90:     	movq	%r8, %rsi
140015f93:     	nopw	%cs:(%rax,%rax)
140015fa0:     	movq	%r9, %r10
140015fa3:     	addq	%rsi, %r10
140015fa6:     	je	0x140015fb7 <.text+0x14fb7>
140015fa8:     	leaq	-0x1(%rsi), %r10
140015fac:     	cmpb	%cl, -0x1(%rdx,%rsi)
140015fb0:     	movq	%r10, %rsi
140015fb3:     	jne	0x140015fa0 <.text+0x14fa0>
140015fb5:     	jmp	0x140016033 <.text+0x15033>
140015fb7:     	movzbl	%cl, %r9d
140015fbb:     	movabsq	$0x101010101010101, %r10 # imm = 0x101010101010101
140015fc5:     	imulq	%r9, %r10
140015fc9:     	movabsq	$-0x101010101010101, %rsi # imm = 0xFEFEFEFEFEFEFEFF
140015fd3:     	movabsq	$-0x7f7f7f7f7f7f7f80, %rdi # imm = 0x8080808080808080
140015fdd:     	nopl	(%rax)
140015fe0:     	movq	%rax, %r9
140015fe3:     	cmpq	%r11, %rax
140015fe6:     	jbe	0x140016018 <.text+0x15018>
140015fe8:     	leaq	-0x10(%r9), %rax
140015fec:     	movq	-0x10(%rdx,%r9), %rbx
140015ff1:     	xorq	%r10, %rbx
140015ff4:     	leaq	(%rbx,%rsi), %r14
140015ff8:     	notq	%rbx
140015ffb:     	andq	%r14, %rbx
140015ffe:     	movq	-0x8(%rdx,%r9), %r14
140016003:     	xorq	%r10, %r14
140016006:     	leaq	(%r14,%rsi), %r15
14001600a:     	notq	%r14
14001600d:     	andq	%r15, %r14
140016010:     	orq	%rbx, %r14
140016013:     	testq	%rdi, %r14
140016016:     	je	0x140015fe0 <.text+0x14fe0>
140016018:     	cmpq	%r8, %r9
14001601b:     	ja	0x140016060 <.text+0x15060>
14001601d:     	xorl	%eax, %eax
14001601f:     	nop
140016020:     	testq	%r9, %r9
140016023:     	je	0x14001603a <.text+0x1503a>
140016025:     	leaq	-0x1(%r9), %r10
140016029:     	cmpb	%cl, -0x1(%rdx,%r9)
14001602e:     	movq	%r10, %r9
140016031:     	jne	0x140016020 <.text+0x15020>
140016033:     	movl	$0x1, %eax
140016038:     	jmp	0x14001603a <.text+0x1503a>
14001603a:     	movq	%r10, %rdx
14001603d:     	addq	$0x20, %rsp
140016041:     	popq	%rbx
140016042:     	popq	%rdi
140016043:     	popq	%rsi
140016044:     	popq	%r14
140016046:     	popq	%r15
140016048:     	retq
140016049:     	leaq	0x8470(%rip), %r9       # 0x14001e4c0
140016050:     	movq	%rax, %rcx
140016053:     	movq	%r8, %rdx
140016056:     	movq	%r9, %r8
140016059:     	callq	0x140019c50 <.text+0x18c50>
14001605e:     	ud2
140016060:     	leaq	0x8441(%rip), %rax      # 0x14001e4a8
140016067:     	movq	%r9, %rcx
14001606a:     	movq	%r8, %rdx
14001606d:     	movq	%rax, %r8
140016070:     	callq	0x140019cd0 <.text+0x18cd0>
140016075:     	ud2
140016077:     	int3
140016078:     	int3
140016079:     	int3
14001607a:     	int3
14001607b:     	int3
14001607c:     	int3
14001607d:     	int3
14001607e:     	int3
14001607f:     	int3
140016080:     	pushq	%r14
140016082:     	pushq	%rsi
140016083:     	pushq	%rdi
140016084:     	pushq	%rbp
140016085:     	pushq	%rbx
140016086:     	movq	%rcx, %rax
140016089:     	xorl	%r9d, %r9d
14001608c:     	movq	%r8, %rcx
14001608f:     	subq	$0xf, %rcx
140016093:     	cmovaeq	%rcx, %r9
140016097:     	testq	%r8, %r8
14001609a:     	je	0x140016243 <.text+0x15243>
1400160a0:     	leaq	0x7(%rdx), %r10
1400160a4:     	andq	$-0x8, %r10
1400160a8:     	subq	%rdx, %r10
1400160ab:     	xorl	%ecx, %ecx
1400160ad:     	leaq	0x8534(%rip), %rsi      # 0x14001e5e8
1400160b4:     	movabsq	$-0x7f7f7f7f7f7f7f80, %rdi # imm = 0x8080808080808080
1400160be:     	jmp	0x1400160cf <.text+0x150cf>
1400160c0:     	incq	%r14
1400160c3:     	movq	%r14, %rcx
1400160c6:     	cmpq	%r8, %rcx
1400160c9:     	jae	0x140016243 <.text+0x15243>
1400160cf:     	movzbl	(%rdx,%rcx), %ebx
1400160d3:     	testb	%bl, %bl
1400160d5:     	js	0x140016130 <.text+0x15130>
1400160d7:     	movl	%r10d, %r11d
1400160da:     	subl	%ecx, %r11d
1400160dd:     	testb	$0x7, %r11b
1400160e1:     	je	0x1400160f4 <.text+0x150f4>
1400160e3:     	incq	%rcx
1400160e6:     	jmp	0x1400160c6 <.text+0x150c6>
1400160e8:     	nopl	(%rax,%rax)
1400160f0:     	addq	$0x10, %rcx
1400160f4:     	cmpq	%r9, %rcx
1400160f7:     	jae	0x140016107 <.text+0x15107>
1400160f9:     	movq	0x8(%rdx,%rcx), %r11
1400160fe:     	orq	(%rdx,%rcx), %r11
140016102:     	testq	%rdi, %r11
140016105:     	je	0x1400160f0 <.text+0x150f0>
140016107:     	cmpq	%r8, %rcx
14001610a:     	jae	0x1400160c6 <.text+0x150c6>
14001610c:     	nopl	(%rax)
140016110:     	cmpb	$0x0, (%rdx,%rcx)
140016114:     	js	0x1400160c6 <.text+0x150c6>
140016116:     	incq	%rcx
140016119:     	cmpq	%rcx, %r8
14001611c:     	jne	0x140016110 <.text+0x15110>
14001611e:     	jmp	0x140016243 <.text+0x15243>
140016123:     	nopw	%cs:(%rax,%rax)
140016130:     	movzbl	(%rbx,%rsi), %ebp
140016134:     	movb	$0x1, %r11b
140016137:     	cmpl	$0x4, %ebp
14001613a:     	je	0x140016169 <.text+0x15169>
14001613c:     	cmpl	$0x3, %ebp
14001613f:     	je	0x140016197 <.text+0x15197>
140016141:     	cmpl	$0x2, %ebp
140016144:     	jne	0x140016254 <.text+0x15254>
14001614a:     	leaq	0x1(%rcx), %r14
14001614e:     	cmpq	%r8, %r14
140016151:     	jae	0x14001624f <.text+0x1524f>
140016157:     	cmpb	$-0x41, (%rdx,%r14)
14001615c:     	movb	$0x1, %bl
14001615e:     	jle	0x1400160c0 <.text+0x150c0>
140016164:     	jmp	0x14001625a <.text+0x1525a>
140016169:     	leaq	0x1(%rcx), %r14
14001616d:     	cmpq	%r8, %r14
140016170:     	jae	0x14001624f <.text+0x1524f>
140016176:     	movzbl	(%rdx,%r14), %ebp
14001617b:     	cmpq	$0xf0, %rbx
140016182:     	je	0x1400161c5 <.text+0x151c5>
140016184:     	cmpl	$0xf4, %ebx
14001618a:     	jne	0x1400161d4 <.text+0x151d4>
14001618c:     	cmpb	$-0x71, %bpl
140016190:     	jle	0x1400161e2 <.text+0x151e2>
140016192:     	jmp	0x140016254 <.text+0x15254>
140016197:     	leaq	0x1(%rcx), %r14
14001619b:     	cmpq	%r8, %r14
14001619e:     	jae	0x14001624f <.text+0x1524f>
1400161a4:     	movzbl	(%rdx,%r14), %ebp
1400161a9:     	cmpq	$0xe0, %rbx
1400161b0:     	je	0x140016207 <.text+0x15207>
1400161b2:     	cmpl	$0xed, %ebx
1400161b8:     	jne	0x140016213 <.text+0x15213>
1400161ba:     	cmpb	$-0x61, %bpl
1400161be:     	jle	0x14001622b <.text+0x1522b>
1400161c0:     	jmp	0x140016254 <.text+0x15254>
1400161c5:     	addb	$0x70, %bpl
1400161c9:     	cmpb	$0x30, %bpl
1400161cd:     	jb	0x1400161e2 <.text+0x151e2>
1400161cf:     	jmp	0x140016254 <.text+0x15254>
1400161d4:     	addb	$0xf, %bl
1400161d7:     	cmpb	$0x2, %bl
1400161da:     	ja	0x140016254 <.text+0x15254>
1400161dc:     	cmpb	$-0x40, %bpl
1400161e0:     	jge	0x140016254 <.text+0x15254>
1400161e2:     	leaq	0x2(%rcx), %rbx
1400161e6:     	cmpq	%r8, %rbx
1400161e9:     	jae	0x14001624f <.text+0x1524f>
1400161eb:     	cmpb	$-0x41, (%rdx,%rbx)
1400161ef:     	jg	0x14001623f <.text+0x1523f>
1400161f1:     	leaq	0x3(%rcx), %r14
1400161f5:     	cmpq	%r8, %r14
1400161f8:     	jae	0x14001624f <.text+0x1524f>
1400161fa:     	cmpb	$-0x41, (%rdx,%r14)
1400161ff:     	jle	0x1400160c0 <.text+0x150c0>
140016205:     	jmp	0x140016258 <.text+0x15258>
140016207:     	andb	$-0x20, %bpl
14001620b:     	cmpb	$-0x60, %bpl
14001620f:     	je	0x14001622b <.text+0x1522b>
140016211:     	jmp	0x140016254 <.text+0x15254>
140016213:     	leal	0x1f(%rbx), %r14d
140016217:     	cmpb	$0xc, %r14b
14001621b:     	jb	0x140016225 <.text+0x15225>
14001621d:     	andb	$-0x2, %bl
140016220:     	cmpb	$-0x12, %bl
140016223:     	jne	0x140016254 <.text+0x15254>
140016225:     	cmpb	$-0x40, %bpl
140016229:     	jge	0x140016254 <.text+0x15254>
14001622b:     	leaq	0x2(%rcx), %r14
14001622f:     	cmpq	%r8, %r14
140016232:     	jae	0x14001624f <.text+0x1524f>
140016234:     	cmpb	$-0x41, (%rdx,%r14)
140016239:     	jle	0x1400160c0 <.text+0x150c0>
14001623f:     	movb	$0x2, %bl
140016241:     	jmp	0x14001625a <.text+0x1525a>
140016243:     	movq	%rdx, 0x8(%rax)
140016247:     	movq	%r8, 0x10(%rax)
14001624b:     	xorl	%ecx, %ecx
14001624d:     	jmp	0x14001626a <.text+0x1526a>
14001624f:     	xorl	%r11d, %r11d
140016252:     	jmp	0x14001625a <.text+0x1525a>
140016254:     	movb	$0x1, %bl
140016256:     	jmp	0x14001625a <.text+0x1525a>
140016258:     	movb	$0x3, %bl
14001625a:     	movq	%rcx, 0x8(%rax)
14001625e:     	movb	%r11b, 0x10(%rax)
140016262:     	movb	%bl, 0x11(%rax)
140016265:     	movl	$0x1, %ecx
14001626a:     	movq	%rcx, (%rax)
14001626d:     	popq	%rbx
14001626e:     	popq	%rbp
14001626f:     	popq	%rdi
140016270:     	popq	%rsi
140016271:     	popq	%r14
140016273:     	retq
140016274:     	int3
140016275:     	int3
140016276:     	int3
140016277:     	int3
140016278:     	int3
140016279:     	int3
14001627a:     	int3
14001627b:     	int3
14001627c:     	int3
14001627d:     	int3
14001627e:     	int3
14001627f:     	int3
140016280:     	pushq	%r15
140016282:     	pushq	%r14
140016284:     	pushq	%r12
140016286:     	pushq	%rsi
140016287:     	pushq	%rdi
140016288:     	pushq	%rbx
140016289:     	subq	$0x18, %rsp
14001628d:     	movdqa	%xmm6, (%rsp)
140016292:     	leaq	0x7(%rcx), %r10
140016296:     	andq	$-0x8, %r10
14001629a:     	movq	%r10, %r9
14001629d:     	subq	%rcx, %r9
1400162a0:     	movq	%rdx, %r8
1400162a3:     	subq	%r9, %r8
1400162a6:     	jb	0x1400162ae <.text+0x152ae>
1400162a8:     	cmpq	$0x8, %r8
1400162ac:     	jae	0x1400162ca <.text+0x152ca>
1400162ae:     	testq	%rdx, %rdx
1400162b1:     	je	0x1400162c3 <.text+0x152c3>
1400162b3:     	cmpq	$0x4, %rdx
1400162b7:     	jae	0x1400162e0 <.text+0x152e0>
1400162b9:     	xorl	%eax, %eax
1400162bb:     	xorl	%r8d, %r8d
1400162be:     	jmp	0x140016380 <.text+0x15380>
1400162c3:     	xorl	%eax, %eax
1400162c5:     	jmp	0x14001677c <.text+0x1577c>
1400162ca:     	movl	%r8d, %eax
1400162cd:     	andl	$0x7, %eax
1400162d0:     	cmpq	%rcx, %r10
1400162d3:     	jne	0x14001639c <.text+0x1539c>
1400162d9:     	xorl	%edx, %edx
1400162db:     	jmp	0x14001644d <.text+0x1544d>
1400162e0:     	movq	%rdx, %r8
1400162e3:     	andq	$-0x4, %r8
1400162e7:     	pxor	%xmm0, %xmm0
1400162eb:     	xorl	%eax, %eax
1400162ed:     	movdqa	0x7c5b(%rip), %xmm2     # 0x14001df50
1400162f5:     	movdqa	0x7c63(%rip), %xmm3     # 0x14001df60
1400162fd:     	pxor	%xmm1, %xmm1
140016301:     	nopw	%cs:(%rax,%rax)
140016310:     	movzwl	(%rcx,%rax), %r9d
140016315:     	movd	%r9d, %xmm4
14001631a:     	movzwl	0x2(%rcx,%rax), %r9d
140016320:     	movd	%r9d, %xmm5
140016325:     	pcmpgtb	%xmm2, %xmm4
140016329:     	punpcklbw	%xmm4, %xmm4    # xmm4 = xmm4[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
14001632d:     	pshuflw	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3,4,5,6,7]
140016332:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
140016337:     	pand	%xmm3, %xmm4
14001633b:     	paddq	%xmm4, %xmm0
14001633f:     	pcmpgtb	%xmm2, %xmm5
140016343:     	punpcklbw	%xmm5, %xmm5    # xmm5 = xmm5[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140016347:     	pshuflw	$0xd4, %xmm5, %xmm4     # xmm4 = xmm5[0,1,1,3,4,5,6,7]
14001634c:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
140016351:     	pand	%xmm3, %xmm4
140016355:     	paddq	%xmm4, %xmm1
140016359:     	addq	$0x4, %rax
14001635d:     	cmpq	%rax, %r8
140016360:     	jne	0x140016310 <.text+0x15310>
140016362:     	paddq	%xmm0, %xmm1
140016366:     	pshufd	$0xee, %xmm1, %xmm0     # xmm0 = xmm1[2,3,2,3]
14001636b:     	paddq	%xmm1, %xmm0
14001636f:     	movq	%xmm0, %rax
140016374:     	cmpq	%rdx, %r8
140016377:     	je	0x14001677c <.text+0x1577c>
14001637d:     	nopl	(%rax)
140016380:     	xorl	%r9d, %r9d
140016383:     	cmpb	$-0x40, (%rcx,%r8)
140016388:     	setge	%r9b
14001638c:     	addq	%r9, %rax
14001638f:     	incq	%r8
140016392:     	cmpq	%r8, %rdx
140016395:     	jne	0x140016380 <.text+0x15380>
140016397:     	jmp	0x14001677c <.text+0x1577c>
14001639c:     	cmpq	$0x4, %r9
1400163a0:     	jae	0x1400163ac <.text+0x153ac>
1400163a2:     	xorl	%edx, %edx
1400163a4:     	xorl	%r10d, %r10d
1400163a7:     	jmp	0x140016436 <.text+0x15436>
1400163ac:     	movl	%r9d, %r10d
1400163af:     	andl	$0x4, %r10d
1400163b3:     	pxor	%xmm0, %xmm0
1400163b7:     	xorl	%edx, %edx
1400163b9:     	movdqa	0x7b8f(%rip), %xmm2     # 0x14001df50
1400163c1:     	movdqa	0x7b97(%rip), %xmm3     # 0x14001df60
1400163c9:     	pxor	%xmm1, %xmm1
1400163cd:     	nopl	(%rax)
1400163d0:     	movzwl	(%rcx,%rdx), %r11d
1400163d5:     	movd	%r11d, %xmm4
1400163da:     	movzwl	0x2(%rcx,%rdx), %r11d
1400163e0:     	movd	%r11d, %xmm5
1400163e5:     	pcmpgtb	%xmm2, %xmm4
1400163e9:     	punpcklbw	%xmm4, %xmm4    # xmm4 = xmm4[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
1400163ed:     	pshuflw	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3,4,5,6,7]
1400163f2:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
1400163f7:     	pand	%xmm3, %xmm4
1400163fb:     	paddq	%xmm4, %xmm0
1400163ff:     	pcmpgtb	%xmm2, %xmm5
140016403:     	punpcklbw	%xmm5, %xmm5    # xmm5 = xmm5[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140016407:     	pshuflw	$0xd4, %xmm5, %xmm4     # xmm4 = xmm5[0,1,1,3,4,5,6,7]
14001640c:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
140016411:     	pand	%xmm3, %xmm4
140016415:     	paddq	%xmm4, %xmm1
140016419:     	addq	$0x4, %rdx
14001641d:     	cmpq	%rdx, %r10
140016420:     	jne	0x1400163d0 <.text+0x153d0>
140016422:     	paddq	%xmm0, %xmm1
140016426:     	pshufd	$0xee, %xmm1, %xmm0     # xmm0 = xmm1[2,3,2,3]
14001642b:     	paddq	%xmm1, %xmm0
14001642f:     	movq	%xmm0, %rdx
140016434:     	jmp	0x140016448 <.text+0x15448>
140016436:     	xorl	%r11d, %r11d
140016439:     	cmpb	$-0x40, (%rcx,%r10)
14001643e:     	setge	%r11b
140016442:     	addq	%r11, %rdx
140016445:     	incq	%r10
140016448:     	cmpq	%r10, %r9
14001644b:     	jne	0x140016436 <.text+0x15436>
14001644d:     	addq	%r9, %rcx
140016450:     	testq	%rax, %rax
140016453:     	je	0x1400164ea <.text+0x154ea>
140016459:     	movq	%r8, %r10
14001645c:     	andq	$-0x8, %r10
140016460:     	xorl	%r9d, %r9d
140016463:     	cmpb	$-0x40, (%rcx,%r10)
140016468:     	setge	%r9b
14001646c:     	cmpl	$0x1, %eax
14001646f:     	je	0x1400164ed <.text+0x154ed>
140016471:     	xorl	%r11d, %r11d
140016474:     	cmpb	$-0x40, 0x1(%rcx,%r10)
14001647a:     	setge	%r11b
14001647e:     	addq	%r11, %r9
140016481:     	cmpl	$0x2, %eax
140016484:     	je	0x1400164ed <.text+0x154ed>
140016486:     	xorl	%r11d, %r11d
140016489:     	cmpb	$-0x40, 0x2(%rcx,%r10)
14001648f:     	setge	%r11b
140016493:     	addq	%r11, %r9
140016496:     	cmpl	$0x3, %eax
140016499:     	je	0x1400164ed <.text+0x154ed>
14001649b:     	xorl	%r11d, %r11d
14001649e:     	cmpb	$-0x40, 0x3(%rcx,%r10)
1400164a4:     	setge	%r11b
1400164a8:     	addq	%r11, %r9
1400164ab:     	cmpl	$0x4, %eax
1400164ae:     	je	0x1400164ed <.text+0x154ed>
1400164b0:     	xorl	%r11d, %r11d
1400164b3:     	cmpb	$-0x40, 0x4(%rcx,%r10)
1400164b9:     	setge	%r11b
1400164bd:     	addq	%r11, %r9
1400164c0:     	cmpl	$0x5, %eax
1400164c3:     	je	0x1400164ed <.text+0x154ed>
1400164c5:     	xorl	%r11d, %r11d
1400164c8:     	cmpb	$-0x40, 0x5(%rcx,%r10)
1400164ce:     	setge	%r11b
1400164d2:     	addq	%r11, %r9
1400164d5:     	cmpl	$0x6, %eax
1400164d8:     	je	0x1400164ed <.text+0x154ed>
1400164da:     	xorl	%eax, %eax
1400164dc:     	cmpb	$-0x40, 0x6(%rcx,%r10)
1400164e2:     	setge	%al
1400164e5:     	addq	%rax, %r9
1400164e8:     	jmp	0x1400164ed <.text+0x154ed>
1400164ea:     	xorl	%r9d, %r9d
1400164ed:     	addq	%rdx, %r9
1400164f0:     	shrq	$0x3, %r8
1400164f4:     	movabsq	$0xff00ff00ff00ff, %r10 # imm = 0xFF00FF00FF00FF
1400164fe:     	movabsq	$0x1000100010001, %rdx  # imm = 0x1000100010001
140016508:     	movabsq	$0x7ffffffffffffff, %rdi # imm = 0x7FFFFFFFFFFFFFF
140016512:     	pcmpeqd	%xmm0, %xmm0
140016516:     	movdqa	0x7a52(%rip), %xmm1     # 0x14001df70
14001651e:     	jmp	0x140016553 <.text+0x15553>
140016520:     	xorl	%r9d, %r9d
140016523:     	leaq	(%r11,%rsi,8), %rcx
140016527:     	subq	%rsi, %r8
14001652a:     	movl	%esi, %ebx
14001652c:     	andl	$0x3, %ebx
14001652f:     	movq	%r9, %r14
140016532:     	andq	%r10, %r14
140016535:     	shrq	$0x8, %r9
140016539:     	andq	%r10, %r9
14001653c:     	addq	%r14, %r9
14001653f:     	imulq	%rdx, %r9
140016543:     	shrq	$0x30, %r9
140016547:     	addq	%rax, %r9
14001654a:     	testq	%rbx, %rbx
14001654d:     	jne	0x1400166f0 <.text+0x156f0>
140016553:     	movq	%r9, %rax
140016556:     	testq	%r8, %r8
140016559:     	je	0x14001677c <.text+0x1577c>
14001655f:     	movq	%rcx, %r11
140016562:     	cmpq	$0xc0, %r8
140016569:     	movl	$0xc0, %esi
14001656e:     	cmovbq	%r8, %rsi
140016572:     	cmpq	$0x4, %rsi
140016576:     	jb	0x140016520 <.text+0x15520>
140016578:     	movl	%esi, %ecx
14001657a:     	shrl	$0x2, %ecx
14001657d:     	leaq	-0x1(%rcx), %r14
140016581:     	andq	%rdi, %r14
140016584:     	je	0x140016682 <.text+0x15682>
14001658a:     	incq	%r14
14001658d:     	movq	%r14, %r15
140016590:     	andq	$-0x2, %r15
140016594:     	movq	%r15, %rbx
140016597:     	shlq	$0x5, %rbx
14001659b:     	addq	%r11, %rbx
14001659e:     	pxor	%xmm3, %xmm3
1400165a2:     	movq	%r15, %r9
1400165a5:     	movq	%r11, %r12
1400165a8:     	nopl	(%rax,%rax)
1400165b0:     	movdqu	(%r12), %xmm2
1400165b6:     	movdqu	0x20(%r12), %xmm5
1400165bd:     	movdqa	%xmm2, %xmm4
1400165c1:     	punpcklqdq	%xmm5, %xmm4    # xmm4 = xmm4[0],xmm5[0]
1400165c5:     	movdqa	%xmm4, %xmm6
1400165c9:     	pxor	%xmm0, %xmm6
1400165cd:     	psrlq	$0x7, %xmm6
1400165d2:     	psrlq	$0x6, %xmm4
1400165d7:     	por	%xmm6, %xmm4
1400165db:     	pand	%xmm1, %xmm4
1400165df:     	paddq	%xmm3, %xmm4
1400165e3:     	movdqu	0x10(%r12), %xmm3
1400165ea:     	movdqu	0x30(%r12), %xmm6
1400165f1:     	punpckhqdq	%xmm5, %xmm2    # xmm2 = xmm2[1],xmm5[1]
1400165f5:     	movdqa	%xmm3, %xmm5
1400165f9:     	punpcklqdq	%xmm6, %xmm5    # xmm5 = xmm5[0],xmm6[0]
1400165fd:     	punpckhqdq	%xmm6, %xmm3    # xmm3 = xmm3[1],xmm6[1]
140016601:     	movdqa	%xmm2, %xmm6
140016605:     	pxor	%xmm0, %xmm6
140016609:     	psrlq	$0x7, %xmm6
14001660e:     	psrlq	$0x6, %xmm2
140016613:     	por	%xmm6, %xmm2
140016617:     	pand	%xmm1, %xmm2
14001661b:     	movdqa	%xmm5, %xmm6
14001661f:     	pxor	%xmm0, %xmm6
140016623:     	psrlq	$0x7, %xmm6
140016628:     	psrlq	$0x6, %xmm5
14001662d:     	por	%xmm6, %xmm5
140016631:     	pand	%xmm1, %xmm5
140016635:     	paddq	%xmm2, %xmm5
140016639:     	paddq	%xmm4, %xmm5
14001663d:     	movdqa	%xmm3, %xmm2
140016641:     	pxor	%xmm0, %xmm2
140016645:     	psrlq	$0x7, %xmm2
14001664a:     	psrlq	$0x6, %xmm3
14001664f:     	por	%xmm2, %xmm3
140016653:     	pand	%xmm1, %xmm3
140016657:     	paddq	%xmm5, %xmm3
14001665b:     	addq	$0x40, %r12
14001665f:     	addq	$-0x2, %r9
140016663:     	jne	0x1400165b0 <.text+0x155b0>
140016669:     	pshufd	$0xee, %xmm3, %xmm2     # xmm2 = xmm3[2,3,2,3]
14001666e:     	paddq	%xmm3, %xmm2
140016672:     	movq	%xmm2, %r9
140016677:     	cmpq	%r15, %r14
14001667a:     	je	0x140016523 <.text+0x15523>
140016680:     	jmp	0x140016688 <.text+0x15688>
140016682:     	xorl	%r9d, %r9d
140016685:     	movq	%r11, %rbx
140016688:     	shlq	$0x5, %rcx
14001668c:     	addq	%r11, %rcx
14001668f:     	nop
140016690:     	movdqu	(%rbx), %xmm2
140016694:     	movdqu	0x10(%rbx), %xmm3
140016699:     	movdqa	%xmm2, %xmm4
14001669d:     	pxor	%xmm0, %xmm4
1400166a1:     	movdqa	%xmm3, %xmm5
1400166a5:     	pxor	%xmm0, %xmm5
1400166a9:     	psrlq	$0x7, %xmm5
1400166ae:     	psrlq	$0x7, %xmm4
1400166b3:     	psrlq	$0x6, %xmm3
1400166b8:     	por	%xmm5, %xmm3
1400166bc:     	psrlq	$0x6, %xmm2
1400166c1:     	por	%xmm4, %xmm2
1400166c5:     	pand	%xmm1, %xmm3
1400166c9:     	pand	%xmm1, %xmm2
1400166cd:     	paddq	%xmm3, %xmm2
1400166d1:     	pshufd	$0xee, %xmm2, %xmm3     # xmm3 = xmm2[2,3,2,3]
1400166d6:     	paddq	%xmm2, %xmm3
1400166da:     	movq	%xmm3, %r14
1400166df:     	addq	%r14, %r9
1400166e2:     	addq	$0x20, %rbx
1400166e6:     	cmpq	%rcx, %rbx
1400166e9:     	jne	0x140016690 <.text+0x15690>
1400166eb:     	jmp	0x140016523 <.text+0x15523>
1400166f0:     	andl	$0xfc, %esi
1400166f6:     	movq	(%r11,%rsi,8), %rcx
1400166fa:     	movq	%rcx, %rax
1400166fd:     	notq	%rax
140016700:     	shrq	$0x7, %rax
140016704:     	shrq	$0x6, %rcx
140016708:     	orq	%rax, %rcx
14001670b:     	movabsq	$0x101010101010101, %rax # imm = 0x101010101010101
140016715:     	andq	%rax, %rcx
140016718:     	cmpl	$0x1, %ebx
14001671b:     	je	0x14001675a <.text+0x1575a>
14001671d:     	movq	0x8(%r11,%rsi,8), %r8
140016722:     	movq	%r8, %rdi
140016725:     	notq	%rdi
140016728:     	shrq	$0x7, %rdi
14001672c:     	shrq	$0x6, %r8
140016730:     	orq	%rdi, %r8
140016733:     	andq	%rax, %r8
140016736:     	addq	%r8, %rcx
140016739:     	cmpl	$0x2, %ebx
14001673c:     	je	0x14001675a <.text+0x1575a>
14001673e:     	movq	0x10(%r11,%rsi,8), %r8
140016743:     	movq	%r8, %r11
140016746:     	notq	%r11
140016749:     	shrq	$0x7, %r11
14001674d:     	shrq	$0x6, %r8
140016751:     	orq	%r11, %r8
140016754:     	andq	%rax, %r8
140016757:     	addq	%r8, %rcx
14001675a:     	andq	%rcx, %r10
14001675d:     	shrq	$0x8, %rcx
140016761:     	movabsq	$0x700ff00ff00ff, %rax  # imm = 0x700FF00FF00FF
14001676b:     	andq	%rcx, %rax
14001676e:     	addq	%r10, %rax
140016771:     	imulq	%rdx, %rax
140016775:     	shrq	$0x30, %rax
140016779:     	addq	%r9, %rax
14001677c:     	movaps	(%rsp), %xmm6
140016780:     	addq	$0x18, %rsp
140016784:     	popq	%rbx
140016785:     	popq	%rdi
140016786:     	popq	%rsi
140016787:     	popq	%r12
140016789:     	popq	%r14
14001678b:     	popq	%r15
14001678d:     	retq
14001678e:     	int3
14001678f:     	int3
140016790:     	testq	%rdx, %rdx
140016793:     	je	0x1400167a5 <.text+0x157a5>
140016795:     	cmpq	$0x4, %rdx
140016799:     	jae	0x1400167a8 <.text+0x157a8>
14001679b:     	xorl	%eax, %eax
14001679d:     	xorl	%r8d, %r8d
1400167a0:     	jmp	0x140016840 <.text+0x15840>
1400167a5:     	xorl	%eax, %eax
1400167a7:     	retq
1400167a8:     	movq	%rdx, %r8
1400167ab:     	andq	$-0x4, %r8
1400167af:     	pxor	%xmm0, %xmm0
1400167b3:     	xorl	%eax, %eax
1400167b5:     	movdqa	0x7793(%rip), %xmm2     # 0x14001df50
1400167bd:     	movdqa	0x779b(%rip), %xmm3     # 0x14001df60
1400167c5:     	pxor	%xmm1, %xmm1
1400167c9:     	nopl	(%rax)
1400167d0:     	movzwl	(%rcx,%rax), %r9d
1400167d5:     	movd	%r9d, %xmm4
1400167da:     	movzwl	0x2(%rcx,%rax), %r9d
1400167e0:     	movd	%r9d, %xmm5
1400167e5:     	pcmpgtb	%xmm2, %xmm4
1400167e9:     	punpcklbw	%xmm4, %xmm4    # xmm4 = xmm4[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
1400167ed:     	pshuflw	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3,4,5,6,7]
1400167f2:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
1400167f7:     	pand	%xmm3, %xmm4
1400167fb:     	paddq	%xmm4, %xmm0
1400167ff:     	pcmpgtb	%xmm2, %xmm5
140016803:     	punpcklbw	%xmm5, %xmm5    # xmm5 = xmm5[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
140016807:     	pshuflw	$0xd4, %xmm5, %xmm4     # xmm4 = xmm5[0,1,1,3,4,5,6,7]
14001680c:     	pshufd	$0xd4, %xmm4, %xmm4     # xmm4 = xmm4[0,1,1,3]
140016811:     	pand	%xmm3, %xmm4
140016815:     	paddq	%xmm4, %xmm1
140016819:     	addq	$0x4, %rax
14001681d:     	cmpq	%rax, %r8
140016820:     	jne	0x1400167d0 <.text+0x157d0>
140016822:     	paddq	%xmm0, %xmm1
140016826:     	pshufd	$0xee, %xmm1, %xmm0     # xmm0 = xmm1[2,3,2,3]
14001682b:     	paddq	%xmm1, %xmm0
14001682f:     	movq	%xmm0, %rax
140016834:     	cmpq	%rdx, %r8
140016837:     	je	0x140016857 <.text+0x15857>
140016839:     	nopl	(%rax)
140016840:     	xorl	%r9d, %r9d
140016843:     	cmpb	$-0x40, (%rcx,%r8)
140016848:     	setge	%r9b
14001684c:     	addq	%r9, %rax
14001684f:     	incq	%r8
140016852:     	cmpq	%r8, %rdx
140016855:     	jne	0x140016840 <.text+0x15840>
140016857:     	retq
140016858:     	int3
140016859:     	int3
14001685a:     	int3
14001685b:     	int3
14001685c:     	int3
14001685d:     	int3
14001685e:     	int3
14001685f:     	int3
140016860:     	pushq	%r15
140016862:     	pushq	%r14
140016864:     	pushq	%r13
140016866:     	pushq	%r12
140016868:     	pushq	%rsi
140016869:     	pushq	%rdi
14001686a:     	pushq	%rbp
14001686b:     	pushq	%rbx
14001686c:     	subq	$0x28, %rsp
140016870:     	movq	%r9, %r14
140016873:     	movq	%r8, %rbx
140016876:     	movq	%rdx, %r15
140016879:     	movq	%rcx, %rdi
14001687c:     	movq	0x90(%rsp), %rsi
140016884:     	testq	%rsi, %rsi
140016887:     	je	0x14001690d <.text+0x1590d>
14001688d:     	cmpq	$0x1, %rsi
140016891:     	jne	0x14001693a <.text+0x1593a>
140016897:     	movl	$0x1, %r13d
14001689d:     	xorl	%eax, %eax
14001689f:     	xorl	%r12d, %r12d
1400168a2:     	movl	$0x1, %edx
1400168a7:     	cmpq	%r12, %rax
1400168aa:     	cmovaq	%rax, %r12
1400168ae:     	cmovbeq	%rdx, %r13
1400168b2:     	movq	%rsi, %rbp
1400168b5:     	subq	%r12, %rbp
1400168b8:     	jb	0x140016d6e <.text+0x15d6e>
1400168be:     	movq	%r13, %rdx
1400168c1:     	addq	%r12, %rdx
1400168c4:     	jb	0x140016d82 <.text+0x15d82>
1400168ca:     	cmpq	%rsi, %rdx
1400168cd:     	ja	0x140016d93 <.text+0x15d93>
1400168d3:     	leaq	(%r14,%r13), %rdx
1400168d7:     	movq	%r14, %rcx
1400168da:     	movq	%r12, %r8
1400168dd:     	callq	0x140018bfd <.text+0x17bfd>
1400168e2:     	testl	%eax, %eax
1400168e4:     	je	0x140016a61 <.text+0x15a61>
1400168ea:     	cmpq	%rbp, %r12
1400168ed:     	cmovaq	%r12, %rbp
1400168f1:     	leaq	-0x1(%rsi), %rax
1400168f5:     	movl	%esi, %ecx
1400168f7:     	andl	$0x3, %ecx
1400168fa:     	cmpq	$0x3, %rax
1400168fe:     	jae	0x140016bf3 <.text+0x15bf3>
140016904:     	xorl	%eax, %eax
140016906:     	xorl	%edx, %edx
140016908:     	jmp	0x140016c30 <.text+0x15c30>
14001690d:     	movq	%r15, 0x48(%rdi)
140016911:     	movq	%rbx, 0x50(%rdi)
140016915:     	movq	%r14, 0x58(%rdi)
140016919:     	movq	$0x0, 0x60(%rdi)
140016921:     	xorps	%xmm0, %xmm0
140016924:     	movups	%xmm0, (%rdi)
140016927:     	movq	%rbx, 0x10(%rdi)
14001692b:     	movw	$0x101, 0x18(%rdi)      # imm = 0x101
140016931:     	movb	$0x0, 0x1a(%rdi)
140016935:     	jmp	0x140016d24 <.text+0x15d24>
14001693a:     	movl	$0x1, %r10d
140016940:     	xorl	%edx, %edx
140016942:     	movl	$0x1, %r13d
140016948:     	xorl	%eax, %eax
14001694a:     	movl	$0x1, %r9d
140016950:     	xorl	%r8d, %r8d
140016953:     	jmp	0x14001697c <.text+0x1597c>
140016955:     	nopw	%cs:(%rax,%rax)
140016960:     	leaq	(%r9,%r8), %rcx
140016964:     	incq	%rcx
140016967:     	movq	%rcx, %r13
14001696a:     	subq	%rax, %r13
14001696d:     	xorl	%r8d, %r8d
140016970:     	leaq	(%rcx,%r8), %r10
140016974:     	movq	%rcx, %r9
140016977:     	cmpq	%rsi, %r10
14001697a:     	jae	0x1400169d2 <.text+0x159d2>
14001697c:     	leaq	(%r8,%rax), %rcx
140016980:     	cmpq	%rsi, %rcx
140016983:     	jae	0x140016d38 <.text+0x15d38>
140016989:     	movzbl	(%r14,%rcx), %ecx
14001698e:     	cmpb	%cl, (%r14,%r10)
140016992:     	jb	0x140016960 <.text+0x15960>
140016994:     	jne	0x1400169c0 <.text+0x159c0>
140016996:     	incq	%r8
140016999:     	cmpq	%r13, %r8
14001699c:     	movq	%r8, %r10
14001699f:     	cmoveq	%rdx, %r10
1400169a3:     	cmovneq	%rdx, %r8
1400169a7:     	movq	%r8, %rcx
1400169aa:     	addq	%r9, %rcx
1400169ad:     	movq	%r10, %r8
1400169b0:     	jmp	0x140016970 <.text+0x15970>
1400169b2:     	nopw	%cs:(%rax,%rax)
1400169c0:     	leaq	0x1(%r9), %rcx
1400169c4:     	movl	$0x1, %r13d
1400169ca:     	xorl	%r8d, %r8d
1400169cd:     	movq	%r9, %rax
1400169d0:     	jmp	0x140016970 <.text+0x15970>
1400169d2:     	movl	$0x1, %r11d
1400169d8:     	xorl	%r8d, %r8d
1400169db:     	movl	$0x1, %edx
1400169e0:     	xorl	%r12d, %r12d
1400169e3:     	movl	$0x1, %r10d
1400169e9:     	xorl	%r9d, %r9d
1400169ec:     	jmp	0x140016a10 <.text+0x15a10>
1400169ee:     	nop
1400169f0:     	leaq	(%r10,%r9), %rcx
1400169f4:     	incq	%rcx
1400169f7:     	movq	%rcx, %rdx
1400169fa:     	subq	%r12, %rdx
1400169fd:     	xorl	%r9d, %r9d
140016a00:     	leaq	(%rcx,%r9), %r11
140016a04:     	movq	%rcx, %r10
140016a07:     	cmpq	%rsi, %r11
140016a0a:     	jae	0x1400168a7 <.text+0x158a7>
140016a10:     	leaq	(%r9,%r12), %rcx
140016a14:     	cmpq	%rsi, %rcx
140016a17:     	jae	0x140016d38 <.text+0x15d38>
140016a1d:     	movzbl	(%r14,%rcx), %ecx
140016a22:     	cmpb	%cl, (%r14,%r11)
140016a26:     	ja	0x1400169f0 <.text+0x159f0>
140016a28:     	jne	0x140016a50 <.text+0x15a50>
140016a2a:     	incq	%r9
140016a2d:     	cmpq	%rdx, %r9
140016a30:     	movq	%r9, %r11
140016a33:     	cmoveq	%r8, %r11
140016a37:     	cmovneq	%r8, %r9
140016a3b:     	movq	%r9, %rcx
140016a3e:     	addq	%r10, %rcx
140016a41:     	movq	%r11, %r9
140016a44:     	jmp	0x140016a00 <.text+0x15a00>
140016a46:     	nopw	%cs:(%rax,%rax)
140016a50:     	leaq	0x1(%r10), %rcx
140016a54:     	movl	$0x1, %edx
140016a59:     	xorl	%r9d, %r9d
140016a5c:     	movq	%r10, %r12
140016a5f:     	jmp	0x140016a00 <.text+0x15a00>
140016a61:     	movl	$0x1, %r9d
140016a67:     	xorl	%r8d, %r8d
140016a6a:     	xorl	%r10d, %r10d
140016a6d:     	movl	$0x1, %r11d
140016a73:     	xorl	%edx, %edx
140016a75:     	jmp	0x140016a98 <.text+0x15a98>
140016a77:     	nopw	(%rax,%rax)
140016a80:     	leaq	(%r10,%r11), %rbp
140016a84:     	incq	%rbp
140016a87:     	movq	%rbp, %r9
140016a8a:     	subq	%rdx, %r9
140016a8d:     	xorl	%r10d, %r10d
140016a90:     	movq	%rbp, %r11
140016a93:     	cmpq	%r13, %r9
140016a96:     	je	0x140016b0e <.text+0x15b0e>
140016a98:     	leaq	(%r11,%r10), %rax
140016a9c:     	cmpq	%rsi, %rax
140016a9f:     	jae	0x140016b0e <.text+0x15b0e>
140016aa1:     	movq	%r11, %rax
140016aa4:     	notq	%rax
140016aa7:     	movq	%rsi, %rcx
140016aaa:     	subq	%r10, %rcx
140016aad:     	addq	%rax, %rcx
140016ab0:     	cmpq	%rsi, %rcx
140016ab3:     	jae	0x140016d49 <.text+0x15d49>
140016ab9:     	movq	%r10, %rax
140016abc:     	notq	%rax
140016abf:     	addq	%rsi, %rax
140016ac2:     	subq	%rdx, %rax
140016ac5:     	cmpq	%rsi, %rax
140016ac8:     	jae	0x140016d5a <.text+0x15d5a>
140016ace:     	leaq	0x1(%r11), %rbp
140016ad2:     	movzbl	(%r14,%rax), %eax
140016ad7:     	cmpb	%al, (%r14,%rcx)
140016adb:     	jb	0x140016a80 <.text+0x15a80>
140016add:     	jne	0x140016b00 <.text+0x15b00>
140016adf:     	incq	%r10
140016ae2:     	cmpq	%r9, %r10
140016ae5:     	movq	%r10, %rax
140016ae8:     	cmoveq	%r8, %rax
140016aec:     	cmovneq	%r8, %r10
140016af0:     	movq	%r10, %rbp
140016af3:     	addq	%r11, %rbp
140016af6:     	movq	%rax, %r10
140016af9:     	jmp	0x140016a90 <.text+0x15a90>
140016afb:     	nopl	(%rax,%rax)
140016b00:     	movl	$0x1, %r9d
140016b06:     	xorl	%r10d, %r10d
140016b09:     	movq	%r11, %rdx
140016b0c:     	jmp	0x140016a90 <.text+0x15a90>
140016b0e:     	movq	%r15, 0x20(%rsp)
140016b13:     	movl	$0x1, %r15d
140016b19:     	xorl	%r8d, %r8d
140016b1c:     	xorl	%r11d, %r11d
140016b1f:     	movl	$0x1, %ebp
140016b24:     	xorl	%r9d, %r9d
140016b27:     	jmp	0x140016b48 <.text+0x15b48>
140016b29:     	nopl	(%rax)
140016b30:     	leaq	(%r11,%rbp), %r10
140016b34:     	incq	%r10
140016b37:     	movq	%r10, %r15
140016b3a:     	subq	%r9, %r15
140016b3d:     	xorl	%r11d, %r11d
140016b40:     	movq	%r10, %rbp
140016b43:     	cmpq	%r13, %r15
140016b46:     	je	0x140016bbe <.text+0x15bbe>
140016b48:     	leaq	(%r11,%rbp), %rax
140016b4c:     	cmpq	%rsi, %rax
140016b4f:     	jae	0x140016bbe <.text+0x15bbe>
140016b51:     	movq	%rbp, %rax
140016b54:     	notq	%rax
140016b57:     	movq	%rsi, %rcx
140016b5a:     	subq	%r11, %rcx
140016b5d:     	addq	%rax, %rcx
140016b60:     	cmpq	%rsi, %rcx
140016b63:     	jae	0x140016d49 <.text+0x15d49>
140016b69:     	movq	%r11, %rax
140016b6c:     	notq	%rax
140016b6f:     	addq	%rsi, %rax
140016b72:     	subq	%r9, %rax
140016b75:     	cmpq	%rsi, %rax
140016b78:     	jae	0x140016d5a <.text+0x15d5a>
140016b7e:     	leaq	0x1(%rbp), %r10
140016b82:     	movzbl	(%r14,%rax), %eax
140016b87:     	cmpb	%al, (%r14,%rcx)
140016b8b:     	ja	0x140016b30 <.text+0x15b30>
140016b8d:     	jne	0x140016bb0 <.text+0x15bb0>
140016b8f:     	incq	%r11
140016b92:     	cmpq	%r15, %r11
140016b95:     	movq	%r11, %rax
140016b98:     	cmoveq	%r8, %rax
140016b9c:     	cmovneq	%r8, %r11
140016ba0:     	movq	%r11, %r10
140016ba3:     	addq	%rbp, %r10
140016ba6:     	movq	%rax, %r11
140016ba9:     	jmp	0x140016b40 <.text+0x15b40>
140016bab:     	nopl	(%rax,%rax)
140016bb0:     	movl	$0x1, %r15d
140016bb6:     	xorl	%r11d, %r11d
140016bb9:     	movq	%rbp, %r9
140016bbc:     	jmp	0x140016b40 <.text+0x15b40>
140016bbe:     	cmpq	%r9, %rdx
140016bc1:     	cmovaq	%rdx, %r9
140016bc5:     	movq	%rsi, %rcx
140016bc8:     	subq	%r9, %rcx
140016bcb:     	testq	%r13, %r13
140016bce:     	je	0x140016c6a <.text+0x15c6a>
140016bd4:     	movl	%r13d, %edx
140016bd7:     	andl	$0x3, %edx
140016bda:     	cmpq	$0x4, %r13
140016bde:     	movq	0x20(%rsp), %r15
140016be3:     	jae	0x140016c7c <.text+0x15c7c>
140016be9:     	xorl	%eax, %eax
140016beb:     	xorl	%r9d, %r9d
140016bee:     	jmp	0x140016cc0 <.text+0x15cc0>
140016bf3:     	movq	%rsi, %r8
140016bf6:     	andq	$-0x4, %r8
140016bfa:     	xorl	%eax, %eax
140016bfc:     	xorl	%edx, %edx
140016bfe:     	nop
140016c00:     	movzbl	(%r14,%rdx), %r9d
140016c05:     	movzbl	0x1(%r14,%rdx), %r10d
140016c0b:     	btsq	%r9, %rax
140016c0f:     	btsq	%r10, %rax
140016c13:     	movzbl	0x2(%r14,%rdx), %r9d
140016c19:     	btsq	%r9, %rax
140016c1d:     	movzbl	0x3(%r14,%rdx), %r9d
140016c23:     	btsq	%r9, %rax
140016c27:     	addq	$0x4, %rdx
140016c2b:     	cmpq	%rdx, %r8
140016c2e:     	jne	0x140016c00 <.text+0x15c00>
140016c30:     	testq	%rcx, %rcx
140016c33:     	je	0x140016c51 <.text+0x15c51>
140016c35:     	addq	%r14, %rdx
140016c38:     	xorl	%r8d, %r8d
140016c3b:     	nopl	(%rax,%rax)
140016c40:     	movzbl	(%rdx,%r8), %r9d
140016c45:     	btsq	%r9, %rax
140016c49:     	incq	%r8
140016c4c:     	cmpq	%r8, %rcx
140016c4f:     	jne	0x140016c40 <.text+0x15c40>
140016c51:     	incq	%rbp
140016c54:     	movq	$-0x1, %r8
140016c5b:     	movq	$-0x1, %rdx
140016c62:     	movq	%rbp, %r13
140016c65:     	movq	%r12, %rcx
140016c68:     	jmp	0x140016ce9 <.text+0x15ce9>
140016c6a:     	xorl	%r8d, %r8d
140016c6d:     	movq	%rsi, %rdx
140016c70:     	xorl	%eax, %eax
140016c72:     	xorl	%r13d, %r13d
140016c75:     	movq	0x20(%rsp), %r15
140016c7a:     	jmp	0x140016ce9 <.text+0x15ce9>
140016c7c:     	movq	%r13, %r8
140016c7f:     	andq	$-0x4, %r8
140016c83:     	xorl	%eax, %eax
140016c85:     	xorl	%r9d, %r9d
140016c88:     	nopl	(%rax,%rax)
140016c90:     	movzbl	(%r14,%r9), %r10d
140016c95:     	movzbl	0x1(%r14,%r9), %r11d
140016c9b:     	btsq	%r10, %rax
140016c9f:     	btsq	%r11, %rax
140016ca3:     	movzbl	0x2(%r14,%r9), %r10d
140016ca9:     	btsq	%r10, %rax
140016cad:     	movzbl	0x3(%r14,%r9), %r10d
140016cb3:     	btsq	%r10, %rax
140016cb7:     	addq	$0x4, %r9
140016cbb:     	cmpq	%r9, %r8
140016cbe:     	jne	0x140016c90 <.text+0x15c90>
140016cc0:     	testq	%rdx, %rdx
140016cc3:     	je	0x140016ce3 <.text+0x15ce3>
140016cc5:     	addq	%r14, %r9
140016cc8:     	xorl	%r8d, %r8d
140016ccb:     	xorl	%r10d, %r10d
140016cce:     	nop
140016cd0:     	movzbl	(%r9,%r10), %r11d
140016cd5:     	btsq	%r11, %rax
140016cd9:     	incq	%r10
140016cdc:     	cmpq	%r10, %rdx
140016cdf:     	jne	0x140016cd0 <.text+0x15cd0>
140016ce1:     	jmp	0x140016ce6 <.text+0x15ce6>
140016ce3:     	xorl	%r8d, %r8d
140016ce6:     	movq	%rsi, %rdx
140016ce9:     	movq	%r15, 0x48(%rdi)
140016ced:     	movq	%rbx, 0x50(%rdi)
140016cf1:     	movq	%r14, 0x58(%rdi)
140016cf5:     	movq	%rsi, 0x60(%rdi)
140016cf9:     	movq	$0x1, (%rdi)
140016d00:     	movq	%r12, 0x8(%rdi)
140016d04:     	movq	%rcx, 0x10(%rdi)
140016d08:     	movq	%r13, 0x18(%rdi)
140016d0c:     	movq	%rax, 0x20(%rdi)
140016d10:     	movq	$0x0, 0x28(%rdi)
140016d18:     	movq	%rbx, 0x30(%rdi)
140016d1c:     	movq	%r8, 0x38(%rdi)
140016d20:     	movq	%rdx, 0x40(%rdi)
140016d24:     	movq	%rdi, %rax
140016d27:     	addq	$0x28, %rsp
140016d2b:     	popq	%rbx
140016d2c:     	popq	%rbp
140016d2d:     	popq	%rdi
140016d2e:     	popq	%rsi
140016d2f:     	popq	%r12
140016d31:     	popq	%r13
140016d33:     	popq	%r14
140016d35:     	popq	%r15
140016d37:     	retq
140016d38:     	leaq	0x79f9(%rip), %r8       # 0x14001e738
140016d3f:     	movq	%rsi, %rdx
140016d42:     	callq	0x140019920 <.text+0x18920>
140016d47:     	ud2
140016d49:     	leaq	0x7a00(%rip), %r8       # 0x14001e750
140016d50:     	movq	%rsi, %rdx
140016d53:     	callq	0x140019920 <.text+0x18920>
140016d58:     	ud2
140016d5a:     	leaq	0x7a07(%rip), %r8       # 0x14001e768
140016d61:     	movq	%rax, %rcx
140016d64:     	movq	%rsi, %rdx
140016d67:     	callq	0x140019920 <.text+0x18920>
140016d6c:     	ud2
140016d6e:     	leaq	0x7993(%rip), %r8       # 0x14001e708
140016d75:     	movq	%r12, %rcx
140016d78:     	movq	%rsi, %rdx
140016d7b:     	callq	0x140019cd0 <.text+0x18cd0>
140016d80:     	ud2
140016d82:     	leaq	0x7997(%rip), %r8       # 0x14001e720
140016d89:     	movq	%r13, %rcx
140016d8c:     	callq	0x140019d50 <.text+0x18d50>
140016d91:     	ud2
140016d93:     	leaq	0x7986(%rip), %r8       # 0x14001e720
140016d9a:     	movq	%rdx, %rcx
140016d9d:     	movq	%rsi, %rdx
140016da0:     	callq	0x140019cd0 <.text+0x18cd0>
140016da5:     	ud2
140016da7:     	int3
140016da8:     	int3
140016da9:     	int3
140016daa:     	int3
140016dab:     	int3
140016dac:     	int3
140016dad:     	int3
140016dae:     	int3
140016daf:     	int3
140016db0:     	pushq	%rsi
140016db1:     	subq	$0x100, %rsp            # imm = 0x100
140016db8:     	movq	0x130(%rsp), %r10
140016dc0:     	movq	%r8, 0xe8(%rsp)
140016dc8:     	movq	%r9, 0xf0(%rsp)
140016dd0:     	cmpq	$0x101, %rdx            # imm = 0x101
140016dd7:     	jb	0x140016e25 <.text+0x15e25>
140016dd9:     	movl	$0x100, %eax            # imm = 0x100
140016dde:     	cmpb	$-0x41, 0x100(%rcx)
140016de5:     	jg	0x140016e08 <.text+0x15e08>
140016de7:     	movl	$0xff, %eax
140016dec:     	cmpb	$-0x41, 0xff(%rcx)
140016df3:     	jg	0x140016e08 <.text+0x15e08>
140016df5:     	movl	$0xfe, %eax
140016dfa:     	cmpb	$-0x41, 0xfe(%rcx)
140016e01:     	jg	0x140016e08 <.text+0x15e08>
140016e03:     	movl	$0xfd, %eax
140016e08:     	cmpq	%rdx, %rax
140016e0b:     	jae	0x140016e53 <.text+0x15e53>
140016e0d:     	cmpb	$-0x41, (%rcx,%rax)
140016e11:     	jg	0x140016e55 <.text+0x15e55>
140016e13:     	movq	%r10, 0x20(%rsp)
140016e18:     	xorl	%r8d, %r8d
140016e1b:     	movq	%rax, %r9
140016e1e:     	callq	0x140019e10 <.text+0x18e10>
140016e23:     	ud2
140016e25:     	movq	%rcx, 0x38(%rsp)
140016e2a:     	movq	%rdx, 0x40(%rsp)
140016e2f:     	leaq	0x717a(%rip), %rax      # 0x14001dfb0
140016e36:     	xorl	%r11d, %r11d
140016e39:     	movq	%rax, 0xc8(%rsp)
140016e41:     	movq	%r11, 0xd0(%rsp)
140016e49:     	cmpq	%rdx, %r8
140016e4c:     	jbe	0x140016e98 <.text+0x15e98>
140016e4e:     	jmp	0x140016f52 <.text+0x15f52>
140016e53:     	jne	0x140016e13 <.text+0x15e13>
140016e55:     	movq	%rcx, 0x38(%rsp)
140016e5a:     	movq	%rax, 0x40(%rsp)
140016e5f:     	xorl	%r11d, %r11d
140016e62:     	cmpq	%rdx, %rax
140016e65:     	setb	%r11b
140016e69:     	leaq	0x7910(%rip), %rsi      # 0x14001e780
140016e70:     	leaq	0x7139(%rip), %rax      # 0x14001dfb0
140016e77:     	cmovbq	%rsi, %rax
140016e7b:     	leaq	(%r11,%r11,4), %r11
140016e7f:     	movq	%rax, 0xc8(%rsp)
140016e87:     	movq	%r11, 0xd0(%rsp)
140016e8f:     	cmpq	%rdx, %r8
140016e92:     	ja	0x140016f52 <.text+0x15f52>
140016e98:     	cmpq	%rdx, %r9
140016e9b:     	ja	0x140016f52 <.text+0x15f52>
140016ea1:     	cmpq	%r9, %r8
140016ea4:     	jbe	0x140016ff1 <.text+0x15ff1>
140016eaa:     	leaq	0xe8(%rsp), %rax
140016eb2:     	movq	%rax, 0x78(%rsp)
140016eb7:     	leaq	0xf52(%rip), %rax       # 0x140017e10 <.text+0x16e10>
140016ebe:     	movq	%rax, 0x80(%rsp)
140016ec6:     	leaq	0xf0(%rsp), %rcx
140016ece:     	movq	%rcx, 0x88(%rsp)
140016ed6:     	movq	%rax, 0x90(%rsp)
140016ede:     	leaq	0x38(%rsp), %rax
140016ee3:     	movq	%rax, 0x98(%rsp)
140016eeb:     	leaq	0x105e(%rip), %rax      # 0x140017f50 <.text+0x16f50>
140016ef2:     	movq	%rax, 0xa0(%rsp)
140016efa:     	leaq	0xc8(%rsp), %rcx
140016f02:     	movq	%rcx, 0xa8(%rsp)
140016f0a:     	movq	%rax, 0xb0(%rsp)
140016f12:     	leaq	0x788f(%rip), %rax      # 0x14001e7a8
140016f19:     	movq	%rax, 0x48(%rsp)
140016f1e:     	movq	$0x4, 0x50(%rsp)
140016f27:     	movq	$0x0, 0x68(%rsp)
140016f30:     	leaq	0x78(%rsp), %rax
140016f35:     	movq	%rax, 0x58(%rsp)
140016f3a:     	movq	$0x4, 0x60(%rsp)
140016f43:     	leaq	0x48(%rsp), %rcx
140016f48:     	movq	%r10, %rdx
140016f4b:     	callq	0x1400197d0 <.text+0x187d0>
140016f50:     	ud2
140016f52:     	cmpq	%rdx, %r8
140016f55:     	cmovaq	%r8, %r9
140016f59:     	movq	%r9, 0xd8(%rsp)
140016f61:     	leaq	0xd8(%rsp), %rax
140016f69:     	movq	%rax, 0x78(%rsp)
140016f6e:     	leaq	0xe9b(%rip), %rax       # 0x140017e10 <.text+0x16e10>
140016f75:     	movq	%rax, 0x80(%rsp)
140016f7d:     	leaq	0x38(%rsp), %rax
140016f82:     	movq	%rax, 0x88(%rsp)
140016f8a:     	leaq	0xfbf(%rip), %rax       # 0x140017f50 <.text+0x16f50>
140016f91:     	movq	%rax, 0x90(%rsp)
140016f99:     	leaq	0xc8(%rsp), %rcx
140016fa1:     	movq	%rcx, 0x98(%rsp)
140016fa9:     	movq	%rax, 0xa0(%rsp)
140016fb1:     	leaq	0x78d8(%rip), %rax      # 0x14001e890
140016fb8:     	movq	%rax, 0x48(%rsp)
140016fbd:     	movq	$0x3, 0x50(%rsp)
140016fc6:     	movq	$0x0, 0x68(%rsp)
140016fcf:     	leaq	0x78(%rsp), %rax
140016fd4:     	movq	%rax, 0x58(%rsp)
140016fd9:     	movq	$0x3, 0x60(%rsp)
140016fe2:     	leaq	0x48(%rsp), %rcx
140016fe7:     	movq	%r10, %rdx
140016fea:     	callq	0x1400197d0 <.text+0x187d0>
140016fef:     	ud2
140016ff1:     	testq	%r8, %r8
140016ff4:     	je	0x140017002 <.text+0x16002>
140016ff6:     	cmpq	%rdx, %r8
140016ff9:     	jae	0x140017002 <.text+0x16002>
140016ffb:     	cmpb	$-0x40, (%rcx,%r8)
140017000:     	jl	0x140017005 <.text+0x16005>
140017002:     	movq	%r9, %r8
140017005:     	movq	%r8, 0xf8(%rsp)
14001700d:     	movq	%rdx, %rax
140017010:     	cmpq	%rdx, %r8
140017013:     	jae	0x1400170ad <.text+0x160ad>
140017019:     	xorl	%r9d, %r9d
14001701c:     	movq	%r8, %rax
14001701f:     	subq	$0x3, %rax
140017023:     	cmovaeq	%rax, %r9
140017027:     	leaq	0x1(%r8), %rax
14001702b:     	cmpq	%rax, %r9
14001702e:     	jbe	0x140017044 <.text+0x16044>
140017030:     	leaq	0x78a9(%rip), %r8       # 0x14001e8e0
140017037:     	movq	%r9, %rcx
14001703a:     	movq	%rax, %rdx
14001703d:     	callq	0x140019d50 <.text+0x18d50>
140017042:     	ud2
140017044:     	je	0x1400170aa <.text+0x160aa>
140017046:     	leaq	(%rcx,%r9), %r11
14001704a:     	addq	%rcx, %rax
14001704d:     	subq	%r11, %rax
140017050:     	cmpb	$-0x41, (%rcx,%r8)
140017055:     	jle	0x14001705c <.text+0x1605c>
140017057:     	decq	%rax
14001705a:     	jmp	0x1400170aa <.text+0x160aa>
14001705c:     	cmpq	%r8, %r9
14001705f:     	je	0x1400170aa <.text+0x160aa>
140017061:     	addq	%rcx, %r8
140017064:     	cmpb	$-0x41, -0x1(%r8)
140017069:     	jle	0x140017071 <.text+0x16071>
14001706b:     	addq	$-0x2, %rax
14001706f:     	jmp	0x1400170aa <.text+0x160aa>
140017071:     	leaq	-0x1(%r8), %rsi
140017075:     	cmpq	%rsi, %r11
140017078:     	je	0x1400170aa <.text+0x160aa>
14001707a:     	cmpb	$-0x41, -0x2(%r8)
14001707f:     	jle	0x140017087 <.text+0x16087>
140017081:     	addq	$-0x3, %rax
140017085:     	jmp	0x1400170aa <.text+0x160aa>
140017087:     	leaq	-0x2(%r8), %rsi
14001708b:     	cmpq	%rsi, %r11
14001708e:     	je	0x1400170aa <.text+0x160aa>
140017090:     	cmpb	$-0x41, -0x3(%r8)
140017095:     	jle	0x14001709d <.text+0x1609d>
140017097:     	addq	$-0x4, %rax
14001709b:     	jmp	0x1400170aa <.text+0x160aa>
14001709d:     	addq	$-0x3, %r8
1400170a1:     	cmpq	%r8, %r11
1400170a4:     	je	0x1400170aa <.text+0x160aa>
1400170a6:     	addq	$-0x5, %rax
1400170aa:     	addq	%r9, %rax
1400170ad:     	testq	%rax, %rax
1400170b0:     	jne	0x1400170b7 <.text+0x160b7>
1400170b2:     	movq	%rdx, %r8
1400170b5:     	jmp	0x1400170d9 <.text+0x160d9>
1400170b7:     	movq	%rdx, %r8
1400170ba:     	subq	%rax, %r8
1400170bd:     	jbe	0x1400170d7 <.text+0x160d7>
1400170bf:     	cmpb	$-0x41, (%rcx,%rax)
1400170c3:     	jg	0x1400170d9 <.text+0x160d9>
1400170c5:     	movq	%r10, 0x20(%rsp)
1400170ca:     	movq	%rax, %r8
1400170cd:     	movq	%rdx, %r9
1400170d0:     	callq	0x140019e10 <.text+0x18e10>
1400170d5:     	ud2
1400170d7:     	jne	0x1400170c5 <.text+0x160c5>
1400170d9:     	testq	%r8, %r8
1400170dc:     	jne	0x1400170f4 <.text+0x160f4>
1400170de:     	leaq	0x6ecb(%rip), %rcx      # 0x14001dfb0
1400170e5:     	movl	$0x2b, %edx
1400170ea:     	movq	%r10, %r8
1400170ed:     	callq	0x140019880 <.text+0x18880>
1400170f2:     	ud2
1400170f4:     	movzbl	(%rcx,%rax), %r9d
1400170f9:     	movzbl	%r9b, %r8d
1400170fd:     	testb	%r8b, %r8b
140017100:     	js	0x140017111 <.text+0x16111>
140017102:     	movl	%r8d, 0x34(%rsp)
140017107:     	movl	$0x1, %edx
14001710c:     	jmp	0x14001719f <.text+0x1619f>
140017111:     	movl	%r8d, %edx
140017114:     	andl	$0x1f, %edx
140017117:     	movzbl	0x1(%rcx,%rax), %r11d
14001711d:     	andl	$0x3f, %r11d
140017121:     	cmpb	$-0x21, %r8b
140017125:     	jbe	0x14001715f <.text+0x1615f>
140017127:     	movzbl	0x2(%rcx,%rax), %r8d
14001712d:     	shll	$0x6, %r11d
140017131:     	andl	$0x3f, %r8d
140017135:     	orl	%r11d, %r8d
140017138:     	cmpb	$-0x10, %r9b
14001713c:     	jb	0x140017169 <.text+0x16169>
14001713e:     	movzbl	0x3(%rcx,%rax), %ecx
140017143:     	andl	$0x7, %edx
140017146:     	shll	$0x12, %edx
140017149:     	shll	$0x6, %r8d
14001714d:     	andl	$0x3f, %ecx
140017150:     	orl	%r8d, %ecx
140017153:     	orl	%edx, %ecx
140017155:     	cmpl	$0x110000, %ecx         # imm = 0x110000
14001715b:     	je	0x1400170de <.text+0x160de>
14001715d:     	jmp	0x140017172 <.text+0x16172>
14001715f:     	shll	$0x6, %edx
140017162:     	orl	%r11d, %edx
140017165:     	movl	%edx, %ecx
140017167:     	jmp	0x140017172 <.text+0x16172>
140017169:     	shll	$0xc, %edx
14001716c:     	orl	%edx, %r8d
14001716f:     	movl	%r8d, %ecx
140017172:     	movl	%ecx, 0x34(%rsp)
140017176:     	movl	$0x1, %edx
14001717b:     	cmpl	$0x80, %ecx
140017181:     	jb	0x14001719f <.text+0x1619f>
140017183:     	movl	$0x2, %edx
140017188:     	cmpl	$0x800, %ecx            # imm = 0x800
14001718e:     	jb	0x14001719f <.text+0x1619f>
140017190:     	cmpl	$0x10000, %ecx          # imm = 0x10000
140017196:     	movl	$0x4, %edx
14001719b:     	sbbq	$0x0, %rdx
14001719f:     	addq	%rax, %rdx
1400171a2:     	movq	%rax, 0xd8(%rsp)
1400171aa:     	movq	%rdx, 0xe0(%rsp)
1400171b2:     	leaq	0xf8(%rsp), %rax
1400171ba:     	movq	%rax, 0x78(%rsp)
1400171bf:     	leaq	0xc4a(%rip), %rax       # 0x140017e10 <.text+0x16e10>
1400171c6:     	movq	%rax, 0x80(%rsp)
1400171ce:     	leaq	0x34(%rsp), %rax
1400171d3:     	movq	%rax, 0x88(%rsp)
1400171db:     	leaq	-0x1682(%rip), %rax     # 0x140015b60 <.text+0x14b60>
1400171e2:     	movq	%rax, 0x90(%rsp)
1400171ea:     	leaq	0xd8(%rsp), %rax
1400171f2:     	movq	%rax, 0x98(%rsp)
1400171fa:     	leaq	-0x34c1(%rip), %rax     # 0x140013d40 <.text+0x12d40>
140017201:     	movq	%rax, 0xa0(%rsp)
140017209:     	leaq	0x38(%rsp), %rax
14001720e:     	movq	%rax, 0xa8(%rsp)
140017216:     	leaq	0xd33(%rip), %rax       # 0x140017f50 <.text+0x16f50>
14001721d:     	movq	%rax, 0xb0(%rsp)
140017225:     	leaq	0xc8(%rsp), %rcx
14001722d:     	movq	%rcx, 0xb8(%rsp)
140017235:     	movq	%rax, 0xc0(%rsp)
14001723d:     	leaq	0x75e4(%rip), %rax      # 0x14001e828
140017244:     	movq	%rax, 0x48(%rsp)
140017249:     	movq	$0x5, 0x50(%rsp)
140017252:     	movq	$0x0, 0x68(%rsp)
14001725b:     	leaq	0x78(%rsp), %rax
140017260:     	movq	%rax, 0x58(%rsp)
140017265:     	movq	$0x5, 0x60(%rsp)
14001726e:     	leaq	0x48(%rsp), %rcx
140017273:     	movq	%r10, %rdx
140017276:     	callq	0x1400197d0 <.text+0x187d0>
14001727b:     	ud2
14001727d:     	int3
14001727e:     	int3
14001727f:     	int3
140017280:     	pushq	%r14
140017282:     	pushq	%rsi
140017283:     	pushq	%rdi
140017284:     	pushq	%rbx
140017285:     	subq	$0x28, %rsp
140017289:     	testq	%r8, %r8
14001728c:     	je	0x1400172fa <.text+0x162fa>
14001728e:     	movq	%rdx, %rax
140017291:     	movq	0x70(%rsp), %rdx
140017296:     	movl	%ecx, %esi
140017298:     	shrl	$0x8, %esi
14001729b:     	leaq	(%rax,%r8,2), %r8
14001729f:     	xorl	%r11d, %r11d
1400172a2:     	movq	%rax, %rbx
1400172a5:     	movzbl	0x1(%rax), %edi
1400172a9:     	addq	$0x2, %rax
1400172ad:     	leaq	(%r11,%rdi), %r10
1400172b1:     	cmpb	%sil, (%rbx)
1400172b4:     	jne	0x1400172f0 <.text+0x162f0>
1400172b6:     	cmpq	%r10, %r11
1400172b9:     	ja	0x140017393 <.text+0x16393>
1400172bf:     	cmpq	%rdx, %r10
1400172c2:     	ja	0x1400173a7 <.text+0x163a7>
1400172c8:     	addq	%r9, %r11
1400172cb:     	xorl	%ebx, %ebx
1400172cd:     	nopl	(%rax)
1400172d0:     	cmpq	%rbx, %rdi
1400172d3:     	je	0x1400172f2 <.text+0x162f2>
1400172d5:     	leaq	0x1(%rbx), %r14
1400172d9:     	cmpb	%cl, (%r11,%rbx)
1400172dd:     	movq	%r14, %rbx
1400172e0:     	jne	0x1400172d0 <.text+0x162d0>
1400172e2:     	jmp	0x140017367 <.text+0x16367>
1400172e7:     	nopw	(%rax,%rax)
1400172f0:     	ja	0x1400172fa <.text+0x162fa>
1400172f2:     	movq	%r10, %r11
1400172f5:     	cmpq	%r8, %rax
1400172f8:     	jne	0x1400172a2 <.text+0x162a2>
1400172fa:     	movq	0x80(%rsp), %rdx
140017302:     	testq	%rdx, %rdx
140017305:     	je	0x14001736b <.text+0x1636b>
140017307:     	movq	0x78(%rsp), %r8
14001730c:     	addq	%r8, %rdx
14001730f:     	movzwl	%cx, %ecx
140017312:     	movb	$0x1, %al
140017314:     	nopw	%cs:(%rax,%rax)
140017320:     	leaq	0x1(%r8), %r10
140017324:     	movzbl	(%r8), %r9d
140017328:     	testb	%r9b, %r9b
14001732b:     	js	0x140017340 <.text+0x16340>
14001732d:     	movq	%r10, %r8
140017330:     	subl	%r9d, %ecx
140017333:     	jns	0x14001735e <.text+0x1635e>
140017335:     	jmp	0x14001736d <.text+0x1636d>
140017337:     	nopw	(%rax,%rax)
140017340:     	cmpq	%rdx, %r10
140017343:     	je	0x140017379 <.text+0x16379>
140017345:     	movzbl	0x1(%r8), %r10d
14001734a:     	addq	$0x2, %r8
14001734e:     	andl	$0x7f, %r9d
140017352:     	shll	$0x8, %r9d
140017356:     	orl	%r10d, %r9d
140017359:     	subl	%r9d, %ecx
14001735c:     	js	0x14001736d <.text+0x1636d>
14001735e:     	xorb	$0x1, %al
140017360:     	cmpq	%rdx, %r8
140017363:     	jne	0x140017320 <.text+0x16320>
140017365:     	jmp	0x14001736d <.text+0x1636d>
140017367:     	xorl	%eax, %eax
140017369:     	jmp	0x14001736d <.text+0x1636d>
14001736b:     	movb	$0x1, %al
14001736d:     	andb	$0x1, %al
14001736f:     	addq	$0x28, %rsp
140017373:     	popq	%rbx
140017374:     	popq	%rdi
140017375:     	popq	%rsi
140017376:     	popq	%r14
140017378:     	retq
140017379:     	leaq	0x6c30(%rip), %rcx      # 0x14001dfb0
140017380:     	leaq	0x7599(%rip), %r8       # 0x14001e920
140017387:     	movl	$0x2b, %edx
14001738c:     	callq	0x140019880 <.text+0x18880>
140017391:     	ud2
140017393:     	leaq	0x759e(%rip), %r8       # 0x14001e938
14001739a:     	movq	%r11, %rcx
14001739d:     	movq	%r10, %rdx
1400173a0:     	callq	0x140019d50 <.text+0x18d50>
1400173a5:     	ud2
1400173a7:     	leaq	0x758a(%rip), %r8       # 0x14001e938
1400173ae:     	movq	%r10, %rcx
1400173b1:     	callq	0x140019cd0 <.text+0x18cd0>
1400173b6:     	ud2
1400173b8:     	int3
1400173b9:     	int3
1400173ba:     	int3
1400173bb:     	int3
1400173bc:     	int3
1400173bd:     	int3
1400173be:     	int3
1400173bf:     	int3
1400173c0:     	subq	$0x38, %rsp
1400173c4:     	cmpl	$0x20, %ecx
1400173c7:     	jae	0x1400173d0 <.text+0x163d0>
1400173c9:     	xorl	%eax, %eax
1400173cb:     	addq	$0x38, %rsp
1400173cf:     	retq
1400173d0:     	movb	$0x1, %al
1400173d2:     	cmpl	$0x7f, %ecx
1400173d5:     	jae	0x1400173dc <.text+0x163dc>
1400173d7:     	addq	$0x38, %rsp
1400173db:     	retq
1400173dc:     	cmpl	$0x10000, %ecx          # imm = 0x10000
1400173e2:     	jae	0x140017421 <.text+0x16421>
1400173e4:     	leaq	0x79b2(%rip), %rax      # 0x14001ed9d
1400173eb:     	movq	%rax, 0x28(%rsp)
1400173f0:     	movq	$0x12f, 0x30(%rsp)      # imm = 0x12F
1400173f9:     	movq	$0x11f, 0x20(%rsp)      # imm = 0x11F
140017402:     	leaq	0x7825(%rip), %rdx      # 0x14001ec2e
140017409:     	leaq	0x786e(%rip), %r9       # 0x14001ec7e
140017410:     	movl	$0x28, %r8d
140017416:     	callq	0x140017280 <.text+0x16280>
14001741b:     	nop
14001741c:     	addq	$0x38, %rsp
140017420:     	retq
140017421:     	cmpl	$0x20000, %ecx          # imm = 0x20000
140017427:     	jae	0x140017466 <.text+0x16466>
140017429:     	leaq	0x763c(%rip), %rax      # 0x14001ea6c
140017430:     	movq	%rax, 0x28(%rsp)
140017435:     	movq	$0x1c2, 0x30(%rsp)      # imm = 0x1C2
14001743e:     	movq	$0xc4, 0x20(%rsp)
140017447:     	leaq	0x7502(%rip), %rdx      # 0x14001e950
14001744e:     	leaq	0x7553(%rip), %r9       # 0x14001e9a8
140017455:     	movl	$0x2c, %r8d
14001745b:     	callq	0x140017280 <.text+0x16280>
140017460:     	nop
140017461:     	addq	$0x38, %rsp
140017465:     	retq
140017466:     	movd	%ecx, %xmm0
14001746a:     	pshufd	$0x0, %xmm0, %xmm0      # xmm0 = xmm0[0,0,0,0]
14001746f:     	paddd	0x6b09(%rip), %xmm0     # 0x14001df80
140017477:     	pxor	0x6b11(%rip), %xmm0     # 0x14001df90
14001747f:     	movdqa	0x6b19(%rip), %xmm1     # 0x14001dfa0
140017487:     	pcmpgtd	%xmm0, %xmm1
14001748b:     	movmskps	%xmm1, %edx
14001748e:     	xorl	%eax, %eax
140017490:     	testl	%edx, %edx
140017492:     	jne	0x1400173d7 <.text+0x163d7>
140017498:     	leal	-0x3134b(%rcx), %edx
14001749e:     	cmpl	$0x5, %edx
1400174a1:     	jb	0x1400173d7 <.text+0x163d7>
1400174a7:     	leal	-0x323b0(%rcx), %edx
1400174ad:     	cmpl	$0xadd50, %edx          # imm = 0xADD50
1400174b3:     	jb	0x1400173d7 <.text+0x163d7>
1400174b9:     	movl	%ecx, %edx
1400174bb:     	andl	$-0x20, %edx
1400174be:     	cmpl	$0x2a6e0, %edx          # imm = 0x2A6E0
1400174c4:     	je	0x1400173d7 <.text+0x163d7>
1400174ca:     	movl	%ecx, %edx
1400174cc:     	andl	$-0x2, %edx
1400174cf:     	cmpl	$0x2b81e, %edx          # imm = 0x2B81E
1400174d5:     	je	0x1400173d7 <.text+0x163d7>
1400174db:     	addl	$0xffef0000, %ecx       # imm = 0xFFEF0000
1400174e1:     	cmpl	$0xfffd01f0, %ecx       # imm = 0xFFFD01F0
1400174e7:     	setb	%al
1400174ea:     	addq	$0x38, %rsp
1400174ee:     	retq
1400174ef:     	int3
1400174f0:     	jmp	0x140013b50 <.text+0x12b50>
1400174f5:     	int3
1400174f6:     	int3
1400174f7:     	int3
1400174f8:     	int3
1400174f9:     	int3
1400174fa:     	int3
1400174fb:     	int3
1400174fc:     	int3
1400174fd:     	int3
1400174fe:     	int3
1400174ff:     	int3
140017500:     	pushq	%rsi
140017501:     	testq	%r8, %r8
140017504:     	je	0x140017520 <.text+0x16520>
140017506:     	movq	%rdx, %r9
140017509:     	movzbl	(%rdx), %eax
14001750c:     	cmpl	$0x2d, %eax
14001750f:     	je	0x140017529 <.text+0x16529>
140017511:     	cmpl	$0x2b, %eax
140017514:     	jne	0x140017535 <.text+0x16535>
140017516:     	decq	%r8
140017519:     	je	0x14001752f <.text+0x1652f>
14001751b:     	incq	%r9
14001751e:     	jmp	0x140017535 <.text+0x16535>
140017520:     	movb	$0x0, 0x1(%rcx)
140017524:     	jmp	0x1400175aa <.text+0x165aa>
140017529:     	cmpq	$0x1, %r8
14001752d:     	jne	0x140017535 <.text+0x16535>
14001752f:     	movb	$0x1, 0x1(%rcx)
140017533:     	jmp	0x1400175aa <.text+0x165aa>
140017535:     	cmpq	$0x11, %r8
140017539:     	jae	0x14001756a <.text+0x1656a>
14001753b:     	xorl	%edx, %edx
14001753d:     	xorl	%eax, %eax
14001753f:     	nop
140017540:     	movzbl	(%r9,%rdx), %r10d
140017545:     	addl	$-0x30, %r10d
140017549:     	cmpl	$0x9, %r10d
14001754d:     	ja	0x14001752f <.text+0x1652f>
14001754f:     	leaq	(%rax,%rax,4), %rax
140017553:     	movl	%r10d, %r10d
140017556:     	leaq	(%r10,%rax,2), %rax
14001755a:     	incq	%rdx
14001755d:     	cmpq	%rdx, %r8
140017560:     	jne	0x140017540 <.text+0x16540>
140017562:     	movq	%rax, 0x8(%rcx)
140017566:     	xorl	%eax, %eax
140017568:     	jmp	0x1400175ac <.text+0x165ac>
14001756a:     	xorl	%r10d, %r10d
14001756d:     	movl	$0xa, %r11d
140017573:     	xorl	%eax, %eax
140017575:     	nopw	%cs:(%rax,%rax)
140017580:     	cmpq	%r10, %r8
140017583:     	je	0x140017562 <.text+0x16562>
140017585:     	movzbl	(%r9,%r10), %esi
14001758a:     	mulq	%r11
14001758d:     	seto	%dl
140017590:     	addl	$-0x30, %esi
140017593:     	cmpl	$0x9, %esi
140017596:     	ja	0x14001752f <.text+0x1652f>
140017598:     	testb	%dl, %dl
14001759a:     	jne	0x1400175a6 <.text+0x165a6>
14001759c:     	movl	%esi, %edx
14001759e:     	incq	%r10
1400175a1:     	addq	%rdx, %rax
1400175a4:     	jae	0x140017580 <.text+0x16580>
1400175a6:     	movb	$0x2, 0x1(%rcx)
1400175aa:     	movb	$0x1, %al
1400175ac:     	movb	%al, (%rcx)
1400175ae:     	movq	%rcx, %rax
1400175b1:     	popq	%rsi
1400175b2:     	retq
1400175b3:     	int3
1400175b4:     	int3
1400175b5:     	int3
1400175b6:     	int3
1400175b7:     	int3
1400175b8:     	int3
1400175b9:     	int3
1400175ba:     	int3
1400175bb:     	int3
1400175bc:     	int3
1400175bd:     	int3
1400175be:     	int3
1400175bf:     	int3
1400175c0:     	pushq	%rsi
1400175c1:     	subq	$0xb0, %rsp
1400175c8:     	movzbl	(%rcx), %ecx
1400175cb:     	leaq	0xb0(%rsp), %r8
1400175d3:     	xorl	%eax, %eax
1400175d5:     	movl	$0x30, %r9d
1400175db:     	movl	%ecx, %r10d
1400175de:     	nop
1400175e0:     	movl	%ecx, %r11d
1400175e3:     	andb	$0xf, %r11b
1400175e7:     	shrb	$0x4, %r10b
1400175eb:     	cmpb	$0xa, %r11b
1400175ef:     	movl	$0x57, %esi
1400175f4:     	cmovbl	%r9d, %esi
1400175f8:     	addb	%r11b, %sil
1400175fb:     	movb	%sil, -0x1(%r8)
1400175ff:     	decq	%r8
140017602:     	incq	%rax
140017605:     	cmpb	$0x10, %cl
140017608:     	movl	%r10d, %ecx
14001760b:     	jae	0x1400175e0 <.text+0x165e0>
14001760d:     	movl	$0x80, %ecx
140017612:     	subq	%rax, %rcx
140017615:     	cmpq	$0x80, %rcx
14001761c:     	ja	0x140017649 <.text+0x16649>
14001761e:     	movq	%rax, 0x28(%rsp)
140017623:     	movq	%r8, 0x20(%rsp)
140017628:     	leaq	0x6d10(%rip), %r8       # 0x14001e33f
14001762f:     	movl	$0x2, %r9d
140017635:     	movq	%rdx, %rcx
140017638:     	movb	$0x1, %dl
14001763a:     	callq	0x140014c70 <.text+0x13c70>
14001763f:     	nop
140017640:     	addq	$0xb0, %rsp
140017647:     	popq	%rsi
140017648:     	retq
140017649:     	leaq	0x6d10(%rip), %r8       # 0x14001e360
140017650:     	movl	$0x80, %edx
140017655:     	callq	0x140019c50 <.text+0x18c50>
14001765a:     	ud2
14001765c:     	int3
14001765d:     	int3
14001765e:     	int3
14001765f:     	int3
140017660:     	pushq	%rsi
140017661:     	subq	$0xb0, %rsp
140017668:     	movzbl	(%rcx), %ecx
14001766b:     	leaq	0xb0(%rsp), %r8
140017673:     	xorl	%eax, %eax
140017675:     	movl	$0x30, %r9d
14001767b:     	movl	%ecx, %r10d
14001767e:     	nop
140017680:     	movl	%ecx, %r11d
140017683:     	andb	$0xf, %r11b
140017687:     	shrb	$0x4, %r10b
14001768b:     	cmpb	$0xa, %r11b
14001768f:     	movl	$0x37, %esi
140017694:     	cmovbl	%r9d, %esi
140017698:     	addb	%r11b, %sil
14001769b:     	movb	%sil, -0x1(%r8)
14001769f:     	decq	%r8
1400176a2:     	incq	%rax
1400176a5:     	cmpb	$0x10, %cl
1400176a8:     	movl	%r10d, %ecx
1400176ab:     	jae	0x140017680 <.text+0x16680>
1400176ad:     	movl	$0x80, %ecx
1400176b2:     	subq	%rax, %rcx
1400176b5:     	cmpq	$0x80, %rcx
1400176bc:     	ja	0x1400176e9 <.text+0x166e9>
1400176be:     	movq	%rax, 0x28(%rsp)
1400176c3:     	movq	%r8, 0x20(%rsp)
1400176c8:     	leaq	0x6c70(%rip), %r8       # 0x14001e33f
1400176cf:     	movl	$0x2, %r9d
1400176d5:     	movq	%rdx, %rcx
1400176d8:     	movb	$0x1, %dl
1400176da:     	callq	0x140014c70 <.text+0x13c70>
1400176df:     	nop
1400176e0:     	addq	$0xb0, %rsp
1400176e7:     	popq	%rsi
1400176e8:     	retq
1400176e9:     	leaq	0x6c70(%rip), %r8       # 0x14001e360
1400176f0:     	movl	$0x80, %edx
1400176f5:     	callq	0x140019c50 <.text+0x18c50>
1400176fa:     	ud2
1400176fc:     	int3
1400176fd:     	int3
1400176fe:     	int3
1400176ff:     	int3
140017700:     	pushq	%rsi
140017701:     	subq	$0xb0, %rsp
140017708:     	movl	(%rcx), %ecx
14001770a:     	leaq	0xb0(%rsp), %r9
140017712:     	xorl	%eax, %eax
140017714:     	movl	$0x30, %r8d
14001771a:     	movl	%ecx, %r10d
14001771d:     	nopl	(%rax)
140017720:     	shrl	$0x4, %r10d
140017724:     	movl	%ecx, %r11d
140017727:     	andb	$0xf, %r11b
14001772b:     	cmpb	$0xa, %r11b
14001772f:     	movl	$0x37, %esi
140017734:     	cmovbl	%r8d, %esi
140017738:     	addb	%r11b, %sil
14001773b:     	movb	%sil, -0x1(%r9)
14001773f:     	decq	%r9
140017742:     	incq	%rax
140017745:     	cmpl	$0x10, %ecx
140017748:     	movl	%r10d, %ecx
14001774b:     	jae	0x140017720 <.text+0x16720>
14001774d:     	movl	$0x80, %ecx
140017752:     	subq	%rax, %rcx
140017755:     	cmpq	$0x80, %rcx
14001775c:     	ja	0x140017789 <.text+0x16789>
14001775e:     	movq	%rax, 0x28(%rsp)
140017763:     	movq	%r9, 0x20(%rsp)
140017768:     	leaq	0x6bd0(%rip), %r8       # 0x14001e33f
14001776f:     	movl	$0x2, %r9d
140017775:     	movq	%rdx, %rcx
140017778:     	movb	$0x1, %dl
14001777a:     	callq	0x140014c70 <.text+0x13c70>
14001777f:     	nop
140017780:     	addq	$0xb0, %rsp
140017787:     	popq	%rsi
140017788:     	retq
140017789:     	leaq	0x6bd0(%rip), %r8       # 0x14001e360
140017790:     	movl	$0x80, %edx
140017795:     	callq	0x140019c50 <.text+0x18c50>
14001779a:     	ud2
14001779c:     	int3
14001779d:     	int3
14001779e:     	int3
14001779f:     	int3
1400177a0:     	pushq	%rsi
1400177a1:     	subq	$0xb0, %rsp
1400177a8:     	movq	(%rcx), %rcx
1400177ab:     	leaq	0xb0(%rsp), %r9
1400177b3:     	xorl	%eax, %eax
1400177b5:     	movl	$0x30, %r8d
1400177bb:     	movq	%rcx, %r10
1400177be:     	nop
1400177c0:     	shrq	$0x4, %r10
1400177c4:     	movl	%ecx, %r11d
1400177c7:     	andb	$0xf, %r11b
1400177cb:     	cmpb	$0xa, %r11b
1400177cf:     	movl	$0x57, %esi
1400177d4:     	cmovbl	%r8d, %esi
1400177d8:     	addb	%r11b, %sil
1400177db:     	movb	%sil, -0x1(%r9)
1400177df:     	decq	%r9
1400177e2:     	incq	%rax
1400177e5:     	cmpq	$0x10, %rcx
1400177e9:     	movq	%r10, %rcx
1400177ec:     	jae	0x1400177c0 <.text+0x167c0>
1400177ee:     	movl	$0x80, %ecx
1400177f3:     	subq	%rax, %rcx
1400177f6:     	cmpq	$0x80, %rcx
1400177fd:     	ja	0x14001782a <.text+0x1682a>
1400177ff:     	movq	%rax, 0x28(%rsp)
140017804:     	movq	%r9, 0x20(%rsp)
140017809:     	leaq	0x6b2f(%rip), %r8       # 0x14001e33f
140017810:     	movl	$0x2, %r9d
140017816:     	movq	%rdx, %rcx
140017819:     	movb	$0x1, %dl
14001781b:     	callq	0x140014c70 <.text+0x13c70>
140017820:     	nop
140017821:     	addq	$0xb0, %rsp
140017828:     	popq	%rsi
140017829:     	retq
14001782a:     	leaq	0x6b2f(%rip), %r8       # 0x14001e360
140017831:     	movl	$0x80, %edx
140017836:     	callq	0x140019c50 <.text+0x18c50>
14001783b:     	ud2
14001783d:     	int3
14001783e:     	int3
14001783f:     	int3
140017840:     	pushq	%rsi
140017841:     	subq	$0xb0, %rsp
140017848:     	movq	(%rcx), %rcx
14001784b:     	leaq	0xb0(%rsp), %r9
140017853:     	xorl	%eax, %eax
140017855:     	movl	$0x30, %r8d
14001785b:     	movq	%rcx, %r10
14001785e:     	nop
140017860:     	shrq	$0x4, %r10
140017864:     	movl	%ecx, %r11d
140017867:     	andb	$0xf, %r11b
14001786b:     	cmpb	$0xa, %r11b
14001786f:     	movl	$0x37, %esi
140017874:     	cmovbl	%r8d, %esi
140017878:     	addb	%r11b, %sil
14001787b:     	movb	%sil, -0x1(%r9)
14001787f:     	decq	%r9
140017882:     	incq	%rax
140017885:     	cmpq	$0x10, %rcx
140017889:     	movq	%r10, %rcx
14001788c:     	jae	0x140017860 <.text+0x16860>
14001788e:     	movl	$0x80, %ecx
140017893:     	subq	%rax, %rcx
140017896:     	cmpq	$0x80, %rcx
14001789d:     	ja	0x1400178ca <.text+0x168ca>
14001789f:     	movq	%rax, 0x28(%rsp)
1400178a4:     	movq	%r9, 0x20(%rsp)
1400178a9:     	leaq	0x6a8f(%rip), %r8       # 0x14001e33f
1400178b0:     	movl	$0x2, %r9d
1400178b6:     	movq	%rdx, %rcx
1400178b9:     	movb	$0x1, %dl
1400178bb:     	callq	0x140014c70 <.text+0x13c70>
1400178c0:     	nop
1400178c1:     	addq	$0xb0, %rsp
1400178c8:     	popq	%rsi
1400178c9:     	retq
1400178ca:     	leaq	0x6a8f(%rip), %r8       # 0x14001e360
1400178d1:     	movl	$0x80, %edx
1400178d6:     	callq	0x140019c50 <.text+0x18c50>
1400178db:     	ud2
1400178dd:     	int3
1400178de:     	int3
1400178df:     	int3
1400178e0:     	pushq	%rsi
1400178e1:     	pushq	%rdi
1400178e2:     	subq	$0xb8, %rsp
1400178e9:     	movq	%rdx, %r10
1400178ec:     	movl	0x34(%rdx), %eax
1400178ef:     	testb	$0x10, %al
1400178f1:     	jne	0x1400179ce <.text+0x169ce>
1400178f7:     	testb	$0x20, %al
1400178f9:     	jne	0x140017a1f <.text+0x16a1f>
1400178ff:     	movq	(%rcx), %rcx
140017902:     	movl	$0x27, %eax
140017907:     	cmpq	$0x2710, %rcx           # imm = 0x2710
14001790e:     	jb	0x140017a9c <.text+0x16a9c>
140017914:     	movl	$0x27, %r11d
14001791a:     	movabsq	$0x346dc5d63886594b, %r8 # imm = 0x346DC5D63886594B
140017924:     	leaq	0x6a4d(%rip), %r9       # 0x14001e378
14001792b:     	nopl	(%rax,%rax)
140017930:     	movq	%rcx, %rax
140017933:     	mulq	%r8
140017936:     	shrq	$0xb, %rdx
14001793a:     	imull	$0x2710, %edx, %eax     # imm = 0x2710
140017940:     	movl	%ecx, %esi
140017942:     	subl	%eax, %esi
140017944:     	imull	$0x147b, %esi, %edi     # imm = 0x147B
14001794a:     	shrl	$0x13, %edi
14001794d:     	imull	$0x64, %edi, %eax
140017950:     	subl	%eax, %esi
140017952:     	movzwl	%si, %esi
140017955:     	leaq	-0x4(%r11), %rax
140017959:     	movzwl	(%r9,%rdi,2), %edi
14001795e:     	movw	%di, 0x34(%rsp,%r11)
140017964:     	movzwl	(%r9,%rsi,2), %esi
140017969:     	movw	%si, 0x36(%rsp,%r11)
14001796f:     	movq	%rax, %r11
140017972:     	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
140017979:     	movq	%rdx, %rcx
14001797c:     	ja	0x140017930 <.text+0x16930>
14001797e:     	cmpq	$0x63, %rdx
140017982:     	jbe	0x1400179b5 <.text+0x169b5>
140017984:     	movzwl	%dx, %ecx
140017987:     	shrl	$0x2, %ecx
14001798a:     	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
140017990:     	shrl	$0x11, %ecx
140017993:     	imull	$0x64, %ecx, %r8d
140017997:     	subl	%r8d, %edx
14001799a:     	movzwl	%dx, %edx
14001799d:     	leaq	0x69d4(%rip), %r8       # 0x14001e378
1400179a4:     	movzwl	(%r8,%rdx,2), %edx
1400179a9:     	movw	%dx, 0x36(%rsp,%rax)
1400179ae:     	addq	$-0x2, %rax
1400179b2:     	movq	%rcx, %rdx
1400179b5:     	cmpq	$0xa, %rdx
1400179b9:     	jae	0x140017aae <.text+0x16aae>
1400179bf:     	addb	$0x30, %dl
1400179c2:     	movb	%dl, 0x37(%rsp,%rax)
1400179c6:     	decq	%rax
1400179c9:     	jmp	0x140017ac2 <.text+0x16ac2>
1400179ce:     	movq	(%rcx), %rcx
1400179d1:     	leaq	0xb8(%rsp), %r8
1400179d9:     	xorl	%eax, %eax
1400179db:     	movl	$0x30, %edx
1400179e0:     	movq	%rcx, %r9
1400179e3:     	nopw	%cs:(%rax,%rax)
1400179f0:     	shrq	$0x4, %r9
1400179f4:     	movl	%ecx, %r11d
1400179f7:     	andb	$0xf, %r11b
1400179fb:     	cmpb	$0xa, %r11b
1400179ff:     	movl	$0x57, %esi
140017a04:     	cmovbl	%edx, %esi
140017a07:     	addb	%r11b, %sil
140017a0a:     	movb	%sil, -0x1(%r8)
140017a0e:     	decq	%r8
140017a11:     	incq	%rax
140017a14:     	cmpq	$0x10, %rcx
140017a18:     	movq	%r9, %rcx
140017a1b:     	jae	0x1400179f0 <.text+0x169f0>
140017a1d:     	jmp	0x140017a6d <.text+0x16a6d>
140017a1f:     	movq	(%rcx), %rcx
140017a22:     	leaq	0xb8(%rsp), %r8
140017a2a:     	xorl	%eax, %eax
140017a2c:     	movl	$0x30, %edx
140017a31:     	movq	%rcx, %r9
140017a34:     	nopw	%cs:(%rax,%rax)
140017a40:     	shrq	$0x4, %r9
140017a44:     	movl	%ecx, %r11d
140017a47:     	andb	$0xf, %r11b
140017a4b:     	cmpb	$0xa, %r11b
140017a4f:     	movl	$0x37, %esi
140017a54:     	cmovbl	%edx, %esi
140017a57:     	addb	%r11b, %sil
140017a5a:     	movb	%sil, -0x1(%r8)
140017a5e:     	decq	%r8
140017a61:     	incq	%rax
140017a64:     	cmpq	$0x10, %rcx
140017a68:     	movq	%r9, %rcx
140017a6b:     	jae	0x140017a40 <.text+0x16a40>
140017a6d:     	movl	$0x80, %ecx
140017a72:     	subq	%rax, %rcx
140017a75:     	cmpq	$0x80, %rcx
140017a7c:     	ja	0x140017afb <.text+0x16afb>
140017a7e:     	movq	%rax, 0x28(%rsp)
140017a83:     	movq	%r8, 0x20(%rsp)
140017a88:     	leaq	0x68b0(%rip), %r8       # 0x14001e33f
140017a8f:     	movl	$0x2, %r9d
140017a95:     	movq	%r10, %rcx
140017a98:     	movb	$0x1, %dl
140017a9a:     	jmp	0x140017aeb <.text+0x16aeb>
140017a9c:     	movq	%rcx, %rdx
140017a9f:     	cmpq	$0x63, %rdx
140017aa3:     	ja	0x140017984 <.text+0x16984>
140017aa9:     	jmp	0x1400179b5 <.text+0x169b5>
140017aae:     	leaq	0x68c3(%rip), %rcx      # 0x14001e378
140017ab5:     	movzwl	(%rcx,%rdx,2), %ecx
140017ab9:     	movw	%cx, 0x36(%rsp,%rax)
140017abe:     	addq	$-0x2, %rax
140017ac2:     	leaq	(%rsp,%rax), %rcx
140017ac6:     	addq	$0x38, %rcx
140017aca:     	movl	$0x27, %edx
140017acf:     	subq	%rax, %rdx
140017ad2:     	movq	%rdx, 0x28(%rsp)
140017ad7:     	movq	%rcx, 0x20(%rsp)
140017adc:     	leaq	0x64cd(%rip), %r8       # 0x14001dfb0
140017ae3:     	movq	%r10, %rcx
140017ae6:     	movb	$0x1, %dl
140017ae8:     	xorl	%r9d, %r9d
140017aeb:     	callq	0x140014c70 <.text+0x13c70>
140017af0:     	nop
140017af1:     	addq	$0xb8, %rsp
140017af8:     	popq	%rdi
140017af9:     	popq	%rsi
140017afa:     	retq
140017afb:     	leaq	0x685e(%rip), %r8       # 0x14001e360
140017b02:     	movl	$0x80, %edx
140017b07:     	callq	0x140019c50 <.text+0x18c50>
140017b0c:     	ud2
140017b0e:     	int3
140017b0f:     	int3
140017b10:     	subq	$0x58, %rsp
140017b14:     	movzbl	(%rcx), %eax
140017b17:     	cmpq	$0x64, %rax
140017b1b:     	jb	0x140017b4f <.text+0x16b4f>
140017b1d:     	movzbl	%al, %ecx
140017b20:     	leal	(%rcx,%rcx,4), %r8d
140017b24:     	leal	(%rcx,%r8,8), %r8d
140017b28:     	shrl	$0xc, %r8d
140017b2c:     	imull	$0x64, %r8d, %ecx
140017b30:     	subb	%cl, %al
140017b32:     	movzbl	%al, %eax
140017b35:     	leaq	0x683c(%rip), %rcx      # 0x14001e378
140017b3c:     	movzwl	(%rcx,%rax,2), %eax
140017b40:     	movw	%ax, 0x56(%rsp)
140017b45:     	movl	$0x24, %ecx
140017b4a:     	movl	%r8d, %eax
140017b4d:     	jmp	0x140017b58 <.text+0x16b58>
140017b4f:     	movl	$0x26, %ecx
140017b54:     	cmpb	$0xa, %al
140017b56:     	jae	0x140017b60 <.text+0x16b60>
140017b58:     	orb	$0x30, %al
140017b5a:     	movb	%al, 0x31(%rsp,%rcx)
140017b5e:     	jmp	0x140017b75 <.text+0x16b75>
140017b60:     	leaq	0x6811(%rip), %rcx      # 0x14001e378
140017b67:     	movzwl	(%rcx,%rax,2), %eax
140017b6b:     	movw	%ax, 0x56(%rsp)
140017b70:     	movl	$0x25, %ecx
140017b75:     	leaq	(%rsp,%rcx), %rax
140017b79:     	addq	$0x31, %rax
140017b7d:     	movl	$0x27, %r8d
140017b83:     	subq	%rcx, %r8
140017b86:     	movq	%r8, 0x28(%rsp)
140017b8b:     	movq	%rax, 0x20(%rsp)
140017b90:     	leaq	0x6419(%rip), %r8       # 0x14001dfb0
140017b97:     	movq	%rdx, %rcx
140017b9a:     	movb	$0x1, %dl
140017b9c:     	xorl	%r9d, %r9d
140017b9f:     	callq	0x140014c70 <.text+0x13c70>
140017ba4:     	nop
140017ba5:     	addq	$0x58, %rsp
140017ba9:     	retq
140017baa:     	int3
140017bab:     	int3
140017bac:     	int3
140017bad:     	int3
140017bae:     	int3
140017baf:     	int3
140017bb0:     	pushq	%rsi
140017bb1:     	pushq	%rdi
140017bb2:     	pushq	%rbx
140017bb3:     	subq	$0x60, %rsp
140017bb7:     	movslq	(%rcx), %r9
140017bba:     	movq	%r9, %rax
140017bbd:     	negq	%rax
140017bc0:     	testq	%r9, %r9
140017bc3:     	movl	%r9d, %r8d
140017bc6:     	cmovsq	%rax, %r8
140017bca:     	movq	%rdx, %rcx
140017bcd:     	movl	$0x27, %eax
140017bd2:     	leaq	0x679f(%rip), %r10      # 0x14001e378
140017bd9:     	cmpq	$0x2710, %r8            # imm = 0x2710
140017be0:     	jb	0x140017c93 <.text+0x16c93>
140017be6:     	movl	$0x27, %esi
140017beb:     	movabsq	$0x346dc5d63886594b, %r11 # imm = 0x346DC5D63886594B
140017bf5:     	nopw	%cs:(%rax,%rax)
140017c00:     	movq	%r8, %rax
140017c03:     	mulq	%r11
140017c06:     	shrq	$0xb, %rdx
140017c0a:     	imull	$0x2710, %edx, %eax     # imm = 0x2710
140017c10:     	movl	%r8d, %edi
140017c13:     	subl	%eax, %edi
140017c15:     	imull	$0x147b, %edi, %ebx     # imm = 0x147B
140017c1b:     	shrl	$0x13, %ebx
140017c1e:     	imull	$0x64, %ebx, %eax
140017c21:     	subl	%eax, %edi
140017c23:     	movzwl	%di, %edi
140017c26:     	leaq	-0x4(%rsi), %rax
140017c2a:     	movzwl	(%r10,%rbx,2), %ebx
140017c2f:     	movw	%bx, 0x35(%rsp,%rsi)
140017c34:     	movzwl	(%r10,%rdi,2), %edi
140017c39:     	movw	%di, 0x37(%rsp,%rsi)
140017c3e:     	movq	%rax, %rsi
140017c41:     	cmpq	$0x5f5e0ff, %r8         # imm = 0x5F5E0FF
140017c48:     	movq	%rdx, %r8
140017c4b:     	ja	0x140017c00 <.text+0x16c00>
140017c4d:     	cmpq	$0x63, %rdx
140017c51:     	jbe	0x140017c81 <.text+0x16c81>
140017c53:     	movzwl	%dx, %r8d
140017c57:     	shrl	$0x2, %r8d
140017c5b:     	imull	$0x147b, %r8d, %r8d     # imm = 0x147B
140017c62:     	shrl	$0x11, %r8d
140017c66:     	imull	$0x64, %r8d, %r11d
140017c6a:     	subl	%r11d, %edx
140017c6d:     	movzwl	%dx, %edx
140017c70:     	movzwl	(%r10,%rdx,2), %edx
140017c75:     	movw	%dx, 0x37(%rsp,%rax)
140017c7a:     	addq	$-0x2, %rax
140017c7e:     	movq	%r8, %rdx
140017c81:     	cmpq	$0xa, %rdx
140017c85:     	jae	0x140017c9e <.text+0x16c9e>
140017c87:     	addb	$0x30, %dl
140017c8a:     	movb	%dl, 0x38(%rsp,%rax)
140017c8e:     	decq	%rax
140017c91:     	jmp	0x140017cac <.text+0x16cac>
140017c93:     	movq	%r8, %rdx
140017c96:     	cmpq	$0x63, %rdx
140017c9a:     	ja	0x140017c53 <.text+0x16c53>
140017c9c:     	jmp	0x140017c81 <.text+0x16c81>
140017c9e:     	movzwl	(%r10,%rdx,2), %edx
140017ca3:     	movw	%dx, 0x37(%rsp,%rax)
140017ca8:     	addq	$-0x2, %rax
140017cac:     	testl	%r9d, %r9d
140017caf:     	setns	%dl
140017cb2:     	leaq	(%rsp,%rax), %r8
140017cb6:     	addq	$0x39, %r8
140017cba:     	movl	$0x27, %r9d
140017cc0:     	subq	%rax, %r9
140017cc3:     	movq	%r9, 0x28(%rsp)
140017cc8:     	movq	%r8, 0x20(%rsp)
140017ccd:     	leaq	0x62dc(%rip), %r8       # 0x14001dfb0
140017cd4:     	xorl	%r9d, %r9d
140017cd7:     	callq	0x140014c70 <.text+0x13c70>
140017cdc:     	nop
140017cdd:     	addq	$0x60, %rsp
140017ce1:     	popq	%rbx
140017ce2:     	popq	%rdi
140017ce3:     	popq	%rsi
140017ce4:     	retq
140017ce5:     	int3
140017ce6:     	int3
140017ce7:     	int3
140017ce8:     	int3
140017ce9:     	int3
140017cea:     	int3
140017ceb:     	int3
140017cec:     	int3
140017ced:     	int3
140017cee:     	int3
140017cef:     	int3
140017cf0:     	pushq	%rsi
140017cf1:     	pushq	%rdi
140017cf2:     	subq	$0x58, %rsp
140017cf6:     	movq	%rdx, %r9
140017cf9:     	movl	(%rcx), %ecx
140017cfb:     	movl	$0x27, %eax
140017d00:     	leaq	0x6671(%rip), %r8       # 0x14001e378
140017d07:     	cmpq	$0x2710, %rcx           # imm = 0x2710
140017d0e:     	jb	0x140017dc0 <.text+0x16dc0>
140017d14:     	movl	$0x27, %r11d
140017d1a:     	movabsq	$0x346dc5d63886594b, %r10 # imm = 0x346DC5D63886594B
140017d24:     	nopw	%cs:(%rax,%rax)
140017d30:     	movq	%rcx, %rax
140017d33:     	mulq	%r10
140017d36:     	shrq	$0xb, %rdx
140017d3a:     	imull	$0x2710, %edx, %eax     # imm = 0x2710
140017d40:     	movl	%ecx, %esi
140017d42:     	subl	%eax, %esi
140017d44:     	imull	$0x147b, %esi, %edi     # imm = 0x147B
140017d4a:     	shrl	$0x13, %edi
140017d4d:     	imull	$0x64, %edi, %eax
140017d50:     	subl	%eax, %esi
140017d52:     	movzwl	%si, %esi
140017d55:     	leaq	-0x4(%r11), %rax
140017d59:     	movzwl	(%r8,%rdi,2), %edi
140017d5e:     	movw	%di, 0x2d(%rsp,%r11)
140017d64:     	movzwl	(%r8,%rsi,2), %esi
140017d69:     	movw	%si, 0x2f(%rsp,%r11)
140017d6f:     	movq	%rax, %r11
140017d72:     	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
140017d79:     	movq	%rdx, %rcx
140017d7c:     	ja	0x140017d30 <.text+0x16d30>
140017d7e:     	cmpq	$0x63, %rdx
140017d82:     	jbe	0x140017dae <.text+0x16dae>
140017d84:     	movzwl	%dx, %ecx
140017d87:     	shrl	$0x2, %ecx
140017d8a:     	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
140017d90:     	shrl	$0x11, %ecx
140017d93:     	imull	$0x64, %ecx, %r10d
140017d97:     	subl	%r10d, %edx
140017d9a:     	movzwl	%dx, %edx
140017d9d:     	movzwl	(%r8,%rdx,2), %edx
140017da2:     	movw	%dx, 0x2f(%rsp,%rax)
140017da7:     	addq	$-0x2, %rax
140017dab:     	movq	%rcx, %rdx
140017dae:     	cmpq	$0xa, %rdx
140017db2:     	jae	0x140017dcb <.text+0x16dcb>
140017db4:     	addb	$0x30, %dl
140017db7:     	movb	%dl, 0x30(%rsp,%rax)
140017dbb:     	decq	%rax
140017dbe:     	jmp	0x140017dd9 <.text+0x16dd9>
140017dc0:     	movq	%rcx, %rdx
140017dc3:     	cmpq	$0x63, %rdx
140017dc7:     	ja	0x140017d84 <.text+0x16d84>
140017dc9:     	jmp	0x140017dae <.text+0x16dae>
140017dcb:     	movzwl	(%r8,%rdx,2), %ecx
140017dd0:     	movw	%cx, 0x2f(%rsp,%rax)
140017dd5:     	addq	$-0x2, %rax
140017dd9:     	leaq	(%rsp,%rax), %rcx
140017ddd:     	addq	$0x31, %rcx
140017de1:     	movl	$0x27, %edx
140017de6:     	subq	%rax, %rdx
140017de9:     	movq	%rdx, 0x28(%rsp)
140017dee:     	movq	%rcx, 0x20(%rsp)
140017df3:     	leaq	0x61b6(%rip), %r8       # 0x14001dfb0
140017dfa:     	movq	%r9, %rcx
140017dfd:     	movb	$0x1, %dl
140017dff:     	xorl	%r9d, %r9d
140017e02:     	callq	0x140014c70 <.text+0x13c70>
140017e07:     	nop
140017e08:     	addq	$0x58, %rsp
140017e0c:     	popq	%rdi
140017e0d:     	popq	%rsi
140017e0e:     	retq
140017e0f:     	int3
140017e10:     	pushq	%rsi
140017e11:     	pushq	%rdi
140017e12:     	subq	$0x58, %rsp
140017e16:     	movq	%rdx, %r9
140017e19:     	movq	(%rcx), %rcx
140017e1c:     	movl	$0x27, %eax
140017e21:     	leaq	0x6550(%rip), %r8       # 0x14001e378
140017e28:     	cmpq	$0x2710, %rcx           # imm = 0x2710
140017e2f:     	jb	0x140017ee0 <.text+0x16ee0>
140017e35:     	movl	$0x27, %r11d
140017e3b:     	movabsq	$0x346dc5d63886594b, %r10 # imm = 0x346DC5D63886594B
140017e45:     	nopw	%cs:(%rax,%rax)
140017e50:     	movq	%rcx, %rax
140017e53:     	mulq	%r10
140017e56:     	shrq	$0xb, %rdx
140017e5a:     	imull	$0x2710, %edx, %eax     # imm = 0x2710
140017e60:     	movl	%ecx, %esi
140017e62:     	subl	%eax, %esi
140017e64:     	imull	$0x147b, %esi, %edi     # imm = 0x147B
140017e6a:     	shrl	$0x13, %edi
140017e6d:     	imull	$0x64, %edi, %eax
140017e70:     	subl	%eax, %esi
140017e72:     	movzwl	%si, %esi
140017e75:     	leaq	-0x4(%r11), %rax
140017e79:     	movzwl	(%r8,%rdi,2), %edi
140017e7e:     	movw	%di, 0x2d(%rsp,%r11)
140017e84:     	movzwl	(%r8,%rsi,2), %esi
140017e89:     	movw	%si, 0x2f(%rsp,%r11)
140017e8f:     	movq	%rax, %r11
140017e92:     	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
140017e99:     	movq	%rdx, %rcx
140017e9c:     	ja	0x140017e50 <.text+0x16e50>
140017e9e:     	cmpq	$0x63, %rdx
140017ea2:     	jbe	0x140017ece <.text+0x16ece>
140017ea4:     	movzwl	%dx, %ecx
140017ea7:     	shrl	$0x2, %ecx
140017eaa:     	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
140017eb0:     	shrl	$0x11, %ecx
140017eb3:     	imull	$0x64, %ecx, %r10d
140017eb7:     	subl	%r10d, %edx
140017eba:     	movzwl	%dx, %edx
140017ebd:     	movzwl	(%r8,%rdx,2), %edx
140017ec2:     	movw	%dx, 0x2f(%rsp,%rax)
140017ec7:     	addq	$-0x2, %rax
140017ecb:     	movq	%rcx, %rdx
140017ece:     	cmpq	$0xa, %rdx
140017ed2:     	jae	0x140017eeb <.text+0x16eeb>
140017ed4:     	addb	$0x30, %dl
140017ed7:     	movb	%dl, 0x30(%rsp,%rax)
140017edb:     	decq	%rax
140017ede:     	jmp	0x140017ef9 <.text+0x16ef9>
140017ee0:     	movq	%rcx, %rdx
140017ee3:     	cmpq	$0x63, %rdx
140017ee7:     	ja	0x140017ea4 <.text+0x16ea4>
140017ee9:     	jmp	0x140017ece <.text+0x16ece>
140017eeb:     	movzwl	(%r8,%rdx,2), %ecx
140017ef0:     	movw	%cx, 0x2f(%rsp,%rax)
140017ef5:     	addq	$-0x2, %rax
140017ef9:     	leaq	(%rsp,%rax), %rcx
140017efd:     	addq	$0x31, %rcx
140017f01:     	movl	$0x27, %edx
140017f06:     	subq	%rax, %rdx
140017f09:     	movq	%rdx, 0x28(%rsp)
140017f0e:     	movq	%rcx, 0x20(%rsp)
140017f13:     	leaq	0x6096(%rip), %r8       # 0x14001dfb0
140017f1a:     	movq	%r9, %rcx
140017f1d:     	movb	$0x1, %dl
140017f1f:     	xorl	%r9d, %r9d
140017f22:     	callq	0x140014c70 <.text+0x13c70>
140017f27:     	nop
140017f28:     	addq	$0x58, %rsp
140017f2c:     	popq	%rdi
140017f2d:     	popq	%rsi
140017f2e:     	retq
140017f2f:     	int3
140017f30:     	movq	(%rcx), %rax
140017f33:     	movq	0x8(%rcx), %rcx
140017f37:     	movq	0x18(%rcx), %r8
140017f3b:     	movq	%rax, %rcx
140017f3e:     	jmpq	*%r8
140017f41:     	int3
140017f42:     	int3
140017f43:     	int3
140017f44:     	int3
140017f45:     	int3
140017f46:     	int3
140017f47:     	int3
140017f48:     	int3
140017f49:     	int3
140017f4a:     	int3
140017f4b:     	int3
140017f4c:     	int3
140017f4d:     	int3
140017f4e:     	int3
140017f4f:     	int3
140017f50:     	movq	%rdx, %rax
140017f53:     	movq	(%rcx), %rdx
140017f56:     	movq	0x8(%rcx), %r8
140017f5a:     	movq	%rax, %rcx
140017f5d:     	jmp	0x140015010 <.text+0x14010>
140017f62:     	int3
140017f63:     	int3
140017f64:     	int3
140017f65:     	int3
140017f66:     	int3
140017f67:     	int3
140017f68:     	int3
140017f69:     	int3
140017f6a:     	int3
140017f6b:     	int3
140017f6c:     	int3
140017f6d:     	int3
140017f6e:     	int3
140017f6f:     	int3
140017f70:     	subq	$0x28, %rsp
140017f74:     	movl	%ecx, %eax
140017f76:     	shll	$0xb, %eax
140017f79:     	cmpl	$0x88050000, %eax       # imm = 0x88050000
140017f7e:     	jae	0x140017f96 <.text+0x16f96>
140017f80:     	cmpl	$0x20, %ecx
140017f83:     	setb	%dl
140017f86:     	addl	$-0x7f, %ecx
140017f89:     	cmpl	$0x21, %ecx
140017f8c:     	setb	%al
140017f8f:     	orb	%dl, %al
140017f91:     	addq	$0x28, %rsp
140017f95:     	retq
140017f96:     	leaq	0x6f5b(%rip), %r8       # 0x14001eef8
140017f9d:     	movl	$0x1, %ecx
140017fa2:     	movl	$0x1, %edx
140017fa7:     	callq	0x140019920 <.text+0x18920>
140017fac:     	ud2
140017fae:     	int3
140017faf:     	int3
140017fb0:     	pushq	%rsi
140017fb1:     	pushq	%rdi
140017fb2:     	subq	$0x28, %rsp
140017fb6:     	movl	%ecx, %r8d
140017fb9:     	shll	$0xb, %r8d
140017fbd:     	movl	$0x21, %eax
140017fc2:     	xorl	%r9d, %r9d
140017fc5:     	leaq	0x6fac(%rip), %rdx      # 0x14001ef78
140017fcc:     	movl	$0xff, %r10d
140017fd2:     	movl	$0x21, %r11d
140017fd8:     	jmp	0x140017fe8 <.text+0x16fe8>
140017fda:     	nopw	(%rax,%rax)
140017fe0:     	movq	%rax, %r11
140017fe3:     	subq	%r9, %rax
140017fe6:     	jbe	0x140018027 <.text+0x17027>
140017fe8:     	shrq	%rax
140017feb:     	addq	%r9, %rax
140017fee:     	movl	(%rdx,%rax,4), %edi
140017ff1:     	shll	$0xb, %edi
140017ff4:     	xorl	%esi, %esi
140017ff6:     	cmpl	%r8d, %edi
140017ff9:     	setne	%sil
140017ffd:     	cmovbl	%r10d, %esi
140018001:     	cmpb	$0x1, %sil
140018005:     	je	0x140017fe0 <.text+0x16fe0>
140018007:     	movzbl	%sil, %r9d
14001800b:     	incq	%rax
14001800e:     	cmpl	$0xff, %r9d
140018015:     	jne	0x140018024 <.text+0x17024>
140018017:     	movq	%rax, %r9
14001801a:     	movq	%r11, %rax
14001801d:     	subq	%r9, %rax
140018020:     	ja	0x140017fe8 <.text+0x16fe8>
140018022:     	jmp	0x140018027 <.text+0x17027>
140018024:     	movq	%rax, %r9
140018027:     	cmpq	$0x20, %r9
14001802b:     	ja	0x1400180f3 <.text+0x170f3>
140018031:     	movl	(%rdx,%r9,4), %eax
140018035:     	shrl	$0x15, %eax
140018038:     	cmpq	$0x20, %r9
14001803c:     	jne	0x14001804c <.text+0x1704c>
14001803e:     	movl	$0x1f, %r9d
140018044:     	movl	$0x2d7, %r8d            # imm = 0x2D7
14001804a:     	jmp	0x14001805d <.text+0x1705d>
14001804c:     	movl	0x4(%rdx,%r9,4), %r8d
140018051:     	shrl	$0x15, %r8d
140018055:     	testq	%r9, %r9
140018058:     	je	0x1400180be <.text+0x170be>
14001805a:     	decq	%r9
14001805d:     	movl	$0x1fffff, %r10d        # imm = 0x1FFFFF
140018063:     	andl	(%rdx,%r9,4), %r10d
140018067:     	movq	%rax, %rdx
14001806a:     	notq	%rdx
14001806d:     	addq	%r8, %rdx
140018070:     	je	0x1400180b5 <.text+0x170b5>
140018072:     	subl	%r10d, %ecx
140018075:     	decq	%r8
140018078:     	xorl	%edx, %edx
14001807a:     	leaq	0x6f7b(%rip), %r10      # 0x14001effc
140018081:     	movq	%rax, %r9
140018084:     	nopw	%cs:(%rax,%rax)
140018090:     	cmpq	$0x2d6, %r9             # imm = 0x2D6
140018097:     	ja	0x1400180ce <.text+0x170ce>
140018099:     	movzbl	(%r9,%r10), %r11d
14001809e:     	addl	%r11d, %edx
1400180a1:     	cmpl	%ecx, %edx
1400180a3:     	ja	0x1400180b2 <.text+0x170b2>
1400180a5:     	incq	%r9
1400180a8:     	cmpq	%r9, %r8
1400180ab:     	jne	0x140018090 <.text+0x17090>
1400180ad:     	movq	%r8, %rax
1400180b0:     	jmp	0x1400180b5 <.text+0x170b5>
1400180b2:     	movq	%r9, %rax
1400180b5:     	andb	$0x1, %al
1400180b7:     	addq	$0x28, %rsp
1400180bb:     	popq	%rdi
1400180bc:     	popq	%rsi
1400180bd:     	retq
1400180be:     	xorl	%r10d, %r10d
1400180c1:     	movq	%rax, %rdx
1400180c4:     	notq	%rdx
1400180c7:     	addq	%r8, %rdx
1400180ca:     	jne	0x140018072 <.text+0x17072>
1400180cc:     	jmp	0x1400180b5 <.text+0x170b5>
1400180ce:     	cmpq	$0x2d8, %rax            # imm = 0x2D8
1400180d4:     	movl	$0x2d7, %ecx            # imm = 0x2D7
1400180d9:     	cmovbq	%rcx, %rax
1400180dd:     	leaq	0x6e2c(%rip), %r8       # 0x14001ef10
1400180e4:     	movl	$0x2d7, %edx            # imm = 0x2D7
1400180e9:     	movq	%rax, %rcx
1400180ec:     	callq	0x140019920 <.text+0x18920>
1400180f1:     	ud2
1400180f3:     	leaq	0x6dfe(%rip), %r8       # 0x14001eef8
1400180fa:     	movl	$0x21, %edx
1400180ff:     	movq	%r9, %rcx
140018102:     	callq	0x140019920 <.text+0x18920>
140018107:     	ud2
140018109:     	int3
14001810a:     	int3
14001810b:     	int3
14001810c:     	int3
14001810d:     	int3
14001810e:     	int3
14001810f:     	int3
140018110:     	pushq	%rbx
140018112:     	subq	$0x20, %rsp
140018116:     	movl	$0x1, %ecx
14001811b:     	callq	0x140018c21 <.text+0x17c21>
140018120:     	callq	0x140018724 <.text+0x17724>
140018125:     	movl	%eax, %ecx
140018127:     	callq	0x140018c57 <.text+0x17c57>
14001812c:     	callq	0x140018718 <.text+0x17718>
140018131:     	movl	%eax, %ebx
140018133:     	callq	0x140018c87 <.text+0x17c87>
140018138:     	movl	$0x1, %ecx
14001813d:     	movl	%ebx, (%rax)
14001813f:     	callq	0x1400184a4 <.text+0x174a4>
140018144:     	testb	%al, %al
140018146:     	je	0x1400181bb <.text+0x171bb>
140018148:     	callq	0x1400189a4 <.text+0x179a4>
14001814d:     	leaq	0x88c(%rip), %rcx       # 0x1400189e0 <.text+0x179e0>
140018154:     	callq	0x140018654 <.text+0x17654>
140018159:     	callq	0x14001871c <.text+0x1771c>
14001815e:     	movl	%eax, %ecx
140018160:     	callq	0x140018c2d <.text+0x17c2d>
140018165:     	testl	%eax, %eax
140018167:     	jne	0x1400181bb <.text+0x171bb>
140018169:     	callq	0x14001872c <.text+0x1772c>
14001816e:     	callq	0x14001876c <.text+0x1776c>
140018173:     	testl	%eax, %eax
140018175:     	je	0x140018183 <.text+0x17183>
140018177:     	leaq	0x59a(%rip), %rcx       # 0x140018718 <.text+0x17718>
14001817e:     	callq	0x140018c27 <.text+0x17c27>
140018183:     	callq	0x14001873c <.text+0x1773c>
140018188:     	callq	0x14001873c <.text+0x1773c>
14001818d:     	callq	0x140018718 <.text+0x17718>
140018192:     	movl	%eax, %ecx
140018194:     	callq	0x140018c7b <.text+0x17c7b>
140018199:     	callq	0x140004760 <.text+0x3760>
14001819e:     	testb	%al, %al
1400181a0:     	je	0x1400181a7 <.text+0x171a7>
1400181a2:     	callq	0x140018c33 <.text+0x17c33>
1400181a7:     	callq	0x140018718 <.text+0x17718>
1400181ac:     	callq	0x1400188dc <.text+0x178dc>
1400181b1:     	testl	%eax, %eax
1400181b3:     	jne	0x1400181bb <.text+0x171bb>
1400181b5:     	addq	$0x20, %rsp
1400181b9:     	popq	%rbx
1400181ba:     	retq
1400181bb:     	movl	$0x7, %ecx
1400181c0:     	callq	0x140018790 <.text+0x17790>
1400181c5:     	int3
1400181c6:     	int3
1400181c7:     	int3
1400181c8:     	subq	$0x28, %rsp
1400181cc:     	callq	0x140018750 <.text+0x17750>
1400181d1:     	xorl	%eax, %eax
1400181d3:     	addq	$0x28, %rsp
1400181d7:     	retq
1400181d8:     	subq	$0x28, %rsp
1400181dc:     	callq	0x140018938 <.text+0x17938>
1400181e1:     	callq	0x140018718 <.text+0x17718>
1400181e6:     	movl	%eax, %ecx
1400181e8:     	addq	$0x28, %rsp
1400181ec:     	jmp	0x140018c81 <.text+0x17c81>
1400181f1:     	int3
1400181f2:     	int3
1400181f3:     	int3
1400181f4:     	movq	%rbx, 0x8(%rsp)
1400181f9:     	movq	%rsi, 0x10(%rsp)
1400181fe:     	pushq	%rdi
1400181ff:     	subq	$0x30, %rsp
140018203:     	movl	$0x1, %ecx
140018208:     	callq	0x140018458 <.text+0x17458>
14001820d:     	testb	%al, %al
14001820f:     	je	0x14001834b <.text+0x1734b>
140018215:     	xorb	%sil, %sil
140018218:     	movb	%sil, 0x20(%rsp)
14001821d:     	callq	0x14001841c <.text+0x1741c>
140018222:     	movb	%al, %bl
140018224:     	movl	0xb11e(%rip), %ecx      # 0x140023348
14001822a:     	cmpl	$0x1, %ecx
14001822d:     	je	0x140018356 <.text+0x17356>
140018233:     	testl	%ecx, %ecx
140018235:     	jne	0x140018281 <.text+0x17281>
140018237:     	movl	$0x1, 0xb107(%rip)      # 0x140023348
140018241:     	leaq	0x20d8(%rip), %rdx      # 0x14001a320
140018248:     	leaq	0x20b9(%rip), %rcx      # 0x14001a308
14001824f:     	callq	0x140018c45 <.text+0x17c45>
140018254:     	testl	%eax, %eax
140018256:     	je	0x140018262 <.text+0x17262>
140018258:     	movl	$0xff, %eax
14001825d:     	jmp	0x14001833b <.text+0x1733b>
140018262:     	leaq	0x2097(%rip), %rdx      # 0x14001a300
140018269:     	leaq	0x2078(%rip), %rcx      # 0x14001a2e8
140018270:     	callq	0x140018c3f <.text+0x17c3f>
140018275:     	movl	$0x2, 0xb0c9(%rip)      # 0x140023348
14001827f:     	jmp	0x140018289 <.text+0x17289>
140018281:     	movb	$0x1, %sil
140018284:     	movb	%sil, 0x20(%rsp)
140018289:     	movb	%bl, %cl
14001828b:     	callq	0x1400185c8 <.text+0x175c8>
140018290:     	callq	0x140018778 <.text+0x17778>
140018295:     	movq	%rax, %rbx
140018298:     	cmpq	$0x0, (%rax)
14001829c:     	je	0x1400182bc <.text+0x172bc>
14001829e:     	movq	%rax, %rcx
1400182a1:     	callq	0x140018530 <.text+0x17530>
1400182a6:     	testb	%al, %al
1400182a8:     	je	0x1400182bc <.text+0x172bc>
1400182aa:     	xorl	%r8d, %r8d
1400182ad:     	leal	0x2(%r8), %edx
1400182b1:     	xorl	%ecx, %ecx
1400182b3:     	movq	(%rbx), %rax
1400182b6:     	callq	*0x2004(%rip)           # 0x14001a2c0
1400182bc:     	callq	0x140018780 <.text+0x17780>
1400182c1:     	movq	%rax, %rbx
1400182c4:     	cmpq	$0x0, (%rax)
1400182c8:     	je	0x1400182de <.text+0x172de>
1400182ca:     	movq	%rax, %rcx
1400182cd:     	callq	0x140018530 <.text+0x17530>
1400182d2:     	testb	%al, %al
1400182d4:     	je	0x1400182de <.text+0x172de>
1400182d6:     	movq	(%rbx), %rcx
1400182d9:     	callq	0x140018c75 <.text+0x17c75>
1400182de:     	callq	0x140018c39 <.text+0x17c39>
1400182e3:     	movq	%rax, %rdi
1400182e6:     	callq	0x140018c63 <.text+0x17c63>
1400182eb:     	movq	(%rax), %rbx
1400182ee:     	callq	0x140018c5d <.text+0x17c5d>
1400182f3:     	movq	%rdi, %r8
1400182f6:     	movq	%rbx, %rdx
1400182f9:     	movl	(%rax), %ecx
1400182fb:     	callq	0x140001320 <.text+0x320>
140018300:     	movl	%eax, %ebx
140018302:     	callq	0x1400188e4 <.text+0x178e4>
140018307:     	testb	%al, %al
140018309:     	je	0x140018360 <.text+0x17360>
14001830b:     	testb	%sil, %sil
14001830e:     	jne	0x140018315 <.text+0x17315>
140018310:     	callq	0x140018c69 <.text+0x17c69>
140018315:     	xorl	%edx, %edx
140018317:     	movb	$0x1, %cl
140018319:     	callq	0x1400185ec <.text+0x175ec>
14001831e:     	movl	%ebx, %eax
140018320:     	jmp	0x14001833b <.text+0x1733b>
140018322:     	movl	%eax, %ebx
140018324:     	callq	0x1400188e4 <.text+0x178e4>
140018329:     	testb	%al, %al
14001832b:     	je	0x140018368 <.text+0x17368>
14001832d:     	cmpb	$0x0, 0x20(%rsp)
140018332:     	jne	0x140018339 <.text+0x17339>
140018334:     	callq	0x140018c6f <.text+0x17c6f>
140018339:     	movl	%ebx, %eax
14001833b:     	movq	0x40(%rsp), %rbx
140018340:     	movq	0x48(%rsp), %rsi
140018345:     	addq	$0x30, %rsp
140018349:     	popq	%rdi
14001834a:     	retq
14001834b:     	movl	$0x7, %ecx
140018350:     	callq	0x140018790 <.text+0x17790>
140018355:     	nop
140018356:     	movl	$0x7, %ecx
14001835b:     	callq	0x140018790 <.text+0x17790>
140018360:     	movl	%ebx, %ecx
140018362:     	callq	0x140018c4b <.text+0x17c4b>
140018367:     	nop
140018368:     	movl	%ebx, %ecx
14001836a:     	callq	0x140018c51 <.text+0x17c51>
14001836f:     	nop
140018370:     	subq	$0x28, %rsp
140018374:     	callq	0x14001866c <.text+0x1766c>
140018379:     	addq	$0x28, %rsp
14001837d:     	jmp	0x1400181f4 <.text+0x171f4>
140018382:     	int3
140018383:     	int3
140018384:     	int3
140018385:     	int3
140018386:     	int3
140018387:     	int3
140018388:     	int3
140018389:     	int3
14001838a:     	int3
14001838b:     	int3
14001838c:     	int3
14001838d:     	int3
14001838e:     	int3
14001838f:     	int3
140018390:     	int3
140018391:     	int3
140018392:     	int3
140018393:     	int3
140018394:     	int3
140018395:     	int3
140018396:     	nopw	(%rax,%rax)
1400183a0:     	subq	$0x10, %rsp
1400183a4:     	movq	%r10, (%rsp)
1400183a8:     	movq	%r11, 0x8(%rsp)
1400183ad:     	xorq	%r11, %r11
1400183b0:     	leaq	0x18(%rsp), %r10
1400183b5:     	subq	%rax, %r10
1400183b8:     	cmovbq	%r11, %r10
1400183bc:     	movq	%gs:0x10, %r11
1400183c5:     	cmpq	%r11, %r10
1400183c8:     	jae	0x1400183e0 <.text+0x173e0>
1400183ca:     	andw	$0xf000, %r10w          # imm = 0xF000
1400183d0:     	leaq	-0x1000(%r11), %r11
1400183d7:     	movb	$0x0, (%r11)
1400183db:     	cmpq	%r11, %r10
1400183de:     	jne	0x1400183d0 <.text+0x173d0>
1400183e0:     	movq	(%rsp), %r10
1400183e4:     	movq	0x8(%rsp), %r11
1400183e9:     	addq	$0x10, %rsp
1400183ed:     	retq
1400183ee:     	int3
1400183ef:     	int3
1400183f0:     	pushq	%rbx
1400183f2:     	subq	$0x20, %rsp
1400183f6:     	leaq	0x70a3(%rip), %rax      # 0x14001f4a0
1400183fd:     	movq	%rcx, %rbx
140018400:     	movq	%rax, (%rcx)
140018403:     	testb	$0x1, %dl
140018406:     	je	0x140018412 <.text+0x17412>
140018408:     	movl	$0x18, %edx
14001840d:     	callq	0x140018a1c <.text+0x17a1c>
140018412:     	movq	%rbx, %rax
140018415:     	addq	$0x20, %rsp
140018419:     	popq	%rbx
14001841a:     	retq
14001841b:     	int3
14001841c:     	subq	$0x28, %rsp
140018420:     	callq	0x140018bd0 <.text+0x17bd0>
140018425:     	testl	%eax, %eax
140018427:     	je	0x14001844a <.text+0x1744a>
140018429:     	movq	%gs:0x30, %rax
140018432:     	movq	0x8(%rax), %rcx
140018436:     	jmp	0x14001843d <.text+0x1743d>
140018438:     	cmpq	%rax, %rcx
14001843b:     	je	0x140018451 <.text+0x17451>
14001843d:     	xorl	%eax, %eax
14001843f:     	lock
140018440:     	cmpxchgq	%rcx, 0xaf08(%rip)      # 0x140023350
140018448:     	jne	0x140018438 <.text+0x17438>
14001844a:     	xorb	%al, %al
14001844c:     	addq	$0x28, %rsp
140018450:     	retq
140018451:     	movb	$0x1, %al
140018453:     	jmp	0x14001844c <.text+0x1744c>
140018455:     	int3
140018456:     	int3
140018457:     	int3
140018458:     	pushq	%rbx
14001845a:     	subq	$0x20, %rsp
14001845e:     	movzbl	0xaef3(%rip), %eax      # 0x140023358
140018465:     	testl	%ecx, %ecx
140018467:     	movl	$0x1, %ebx
14001846c:     	cmovel	%ebx, %eax
14001846f:     	movb	%al, 0xaee3(%rip)       # 0x140023358
140018475:     	callq	0x140018a24 <.text+0x17a24>
14001847a:     	callq	0x140004760 <.text+0x3760>
14001847f:     	testb	%al, %al
140018481:     	jne	0x140018487 <.text+0x17487>
140018483:     	xorb	%al, %al
140018485:     	jmp	0x14001849b <.text+0x1749b>
140018487:     	callq	0x140004760 <.text+0x3760>
14001848c:     	testb	%al, %al
14001848e:     	jne	0x140018499 <.text+0x17499>
140018490:     	xorl	%ecx, %ecx
140018492:     	callq	0x140004760 <.text+0x3760>
140018497:     	jmp	0x140018483 <.text+0x17483>
140018499:     	movb	%bl, %al
14001849b:     	addq	$0x20, %rsp
14001849f:     	popq	%rbx
1400184a0:     	retq
1400184a1:     	int3
1400184a2:     	int3
1400184a3:     	int3
1400184a4:     	pushq	%rbx
1400184a6:     	subq	$0x20, %rsp
1400184aa:     	cmpb	$0x0, 0xaea8(%rip)      # 0x140023359
1400184b1:     	movl	%ecx, %ebx
1400184b3:     	jne	0x14001851c <.text+0x1751c>
1400184b5:     	cmpl	$0x1, %ecx
1400184b8:     	ja	0x140018524 <.text+0x17524>
1400184ba:     	callq	0x140018bd0 <.text+0x17bd0>
1400184bf:     	testl	%eax, %eax
1400184c1:     	je	0x1400184eb <.text+0x174eb>
1400184c3:     	testl	%ebx, %ebx
1400184c5:     	jne	0x1400184eb <.text+0x174eb>
1400184c7:     	leaq	0xae92(%rip), %rcx      # 0x140023360
1400184ce:     	callq	0x140018c8d <.text+0x17c8d>
1400184d3:     	testl	%eax, %eax
1400184d5:     	jne	0x1400184e7 <.text+0x174e7>
1400184d7:     	leaq	0xae9a(%rip), %rcx      # 0x140023378
1400184de:     	callq	0x140018c8d <.text+0x17c8d>
1400184e3:     	testl	%eax, %eax
1400184e5:     	je	0x140018515 <.text+0x17515>
1400184e7:     	xorb	%al, %al
1400184e9:     	jmp	0x14001851e <.text+0x1751e>
1400184eb:     	movdqa	0x6fbd(%rip), %xmm0     # 0x14001f4b0
1400184f3:     	orq	$-0x1, %rax
1400184f7:     	movdqu	%xmm0, 0xae61(%rip)     # 0x140023360
1400184ff:     	movq	%rax, 0xae6a(%rip)      # 0x140023370
140018506:     	movdqu	%xmm0, 0xae6a(%rip)     # 0x140023378
14001850e:     	movq	%rax, 0xae73(%rip)      # 0x140023388
140018515:     	movb	$0x1, 0xae3d(%rip)      # 0x140023359
14001851c:     	movb	$0x1, %al
14001851e:     	addq	$0x20, %rsp
140018522:     	popq	%rbx
140018523:     	retq
140018524:     	movl	$0x5, %ecx
140018529:     	callq	0x140018790 <.text+0x17790>
14001852e:     	int3
14001852f:     	int3
140018530:     	subq	$0x18, %rsp
140018534:     	movq	%rcx, %r8
140018537:     	movl	$0x5a4d, %eax           # imm = 0x5A4D
14001853c:     	cmpw	%ax, -0x18543(%rip)     # 0x140000000
140018543:     	jne	0x1400185bd <.text+0x175bd>
140018545:     	movslq	-0x18510(%rip), %rcx    # 0x14000003c
14001854c:     	leaq	-0x18553(%rip), %rdx    # 0x140000000
140018553:     	addq	%rdx, %rcx
140018556:     	cmpl	$0x4550, (%rcx)         # imm = 0x4550
14001855c:     	jne	0x1400185bd <.text+0x175bd>
14001855e:     	movl	$0x20b, %eax            # imm = 0x20B
140018563:     	cmpw	%ax, 0x18(%rcx)
140018567:     	jne	0x1400185bd <.text+0x175bd>
140018569:     	subq	%rdx, %r8
14001856c:     	movzwl	0x14(%rcx), %edx
140018570:     	addq	$0x18, %rdx
140018574:     	addq	%rcx, %rdx
140018577:     	movzwl	0x6(%rcx), %eax
14001857b:     	leaq	(%rax,%rax,4), %rcx
14001857f:     	leaq	(%rdx,%rcx,8), %r9
140018583:     	movq	%rdx, (%rsp)
140018587:     	cmpq	%r9, %rdx
14001858a:     	je	0x1400185a4 <.text+0x175a4>
14001858c:     	movl	0xc(%rdx), %ecx
14001858f:     	cmpq	%rcx, %r8
140018592:     	jb	0x14001859e <.text+0x1759e>
140018594:     	movl	0x8(%rdx), %eax
140018597:     	addl	%ecx, %eax
140018599:     	cmpq	%rax, %r8
14001859c:     	jb	0x1400185a6 <.text+0x175a6>
14001859e:     	addq	$0x28, %rdx
1400185a2:     	jmp	0x140018583 <.text+0x17583>
1400185a4:     	xorl	%edx, %edx
1400185a6:     	testq	%rdx, %rdx
1400185a9:     	jne	0x1400185af <.text+0x175af>
1400185ab:     	xorb	%al, %al
1400185ad:     	jmp	0x1400185c3 <.text+0x175c3>
1400185af:     	cmpl	$0x0, 0x24(%rdx)
1400185b3:     	jge	0x1400185b9 <.text+0x175b9>
1400185b5:     	xorb	%al, %al
1400185b7:     	jmp	0x1400185c3 <.text+0x175c3>
1400185b9:     	movb	$0x1, %al
1400185bb:     	jmp	0x1400185c3 <.text+0x175c3>
1400185bd:     	xorb	%al, %al
1400185bf:     	jmp	0x1400185c3 <.text+0x175c3>
1400185c1:     	xorb	%al, %al
1400185c3:     	addq	$0x18, %rsp
1400185c7:     	retq
1400185c8:     	pushq	%rbx
1400185ca:     	subq	$0x20, %rsp
1400185ce:     	movb	%cl, %bl
1400185d0:     	callq	0x140018bd0 <.text+0x17bd0>
1400185d5:     	xorl	%edx, %edx
1400185d7:     	testl	%eax, %eax
1400185d9:     	je	0x1400185e6 <.text+0x175e6>
1400185db:     	testb	%bl, %bl
1400185dd:     	jne	0x1400185e6 <.text+0x175e6>
1400185df:     	xchgq	%rdx, 0xad6a(%rip)      # 0x140023350
1400185e6:     	addq	$0x20, %rsp
1400185ea:     	popq	%rbx
1400185eb:     	retq
1400185ec:     	pushq	%rbx
1400185ee:     	subq	$0x20, %rsp
1400185f2:     	cmpb	$0x0, 0xad5f(%rip)      # 0x140023358
1400185f9:     	movb	%cl, %bl
1400185fb:     	je	0x140018601 <.text+0x17601>
1400185fd:     	testb	%dl, %dl
1400185ff:     	jne	0x14001860d <.text+0x1760d>
140018601:     	callq	0x140004760 <.text+0x3760>
140018606:     	movb	%bl, %cl
140018608:     	callq	0x140004760 <.text+0x3760>
14001860d:     	movb	$0x1, %al
14001860f:     	addq	$0x20, %rsp
140018613:     	popq	%rbx
140018614:     	retq
140018615:     	int3
140018616:     	int3
140018617:     	int3
140018618:     	pushq	%rbx
14001861a:     	subq	$0x20, %rsp
14001861e:     	cmpq	$-0x1, 0xad3a(%rip)     # 0x140023360
140018626:     	movq	%rcx, %rbx
140018629:     	jne	0x140018632 <.text+0x17632>
14001862b:     	callq	0x140018c99 <.text+0x17c99>
140018630:     	jmp	0x140018641 <.text+0x17641>
140018632:     	movq	%rbx, %rdx
140018635:     	leaq	0xad24(%rip), %rcx      # 0x140023360
14001863c:     	callq	0x140018c93 <.text+0x17c93>
140018641:     	xorl	%edx, %edx
140018643:     	testl	%eax, %eax
140018645:     	cmoveq	%rbx, %rdx
140018649:     	movq	%rdx, %rax
14001864c:     	addq	$0x20, %rsp
140018650:     	popq	%rbx
140018651:     	retq
140018652:     	int3
140018653:     	int3
140018654:     	subq	$0x28, %rsp
140018658:     	callq	0x140018618 <.text+0x17618>
14001865d:     	negq	%rax
140018660:     	sbbl	%eax, %eax
140018662:     	negl	%eax
140018664:     	decl	%eax
140018666:     	addq	$0x28, %rsp
14001866a:     	retq
14001866b:     	int3
14001866c:     	movq	%rbx, 0x20(%rsp)
140018671:     	pushq	%rbp
140018672:     	movq	%rsp, %rbp
140018675:     	subq	$0x20, %rsp
140018679:     	movq	0xaa60(%rip), %rax      # 0x1400230e0
140018680:     	movabsq	$0x2b992ddfa232, %rbx   # imm = 0x2B992DDFA232
14001868a:     	cmpq	%rbx, %rax
14001868d:     	jne	0x140018703 <.text+0x17703>
14001868f:     	andq	$0x0, 0x18(%rbp)
140018694:     	leaq	0x18(%rbp), %rcx
140018698:     	callq	*0x1a52(%rip)           # 0x14001a0f0
14001869e:     	movq	0x18(%rbp), %rax
1400186a2:     	movq	%rax, 0x10(%rbp)
1400186a6:     	callq	*0x1a9c(%rip)           # 0x14001a148
1400186ac:     	movl	%eax, %eax
1400186ae:     	xorq	%rax, 0x10(%rbp)
1400186b2:     	callq	*0x19b8(%rip)           # 0x14001a070
1400186b8:     	movl	%eax, %eax
1400186ba:     	leaq	0x20(%rbp), %rcx
1400186be:     	xorq	%rax, 0x10(%rbp)
1400186c2:     	callq	*0x1958(%rip)           # 0x14001a020
1400186c8:     	movl	0x20(%rbp), %eax
1400186cb:     	leaq	0x10(%rbp), %rcx
1400186cf:     	shlq	$0x20, %rax
1400186d3:     	xorq	0x20(%rbp), %rax
1400186d7:     	xorq	0x10(%rbp), %rax
1400186db:     	xorq	%rcx, %rax
1400186de:     	movabsq	$0xffffffffffff, %rcx   # imm = 0xFFFFFFFFFFFF
1400186e8:     	andq	%rcx, %rax
1400186eb:     	movabsq	$0x2b992ddfa233, %rcx   # imm = 0x2B992DDFA233
1400186f5:     	cmpq	%rbx, %rax
1400186f8:     	cmoveq	%rcx, %rax
1400186fc:     	movq	%rax, 0xa9dd(%rip)      # 0x1400230e0
140018703:     	movq	0x48(%rsp), %rbx
140018708:     	notq	%rax
14001870b:     	movq	%rax, 0xa9c6(%rip)      # 0x1400230d8
140018712:     	addq	$0x20, %rsp
140018716:     	popq	%rbp
140018717:     	retq
140018718:     	xorl	%eax, %eax
14001871a:     	retq
14001871b:     	int3
14001871c:     	movl	$0x1, %eax
140018721:     	retq
140018722:     	int3
140018723:     	int3
140018724:     	movl	$0x4000, %eax           # imm = 0x4000
140018729:     	retq
14001872a:     	int3
14001872b:     	int3
14001872c:     	leaq	0xac5d(%rip), %rcx      # 0x140023390
140018733:     	jmpq	*0x1a06(%rip)           # 0x14001a140
14001873a:     	int3
14001873b:     	int3
14001873c:     	retq	$0x0
14001873f:     	int3
140018740:     	leaq	0xac59(%rip), %rax      # 0x1400233a0
140018747:     	retq
140018748:     	leaq	0xac59(%rip), %rax      # 0x1400233a8
14001874f:     	retq
140018750:     	subq	$0x28, %rsp
140018754:     	callq	0x140018740 <.text+0x17740>
140018759:     	orq	$0x24, (%rax)
14001875d:     	callq	0x140018748 <.text+0x17748>
140018762:     	orq	$0x2, (%rax)
140018766:     	addq	$0x28, %rsp
14001876a:     	retq
14001876b:     	int3
14001876c:     	xorl	%eax, %eax
14001876e:     	cmpl	%eax, 0xa944(%rip)      # 0x1400230b8
140018774:     	sete	%al
140018777:     	retq
140018778:     	leaq	0xac41(%rip), %rax      # 0x1400233c0
14001877f:     	retq
140018780:     	leaq	0xac31(%rip), %rax      # 0x1400233b8
140018787:     	retq
140018788:     	andl	$0x0, 0xac21(%rip)      # 0x1400233b0
14001878f:     	retq
140018790:     	movq	%rbx, 0x8(%rsp)
140018795:     	pushq	%rbp
140018796:     	leaq	-0x4c0(%rsp), %rbp
14001879e:     	subq	$0x5c0, %rsp            # imm = 0x5C0
1400187a5:     	movl	%ecx, %ebx
1400187a7:     	movl	$0x17, %ecx
1400187ac:     	callq	*0x199e(%rip)           # 0x14001a150
1400187b2:     	testl	%eax, %eax
1400187b4:     	je	0x1400187ba <.text+0x177ba>
1400187b6:     	movl	%ebx, %ecx
1400187b8:     	int	$0x29
1400187ba:     	movl	$0x3, %ecx
1400187bf:     	callq	0x140018788 <.text+0x17788>
1400187c4:     	xorl	%edx, %edx
1400187c6:     	leaq	-0x10(%rbp), %rcx
1400187ca:     	movl	$0x4d0, %r8d            # imm = 0x4D0
1400187d0:     	callq	0x140018bf1 <.text+0x17bf1>
1400187d5:     	leaq	-0x10(%rbp), %rcx
1400187d9:     	callq	*0x1851(%rip)           # 0x14001a030
1400187df:     	movq	0xe8(%rbp), %rbx
1400187e6:     	leaq	0x4d8(%rbp), %rdx
1400187ed:     	movq	%rbx, %rcx
1400187f0:     	xorl	%r8d, %r8d
1400187f3:     	callq	*0x1847(%rip)           # 0x14001a040
1400187f9:     	testq	%rax, %rax
1400187fc:     	je	0x14001883a <.text+0x1783a>
1400187fe:     	andq	$0x0, 0x38(%rsp)
140018804:     	leaq	0x4e0(%rbp), %rcx
14001880b:     	movq	0x4d8(%rbp), %rdx
140018812:     	movq	%rax, %r9
140018815:     	movq	%rcx, 0x30(%rsp)
14001881a:     	movq	%rbx, %r8
14001881d:     	leaq	0x4e8(%rbp), %rcx
140018824:     	movq	%rcx, 0x28(%rsp)
140018829:     	leaq	-0x10(%rbp), %rcx
14001882d:     	movq	%rcx, 0x20(%rsp)
140018832:     	xorl	%ecx, %ecx
140018834:     	callq	*0x17fe(%rip)           # 0x14001a038
14001883a:     	movq	0x4c8(%rbp), %rax
140018841:     	leaq	0x50(%rsp), %rcx
140018846:     	movq	%rax, 0xe8(%rbp)
14001884d:     	xorl	%edx, %edx
14001884f:     	leaq	0x4c8(%rbp), %rax
140018856:     	movl	$0x98, %r8d
14001885c:     	addq	$0x8, %rax
140018860:     	movq	%rax, 0x88(%rbp)
140018867:     	callq	0x140018bf1 <.text+0x17bf1>
14001886c:     	movq	0x4c8(%rbp), %rax
140018873:     	movq	%rax, 0x60(%rsp)
140018878:     	movl	$0x40000015, 0x50(%rsp) # imm = 0x40000015
140018880:     	movl	$0x1, 0x54(%rsp)
140018888:     	callq	*0x18aa(%rip)           # 0x14001a138
14001888e:     	cmpl	$0x1, %eax
140018891:     	leaq	0x50(%rsp), %rax
140018896:     	movq	%rax, 0x40(%rsp)
14001889b:     	leaq	-0x10(%rbp), %rax
14001889f:     	sete	%bl
1400188a2:     	movq	%rax, 0x48(%rsp)
1400188a7:     	xorl	%ecx, %ecx
1400188a9:     	callq	*0x1879(%rip)           # 0x14001a128
1400188af:     	leaq	0x40(%rsp), %rcx
1400188b4:     	callq	*0x1876(%rip)           # 0x14001a130
1400188ba:     	testl	%eax, %eax
1400188bc:     	jne	0x1400188ca <.text+0x178ca>
1400188be:     	testb	%bl, %bl
1400188c0:     	jne	0x1400188ca <.text+0x178ca>
1400188c2:     	leal	0x3(%rax), %ecx
1400188c5:     	callq	0x140018788 <.text+0x17788>
1400188ca:     	movq	0x5d0(%rsp), %rbx
1400188d2:     	addq	$0x5c0, %rsp            # imm = 0x5C0
1400188d9:     	popq	%rbp
1400188da:     	retq
1400188db:     	int3
1400188dc:     	jmp	0x140018718 <.text+0x17718>
1400188e1:     	int3
1400188e2:     	int3
1400188e3:     	int3
1400188e4:     	subq	$0x28, %rsp
1400188e8:     	xorl	%ecx, %ecx
1400188ea:     	callq	*0x17d8(%rip)           # 0x14001a0c8
1400188f0:     	testq	%rax, %rax
1400188f3:     	je	0x14001892e <.text+0x1792e>
1400188f5:     	movl	$0x5a4d, %ecx           # imm = 0x5A4D
1400188fa:     	cmpw	%cx, (%rax)
1400188fd:     	jne	0x14001892e <.text+0x1792e>
1400188ff:     	movslq	0x3c(%rax), %rcx
140018903:     	addq	%rax, %rcx
140018906:     	cmpl	$0x4550, (%rcx)         # imm = 0x4550
14001890c:     	jne	0x14001892e <.text+0x1792e>
14001890e:     	movl	$0x20b, %eax            # imm = 0x20B
140018913:     	cmpw	%ax, 0x18(%rcx)
140018917:     	jne	0x14001892e <.text+0x1792e>
140018919:     	cmpl	$0xe, 0x84(%rcx)
140018920:     	jbe	0x14001892e <.text+0x1792e>
140018922:     	cmpl	$0x0, 0xf8(%rcx)
140018929:     	setne	%al
14001892c:     	jmp	0x140018930 <.text+0x17930>
14001892e:     	xorb	%al, %al
140018930:     	addq	$0x28, %rsp
140018934:     	retq
140018935:     	int3
140018936:     	int3
140018937:     	int3
140018938:     	leaq	0x9(%rip), %rcx         # 0x140018948 <.text+0x17948>
14001893f:     	jmpq	*0x17e2(%rip)           # 0x14001a128
140018946:     	int3
140018947:     	int3
140018948:     	movq	%rbx, 0x8(%rsp)
14001894d:     	pushq	%rdi
14001894e:     	subq	$0x20, %rsp
140018952:     	movq	(%rcx), %rbx
140018955:     	movq	%rcx, %rdi
140018958:     	cmpl	$0xe06d7363, (%rbx)     # imm = 0xE06D7363
14001895e:     	jne	0x14001897c <.text+0x1797c>
140018960:     	cmpl	$0x4, 0x18(%rbx)
140018964:     	jne	0x14001897c <.text+0x1797c>
140018966:     	movl	0x20(%rbx), %edx
140018969:     	leal	-0x19930520(%rdx), %eax
14001896f:     	cmpl	$0x2, %eax
140018972:     	jbe	0x140018989 <.text+0x17989>
140018974:     	cmpl	$0x1994000, %edx        # imm = 0x1994000
14001897a:     	je	0x140018989 <.text+0x17989>
14001897c:     	movq	0x30(%rsp), %rbx
140018981:     	xorl	%eax, %eax
140018983:     	addq	$0x20, %rsp
140018987:     	popq	%rdi
140018988:     	retq
140018989:     	callq	0x140018c0f <.text+0x17c0f>
14001898e:     	movq	%rbx, (%rax)
140018991:     	movq	0x8(%rdi), %rbx
140018995:     	callq	0x140018c15 <.text+0x17c15>
14001899a:     	movq	%rbx, (%rax)
14001899d:     	callq	0x140018c9f <.text+0x17c9f>
1400189a2:     	int3
1400189a3:     	int3
1400189a4:     	movq	%rbx, 0x8(%rsp)
1400189a9:     	pushq	%rdi
1400189aa:     	subq	$0x20, %rsp
1400189ae:     	leaq	0x7173(%rip), %rbx      # 0x14001fb28
1400189b5:     	leaq	0x716c(%rip), %rdi      # 0x14001fb28
1400189bc:     	jmp	0x1400189d0 <.text+0x179d0>
1400189be:     	movq	(%rbx), %rax
1400189c1:     	testq	%rax, %rax
1400189c4:     	je	0x1400189cc <.text+0x179cc>
1400189c6:     	callq	*0x18f4(%rip)           # 0x14001a2c0
1400189cc:     	addq	$0x8, %rbx
1400189d0:     	cmpq	%rdi, %rbx
1400189d3:     	jb	0x1400189be <.text+0x179be>
1400189d5:     	movq	0x30(%rsp), %rbx
1400189da:     	addq	$0x20, %rsp
1400189de:     	popq	%rdi
1400189df:     	retq
1400189e0:     	movq	%rbx, 0x8(%rsp)
1400189e5:     	pushq	%rdi
1400189e6:     	subq	$0x20, %rsp
1400189ea:     	leaq	0x7147(%rip), %rbx      # 0x14001fb38
1400189f1:     	leaq	0x7140(%rip), %rdi      # 0x14001fb38
1400189f8:     	jmp	0x140018a0c <.text+0x17a0c>
1400189fa:     	movq	(%rbx), %rax
1400189fd:     	testq	%rax, %rax
140018a00:     	je	0x140018a08 <.text+0x17a08>
140018a02:     	callq	*0x18b8(%rip)           # 0x14001a2c0
140018a08:     	addq	$0x8, %rbx
140018a0c:     	cmpq	%rdi, %rbx
140018a0f:     	jb	0x1400189fa <.text+0x179fa>
140018a11:     	movq	0x30(%rsp), %rbx
140018a16:     	addq	$0x20, %rsp
140018a1a:     	popq	%rdi
140018a1b:     	retq
140018a1c:     	jmp	0x140018be0 <.text+0x17be0>
140018a21:     	int3
140018a22:     	int3
140018a23:     	int3
140018a24:     	movq	%rbx, 0x10(%rsp)
140018a29:     	movq	%rsi, 0x18(%rsp)
140018a2e:     	pushq	%rdi
140018a2f:     	subq	$0x10, %rsp
140018a33:     	xorl	%eax, %eax
140018a35:     	xorl	%ecx, %ecx
140018a37:     	cpuid
140018a39:     	movl	%ecx, %r8d
140018a3c:     	xorl	%r11d, %r11d
140018a3f:     	movl	%edx, %r10d
140018a42:     	xorl	$0x6c65746e, %r8d       # imm = 0x6C65746E
140018a49:     	xorl	$0x49656e69, %r10d      # imm = 0x49656E69
140018a50:     	movl	%ebx, %r9d
140018a53:     	movl	%eax, %esi
140018a55:     	xorl	%ecx, %ecx
140018a57:     	leal	0x1(%r11), %eax
140018a5b:     	orl	%r8d, %r10d
140018a5e:     	cpuid
140018a60:     	xorl	$0x756e6547, %r9d       # imm = 0x756E6547
140018a67:     	movl	%eax, (%rsp)
140018a6a:     	orl	%r9d, %r10d
140018a6d:     	movl	%ebx, 0x4(%rsp)
140018a71:     	movl	%ecx, %edi
140018a73:     	movl	%ecx, 0x8(%rsp)
140018a77:     	movl	%edx, 0xc(%rsp)
140018a7b:     	jne	0x140018ad8 <.text+0x17ad8>
140018a7d:     	orq	$-0x1, 0xa64b(%rip)     # 0x1400230d0
140018a85:     	andl	$0xfff3ff0, %eax        # imm = 0xFFF3FF0
140018a8a:     	movq	$0x8000, 0xa633(%rip)   # imm = 0x8000
                                                # 0x1400230c8
140018a95:     	cmpl	$0x106c0, %eax          # imm = 0x106C0
140018a9a:     	je	0x140018ac4 <.text+0x17ac4>
140018a9c:     	cmpl	$0x20660, %eax          # imm = 0x20660
140018aa1:     	je	0x140018ac4 <.text+0x17ac4>
140018aa3:     	cmpl	$0x20670, %eax          # imm = 0x20670
140018aa8:     	je	0x140018ac4 <.text+0x17ac4>
140018aaa:     	addl	$0xfffcf9b0, %eax       # imm = 0xFFFCF9B0
140018aaf:     	cmpl	$0x20, %eax
140018ab2:     	ja	0x140018ad8 <.text+0x17ad8>
140018ab4:     	movabsq	$0x100010001, %rcx      # imm = 0x100010001
140018abe:     	btq	%rax, %rcx
140018ac2:     	jae	0x140018ad8 <.text+0x17ad8>
140018ac4:     	movl	0xa8e9(%rip), %r8d      # 0x1400233b4
140018acb:     	orl	$0x1, %r8d
140018acf:     	movl	%r8d, 0xa8de(%rip)      # 0x1400233b4
140018ad6:     	jmp	0x140018adf <.text+0x17adf>
140018ad8:     	movl	0xa8d5(%rip), %r8d      # 0x1400233b4
140018adf:     	movl	$0x7, %eax
140018ae4:     	leal	-0x5(%rax), %r9d
140018ae8:     	cmpl	%eax, %esi
140018aea:     	jl	0x140018b12 <.text+0x17b12>
140018aec:     	xorl	%ecx, %ecx
140018aee:     	cpuid
140018af0:     	movl	%eax, (%rsp)
140018af3:     	movl	%ebx, %r11d
140018af6:     	movl	%ebx, 0x4(%rsp)
140018afa:     	movl	%ecx, 0x8(%rsp)
140018afe:     	movl	%edx, 0xc(%rsp)
140018b02:     	btl	$0x9, %ebx
140018b06:     	jae	0x140018b12 <.text+0x17b12>
140018b08:     	orl	%r9d, %r8d
140018b0b:     	movl	%r8d, 0xa8a2(%rip)      # 0x1400233b4
140018b12:     	movl	$0x1, 0xa5a4(%rip)      # 0x1400230c0
140018b1c:     	movl	%r9d, 0xa5a1(%rip)      # 0x1400230c4
140018b23:     	btl	$0x14, %edi
140018b27:     	jae	0x140018bbe <.text+0x17bbe>
140018b2d:     	movl	%r9d, 0xa58c(%rip)      # 0x1400230c0
140018b34:     	movl	$0x6, %ebx
140018b39:     	movl	%ebx, 0xa585(%rip)      # 0x1400230c4
140018b3f:     	btl	$0x1b, %edi
140018b43:     	jae	0x140018bbe <.text+0x17bbe>
140018b45:     	btl	$0x1c, %edi
140018b49:     	jae	0x140018bbe <.text+0x17bbe>
140018b4b:     	xorl	%ecx, %ecx
140018b4d:     	xgetbv
140018b50:     	shlq	$0x20, %rdx
140018b54:     	orq	%rax, %rdx
140018b57:     	movq	%rdx, 0x20(%rsp)
140018b5c:     	movq	0x20(%rsp), %rax
140018b61:     	andb	%bl, %al
140018b63:     	cmpb	%bl, %al
140018b65:     	jne	0x140018bbe <.text+0x17bbe>
140018b67:     	movl	0xa557(%rip), %eax      # 0x1400230c4
140018b6d:     	orl	$0x8, %eax
140018b70:     	movl	$0x3, 0xa546(%rip)      # 0x1400230c0
140018b7a:     	movl	%eax, 0xa544(%rip)      # 0x1400230c4
140018b80:     	testb	$0x20, %r11b
140018b84:     	je	0x140018bbe <.text+0x17bbe>
140018b86:     	orl	$0x20, %eax
140018b89:     	movl	$0x5, 0xa52d(%rip)      # 0x1400230c0
140018b93:     	movl	%eax, 0xa52b(%rip)      # 0x1400230c4
140018b99:     	movl	$0xd0030000, %eax       # imm = 0xD0030000
140018b9e:     	andl	%eax, %r11d
140018ba1:     	cmpl	%eax, %r11d
140018ba4:     	jne	0x140018bbe <.text+0x17bbe>
140018ba6:     	movq	0x20(%rsp), %rax
140018bab:     	andb	$-0x20, %al
140018bad:     	cmpb	$-0x20, %al
140018baf:     	jne	0x140018bbe <.text+0x17bbe>
140018bb1:     	orl	$0x40, 0xa50c(%rip)     # 0x1400230c4
140018bb8:     	movl	%ebx, 0xa502(%rip)      # 0x1400230c0
140018bbe:     	movq	0x28(%rsp), %rbx
140018bc3:     	xorl	%eax, %eax
140018bc5:     	movq	0x30(%rsp), %rsi
140018bca:     	addq	$0x10, %rsp
140018bce:     	popq	%rdi
140018bcf:     	retq
140018bd0:     	xorl	%eax, %eax
140018bd2:     	cmpl	%eax, 0xa518(%rip)      # 0x1400230f0
140018bd8:     	setne	%al
140018bdb:     	retq
140018bdc:     	int3
140018bdd:     	int3
140018bde:     	int3
140018bdf:     	int3
140018be0:     	jmp	0x140018ca5 <.text+0x17ca5>
140018be5:     	jmpq	*0x15b5(%rip)           # 0x14001a1a0
140018beb:     	jmpq	*0x15a7(%rip)           # 0x14001a198
140018bf1:     	jmpq	*0x1599(%rip)           # 0x14001a190
140018bf7:     	jmpq	*0x158b(%rip)           # 0x14001a188
140018bfd:     	jmpq	*0x157d(%rip)           # 0x14001a180
140018c03:     	jmpq	*0x156f(%rip)           # 0x14001a178
140018c09:     	jmpq	*0x1561(%rip)           # 0x14001a170
140018c0f:     	jmpq	*0x1553(%rip)           # 0x14001a168
140018c15:     	jmpq	*0x1545(%rip)           # 0x14001a160
140018c1b:     	jmpq	*0x164f(%rip)           # 0x14001a270
140018c21:     	jmpq	*0x1619(%rip)           # 0x14001a240
140018c27:     	jmpq	*0x15ab(%rip)           # 0x14001a1d8
140018c2d:     	jmpq	*0x1605(%rip)           # 0x14001a238
140018c33:     	jmpq	*0x160f(%rip)           # 0x14001a248
140018c39:     	jmpq	*0x15c9(%rip)           # 0x14001a208
140018c3f:     	jmpq	*0x15bb(%rip)           # 0x14001a200
140018c45:     	jmpq	*0x159d(%rip)           # 0x14001a1e8
140018c4b:     	jmpq	*0x159f(%rip)           # 0x14001a1f0
140018c51:     	jmpq	*0x15a1(%rip)           # 0x14001a1f8
140018c57:     	jmpq	*0x1623(%rip)           # 0x14001a280
140018c5d:     	jmpq	*0x15ad(%rip)           # 0x14001a210
140018c63:     	jmpq	*0x15af(%rip)           # 0x14001a218
140018c69:     	jmpq	*0x15b1(%rip)           # 0x14001a220
140018c6f:     	jmpq	*0x15b3(%rip)           # 0x14001a228
140018c75:     	jmpq	*0x15b5(%rip)           # 0x14001a230
140018c7b:     	jmpq	*0x1547(%rip)           # 0x14001a1c8
140018c81:     	jmpq	*0x1531(%rip)           # 0x14001a1b8
140018c87:     	jmpq	*0x15fb(%rip)           # 0x14001a288
140018c8d:     	jmpq	*0x15bd(%rip)           # 0x14001a250
140018c93:     	jmpq	*0x15bf(%rip)           # 0x14001a258
140018c99:     	jmpq	*0x15c1(%rip)           # 0x14001a260
140018c9f:     	jmpq	*0x15c3(%rip)           # 0x14001a268
140018ca5:     	jmpq	*0x1505(%rip)           # 0x14001a1b0
140018cab:     	int3
140018cac:     	int3
140018cad:     	int3
140018cae:     	int3
140018caf:     	int3
140018cb0:     	int3
140018cb1:     	int3
140018cb2:     	int3
140018cb3:     	int3
140018cb4:     	int3
140018cb5:     	int3
140018cb6:     	nopw	(%rax,%rax)
140018cc0:     	jmpq	*%rax
140018cc2:     	int3
140018cc3:     	int3
140018cc4:     	int3
140018cc5:     	int3
140018cc6:     	int3
140018cc7:     	int3
140018cc8:     	int3
140018cc9:     	int3
140018cca:     	int3
140018ccb:     	int3
140018ccc:     	int3
140018ccd:     	int3
140018cce:     	int3
140018ccf:     	int3
140018cd0:     	int3
140018cd1:     	int3
140018cd2:     	int3
140018cd3:     	int3
140018cd4:     	int3
140018cd5:     	int3
140018cd6:     	nopw	(%rax,%rax)
140018ce0:     	jmpq	*0x15da(%rip)           # 0x14001a2c0
140018ce6:     	int3
140018ce7:     	int3
140018ce8:     	int3
140018ce9:     	int3
140018cea:     	int3
140018ceb:     	int3
140018cec:     	int3
140018ced:     	int3
140018cee:     	int3
140018cef:     	int3
140018cf0:     	pushq	%rsi
140018cf1:     	pushq	%rdi
140018cf2:     	pushq	%rbx
140018cf3:     	xorl	%eax, %eax
140018cf5:     	testw	%r8w, %r8w
140018cf9:     	je	0x140018e15 <.text+0x17e15>
140018cff:     	testb	%r9b, %r9b
140018d02:     	jne	0x140018e15 <.text+0x17e15>
140018d08:     	incq	%rdx
140018d0b:     	movq	(%rcx), %r9
140018d0e:     	movq	0x10(%rcx), %r10
140018d12:     	movq	0x18(%rcx), %r11
140018d16:     	movq	%r11, %rax
140018d19:     	subq	$0x4, %rax
140018d1d:     	jb	0x140018dcd <.text+0x17dcd>
140018d23:     	testq	%rax, %rax
140018d26:     	jg	0x140018d73 <.text+0x17d73>
140018d28:     	addq	%rax, %r9
140018d2b:     	movl	(%r10,%rax), %r10d
140018d2f:     	nop
140018d30:     	tzcntl	%r8d, %ecx
140018d35:     	leaq	(%rdx,%rcx), %rax
140018d39:     	cmpl	%r10d, (%r9,%rax)
140018d3d:     	sete	%al
140018d40:     	je	0x140018e15 <.text+0x17e15>
140018d46:     	movw	$0xfffe, %r11w          # imm = 0xFFFE
140018d4b:     	rolw	%cl, %r11w
140018d4f:     	andw	%r11w, %r8w
140018d53:     	jne	0x140018d30 <.text+0x17d30>
140018d55:     	jmp	0x140018e15 <.text+0x17e15>
140018d5a:     	nopw	(%rax,%rax)
140018d60:     	movw	$0xfffe, %r11w          # imm = 0xFFFE
140018d65:     	rolw	%cl, %r11w
140018d69:     	andw	%r11w, %r8w
140018d6d:     	je	0x140018e13 <.text+0x17e13>
140018d73:     	tzcntl	%r8d, %ecx
140018d78:     	movq	%rcx, %r11
140018d7b:     	addq	%rdx, %r11
140018d7e:     	addq	%r9, %r11
140018d81:     	leaq	(%r11,%rax), %rsi
140018d85:     	movq	%r10, %rdi
140018d88:     	nopl	(%rax,%rax)
140018d90:     	movl	(%r11), %ebx
140018d93:     	cmpl	(%rdi), %ebx
140018d95:     	jne	0x140018d60 <.text+0x17d60>
140018d97:     	addq	$0x4, %r11
140018d9b:     	addq	$0x4, %rdi
140018d9f:     	cmpq	%rsi, %r11
140018da2:     	jb	0x140018d90 <.text+0x17d90>
140018da4:     	movl	(%rsi), %r11d
140018da7:     	cmpl	(%r10,%rax), %r11d
140018dab:     	jne	0x140018d60 <.text+0x17d60>
140018dad:     	movb	$0x1, %al
140018daf:     	jmp	0x140018e15 <.text+0x17e15>
140018db1:     	nopw	%cs:(%rax,%rax)
140018dc0:     	movw	$0xfffe, %ax            # imm = 0xFFFE
140018dc4:     	rolw	%cl, %ax
140018dc7:     	andw	%ax, %r8w
140018dcb:     	je	0x140018e13 <.text+0x17e13>
140018dcd:     	movb	$0x1, %al
140018dcf:     	testq	%r11, %r11
140018dd2:     	je	0x140018e15 <.text+0x17e15>
140018dd4:     	tzcntl	%r8d, %ecx
140018dd9:     	leaq	(%rdx,%rcx), %rsi
140018ddd:     	movzbl	(%r9,%rsi), %ebx
140018de2:     	cmpb	(%r10), %bl
140018de5:     	jne	0x140018dc0 <.text+0x17dc0>
140018de7:     	cmpq	$0x1, %r11
140018deb:     	je	0x140018e15 <.text+0x17e15>
140018ded:     	movzbl	0x1(%r9,%rsi), %ebx
140018df3:     	cmpb	0x1(%r10), %bl
140018df7:     	jne	0x140018dc0 <.text+0x17dc0>
140018df9:     	cmpq	$0x2, %r11
140018dfd:     	je	0x140018e15 <.text+0x17e15>
140018dff:     	movzbl	0x2(%r9,%rsi), %ebx
140018e05:     	cmpb	0x2(%r10), %bl
140018e09:     	jne	0x140018dc0 <.text+0x17dc0>
140018e0b:     	cmpq	$0x3, %r11
140018e0f:     	jne	0x140018dc0 <.text+0x17dc0>
140018e11:     	jmp	0x140018e15 <.text+0x17e15>
140018e13:     	xorl	%eax, %eax
140018e15:     	popq	%rbx
140018e16:     	popq	%rdi
140018e17:     	popq	%rsi
140018e18:     	retq
140018e19:     	int3
140018e1a:     	int3
140018e1b:     	int3
140018e1c:     	int3
140018e1d:     	int3
140018e1e:     	int3
140018e1f:     	int3
140018e20:     	subq	$0x48, %rsp
140018e24:     	movq	%rcx, 0x38(%rsp)
140018e29:     	movq	%rdx, 0x40(%rsp)
140018e2e:     	movq	%r9, 0x30(%rsp)
140018e33:     	movq	%r8, 0x28(%rsp)
140018e38:     	leaq	0x1b61(%rip), %r8       # 0x14001a9a0
140018e3f:     	movq	%r8, 0x20(%rsp)
140018e44:     	leaq	0x38(%rsp), %rdx
140018e49:     	leaq	0x40(%rsp), %r9
140018e4e:     	xorl	%ecx, %ecx
140018e50:     	callq	0x1400199c0 <.text+0x189c0>
140018e55:     	ud2
140018e57:     	int3
140018e58:     	int3
140018e59:     	int3
140018e5a:     	int3
140018e5b:     	int3
140018e5c:     	int3
140018e5d:     	int3
140018e5e:     	int3
140018e5f:     	int3
140018e60:     	pushq	%rsi
140018e61:     	pushq	%rdi
140018e62:     	subq	$0x58, %rsp
140018e66:     	addq	%r8, %rdx
140018e69:     	jb	0x140018ef1 <.text+0x17ef1>
140018e6f:     	movq	%rcx, %rsi
140018e72:     	movq	0x8(%rcx), %rax
140018e76:     	leaq	(%rax,%rax), %rcx
140018e7a:     	cmpq	%rdx, %rcx
140018e7d:     	cmovaq	%rcx, %rdx
140018e81:     	cmpq	$0x9, %rdx
140018e85:     	movl	$0x8, %edi
140018e8a:     	cmovaeq	%rdx, %rdi
140018e8e:     	movq	%rdi, %rdx
140018e91:     	notq	%rdx
140018e94:     	shrq	$0x3f, %rdx
140018e98:     	testq	%rax, %rax
140018e9b:     	je	0x140018eb5 <.text+0x17eb5>
140018e9d:     	movq	(%rsi), %rcx
140018ea0:     	movq	%rcx, 0x28(%rsp)
140018ea5:     	movq	$0x1, 0x30(%rsp)
140018eae:     	movq	%rax, 0x38(%rsp)
140018eb3:     	jmp	0x140018ebe <.text+0x17ebe>
140018eb5:     	movq	$0x0, 0x30(%rsp)
140018ebe:     	leaq	0x40(%rsp), %rcx
140018ec3:     	leaq	0x28(%rsp), %r9
140018ec8:     	movq	%rdi, %r8
140018ecb:     	callq	0x140002a70 <.text+0x1a70>
140018ed0:     	cmpq	$0x0, 0x40(%rsp)
140018ed6:     	movq	0x48(%rsp), %rcx
140018edb:     	je	0x140018ef8 <.text+0x17ef8>
140018edd:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140018ee7:     	cmpq	%rax, %rcx
140018eea:     	je	0x140018eff <.text+0x17eff>
140018eec:     	testq	%rcx, %rcx
140018eef:     	jne	0x140018f06 <.text+0x17f06>
140018ef1:     	callq	0x140013200 <.text+0x12200>
140018ef6:     	ud2
140018ef8:     	movq	%rcx, (%rsi)
140018efb:     	movq	%rdi, 0x8(%rsi)
140018eff:     	addq	$0x58, %rsp
140018f03:     	popq	%rdi
140018f04:     	popq	%rsi
140018f05:     	retq
140018f06:     	movq	0x50(%rsp), %rdx
140018f0b:     	callq	0x1400196e0 <.text+0x186e0>
140018f10:     	ud2
140018f12:     	int3
140018f13:     	int3
140018f14:     	int3
140018f15:     	int3
140018f16:     	int3
140018f17:     	int3
140018f18:     	int3
140018f19:     	int3
140018f1a:     	int3
140018f1b:     	int3
140018f1c:     	int3
140018f1d:     	int3
140018f1e:     	int3
140018f1f:     	int3
140018f20:     	pushq	%rsi
140018f21:     	pushq	%rdi
140018f22:     	subq	$0x58, %rsp
140018f26:     	addq	%r8, %rdx
140018f29:     	jb	0x140018fb7 <.text+0x17fb7>
140018f2f:     	movq	%rcx, %rsi
140018f32:     	movq	0x8(%rcx), %rcx
140018f36:     	leaq	(%rcx,%rcx), %rax
140018f3a:     	cmpq	%rdx, %rax
140018f3d:     	cmovaq	%rax, %rdx
140018f41:     	cmpq	$0x5, %rdx
140018f45:     	movl	$0x4, %edi
140018f4a:     	cmovaeq	%rdx, %rdi
140018f4e:     	xorl	%edx, %edx
140018f50:     	movq	%rdi, %r8
140018f53:     	shrq	$0x3e, %r8
140018f57:     	sete	%dl
140018f5a:     	leaq	(%rdi,%rdi), %r8
140018f5e:     	addq	%rdx, %rdx
140018f61:     	testq	%rcx, %rcx
140018f64:     	je	0x140018f7e <.text+0x17f7e>
140018f66:     	movq	(%rsi), %rcx
140018f69:     	movq	%rcx, 0x28(%rsp)
140018f6e:     	movq	$0x2, 0x30(%rsp)
140018f77:     	movq	%rax, 0x38(%rsp)
140018f7c:     	jmp	0x140018f87 <.text+0x17f87>
140018f7e:     	movq	$0x0, 0x30(%rsp)
140018f87:     	leaq	0x40(%rsp), %rcx
140018f8c:     	leaq	0x28(%rsp), %r9
140018f91:     	callq	0x140002a70 <.text+0x1a70>
140018f96:     	cmpq	$0x0, 0x40(%rsp)
140018f9c:     	movq	0x48(%rsp), %rcx
140018fa1:     	je	0x140018fbe <.text+0x17fbe>
140018fa3:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
140018fad:     	cmpq	%rax, %rcx
140018fb0:     	je	0x140018fc5 <.text+0x17fc5>
140018fb2:     	testq	%rcx, %rcx
140018fb5:     	jne	0x140018fcc <.text+0x17fcc>
140018fb7:     	callq	0x140013200 <.text+0x12200>
140018fbc:     	ud2
140018fbe:     	movq	%rcx, (%rsi)
140018fc1:     	movq	%rdi, 0x8(%rsi)
140018fc5:     	addq	$0x58, %rsp
140018fc9:     	popq	%rdi
140018fca:     	popq	%rsi
140018fcb:     	retq
140018fcc:     	movq	0x50(%rsp), %rdx
140018fd1:     	callq	0x1400196e0 <.text+0x186e0>
140018fd6:     	ud2
140018fd8:     	int3
140018fd9:     	int3
140018fda:     	int3
140018fdb:     	int3
140018fdc:     	int3
140018fdd:     	int3
140018fde:     	int3
140018fdf:     	int3
140018fe0:     	subq	$0x58, %rsp
140018fe4:     	leaq	0x1f0d(%rip), %rax      # 0x14001aef8
140018feb:     	movq	%rax, 0x28(%rsp)
140018ff0:     	movq	$0x1, 0x30(%rsp)
140018ff9:     	leaq	0x16a0(%rip), %rax      # 0x14001a6a0
140019000:     	movq	%rax, 0x38(%rsp)
140019005:     	xorps	%xmm0, %xmm0
140019008:     	movups	%xmm0, 0x40(%rsp)
14001900d:     	leaq	0x1ef4(%rip), %rdx      # 0x14001af08
140019014:     	leaq	0x28(%rsp), %rcx
140019019:     	callq	0x1400197d0 <.text+0x187d0>
14001901e:     	ud2
140019020:     	pushq	%r14
140019022:     	pushq	%rsi
140019023:     	pushq	%rdi
140019024:     	pushq	%rbx
140019025:     	subq	$0x28, %rsp
140019029:     	movq	%r8, %rdi
14001902c:     	movq	%rdx, %rbx
14001902f:     	movq	%rcx, %rsi
140019032:     	movq	0x8(%rcx), %rax
140019036:     	movq	%rax, %rcx
140019039:     	subq	0x10(%rsi), %rcx
14001903d:     	cmpq	%r8, %rcx
140019040:     	jae	0x140019053 <.text+0x18053>
140019042:     	movq	%rsi, %rcx
140019045:     	callq	0x140003f10 <.text+0x2f10>
14001904a:     	testq	%rax, %rax
14001904d:     	jne	0x1400190c1 <.text+0x180c1>
14001904f:     	movq	0x8(%rsi), %rax
140019053:     	cmpq	%rdi, %rax
140019056:     	jbe	0x140019078 <.text+0x18078>
140019058:     	movq	0x10(%rsi), %r14
14001905c:     	movq	(%rsi), %rcx
14001905f:     	addq	%r14, %rcx
140019062:     	movq	%rbx, %rdx
140019065:     	movq	%rdi, %r8
140019068:     	callq	0x140018beb <.text+0x17beb>
14001906d:     	addq	%rdi, %r14
140019070:     	movq	%r14, 0x10(%rsi)
140019074:     	xorl	%eax, %eax
140019076:     	jmp	0x1400190c1 <.text+0x180c1>
140019078:     	movb	$0x1, 0x18(%rsi)
14001907c:     	leaq	0x19(%rsi), %rcx
140019080:     	movq	%rbx, %rdx
140019083:     	movq	%rdi, %r8
140019086:     	callq	0x140004ec0 <.text+0x3ec0>
14001908b:     	movq	%rax, 0x20(%rsp)
140019090:     	testq	%rax, %rax
140019093:     	je	0x1400190bb <.text+0x180bb>
140019095:     	movl	%eax, %ecx
140019097:     	andl	$0x3, %ecx
14001909a:     	cmpq	$0x2, %rcx
14001909e:     	jb	0x1400190bd <.text+0x180bd>
1400190a0:     	cmpl	$0x2, %ecx
1400190a3:     	jne	0x1400190bd <.text+0x180bd>
1400190a5:     	movq	%rax, %rcx
1400190a8:     	shrq	$0x20, %rcx
1400190ac:     	cmpl	$0x6, %ecx
1400190af:     	jne	0x1400190bd <.text+0x180bd>
1400190b1:     	leaq	0x20(%rsp), %rcx
1400190b6:     	callq	0x140001c00 <.text+0xc00>
1400190bb:     	xorl	%eax, %eax
1400190bd:     	movb	$0x0, 0x18(%rsi)
1400190c1:     	addq	$0x28, %rsp
1400190c5:     	popq	%rbx
1400190c6:     	popq	%rdi
1400190c7:     	popq	%rsi
1400190c8:     	popq	%r14
1400190ca:     	retq
1400190cb:     	int3
1400190cc:     	int3
1400190cd:     	int3
1400190ce:     	int3
1400190cf:     	int3
1400190d0:     	subq	$0x48, %rsp
1400190d4:     	movq	0xa17d(%rip), %rax      # 0x140023258
1400190db:     	cmpq	$0x3, %rax
1400190df:     	jne	0x1400190e6 <.text+0x180e6>
1400190e1:     	addq	$0x48, %rsp
1400190e5:     	retq
1400190e6:     	leaq	0xa12b(%rip), %rax      # 0x140023218
1400190ed:     	movq	%rax, 0x38(%rsp)
1400190f2:     	leaq	0x2f(%rsp), %rax
1400190f7:     	movq	%rax, 0x40(%rsp)
1400190fc:     	leaq	0x38(%rsp), %rax
140019101:     	movq	%rax, 0x30(%rsp)
140019106:     	leaq	0x2633(%rip), %rax      # 0x14001b740
14001910d:     	movq	%rax, 0x20(%rsp)
140019112:     	leaq	0xa13f(%rip), %rcx      # 0x140023258
140019119:     	leaq	0x2660(%rip), %r9       # 0x14001b780
140019120:     	leaq	0x30(%rsp), %r8
140019125:     	movb	$0x1, %dl
140019127:     	callq	0x140019220 <.text+0x18220>
14001912c:     	nop
14001912d:     	addq	$0x48, %rsp
140019131:     	retq
140019132:     	int3
140019133:     	int3
140019134:     	int3
140019135:     	int3
140019136:     	int3
140019137:     	int3
140019138:     	int3
140019139:     	int3
14001913a:     	int3
14001913b:     	int3
14001913c:     	int3
14001913d:     	int3
14001913e:     	int3
14001913f:     	int3
140019140:     	subq	$0x58, %rsp
140019144:     	movq	0xa10d(%rip), %rax      # 0x140023258
14001914b:     	cmpq	$0x3, %rax
14001914f:     	jne	0x140019156 <.text+0x18156>
140019151:     	addq	$0x58, %rsp
140019155:     	retq
140019156:     	movq	%rcx, 0x40(%rsp)
14001915b:     	leaq	0xa0b6(%rip), %rax      # 0x140023218
140019162:     	movq	%rax, 0x48(%rsp)
140019167:     	leaq	0x37(%rsp), %rax
14001916c:     	movq	%rax, 0x50(%rsp)
140019171:     	leaq	0x40(%rsp), %rax
140019176:     	movq	%rax, 0x38(%rsp)
14001917b:     	leaq	0x25be(%rip), %rax      # 0x14001b740
140019182:     	movq	%rax, 0x20(%rsp)
140019187:     	leaq	0xa0ca(%rip), %rcx      # 0x140023258
14001918e:     	leaq	0x25c3(%rip), %r9       # 0x14001b758
140019195:     	leaq	0x38(%rsp), %r8
14001919a:     	movb	$0x1, %dl
14001919c:     	callq	0x140019220 <.text+0x18220>
1400191a1:     	nop
1400191a2:     	addq	$0x58, %rsp
1400191a6:     	retq
1400191a7:     	int3
1400191a8:     	int3
1400191a9:     	int3
1400191aa:     	int3
1400191ab:     	int3
1400191ac:     	int3
1400191ad:     	int3
1400191ae:     	int3
1400191af:     	int3
1400191b0:     	movl	0xa18a(%rip), %eax      # 0x140023340
1400191b6:     	movq	%gs:0x58, %rcx
1400191bf:     	movq	(%rcx,%rax,8), %rax
1400191c3:     	cmpq	$0x0, 0x28(%rax)
1400191cb:     	sete	%al
1400191ce:     	retq
1400191cf:     	int3
1400191d0:     	subq	$0x38, %rsp
1400191d4:     	movq	%rcx, %rdx
1400191d7:     	leaq	0x28(%rsp), %rcx
1400191dc:     	callq	0x14000c2c0 <.text+0xb2c0>
1400191e1:     	movq	0x28(%rsp), %rax
1400191e6:     	movq	0x30(%rsp), %rdx
1400191eb:     	lock
1400191ec:     	decq	0xa0ad(%rip)            # 0x1400232a0
1400191f3:     	movl	0xa147(%rip), %ecx      # 0x140023340
1400191f9:     	movq	%gs:0x58, %r8
140019202:     	movq	(%r8,%rcx,8), %rcx
140019206:     	decq	0x28(%rcx)
14001920d:     	movb	$0x0, 0x30(%rcx)
140019214:     	addq	$0x38, %rsp
140019218:     	retq
140019219:     	int3
14001921a:     	int3
14001921b:     	int3
14001921c:     	int3
14001921d:     	int3
14001921e:     	int3
14001921f:     	int3
140019220:     	pushq	%rbp
140019221:     	pushq	%r15
140019223:     	pushq	%r14
140019225:     	pushq	%r13
140019227:     	pushq	%r12
140019229:     	pushq	%rsi
14001922a:     	pushq	%rdi
14001922b:     	pushq	%rbx
14001922c:     	subq	$0x98, %rsp
140019233:     	leaq	0x80(%rsp), %rbp
14001923b:     	movq	$-0x2, 0x10(%rbp)
140019243:     	movq	%r9, -0x10(%rbp)
140019247:     	movq	%r8, -0x48(%rbp)
14001924b:     	movl	%edx, %r15d
14001924e:     	movq	%rcx, %r14
140019251:     	movq	(%rcx), %rax
140019254:     	leaq	-0x6(%rbp), %rdi
140019258:     	leaq	-0x8(%rbp), %r12
14001925c:     	leaq	-0xd063(%rip), %r13     # 0x14000c200 <.text+0xb200>
140019263:     	movq	%rax, %rsi
140019266:     	testq	%rax, %rax
140019269:     	jne	0x140019294 <.text+0x18294>
14001926b:     	jmp	0x140019279 <.text+0x18279>
14001926d:     	nopl	(%rax)
140019270:     	testb	%r15b, %r15b
140019273:     	je	0x1400194fa <.text+0x184fa>
140019279:     	movq	%rsi, %rax
14001927c:     	movl	$0x2, %ecx
140019281:     	lock
140019282:     	cmpxchgq	%rcx, (%r14)
140019286:     	je	0x140019414 <.text+0x18414>
14001928c:     	movq	%rax, %rsi
14001928f:     	testq	%rax, %rax
140019292:     	je	0x140019279 <.text+0x18279>
140019294:     	cmpq	$0x1, %rsi
140019298:     	je	0x140019270 <.text+0x18270>
14001929a:     	cmpq	$0x3, %rsi
14001929e:     	je	0x140019450 <.text+0x18450>
1400192a4:     	movl	%esi, %eax
1400192a6:     	andl	$0x3, %eax
1400192a9:     	cmpl	$0x2, %eax
1400192ac:     	je	0x1400192ce <.text+0x182ce>
1400192ae:     	jmp	0x1400194e0 <.text+0x184e0>
1400192b3:     	nopw	%cs:(%rax,%rax)
1400192c0:     	movl	%esi, %eax
1400192c2:     	andl	$0x3, %eax
1400192c5:     	cmpl	$0x2, %eax
1400192c8:     	jne	0x140019400 <.text+0x18400>
1400192ce:     	movl	0xa06c(%rip), %eax      # 0x140023340
1400192d4:     	movq	%gs:0x58, %rcx
1400192dd:     	movq	(%rcx,%rax,8), %rax
1400192e1:     	movzbl	0x40(%rax), %eax
1400192e8:     	cmpl	$0x1, %eax
1400192eb:     	je	0x14001931e <.text+0x1831e>
1400192ed:     	testl	%eax, %eax
1400192ef:     	jne	0x140019469 <.text+0x18469>
1400192f5:     	movl	0xa045(%rip), %eax      # 0x140023340
1400192fb:     	movq	%gs:0x58, %rcx
140019304:     	movq	(%rcx,%rax,8), %rbx
140019308:     	leaq	0x38(%rbx), %rcx
14001930f:     	movq	%r13, %rdx
140019312:     	callq	0x14000aa60 <.text+0x9a60>
140019317:     	movb	$0x1, 0x40(%rbx)
14001931e:     	movl	0xa01c(%rip), %eax      # 0x140023340
140019324:     	movq	%gs:0x58, %rcx
14001932d:     	movq	(%rcx,%rax,8), %rax
140019331:     	movq	0x38(%rax), %rax
140019338:     	testq	%rax, %rax
14001933b:     	jne	0x14001937f <.text+0x1837f>
14001933d:     	xorl	%ecx, %ecx
14001933f:     	callq	0x1400037e0 <.text+0x27e0>
140019344:     	movl	0x9ff6(%rip), %edx      # 0x140023340
14001934a:     	movq	%gs:0x58, %rcx
140019353:     	movq	(%rcx,%rdx,8), %rcx
140019357:     	cmpq	$0x0, 0x38(%rcx)
14001935f:     	jne	0x140019483 <.text+0x18483>
140019365:     	movl	0x9fd5(%rip), %edx      # 0x140023340
14001936b:     	movq	%gs:0x58, %rcx
140019374:     	movq	(%rcx,%rdx,8), %rcx
140019378:     	movq	%rax, 0x38(%rcx)
14001937f:     	lock
140019380:     	incq	(%rax)
140019383:     	jle	0x140019465 <.text+0x18465>
140019389:     	movq	%rsi, %rcx
14001938c:     	addq	$-0x2, %rcx
140019390:     	movq	%rax, -0x8(%rbp)
140019394:     	movb	$0x0, 0x8(%rbp)
140019398:     	movq	%rcx, (%rbp)
14001939c:     	movq	%rsi, %rax
14001939f:     	lock
1400193a0:     	cmpxchgq	%rdi, (%r14)
1400193a4:     	je	0x1400193d5 <.text+0x183d5>
1400193a6:     	movq	%rax, %rsi
1400193a9:     	movq	-0x8(%rbp), %rax
1400193ad:     	testq	%rax, %rax
1400193b0:     	je	0x1400192c0 <.text+0x182c0>
1400193b6:     	lock
1400193b7:     	decq	(%rax)
1400193ba:     	jne	0x1400192c0 <.text+0x182c0>
1400193c0:     	movq	%r12, %rcx
1400193c3:     	callq	0x1400028f0 <.text+0x18f0>
1400193c8:     	jmp	0x1400192c0 <.text+0x182c0>
1400193cd:     	nopl	(%rax)
1400193d0:     	callq	0x1400035f0 <.text+0x25f0>
1400193d5:     	movzbl	0x8(%rbp), %eax
1400193d9:     	testb	%al, %al
1400193db:     	je	0x1400193d0 <.text+0x183d0>
1400193dd:     	movq	-0x8(%rbp), %rax
1400193e1:     	testq	%rax, %rax
1400193e4:     	je	0x140019400 <.text+0x18400>
1400193e6:     	lock
1400193e7:     	decq	(%rax)
1400193ea:     	jne	0x140019400 <.text+0x18400>
1400193ec:     	movq	%r12, %rcx
1400193ef:     	callq	0x1400028f0 <.text+0x18f0>
1400193f4:     	nopw	%cs:(%rax,%rax)
140019400:     	movq	(%r14), %rax
140019403:     	movq	%rax, %rsi
140019406:     	testq	%rax, %rax
140019409:     	jne	0x140019294 <.text+0x18294>
14001940f:     	jmp	0x140019279 <.text+0x18279>
140019414:     	movq	%r14, -0x8(%rbp)
140019418:     	movq	$0x1, (%rbp)
140019420:     	cmpq	$0x1, %rsi
140019424:     	movq	$0x3, -0x40(%rbp)
14001942c:     	sete	-0x38(%rbp)
140019430:     	leaq	-0x40(%rbp), %rdx
140019434:     	movq	-0x48(%rbp), %rcx
140019438:     	movq	-0x10(%rbp), %rax
14001943c:     	callq	*0x20(%rax)
14001943f:     	movq	-0x40(%rbp), %rax
140019443:     	movq	%rax, (%rbp)
140019447:     	leaq	-0x8(%rbp), %rcx
14001944b:     	callq	0x14000b3d0 <.text+0xa3d0>
140019450:     	nop
140019451:     	addq	$0x98, %rsp
140019458:     	popq	%rbx
140019459:     	popq	%rdi
14001945a:     	popq	%rsi
14001945b:     	popq	%r12
14001945d:     	popq	%r13
14001945f:     	popq	%r14
140019461:     	popq	%r15
140019463:     	popq	%rbp
140019464:     	retq
140019465:     	ud2
140019467:     	ud2
140019469:     	leaq	0x1970(%rip), %rcx      # 0x14001ade0
140019470:     	leaq	0x19c9(%rip), %r8       # 0x14001ae40
140019477:     	movl	$0x5e, %edx
14001947c:     	callq	0x140019760 <.text+0x18760>
140019481:     	ud2
140019483:     	movq	%rax, -0x10(%rbp)
140019487:     	movq	%rax, -0x50(%rbp)
14001948b:     	movl	0x9eaf(%rip), %eax      # 0x140023340
140019491:     	movq	%gs:0x58, %rcx
14001949a:     	movq	(%rcx,%rax,8), %rax
14001949e:     	leaq	0x38(%rax), %rax
1400194a5:     	movq	%rax, -0x58(%rbp)
1400194a9:     	leaq	0x12f0(%rip), %rax      # 0x14001a7a0
1400194b0:     	movq	%rax, -0x40(%rbp)
1400194b4:     	movq	$0x1, -0x38(%rbp)
1400194bc:     	leaq	0x11dd(%rip), %rax      # 0x14001a6a0
1400194c3:     	movq	%rax, -0x30(%rbp)
1400194c7:     	xorps	%xmm0, %xmm0
1400194ca:     	movups	%xmm0, -0x28(%rbp)
1400194ce:     	leaq	0x132b(%rip), %rdx      # 0x14001a800
1400194d5:     	leaq	-0x40(%rbp), %rcx
1400194d9:     	callq	0x1400197d0 <.text+0x187d0>
1400194de:     	ud2
1400194e0:     	leaq	0x35a9(%rip), %rcx      # 0x14001ca90
1400194e7:     	movl	$0x40, %edx
1400194ec:     	movq	0x80(%rbp), %r8
1400194f3:     	callq	0x140019880 <.text+0x18880>
1400194f8:     	ud2
1400194fa:     	leaq	0x357f(%rip), %rax      # 0x14001ca80
140019501:     	movq	%rax, -0x40(%rbp)
140019505:     	movq	$0x1, -0x38(%rbp)
14001950d:     	leaq	0x118c(%rip), %rax      # 0x14001a6a0
140019514:     	movq	%rax, -0x30(%rbp)
140019518:     	xorps	%xmm0, %xmm0
14001951b:     	movups	%xmm0, -0x28(%rbp)
14001951f:     	leaq	-0x40(%rbp), %rcx
140019523:     	movq	0x80(%rbp), %rdx
14001952a:     	callq	0x1400197d0 <.text+0x187d0>
14001952f:     	ud2
140019531:     	nopw	%cs:(%rax,%rax)
140019540:     	movq	%rdx, 0x10(%rsp)
140019545:     	pushq	%rbp
140019546:     	pushq	%r15
140019548:     	pushq	%r14
14001954a:     	pushq	%r13
14001954c:     	pushq	%r12
14001954e:     	pushq	%rsi
14001954f:     	pushq	%rdi
140019550:     	pushq	%rbx
140019551:     	subq	$0x28, %rsp
140019555:     	leaq	0x80(%rdx), %rbp
14001955c:     	movq	-0x10(%rbp), %rax
140019560:     	lock
140019561:     	decq	(%rax)
140019564:     	jne	0x14001956f <.text+0x1856f>
140019566:     	leaq	-0x50(%rbp), %rcx
14001956a:     	callq	0x1400028f0 <.text+0x18f0>
14001956f:     	nop
140019570:     	addq	$0x28, %rsp
140019574:     	popq	%rbx
140019575:     	popq	%rdi
140019576:     	popq	%rsi
140019577:     	popq	%r12
140019579:     	popq	%r13
14001957b:     	popq	%r14
14001957d:     	popq	%r15
14001957f:     	popq	%rbp
140019580:     	retq
140019581:     	nopw	%cs:(%rax,%rax)
140019590:     	movq	%rdx, 0x10(%rsp)
140019595:     	pushq	%rbp
140019596:     	pushq	%r15
140019598:     	pushq	%r14
14001959a:     	pushq	%r13
14001959c:     	pushq	%r12
14001959e:     	pushq	%rsi
14001959f:     	pushq	%rdi
1400195a0:     	pushq	%rbx
1400195a1:     	subq	$0x28, %rsp
1400195a5:     	leaq	0x80(%rdx), %rbp
1400195ac:     	movq	-0x8(%rbp), %rax
1400195b0:     	testq	%rax, %rax
1400195b3:     	je	0x1400195c4 <.text+0x185c4>
1400195b5:     	lock
1400195b6:     	decq	(%rax)
1400195b9:     	jne	0x1400195c4 <.text+0x185c4>
1400195bb:     	leaq	-0x8(%rbp), %rcx
1400195bf:     	callq	0x1400028f0 <.text+0x18f0>
1400195c4:     	nop
1400195c5:     	addq	$0x28, %rsp
1400195c9:     	popq	%rbx
1400195ca:     	popq	%rdi
1400195cb:     	popq	%rsi
1400195cc:     	popq	%r12
1400195ce:     	popq	%r13
1400195d0:     	popq	%r14
1400195d2:     	popq	%r15
1400195d4:     	popq	%rbp
1400195d5:     	retq
1400195d6:     	nopw	%cs:(%rax,%rax)
1400195e0:     	movq	%rdx, 0x10(%rsp)
1400195e5:     	pushq	%rbp
1400195e6:     	pushq	%r15
1400195e8:     	pushq	%r14
1400195ea:     	pushq	%r13
1400195ec:     	pushq	%r12
1400195ee:     	pushq	%rsi
1400195ef:     	pushq	%rdi
1400195f0:     	pushq	%rbx
1400195f1:     	subq	$0x28, %rsp
1400195f5:     	leaq	0x80(%rdx), %rbp
1400195fc:     	leaq	-0x8(%rbp), %rcx
140019600:     	callq	0x14000b3d0 <.text+0xa3d0>
140019605:     	nop
140019606:     	addq	$0x28, %rsp
14001960a:     	popq	%rbx
14001960b:     	popq	%rdi
14001960c:     	popq	%rsi
14001960d:     	popq	%r12
14001960f:     	popq	%r13
140019611:     	popq	%r14
140019613:     	popq	%r15
140019615:     	popq	%rbp
140019616:     	retq
140019617:     	int3
140019618:     	int3
140019619:     	int3
14001961a:     	int3
14001961b:     	int3
14001961c:     	int3
14001961d:     	int3
14001961e:     	int3
14001961f:     	int3
140019620:     	pushq	%rsi
140019621:     	pushq	%rdi
140019622:     	subq	$0x58, %rsp
140019626:     	addq	%r8, %rdx
140019629:     	jb	0x1400196b1 <.text+0x186b1>
14001962f:     	movq	%rcx, %rsi
140019632:     	movq	0x8(%rcx), %rax
140019636:     	leaq	(%rax,%rax), %rcx
14001963a:     	cmpq	%rdx, %rcx
14001963d:     	cmovaq	%rcx, %rdx
140019641:     	cmpq	$0x9, %rdx
140019645:     	movl	$0x8, %edi
14001964a:     	cmovaeq	%rdx, %rdi
14001964e:     	movq	%rdi, %rdx
140019651:     	notq	%rdx
140019654:     	shrq	$0x3f, %rdx
140019658:     	testq	%rax, %rax
14001965b:     	je	0x140019675 <.text+0x18675>
14001965d:     	movq	(%rsi), %rcx
140019660:     	movq	%rcx, 0x28(%rsp)
140019665:     	movq	$0x1, 0x30(%rsp)
14001966e:     	movq	%rax, 0x38(%rsp)
140019673:     	jmp	0x14001967e <.text+0x1867e>
140019675:     	movq	$0x0, 0x30(%rsp)
14001967e:     	leaq	0x40(%rsp), %rcx
140019683:     	leaq	0x28(%rsp), %r9
140019688:     	movq	%rdi, %r8
14001968b:     	callq	0x140013170 <.text+0x12170>
140019690:     	cmpq	$0x0, 0x40(%rsp)
140019696:     	movq	0x48(%rsp), %rcx
14001969b:     	je	0x1400196b8 <.text+0x186b8>
14001969d:     	movabsq	$-0x7fffffffffffffff, %rax # imm = 0x8000000000000001
1400196a7:     	cmpq	%rax, %rcx
1400196aa:     	je	0x1400196bf <.text+0x186bf>
1400196ac:     	testq	%rcx, %rcx
1400196af:     	jne	0x1400196c6 <.text+0x186c6>
1400196b1:     	callq	0x140013200 <.text+0x12200>
1400196b6:     	ud2
1400196b8:     	movq	%rcx, (%rsi)
1400196bb:     	movq	%rdi, 0x8(%rsi)
1400196bf:     	addq	$0x58, %rsp
1400196c3:     	popq	%rdi
1400196c4:     	popq	%rsi
1400196c5:     	retq
1400196c6:     	movq	0x50(%rsp), %rdx
1400196cb:     	callq	0x1400196e0 <.text+0x186e0>
1400196d0:     	ud2
1400196d2:     	int3
1400196d3:     	int3
1400196d4:     	int3
1400196d5:     	int3
1400196d6:     	int3
1400196d7:     	int3
1400196d8:     	int3
1400196d9:     	int3
1400196da:     	int3
1400196db:     	int3
1400196dc:     	int3
1400196dd:     	int3
1400196de:     	int3
1400196df:     	int3
1400196e0:     	subq	$0x28, %rsp
1400196e4:     	movq	%rcx, %rax
1400196e7:     	movq	%rdx, %rcx
1400196ea:     	movq	%rax, %rdx
1400196ed:     	callq	0x140001370 <.text+0x370>
1400196f2:     	ud2
1400196f4:     	int3
1400196f5:     	int3
1400196f6:     	int3
1400196f7:     	int3
1400196f8:     	int3
1400196f9:     	int3
1400196fa:     	int3
1400196fb:     	int3
1400196fc:     	int3
1400196fd:     	int3
1400196fe:     	int3
1400196ff:     	int3
140019700:     	subq	$0x68, %rsp
140019704:     	movq	%rcx, %rdx
140019707:     	leaq	0x27(%rsp), %rax
14001970c:     	movq	%rax, 0x28(%rsp)
140019711:     	leaq	-0x5958(%rip), %rax     # 0x140013dc0 <.text+0x12dc0>
140019718:     	movq	%rax, 0x30(%rsp)
14001971d:     	leaq	0x499c(%rip), %rax      # 0x14001e0c0
140019724:     	movq	%rax, 0x38(%rsp)
140019729:     	movq	$0x1, 0x40(%rsp)
140019732:     	movq	$0x0, 0x58(%rsp)
14001973b:     	leaq	0x28(%rsp), %rax
140019740:     	movq	%rax, 0x48(%rsp)
140019745:     	movq	$0x1, 0x50(%rsp)
14001974e:     	leaq	0x38(%rsp), %rcx
140019753:     	callq	0x1400197d0 <.text+0x187d0>
140019758:     	ud2
14001975a:     	int3
14001975b:     	int3
14001975c:     	int3
14001975d:     	int3
14001975e:     	int3
14001975f:     	int3
140019760:     	subq	$0x78, %rsp
140019764:     	movq	%rcx, 0x28(%rsp)
140019769:     	movq	%rdx, 0x30(%rsp)
14001976e:     	leaq	0x28(%rsp), %rax
140019773:     	movq	%rax, 0x38(%rsp)
140019778:     	leaq	-0x182f(%rip), %rax     # 0x140017f50 <.text+0x16f50>
14001977f:     	movq	%rax, 0x40(%rsp)
140019784:     	leaq	0x4945(%rip), %rax      # 0x14001e0d0
14001978b:     	movq	%rax, 0x48(%rsp)
140019790:     	movq	$0x1, 0x50(%rsp)
140019799:     	movq	$0x0, 0x68(%rsp)
1400197a2:     	leaq	0x38(%rsp), %rax
1400197a7:     	movq	%rax, 0x58(%rsp)
1400197ac:     	movq	$0x1, 0x60(%rsp)
1400197b5:     	leaq	0x48(%rsp), %rcx
1400197ba:     	movq	%r8, %rdx
1400197bd:     	callq	0x1400197d0 <.text+0x187d0>
1400197c2:     	ud2
1400197c4:     	int3
1400197c5:     	int3
1400197c6:     	int3
1400197c7:     	int3
1400197c8:     	int3
1400197c9:     	int3
1400197ca:     	int3
1400197cb:     	int3
1400197cc:     	int3
1400197cd:     	int3
1400197ce:     	int3
1400197cf:     	int3
1400197d0:     	subq	$0x48, %rsp
1400197d4:     	leaq	0x47d5(%rip), %rax      # 0x14001dfb0
1400197db:     	movq	%rax, 0x20(%rsp)
1400197e0:     	leaq	0x4941(%rip), %rax      # 0x14001e128
1400197e7:     	movq	%rax, 0x28(%rsp)
1400197ec:     	movq	%rcx, 0x30(%rsp)
1400197f1:     	movq	%rdx, 0x38(%rsp)
1400197f6:     	movw	$0x1, 0x40(%rsp)
1400197fd:     	leaq	0x20(%rsp), %rcx
140019802:     	callq	0x1400088c0 <.text+0x78c0>
140019807:     	ud2
140019809:     	int3
14001980a:     	int3
14001980b:     	int3
14001980c:     	int3
14001980d:     	int3
14001980e:     	int3
14001980f:     	int3
140019810:     	pushq	%rbp
140019811:     	subq	$0x50, %rsp
140019815:     	leaq	0x50(%rsp), %rbp
14001981a:     	movq	$-0x2, -0x8(%rbp)
140019822:     	leaq	0x4787(%rip), %rax      # 0x14001dfb0
140019829:     	movq	%rax, -0x30(%rbp)
14001982d:     	leaq	0x48f4(%rip), %rax      # 0x14001e128
140019834:     	movq	%rax, -0x28(%rbp)
140019838:     	movq	%rcx, -0x20(%rbp)
14001983c:     	movq	%r8, -0x18(%rbp)
140019840:     	movb	$0x0, -0x10(%rbp)
140019844:     	movb	%dl, -0xf(%rbp)
140019847:     	leaq	-0x30(%rbp), %rcx
14001984b:     	callq	0x1400088c0 <.text+0x78c0>
140019850:     	ud2
140019852:     	nopw	%cs:(%rax,%rax)
140019860:     	movq	%rdx, 0x10(%rsp)
140019865:     	pushq	%rbp
140019866:     	subq	$0x20, %rsp
14001986a:     	leaq	0x50(%rdx), %rbp
14001986e:     	callq	0x1400199a0 <.text+0x189a0>
140019873:     	ud2
140019875:     	int3
140019876:     	int3
140019877:     	int3
140019878:     	int3
140019879:     	int3
14001987a:     	int3
14001987b:     	int3
14001987c:     	int3
14001987d:     	int3
14001987e:     	int3
14001987f:     	int3
140019880:     	subq	$0x68, %rsp
140019884:     	movq	%rcx, 0x28(%rsp)
140019889:     	movq	%rdx, 0x30(%rsp)
14001988e:     	leaq	0x28(%rsp), %rax
140019893:     	movq	%rax, 0x38(%rsp)
140019898:     	movq	$0x1, 0x40(%rsp)
1400198a1:     	leaq	0x4708(%rip), %rax      # 0x14001dfb0
1400198a8:     	movq	%rax, 0x48(%rsp)
1400198ad:     	xorps	%xmm0, %xmm0
1400198b0:     	movups	%xmm0, 0x50(%rsp)
1400198b5:     	leaq	0x38(%rsp), %rcx
1400198ba:     	movq	%r8, %rdx
1400198bd:     	callq	0x1400197d0 <.text+0x187d0>
1400198c2:     	ud2
1400198c4:     	int3
1400198c5:     	int3
1400198c6:     	int3
1400198c7:     	int3
1400198c8:     	int3
1400198c9:     	int3
1400198ca:     	int3
1400198cb:     	int3
1400198cc:     	int3
1400198cd:     	int3
1400198ce:     	int3
1400198cf:     	int3
1400198d0:     	subq	$0x68, %rsp
1400198d4:     	movq	%rcx, 0x28(%rsp)
1400198d9:     	movq	%rdx, 0x30(%rsp)
1400198de:     	leaq	0x28(%rsp), %rax
1400198e3:     	movq	%rax, 0x38(%rsp)
1400198e8:     	movq	$0x1, 0x40(%rsp)
1400198f1:     	leaq	0x46b8(%rip), %rax      # 0x14001dfb0
1400198f8:     	movq	%rax, 0x48(%rsp)
1400198fd:     	xorps	%xmm0, %xmm0
140019900:     	movups	%xmm0, 0x50(%rsp)
140019905:     	leaq	0x485c(%rip), %r8       # 0x14001e168
14001990c:     	leaq	0x38(%rsp), %rcx
140019911:     	xorl	%edx, %edx
140019913:     	callq	0x140019810 <.text+0x18810>
140019918:     	ud2
14001991a:     	int3
14001991b:     	int3
14001991c:     	int3
14001991d:     	int3
14001991e:     	int3
14001991f:     	int3
140019920:     	subq	$0x88, %rsp
140019927:     	movq	%rcx, 0x28(%rsp)
14001992c:     	movq	%rdx, 0x30(%rsp)
140019931:     	leaq	0x30(%rsp), %rax
140019936:     	movq	%rax, 0x38(%rsp)
14001993b:     	leaq	-0x1b32(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140019942:     	movq	%rax, 0x40(%rsp)
140019947:     	leaq	0x28(%rsp), %rcx
14001994c:     	movq	%rcx, 0x48(%rsp)
140019951:     	movq	%rax, 0x50(%rsp)
140019956:     	leaq	0x485b(%rip), %rax      # 0x14001e1b8
14001995d:     	movq	%rax, 0x58(%rsp)
140019962:     	movq	$0x2, 0x60(%rsp)
14001996b:     	movq	$0x0, 0x78(%rsp)
140019974:     	leaq	0x38(%rsp), %rax
140019979:     	movq	%rax, 0x68(%rsp)
14001997e:     	movq	$0x2, 0x70(%rsp)
140019987:     	leaq	0x58(%rsp), %rcx
14001998c:     	movq	%r8, %rdx
14001998f:     	callq	0x1400197d0 <.text+0x187d0>
140019994:     	ud2
140019996:     	int3
140019997:     	int3
140019998:     	int3
140019999:     	int3
14001999a:     	int3
14001999b:     	int3
14001999c:     	int3
14001999d:     	int3
14001999e:     	int3
14001999f:     	int3
1400199a0:     	subq	$0x28, %rsp
1400199a4:     	leaq	0x482d(%rip), %rcx      # 0x14001e1d8
1400199ab:     	movl	$0x26, %edx
1400199b0:     	callq	0x1400198d0 <.text+0x188d0>
1400199b5:     	ud2
1400199b7:     	int3
1400199b8:     	int3
1400199b9:     	int3
1400199ba:     	int3
1400199bb:     	int3
1400199bc:     	int3
1400199bd:     	int3
1400199be:     	int3
1400199bf:     	int3
1400199c0:     	subq	$0xf8, %rsp
1400199c7:     	movq	0x128(%rsp), %rax
1400199cf:     	movq	0x120(%rsp), %r10
1400199d7:     	movq	%rdx, 0x30(%rsp)
1400199dc:     	movq	%r8, 0x38(%rsp)
1400199e1:     	movq	%r9, 0x40(%rsp)
1400199e6:     	movq	%r10, 0x48(%rsp)
1400199eb:     	testb	%cl, %cl
1400199ed:     	je	0x140019a04 <.text+0x18a04>
1400199ef:     	movzbl	%cl, %ecx
1400199f2:     	cmpl	$0x1, %ecx
1400199f5:     	jne	0x140019ab6 <.text+0x18ab6>
1400199fb:     	leaq	0x47fe(%rip), %rcx      # 0x14001e200
140019a02:     	jmp	0x140019a0b <.text+0x18a0b>
140019a04:     	leaq	0x47f3(%rip), %rcx      # 0x14001e1fe
140019a0b:     	movq	%rcx, 0x20(%rsp)
140019a10:     	movl	$0x2, %ecx
140019a15:     	movq	0x130(%rsp), %rdx
140019a1d:     	movq	%rcx, 0x28(%rsp)
140019a22:     	cmpq	$0x0, (%rax)
140019a26:     	jne	0x140019ade <.text+0x18ade>
140019a2c:     	leaq	0x20(%rsp), %rax
140019a31:     	movq	%rax, 0x50(%rsp)
140019a36:     	leaq	-0x1aed(%rip), %rax     # 0x140017f50 <.text+0x16f50>
140019a3d:     	movq	%rax, 0x58(%rsp)
140019a42:     	leaq	0x30(%rsp), %rax
140019a47:     	movq	%rax, 0x60(%rsp)
140019a4c:     	leaq	-0x1b23(%rip), %rax     # 0x140017f30 <.text+0x16f30>
140019a53:     	movq	%rax, 0x68(%rsp)
140019a58:     	leaq	0x40(%rsp), %rcx
140019a5d:     	movq	%rcx, 0x70(%rsp)
140019a62:     	movq	%rax, 0x78(%rsp)
140019a67:     	leaq	0x47d2(%rip), %rax      # 0x14001e240
140019a6e:     	movq	%rax, 0x90(%rsp)
140019a76:     	movq	$0x3, 0x98(%rsp)
140019a82:     	movq	$0x0, 0xb0(%rsp)
140019a8e:     	leaq	0x50(%rsp), %rax
140019a93:     	movq	%rax, 0xa0(%rsp)
140019a9b:     	movq	$0x3, 0xa8(%rsp)
140019aa7:     	leaq	0x90(%rsp), %rcx
140019aaf:     	callq	0x1400197d0 <.text+0x187d0>
140019ab4:     	ud2
140019ab6:     	leaq	0x4745(%rip), %rcx      # 0x14001e202
140019abd:     	movq	%rcx, 0x20(%rsp)
140019ac2:     	movl	$0x7, %ecx
140019ac7:     	movq	0x130(%rsp), %rdx
140019acf:     	movq	%rcx, 0x28(%rsp)
140019ad4:     	cmpq	$0x0, (%rax)
140019ad8:     	je	0x140019a2c <.text+0x18a2c>
140019ade:     	movups	(%rax), %xmm0
140019ae1:     	movups	0x10(%rax), %xmm1
140019ae5:     	movups	0x20(%rax), %xmm2
140019ae9:     	movaps	%xmm2, 0xe0(%rsp)
140019af1:     	movaps	%xmm1, 0xd0(%rsp)
140019af9:     	movaps	%xmm0, 0xc0(%rsp)
140019b01:     	leaq	0x20(%rsp), %rax
140019b06:     	movq	%rax, 0x50(%rsp)
140019b0b:     	leaq	-0x1bc2(%rip), %rax     # 0x140017f50 <.text+0x16f50>
140019b12:     	movq	%rax, 0x58(%rsp)
140019b17:     	leaq	0xc0(%rsp), %rax
140019b1f:     	movq	%rax, 0x60(%rsp)
140019b24:     	leaq	-0x50db(%rip), %rax     # 0x140014a50 <.text+0x13a50>
140019b2b:     	movq	%rax, 0x68(%rsp)
140019b30:     	leaq	0x30(%rsp), %rax
140019b35:     	movq	%rax, 0x70(%rsp)
140019b3a:     	leaq	-0x1c11(%rip), %rax     # 0x140017f30 <.text+0x16f30>
140019b41:     	movq	%rax, 0x78(%rsp)
140019b46:     	leaq	0x40(%rsp), %rcx
140019b4b:     	movq	%rcx, 0x80(%rsp)
140019b53:     	movq	%rax, 0x88(%rsp)
140019b5b:     	leaq	0x472e(%rip), %rax      # 0x14001e290
140019b62:     	movq	%rax, 0x90(%rsp)
140019b6a:     	movq	$0x4, 0x98(%rsp)
140019b76:     	movq	$0x0, 0xb0(%rsp)
140019b82:     	leaq	0x50(%rsp), %rax
140019b87:     	movq	%rax, 0xa0(%rsp)
140019b8f:     	movq	$0x4, 0xa8(%rsp)
140019b9b:     	leaq	0x90(%rsp), %rcx
140019ba3:     	callq	0x1400197d0 <.text+0x187d0>
140019ba8:     	ud2
140019baa:     	int3
140019bab:     	int3
140019bac:     	int3
140019bad:     	int3
140019bae:     	int3
140019baf:     	int3
140019bb0:     	subq	$0x98, %rsp
140019bb7:     	movq	0xc0(%rsp), %rax
140019bbf:     	movq	%rcx, 0x28(%rsp)
140019bc4:     	movq	%rdx, 0x30(%rsp)
140019bc9:     	movq	%r8, 0x38(%rsp)
140019bce:     	movq	%r9, 0x40(%rsp)
140019bd3:     	leaq	0x28(%rsp), %rcx
140019bd8:     	movq	%rcx, 0x48(%rsp)
140019bdd:     	leaq	-0x1c94(%rip), %rcx     # 0x140017f50 <.text+0x16f50>
140019be4:     	movq	%rcx, 0x50(%rsp)
140019be9:     	leaq	0x38(%rsp), %rcx
140019bee:     	movq	%rcx, 0x58(%rsp)
140019bf3:     	leaq	-0x1cca(%rip), %rcx     # 0x140017f30 <.text+0x16f30>
140019bfa:     	movq	%rcx, 0x60(%rsp)
140019bff:     	leaq	0x46d2(%rip), %rcx      # 0x14001e2d8
140019c06:     	movq	%rcx, 0x68(%rsp)
140019c0b:     	movq	$0x2, 0x70(%rsp)
140019c14:     	movq	$0x0, 0x88(%rsp)
140019c20:     	leaq	0x48(%rsp), %rcx
140019c25:     	movq	%rcx, 0x78(%rsp)
140019c2a:     	movq	$0x2, 0x80(%rsp)
140019c36:     	leaq	0x68(%rsp), %rcx
140019c3b:     	movq	%rax, %rdx
140019c3e:     	callq	0x1400197d0 <.text+0x187d0>
140019c43:     	ud2
140019c45:     	int3
140019c46:     	int3
140019c47:     	int3
140019c48:     	int3
140019c49:     	int3
140019c4a:     	int3
140019c4b:     	int3
140019c4c:     	int3
140019c4d:     	int3
140019c4e:     	int3
140019c4f:     	int3
140019c50:     	subq	$0x88, %rsp
140019c57:     	movq	%rcx, 0x28(%rsp)
140019c5c:     	movq	%rdx, 0x30(%rsp)
140019c61:     	leaq	0x28(%rsp), %rax
140019c66:     	movq	%rax, 0x38(%rsp)
140019c6b:     	leaq	-0x1e62(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140019c72:     	movq	%rax, 0x40(%rsp)
140019c77:     	leaq	0x30(%rsp), %rcx
140019c7c:     	movq	%rcx, 0x48(%rsp)
140019c81:     	movq	%rax, 0x50(%rsp)
140019c86:     	leaq	0x4883(%rip), %rax      # 0x14001e510
140019c8d:     	movq	%rax, 0x58(%rsp)
140019c92:     	movq	$0x2, 0x60(%rsp)
140019c9b:     	movq	$0x0, 0x78(%rsp)
140019ca4:     	leaq	0x38(%rsp), %rax
140019ca9:     	movq	%rax, 0x68(%rsp)
140019cae:     	movq	$0x2, 0x70(%rsp)
140019cb7:     	leaq	0x58(%rsp), %rcx
140019cbc:     	movq	%r8, %rdx
140019cbf:     	callq	0x1400197d0 <.text+0x187d0>
140019cc4:     	ud2
140019cc6:     	int3
140019cc7:     	int3
140019cc8:     	int3
140019cc9:     	int3
140019cca:     	int3
140019ccb:     	int3
140019ccc:     	int3
140019ccd:     	int3
140019cce:     	int3
140019ccf:     	int3
140019cd0:     	subq	$0x88, %rsp
140019cd7:     	movq	%rcx, 0x28(%rsp)
140019cdc:     	movq	%rdx, 0x30(%rsp)
140019ce1:     	leaq	0x28(%rsp), %rax
140019ce6:     	movq	%rax, 0x38(%rsp)
140019ceb:     	leaq	-0x1ee2(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140019cf2:     	movq	%rax, 0x40(%rsp)
140019cf7:     	leaq	0x30(%rsp), %rcx
140019cfc:     	movq	%rcx, 0x48(%rsp)
140019d01:     	movq	%rax, 0x50(%rsp)
140019d06:     	leaq	0x4833(%rip), %rax      # 0x14001e540
140019d0d:     	movq	%rax, 0x58(%rsp)
140019d12:     	movq	$0x2, 0x60(%rsp)
140019d1b:     	movq	$0x0, 0x78(%rsp)
140019d24:     	leaq	0x38(%rsp), %rax
140019d29:     	movq	%rax, 0x68(%rsp)
140019d2e:     	movq	$0x2, 0x70(%rsp)
140019d37:     	leaq	0x58(%rsp), %rcx
140019d3c:     	movq	%r8, %rdx
140019d3f:     	callq	0x1400197d0 <.text+0x187d0>
140019d44:     	ud2
140019d46:     	int3
140019d47:     	int3
140019d48:     	int3
140019d49:     	int3
140019d4a:     	int3
140019d4b:     	int3
140019d4c:     	int3
140019d4d:     	int3
140019d4e:     	int3
140019d4f:     	int3
140019d50:     	subq	$0x88, %rsp
140019d57:     	movq	%rcx, 0x28(%rsp)
140019d5c:     	movq	%rdx, 0x30(%rsp)
140019d61:     	leaq	0x28(%rsp), %rax
140019d66:     	movq	%rax, 0x38(%rsp)
140019d6b:     	leaq	-0x1f62(%rip), %rax     # 0x140017e10 <.text+0x16e10>
140019d72:     	movq	%rax, 0x40(%rsp)
140019d77:     	leaq	0x30(%rsp), %rcx
140019d7c:     	movq	%rcx, 0x48(%rsp)
140019d81:     	movq	%rax, 0x50(%rsp)
140019d86:     	leaq	0x47fb(%rip), %rax      # 0x14001e588
140019d8d:     	movq	%rax, 0x58(%rsp)
140019d92:     	movq	$0x2, 0x60(%rsp)
140019d9b:     	movq	$0x0, 0x78(%rsp)
140019da4:     	leaq	0x38(%rsp), %rax
140019da9:     	movq	%rax, 0x68(%rsp)
140019dae:     	movq	$0x2, 0x70(%rsp)
140019db7:     	leaq	0x58(%rsp), %rcx
140019dbc:     	movq	%r8, %rdx
140019dbf:     	callq	0x1400197d0 <.text+0x187d0>
140019dc4:     	ud2
140019dc6:     	int3
140019dc7:     	int3
140019dc8:     	int3
140019dc9:     	int3
140019dca:     	int3
140019dcb:     	int3
140019dcc:     	int3
140019dcd:     	int3
140019dce:     	int3
140019dcf:     	int3
140019dd0:     	subq	$0x58, %rsp
140019dd4:     	movq	%rcx, %rdx
140019dd7:     	leaq	0x47fa(%rip), %rax      # 0x14001e5d8
140019dde:     	movq	%rax, 0x28(%rsp)
140019de3:     	movq	$0x1, 0x30(%rsp)
140019dec:     	leaq	0x41bd(%rip), %rax      # 0x14001dfb0
140019df3:     	movq	%rax, 0x38(%rsp)
140019df8:     	xorps	%xmm0, %xmm0
140019dfb:     	movups	%xmm0, 0x40(%rsp)
140019e00:     	leaq	0x28(%rsp), %rcx
140019e05:     	callq	0x1400197d0 <.text+0x187d0>
140019e0a:     	ud2
140019e0c:     	int3
140019e0d:     	int3
140019e0e:     	int3
140019e0f:     	int3
140019e10:     	subq	$0x28, %rsp
140019e14:     	movq	0x50(%rsp), %rax
140019e19:     	movq	%rax, 0x20(%rsp)
140019e1e:     	callq	0x140016db0 <.text+0x15db0>
140019e23:     	ud2
140019e25:     	pushq	%rbp
140019e27:     	subq	$0x20, %rsp
140019e2b:     	movq	%rdx, %rbp
140019e2e:     	movq	(%rcx), %rax
140019e31:     	movq	%rcx, %rdx
140019e34:     	movl	(%rax), %ecx
140019e36:     	callq	0x140018c1b <.text+0x17c1b>
140019e3b:     	nop
140019e3c:     	addq	$0x20, %rsp
140019e40:     	popq	%rbp
140019e41:     	retq
140019e42:     	int3
140019e43:     	pushq	%rbp
140019e45:     	movq	%rdx, %rbp
140019e48:     	movq	(%rcx), %rax
140019e4b:     	xorl	%ecx, %ecx
140019e4d:     	cmpl	$0xc0000005, (%rax)     # imm = 0xC0000005
140019e53:     	sete	%cl
140019e56:     	movl	%ecx, %eax
140019e58:     	popq	%rbp
140019e59:     	retq
140019e5a:     	int3
